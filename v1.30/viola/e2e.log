  I1215 11:48:05.583467      21 e2e.go:109] Starting e2e run "53d40f17-facd-4292-894b-d8e2f2cae16c" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1734263283 - will randomize all specs

Will run 402 of 7199 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I1215 11:48:05.801384 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 11:48:05.832707 21 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I1215 11:48:05.891232 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I1215 11:48:05.898246 21 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'cilium' (0 seconds elapsed)
  I1215 11:48:05.902748 21 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I1215 11:48:05.902781 21 e2e.go:245] e2e test version: v1.30.4
  I1215 11:48:05.903785 21 e2e.go:254] kube-apiserver version: v1.30.4
  I1215 11:48:05.903904 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 11:48:05.909597 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.108 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 12/15/24 11:48:06.069
  I1215 11:48:06.069119 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/24 11:48:06.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:06.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:06.103
  I1215 11:48:06.109733 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 11:48:12.140921 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7905" for this suite. @ 12/15/24 11:48:12.15
• [6.091 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 12/15/24 11:48:12.16
  I1215 11:48:12.160958 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename job @ 12/15/24 11:48:12.161
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:12.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:12.195
  STEP: Creating a suspended job @ 12/15/24 11:48:12.2
  STEP: Patching the Job @ 12/15/24 11:48:12.218
  STEP: Watching for Job to be patched @ 12/15/24 11:48:12.249
  I1215 11:48:12.254660 21 job.go:1109] Event ADDED observed for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq] and annotations: map[]
  I1215 11:48:12.254727 21 job.go:1109] Event MODIFIED observed for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq] and annotations: map[]
  I1215 11:48:12.254749 21 job.go:1112] Event MODIFIED found for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[]
  STEP: Updating the job @ 12/15/24 11:48:12.254
  STEP: Watching for Job to be updated @ 12/15/24 11:48:12.268
  I1215 11:48:12.270744 21 job.go:1112] Event MODIFIED found for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[updated:true]
  I1215 11:48:12.270837 21 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 12/15/24 11:48:12.27
  I1215 11:48:12.275155 21 job.go:1012] Job: e2e-tlvpq as labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched]
  STEP: Waiting for job to complete @ 12/15/24 11:48:12.275
  STEP: Delete a job collection with a labelselector @ 12/15/24 11:48:24.28
  STEP: Watching for Job to be deleted @ 12/15/24 11:48:24.29
  I1215 11:48:24.292252 21 job.go:1109] Event MODIFIED observed for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[updated:true]
  I1215 11:48:24.292341 21 job.go:1109] Event MODIFIED observed for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[updated:true]
  I1215 11:48:24.292383 21 job.go:1109] Event MODIFIED observed for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[updated:true]
  I1215 11:48:24.292657 21 job.go:1109] Event MODIFIED observed for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[updated:true]
  I1215 11:48:24.292710 21 job.go:1109] Event MODIFIED observed for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[updated:true]
  I1215 11:48:24.292777 21 job.go:1112] Event DELETED found for Job e2e-tlvpq in namespace job-3774 with labels: map[e2e-job-label:e2e-tlvpq e2e-tlvpq:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 12/15/24 11:48:24.293
  I1215 11:48:24.299283 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3774" for this suite. @ 12/15/24 11:48:24.313
• [12.174 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 12/15/24 11:48:24.335
  I1215 11:48:24.335716 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/24 11:48:24.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:24.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:24.364
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/24 11:48:24.373
  STEP: create the pod with lifecycle hook @ 12/15/24 11:48:26.422
  STEP: check poststart hook @ 12/15/24 11:48:28.442
  STEP: delete the pod with lifecycle hook @ 12/15/24 11:48:28.458
  I1215 11:48:30.476102 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7983" for this suite. @ 12/15/24 11:48:30.481
• [6.161 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 12/15/24 11:48:30.496
  I1215 11:48:30.496769 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/24 11:48:30.497
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:30.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:30.514
  I1215 11:48:30.524353 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 11:48:36.089923 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8583" for this suite. @ 12/15/24 11:48:36.101
• [5.623 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 12/15/24 11:48:36.119
  I1215 11:48:36.120030 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/24 11:48:36.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:36.143
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:36.146
  I1215 11:48:36.149253 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 11:48:44.384050 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-5965" for this suite. @ 12/15/24 11:48:44.389
• [8.282 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 12/15/24 11:48:44.402
  I1215 11:48:44.402621 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename daemonsets @ 12/15/24 11:48:44.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:44.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:44.427
  STEP: Creating a simple DaemonSet "daemon-set" @ 12/15/24 11:48:44.453
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/24 11:48:44.466
  I1215 11:48:44.478630 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 11:48:44.478681 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 11:48:45.487630 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1215 11:48:45.487815 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 11:48:46.475704 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 11:48:46.475746 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 12/15/24 11:48:46.48
  I1215 11:48:46.515828 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 11:48:46.515875 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 11:48:47.508748 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 11:48:47.508795 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 11:48:48.508719 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 11:48:48.508764 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 12/15/24 11:48:48.508
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/24 11:48:48.515
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1448, will wait for the garbage collector to delete the pods @ 12/15/24 11:48:48.516
  I1215 11:48:48.583403 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.075161ms
  I1215 11:48:48.684423 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.016818ms
  I1215 11:48:49.687460 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 11:48:49.687517 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1215 11:48:49.692858 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5369563"},"items":null}

  I1215 11:48:49.696144 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5369563"},"items":null}

  I1215 11:48:49.720289 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1448" for this suite. @ 12/15/24 11:48:49.724
• [5.332 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 12/15/24 11:48:49.734
  I1215 11:48:49.734248 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 11:48:49.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:49.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:49.756
  STEP: Creating projection with secret that has name projected-secret-test-ab4e3731-c1cd-450d-86db-48dd08583bda @ 12/15/24 11:48:49.76
  STEP: Creating a pod to test consume secrets @ 12/15/24 11:48:49.765
  STEP: Saw pod success @ 12/15/24 11:48:53.792
  I1215 11:48:53.796417 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-secrets-12208820-8e42-4617-991b-72382d67efb2 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 11:48:53.804
  I1215 11:48:53.825872 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-234" for this suite. @ 12/15/24 11:48:53.83
• [4.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 12/15/24 11:48:53.837
  I1215 11:48:53.837847 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 11:48:53.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:53.871
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:53.875
  STEP: fetching services @ 12/15/24 11:48:53.879
  I1215 11:48:53.886002 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9185" for this suite. @ 12/15/24 11:48:53.89
• [0.064 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 12/15/24 11:48:53.901
  I1215 11:48:53.901834 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 11:48:53.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:53.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:53.928
  STEP: Create set of pods @ 12/15/24 11:48:53.931
  I1215 11:48:53.941730 21 pods.go:871] created test-pod-1
  I1215 11:48:53.952499 21 pods.go:871] created test-pod-2
  I1215 11:48:53.963180 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 12/15/24 11:48:53.963
  STEP: waiting for all pods to be deleted @ 12/15/24 11:48:56.031
  I1215 11:48:56.035479 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1215 11:48:57.037540 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I1215 11:48:58.037691 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2432" for this suite. @ 12/15/24 11:48:58.043
• [4.151 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 12/15/24 11:48:58.052
  I1215 11:48:58.052521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 11:48:58.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:48:58.081
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:48:58.084
  STEP: Creating pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681 @ 12/15/24 11:48:58.087
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 11:49:00.106
  I1215 11:49:00.111472 21 container_probe.go:1749] Initial restart count of pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 is 0
  I1215 11:49:00.114792 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:02.120698 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:04.125562 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:06.130784 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:08.136644 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:10.143333 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:12.150463 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:14.162945 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:16.168447 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:18.174439 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:20.180166 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:22.185340 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:24.191335 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:26.196587 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:28.204155 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:30.209883 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:32.216361 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:34.222523 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:36.228316 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:38.235998 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:40.241557 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:42.248079 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:44.253361 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:46.259251 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:48.264407 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:50.269408 21 container_probe.go:1759] Get pod busybox-55ce6747-44bd-437e-888e-4218cc1cc252 in namespace container-probe-4681
  I1215 11:49:50.269477 21 container_probe.go:1763] Restart count of pod container-probe-4681/busybox-55ce6747-44bd-437e-888e-4218cc1cc252 is now 1 (50.157925615s elapsed)
  STEP: deleting the pod @ 12/15/24 11:49:50.269
  I1215 11:49:50.294855 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4681" for this suite. @ 12/15/24 11:49:50.3
• [52.258 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 12/15/24 11:49:50.31
  I1215 11:49:50.310887 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 11:49:50.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:49:50.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:49:50.337
  STEP: Setting up server cert @ 12/15/24 11:49:50.375
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 11:49:50.718
  STEP: Deploying the webhook pod @ 12/15/24 11:49:50.731
  STEP: Wait for the deployment to be ready @ 12/15/24 11:49:50.756
  I1215 11:49:50.774251 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 11:49:52.788
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 11:49:52.812
  I1215 11:49:53.812609 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/15/24 11:49:53.82
  STEP: create the configmap with a random name @ 12/15/24 11:49:53.846
  STEP: verify the configmap is mutated @ 12/15/24 11:49:53.873
  STEP: create the configmap with 'skip-me' name @ 12/15/24 11:49:53.873
  I1215 11:49:53.949087 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3130" for this suite. @ 12/15/24 11:49:53.959
  STEP: Destroying namespace "webhook-markers-7848" for this suite. @ 12/15/24 11:49:53.972
• [3.675 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 12/15/24 11:49:53.987
  I1215 11:49:53.987133 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replicaset @ 12/15/24 11:49:53.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:49:54.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:49:54.022
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 12/15/24 11:49:54.024
  STEP: When a replicaset with a matching selector is created @ 12/15/24 11:49:56.067
  STEP: Then the orphan pod is adopted @ 12/15/24 11:49:56.075
  STEP: When the matched label of one of its pods change @ 12/15/24 11:49:57.084
  I1215 11:49:57.088197 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/15/24 11:49:57.104
  I1215 11:49:58.114911 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-513" for this suite. @ 12/15/24 11:49:58.119
• [4.141 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 12/15/24 11:49:58.128
  I1215 11:49:58.128741 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 11:49:58.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:49:58.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:49:58.157
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/15/24 11:49:58.16
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 12/15/24 11:49:58.16
  STEP: creating a pod to probe DNS @ 12/15/24 11:49:58.16
  STEP: submitting the pod to kubernetes @ 12/15/24 11:49:58.16
  STEP: retrieving the pod @ 12/15/24 11:50:00.193
  STEP: looking for the results for each expected name from probers @ 12/15/24 11:50:00.202
  I1215 11:50:00.224046 21 dns_common.go:527] DNS probes using dns-7326/dns-test-fc2e0b84-d1a6-4fb7-9d91-9bf40a4c9f64 succeeded

  STEP: deleting the pod @ 12/15/24 11:50:00.224
  I1215 11:50:00.250538 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7326" for this suite. @ 12/15/24 11:50:00.257
• [2.137 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 12/15/24 11:50:00.266
  I1215 11:50:00.266514 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 11:50:00.267
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:50:00.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:50:00.29
  STEP: creating pod @ 12/15/24 11:50:00.293
  I1215 11:50:02.326996 21 pods.go:83] Pod pod-hostip-feed604a-7eae-4554-b86b-6b885505df00 has hostIP: 172.10.60.210
  I1215 11:50:02.327289 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7500" for this suite. @ 12/15/24 11:50:02.331
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 12/15/24 11:50:02.34
  I1215 11:50:02.340880 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 11:50:02.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:50:02.378
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:50:02.381
  STEP: Creating a pod to test downward api env vars @ 12/15/24 11:50:02.383
  STEP: Saw pod success @ 12/15/24 11:50:06.41
  I1215 11:50:06.413568 21 output.go:196] Trying to get logs from node cncf-master-2 pod downward-api-8b78ff44-abab-4856-8a45-095a464eaf07 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 11:50:06.43
  I1215 11:50:06.450716 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9114" for this suite. @ 12/15/24 11:50:06.454
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 12/15/24 11:50:06.466
  I1215 11:50:06.466546 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 11:50:06.467
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:50:06.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:50:06.498
  STEP: Setting up server cert @ 12/15/24 11:50:06.536
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 11:50:06.811
  STEP: Deploying the webhook pod @ 12/15/24 11:50:06.824
  STEP: Wait for the deployment to be ready @ 12/15/24 11:50:06.844
  I1215 11:50:06.856471 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 11:50:08.866
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 11:50:08.889
  I1215 11:50:09.890194 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1215 11:50:09.899220 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2822-crds.webhook.example.com via the AdmissionRegistration API @ 12/15/24 11:50:15.414
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/15/24 11:50:15.434
  I1215 11:50:18.043585 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5658" for this suite. @ 12/15/24 11:50:18.049
  STEP: Destroying namespace "webhook-markers-9017" for this suite. @ 12/15/24 11:50:18.061
• [11.604 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 12/15/24 11:50:18.07
  I1215 11:50:18.070510 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 11:50:18.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:50:18.097
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:50:18.1
  I1215 11:51:18.122463 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7028" for this suite. @ 12/15/24 11:51:18.128
• [60.069 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 12/15/24 11:51:18.139
  I1215 11:51:18.139979 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/24 11:51:18.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:51:18.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:51:18.168
  I1215 11:51:22.190948 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1320" for this suite. @ 12/15/24 11:51:22.196
• [4.065 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 12/15/24 11:51:22.204
  I1215 11:51:22.204886 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename job @ 12/15/24 11:51:22.205
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:51:22.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:51:22.232
  STEP: Creating a job @ 12/15/24 11:51:22.235
  STEP: Ensuring job reaches completions @ 12/15/24 11:51:22.247
  I1215 11:51:32.252630 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2478" for this suite. @ 12/15/24 11:51:32.256
• [10.063 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 12/15/24 11:51:32.268
  I1215 11:51:32.268608 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename field-validation @ 12/15/24 11:51:32.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:51:32.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:51:32.304
  STEP: apply creating a deployment @ 12/15/24 11:51:32.308
  I1215 11:51:32.321172 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7664" for this suite. @ 12/15/24 11:51:32.325
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 12/15/24 11:51:32.343
  I1215 11:51:32.343849 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 11:51:32.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:51:32.365
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:51:32.369
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/24 11:51:32.371
  I1215 11:51:32.371897 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8809 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1215 11:51:32.487966 21 builder.go:146] stderr: ""
  I1215 11:51:32.488033 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 12/15/24 11:51:32.488
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/15/24 11:51:37.541
  I1215 11:51:37.541335 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8809 get pod e2e-test-httpd-pod -o json'
  I1215 11:51:37.644635 21 builder.go:146] stderr: ""
  I1215 11:51:37.644837 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"creationTimestamp\": \"2024-12-15T11:51:32Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-8809\",\n        \"resourceVersion\": \"5371019\",\n        \"uid\": \"8ce740c0-7794-45fb-bec0-fb99c92df2d6\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-zfmnc\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"cncf-master-1\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-zfmnc\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-15T11:51:34Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-15T11:51:32Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-15T11:51:34Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-15T11:51:34Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-12-15T11:51:32Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"containerd://52849c9b7a2095510e01efd3d4455e7f876b2be5b78239a3cee3d7e86144914e\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-12-15T11:51:33Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.10.60.89\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.10.60.89\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.0.0.177\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.0.0.177\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-12-15T11:51:32Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 12/15/24 11:51:37.644
  I1215 11:51:37.645018 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8809 replace -f -'
  I1215 11:51:37.792137 21 builder.go:146] stderr: ""
  I1215 11:51:37.792198 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 12/15/24 11:51:37.792
  I1215 11:51:37.801805 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8809 delete pods e2e-test-httpd-pod'
  I1215 11:51:39.297387 21 builder.go:146] stderr: ""
  I1215 11:51:39.297455 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1215 11:51:39.297618 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8809" for this suite. @ 12/15/24 11:51:39.302
• [6.969 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 12/15/24 11:51:39.312
  I1215 11:51:39.312730 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 11:51:39.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:51:39.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:51:39.338
  STEP: Counting existing ResourceQuota @ 12/15/24 11:51:39.341
  STEP: Creating a ResourceQuota @ 12/15/24 11:51:44.345
  STEP: Ensuring resource quota status is calculated @ 12/15/24 11:51:44.351
  I1215 11:51:46.357424 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9361" for this suite. @ 12/15/24 11:51:46.362
• [7.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 12/15/24 11:51:46.372
  I1215 11:51:46.372414 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 11:51:46.373
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:51:46.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:51:46.402
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 11:51:46.404
  STEP: Saw pod success @ 12/15/24 11:51:50.43
  I1215 11:51:50.434104 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-1bfca571-28f8-419f-b0e5-56c73d0f3ce5 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 11:51:50.445
  I1215 11:51:50.467555 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3310" for this suite. @ 12/15/24 11:51:50.472
• [4.109 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 12/15/24 11:51:50.481
  I1215 11:51:50.481915 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 11:51:50.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:51:50.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:51:50.517
  I1215 11:51:50.520085 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/15/24 11:51:58.169
  I1215 11:51:58.169569 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-1170 --namespace=crd-publish-openapi-1170 create -f -'
  I1215 11:51:58.289460 21 builder.go:146] stderr: ""
  I1215 11:51:58.289529 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-689-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1215 11:51:58.289587 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-1170 --namespace=crd-publish-openapi-1170 delete e2e-test-crd-publish-openapi-689-crds test-cr'
  I1215 11:51:58.384126 21 builder.go:146] stderr: ""
  I1215 11:51:58.384240 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-689-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I1215 11:51:58.384298 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-1170 --namespace=crd-publish-openapi-1170 apply -f -'
  I1215 11:51:58.495494 21 builder.go:146] stderr: ""
  I1215 11:51:58.495550 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-689-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I1215 11:51:58.495603 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-1170 --namespace=crd-publish-openapi-1170 delete e2e-test-crd-publish-openapi-689-crds test-cr'
  I1215 11:51:58.574796 21 builder.go:146] stderr: ""
  I1215 11:51:58.574861 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-689-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 12/15/24 11:51:58.574
  I1215 11:51:58.575148 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-1170 explain e2e-test-crd-publish-openapi-689-crds'
  I1215 11:51:58.650114 21 builder.go:146] stderr: ""
  I1215 11:51:58.650207 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-689-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I1215 11:52:01.196842 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1170" for this suite. @ 12/15/24 11:52:01.205
• [10.732 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 12/15/24 11:52:01.215
  I1215 11:52:01.215836 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename watch @ 12/15/24 11:52:01.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:01.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:01.248
  STEP: creating a new configmap @ 12/15/24 11:52:01.251
  STEP: modifying the configmap once @ 12/15/24 11:52:01.257
  STEP: modifying the configmap a second time @ 12/15/24 11:52:01.27
  STEP: deleting the configmap @ 12/15/24 11:52:01.28
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 12/15/24 11:52:01.288
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 12/15/24 11:52:01.29
  I1215 11:52:01.290611 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2104  6558cdd4-74bd-4aa3-a8b9-507e52197632 5371270 0 2024-12-15 11:52:01 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-15 11:52:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 11:52:01.290939 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2104  6558cdd4-74bd-4aa3-a8b9-507e52197632 5371271 0 2024-12-15 11:52:01 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-12-15 11:52:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 11:52:01.291160 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2104" for this suite. @ 12/15/24 11:52:01.295
• [0.088 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 12/15/24 11:52:01.303
  I1215 11:52:01.303667 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-pred @ 12/15/24 11:52:01.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:01.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:01.336
  I1215 11:52:01.339445 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1215 11:52:01.348044 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I1215 11:52:01.351482 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-1 before test
  I1215 11:52:01.371889 21 predicates.go:887] keycloak-846b587bd-ckhws from auth started at 2024-12-15 11:35:28 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.372115 21 predicates.go:889] 	Container keycloak ready: true, restart count 1
  I1215 11:52:01.372197 21 predicates.go:887] oauth2-proxy-admin-56f8946595-vhkdj from auth started at 2024-12-15 11:45:26 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.372276 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 0
  I1215 11:52:01.372326 21 predicates.go:887] oauth2-redis-admin-2 from auth started at 2024-12-15 11:36:49 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.372438 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 11:52:01.372584 21 predicates.go:887] oauth2-redis-admin-4 from auth started at 2024-12-15 11:37:08 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.372691 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 11:52:01.372808 21 predicates.go:887] redis-cluster-maintenance-cronjob-28904385-jmmm4 from auth started at 2024-12-15 11:45:00 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.373015 21 predicates.go:889] 	Container redis-cluster-check ready: false, restart count 0
  I1215 11:52:01.373192 21 predicates.go:887] cloud-service-api-57f54bfb54-59lmz from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.373340 21 predicates.go:889] 	Container cloud-service-api ready: true, restart count 0
  I1215 11:52:01.373570 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.373668 21 predicates.go:887] maestro-host-app-5cd79d5b8c-rj7qr from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.373773 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.373864 21 predicates.go:889] 	Container maestro-host-app ready: true, restart count 0
  I1215 11:52:01.374057 21 predicates.go:887] maestro-iam-adapter-api-77f4d875b5-cwpzm from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.374150 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.374236 21 predicates.go:889] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I1215 11:52:01.374378 21 predicates.go:887] mariadb-backup-cronjob-28904390-x2snt from dataplatform started at 2024-12-15 11:50:00 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.374523 21 predicates.go:889] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I1215 11:52:01.374625 21 predicates.go:887] mariadb-maxscale-f58d897f7-vrmds from dataplatform started at 2024-12-15 11:38:45 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.374703 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 11:52:01.374784 21 predicates.go:887] mariadb-sts-0 from dataplatform started at 2024-12-15 11:38:46 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.374843 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 11:52:01.374935 21 predicates.go:887] my-cluster-kafka-0 from dataplatform started at 2024-12-15 11:41:34 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.375019 21 predicates.go:889] 	Container kafka ready: true, restart count 2
  I1215 11:52:01.375063 21 predicates.go:887] my-cluster-zookeeper-2 from dataplatform started at 2024-12-15 11:42:13 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.375121 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 11:52:01.375197 21 predicates.go:887] redis-0 from dataplatform started at 2024-12-15 11:43:47 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.375242 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 11:52:01.375411 21 predicates.go:887] strimzi-cluster-operator-698dc7549d-wpghh from dataplatform started at 2024-12-15 11:43:18 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.375576 21 predicates.go:889] 	Container strimzi-cluster-operator ready: true, restart count 0
  I1215 11:52:01.375755 21 predicates.go:887] vault-2 from dataplatform started at 2024-12-15 11:34:41 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.375871 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 11:52:01.376045 21 predicates.go:887] vault-unsealer-28904390-6756d from dataplatform started at 2024-12-15 11:50:00 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.376194 21 predicates.go:889] 	Container unsealer ready: false, restart count 0
  I1215 11:52:01.376363 21 predicates.go:887] ingress-nginx-admission-create-sjdgq from ingress-nginx started at 2024-12-03 02:45:33 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.376523 21 predicates.go:889] 	Container create ready: false, restart count 0
  I1215 11:52:01.376716 21 predicates.go:887] ingress-nginx-admission-patch-cclrq from ingress-nginx started at 2024-12-03 02:45:33 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.376798 21 predicates.go:889] 	Container patch ready: false, restart count 0
  I1215 11:52:01.376851 21 predicates.go:887] cilium-n8zrz from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.376914 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 11:52:01.376978 21 predicates.go:887] cilium-operator-64664858c8-nxfhd from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.377045 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 11:52:01.377216 21 predicates.go:887] kube-apiserver-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.377404 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 11:52:01.377584 21 predicates.go:887] kube-controller-manager-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.377776 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 11:52:01.377868 21 predicates.go:887] kube-proxy-nwc8x from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.377977 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 11:52:01.378042 21 predicates.go:887] kube-scheduler-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.378115 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 11:52:01.378197 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-15 11:48:01 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.378270 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1215 11:52:01.378412 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-jlphr from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.378496 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 11:52:01.378574 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 11:52:01.378720 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-2 before test
  I1215 11:52:01.395190 21 predicates.go:887] oauth2-redis-admin-3 from auth started at 2024-12-15 11:36:50 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395235 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 11:52:01.395248 21 predicates.go:887] oauth2-redis-admin-5 from auth started at 2024-12-15 11:37:10 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395262 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 11:52:01.395309 21 predicates.go:887] maestro-common-api-85ff5d9f5b-pbqbq from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.395319 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.395330 21 predicates.go:889] 	Container maestro-common-api ready: true, restart count 0
  I1215 11:52:01.395341 21 predicates.go:887] notification-adapter-api-5cf9dbf5f6-ptnnd from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.395352 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.395384 21 predicates.go:889] 	Container noti-api ready: true, restart count 0
  I1215 11:52:01.395404 21 predicates.go:887] mariadb-sts-1 from dataplatform started at 2024-12-15 11:38:49 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395411 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 11:52:01.395432 21 predicates.go:887] my-cluster-entity-operator-5685c69c9c-w2rp4 from dataplatform started at 2024-12-15 11:43:40 +0000 UTC (3 container statuses recorded)
  I1215 11:52:01.395439 21 predicates.go:889] 	Container tls-sidecar ready: true, restart count 0
  I1215 11:52:01.395446 21 predicates.go:889] 	Container topic-operator ready: true, restart count 0
  I1215 11:52:01.395451 21 predicates.go:889] 	Container user-operator ready: true, restart count 0
  I1215 11:52:01.395459 21 predicates.go:887] my-cluster-kafka-1 from dataplatform started at 2024-12-15 11:41:34 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395465 21 predicates.go:889] 	Container kafka ready: true, restart count 2
  I1215 11:52:01.395472 21 predicates.go:887] my-cluster-zookeeper-0 from dataplatform started at 2024-12-15 11:41:45 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395478 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 11:52:01.395484 21 predicates.go:887] vault-1 from dataplatform started at 2024-12-15 11:34:41 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395505 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 11:52:01.395512 21 predicates.go:887] cilium-78qk5 from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395518 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 11:52:01.395527 21 predicates.go:887] coredns-776bb9db5d-6fcp7 from kube-system started at 2024-12-15 11:33:49 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395533 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 11:52:01.395539 21 predicates.go:887] kube-apiserver-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395545 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 11:52:01.395559 21 predicates.go:887] kube-controller-manager-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395564 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 11:52:01.395585 21 predicates.go:887] kube-proxy-zmqc8 from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395591 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 11:52:01.395597 21 predicates.go:887] kube-scheduler-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.395604 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 11:52:01.395610 21 predicates.go:887] sonobuoy-e2e-job-37381f2984c64bf4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.395617 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1215 11:52:01.395622 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 11:52:01.395629 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-xhsgf from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.395673 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 11:52:01.395679 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 11:52:01.395685 21 predicates.go:887] contrabass-api-567f74fcd-hpbfs from viola started at 2024-12-15 11:40:51 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.395690 21 predicates.go:889] 	Container contrabass-api ready: true, restart count 0
  I1215 11:52:01.395697 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.395704 21 predicates.go:887] viola-api-5bb88dfd5c-v9pxd from viola started at 2024-12-15 11:41:06 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.395718 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.395816 21 predicates.go:889] 	Container viola-api ready: true, restart count 0
  I1215 11:52:01.395825 21 predicates.go:887] viola-remote-app-79bd8cf4dc-khsxs from viola started at 2024-12-15 11:41:16 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.395839 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.395864 21 predicates.go:889] 	Container viola-remote-app ready: true, restart count 0
  I1215 11:52:01.395885 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-3 before test
  I1215 11:52:01.418924 21 predicates.go:887] keycloak-846b587bd-qr4xk from auth started at 2024-12-15 11:35:14 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.418976 21 predicates.go:889] 	Container keycloak ready: true, restart count 2
  I1215 11:52:01.418986 21 predicates.go:887] mariadb-keycloak-0 from auth started at 2024-12-15 11:35:52 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.418993 21 predicates.go:889] 	Container mariadb-keycloak ready: true, restart count 0
  I1215 11:52:01.419000 21 predicates.go:887] oauth2-proxy-admin-56f8946595-t6452 from auth started at 2024-12-15 11:45:08 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419007 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 2
  I1215 11:52:01.419014 21 predicates.go:887] oauth2-redis-admin-0 from auth started at 2024-12-15 11:36:30 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419024 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 11:52:01.419030 21 predicates.go:887] oauth2-redis-admin-1 from auth started at 2024-12-15 11:36:32 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419036 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 11:52:01.419043 21 predicates.go:887] cloud-service-collector-6f4b74fdfb-mpdbx from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.419049 21 predicates.go:889] 	Container cloud-service-collector ready: true, restart count 0
  I1215 11:52:01.419056 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.419063 21 predicates.go:887] maestro-auth-gateway-6cbd44676b-rvrdl from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.419068 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.419074 21 predicates.go:889] 	Container maestro-auth-gateway ready: true, restart count 0
  I1215 11:52:01.419080 21 predicates.go:887] maestro-event-pusher-65b595dc6-v869s from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.419085 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.419091 21 predicates.go:889] 	Container maestro-event-pusher ready: true, restart count 1
  I1215 11:52:01.419097 21 predicates.go:887] maestro-remote-app-769bc9cff9-kgdd5 from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.419109 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.419115 21 predicates.go:889] 	Container maestro-remote-app ready: true, restart count 0
  I1215 11:52:01.419121 21 predicates.go:887] mariadb-maxscale-f58d897f7-bfh7f from dataplatform started at 2024-12-15 11:38:45 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419127 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 11:52:01.419134 21 predicates.go:887] my-cluster-kafka-2 from dataplatform started at 2024-12-15 11:40:09 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419139 21 predicates.go:889] 	Container kafka ready: true, restart count 4
  I1215 11:52:01.419145 21 predicates.go:887] my-cluster-zookeeper-1 from dataplatform started at 2024-12-15 11:41:46 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419150 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 11:52:01.419157 21 predicates.go:887] vault-0 from dataplatform started at 2024-12-15 11:36:43 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419162 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 11:52:01.419169 21 predicates.go:887] nfs-client-provisioner-5d85d7bdcf-7gdx4 from default started at 2024-12-15 11:34:15 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419174 21 predicates.go:889] 	Container nfs-client-provisioner ready: true, restart count 0
  I1215 11:52:01.419181 21 predicates.go:887] nginx-pod from default started at 2024-12-15 10:52:29 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419203 21 predicates.go:889] 	Container nginx ready: true, restart count 0
  I1215 11:52:01.419210 21 predicates.go:887] ingress-nginx-controller-7d4db76476-8nsf6 from ingress-nginx started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419216 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I1215 11:52:01.419222 21 predicates.go:887] istio-gateway-67c8555b98-22b98 from istio-system started at 2024-12-15 11:34:03 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419227 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 11:52:01.419233 21 predicates.go:887] istiod-66c776b765-bdcx2 from istio-system started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419239 21 predicates.go:889] 	Container discovery ready: true, restart count 0
  I1215 11:52:01.419245 21 predicates.go:887] cilium-operator-64664858c8-rr65m from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419250 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 11:52:01.419256 21 predicates.go:887] cilium-zl6bh from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419261 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 11:52:01.419267 21 predicates.go:887] coredns-776bb9db5d-mbxjb from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419273 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 11:52:01.419279 21 predicates.go:887] dns-autoscaler-6ffb84bd6-hht9v from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419284 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I1215 11:52:01.419291 21 predicates.go:887] kube-apiserver-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419297 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 2
  I1215 11:52:01.419303 21 predicates.go:887] kube-controller-manager-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419308 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 11:52:01.419314 21 predicates.go:887] kube-proxy-mxh4s from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419319 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 11:52:01.419325 21 predicates.go:887] kube-scheduler-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 11:52:01.419330 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 11:52:01.419336 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-dhdt4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 11:52:01.419342 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 11:52:01.419348 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 12/15/24 11:52:01.419
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.1811577bf7fe4ab3], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 12/15/24 11:52:01.471
  I1215 11:52:02.469848 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4045" for this suite. @ 12/15/24 11:52:02.474
• [1.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 12/15/24 11:52:02.485
  I1215 11:52:02.485161 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 11:52:02.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:02.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:02.516
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 11:52:02.518
  STEP: Saw pod success @ 12/15/24 11:52:06.544
  I1215 11:52:06.547923 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-5a375739-8e02-4a16-8720-dd71cab11bc1 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 11:52:06.554
  I1215 11:52:06.577603 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5901" for this suite. @ 12/15/24 11:52:06.581
• [4.105 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 12/15/24 11:52:06.592
  I1215 11:52:06.592131 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/24 11:52:06.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:06.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:06.616
  I1215 11:52:06.642265 21 service_accounts.go:618] created pod
  STEP: Saw pod success @ 12/15/24 11:52:10.662
  I1215 11:52:40.663220 21 service_accounts.go:624] polling logs
  I1215 11:52:40.672079 21 service_accounts.go:634] Pod logs: 
  I1215 11:52:07.505610       1 log.go:245] OK: Got token
  I1215 11:52:07.505748       1 log.go:245] validating with in-cluster discovery
  I1215 11:52:07.506225       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I1215 11:52:07.506255       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5081:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00013b870), NotBefore:(*jwt.NumericDate)(0xc00013b960), IssuedAt:(*jwt.NumericDate)(0xc00013b880), ID:"4fa52f7b-ca91-4793-be9b-270b7234c5f3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5081", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6aadb9e5-1e1f-4af8-b6a4-847a61a6c6e8"}}}
  I1215 11:52:07.516899       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I1215 11:52:07.521679       1 log.go:245] OK: Validated signature on JWT
  I1215 11:52:07.522418       1 log.go:245] OK: Got valid claims from token!
  I1215 11:52:07.522486       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5081:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000012508), NotBefore:(*jwt.NumericDate)(0xc000012530), IssuedAt:(*jwt.NumericDate)(0xc000012510), ID:"4fa52f7b-ca91-4793-be9b-270b7234c5f3"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5081", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"6aadb9e5-1e1f-4af8-b6a4-847a61a6c6e8"}}}

  I1215 11:52:40.672153 21 service_accounts.go:638] completed pod
  I1215 11:52:40.683464 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5081" for this suite. @ 12/15/24 11:52:40.691
• [34.108 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 12/15/24 11:52:40.7
  I1215 11:52:40.700868 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replication-controller @ 12/15/24 11:52:40.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:40.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:40.734
  STEP: Creating ReplicationController "e2e-rc-6q9m7" @ 12/15/24 11:52:40.737
  I1215 11:52:40.750565 21 rc.go:792] Get Replication Controller "e2e-rc-6q9m7" to confirm replicas
  I1215 11:52:41.751059 21 rc.go:792] Get Replication Controller "e2e-rc-6q9m7" to confirm replicas
  I1215 11:52:41.755830 21 rc.go:801] Found 1 replicas for "e2e-rc-6q9m7" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-6q9m7" @ 12/15/24 11:52:41.755
  STEP: Updating a scale subresource @ 12/15/24 11:52:41.759
  STEP: Verifying replicas where modified for replication controller "e2e-rc-6q9m7" @ 12/15/24 11:52:41.771
  I1215 11:52:41.771471 21 rc.go:792] Get Replication Controller "e2e-rc-6q9m7" to confirm replicas
  I1215 11:52:42.771611 21 rc.go:792] Get Replication Controller "e2e-rc-6q9m7" to confirm replicas
  I1215 11:52:42.776811 21 rc.go:801] Found 2 replicas for "e2e-rc-6q9m7" replication controller
  I1215 11:52:42.776972 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8099" for this suite. @ 12/15/24 11:52:42.78
• [2.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 12/15/24 11:52:42.793
  I1215 11:52:42.793817 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 11:52:42.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:42.817
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:42.82
  STEP: creating a Service @ 12/15/24 11:52:42.827
  STEP: watching for the Service to be added @ 12/15/24 11:52:42.852
  I1215 11:52:42.854769 21 service.go:3397] Found Service test-service-7kdvq in namespace services-4394 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 31975}]
  I1215 11:52:42.854808 21 service.go:3404] Service test-service-7kdvq created
  STEP: Getting /status @ 12/15/24 11:52:42.854
  I1215 11:52:42.859775 21 service.go:3415] Service test-service-7kdvq has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 12/15/24 11:52:42.859
  STEP: watching for the Service to be patched @ 12/15/24 11:52:42.867
  I1215 11:52:42.869970 21 service.go:3438] observed Service test-service-7kdvq in namespace services-4394 with annotations: map[] & LoadBalancer: {[]}
  I1215 11:52:42.870052 21 service.go:3441] Found Service test-service-7kdvq in namespace services-4394 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc001320f80 []}]}
  I1215 11:52:42.870067 21 service.go:3448] Service test-service-7kdvq has service status patched
  STEP: updating the ServiceStatus @ 12/15/24 11:52:42.87
  I1215 11:52:42.880844 21 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 12/15/24 11:52:42.88
  I1215 11:52:42.882073 21 service.go:3479] Observed Service test-service-7kdvq in namespace services-4394 with annotations: map[] & Conditions: {[]}
  I1215 11:52:42.882292 21 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-7kdvq  services-4394  f3e6debb-f440-4704-8406-03365635270c 5371565 0 2024-12-15 11:52:42 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-12-15 11:52:42 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-12-15 11:52:42 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:31975,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.233.12.50,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.233.12.50],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I1215 11:52:42.882463 21 service.go:3486] Found Service test-service-7kdvq in namespace services-4394 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1215 11:52:42.882480 21 service.go:3498] Service test-service-7kdvq has service status updated
  STEP: patching the service @ 12/15/24 11:52:42.882
  STEP: watching for the Service to be patched @ 12/15/24 11:52:42.893
  I1215 11:52:42.894566 21 service.go:3521] observed Service test-service-7kdvq in namespace services-4394 with labels: map[test-service-static:true]
  I1215 11:52:42.894664 21 service.go:3521] observed Service test-service-7kdvq in namespace services-4394 with labels: map[test-service-static:true]
  I1215 11:52:42.894699 21 service.go:3521] observed Service test-service-7kdvq in namespace services-4394 with labels: map[test-service-static:true]
  I1215 11:52:42.894743 21 service.go:3524] Found Service test-service-7kdvq in namespace services-4394 with labels: map[test-service:patched test-service-static:true]
  I1215 11:52:42.894754 21 service.go:3531] Service test-service-7kdvq patched
  STEP: deleting the service @ 12/15/24 11:52:42.894
  STEP: watching for the Service to be deleted @ 12/15/24 11:52:42.923
  I1215 11:52:42.925069 21 service.go:3555] Observed event: ADDED
  I1215 11:52:42.925133 21 service.go:3555] Observed event: MODIFIED
  I1215 11:52:42.925269 21 service.go:3555] Observed event: MODIFIED
  I1215 11:52:42.925333 21 service.go:3555] Observed event: MODIFIED
  I1215 11:52:42.925454 21 service.go:3551] Found Service test-service-7kdvq in namespace services-4394 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I1215 11:52:42.925472 21 service.go:3560] Service test-service-7kdvq deleted
  I1215 11:52:42.925570 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4394" for this suite. @ 12/15/24 11:52:42.93
• [0.149 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 12/15/24 11:52:42.942
  I1215 11:52:42.942799 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 11:52:42.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:42.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:42.967
  STEP: Create a pod @ 12/15/24 11:52:42.969
  STEP: patching /status @ 12/15/24 11:52:44.991
  I1215 11:52:45.006461 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I1215 11:52:45.006608 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9421" for this suite. @ 12/15/24 11:52:45.017
• [2.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 12/15/24 11:52:45.025
  I1215 11:52:45.025274 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename podtemplate @ 12/15/24 11:52:45.026
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:45.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:45.056
  STEP: Create a pod template @ 12/15/24 11:52:45.058
  STEP: Replace a pod template @ 12/15/24 11:52:45.068
  I1215 11:52:45.086348 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I1215 11:52:45.086476 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-643" for this suite. @ 12/15/24 11:52:45.09
• [0.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:324
  STEP: Creating a kubernetes client @ 12/15/24 11:52:45.099
  I1215 11:52:45.099125 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 11:52:45.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:52:45.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:52:45.129
  STEP: Creating service test in namespace statefulset-1359 @ 12/15/24 11:52:45.131
  STEP: Creating a new StatefulSet @ 12/15/24 11:52:45.146
  I1215 11:52:45.163529 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I1215 11:52:55.165032 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1215 11:52:55.165107 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1215 11:52:55.165117 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I1215 11:52:55.177855 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-1359 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 11:52:55.353529 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 11:52:55.353583 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 11:52:55.353597 21 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/15/24 11:53:05.363
  I1215 11:53:05.377770 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/15/24 11:53:05.377
  STEP: Updating Pods in reverse ordinal order @ 12/15/24 11:53:15.388
  I1215 11:53:15.392481 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-1359 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 11:53:15.535846 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1215 11:53:15.535906 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 11:53:15.535941 21 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 12/15/24 11:53:25.552
  I1215 11:53:25.552947 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-1359 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 11:53:25.698032 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 11:53:25.698098 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 11:53:25.698113 21 statefulset.go:2450] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 11:53:35.727699 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 12/15/24 11:53:45.737
  I1215 11:53:45.741646 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-1359 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 11:53:45.884812 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1215 11:53:45.884888 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 11:53:45.884907 21 statefulset.go:2474] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 11:53:55.905295 21 statefulset.go:138] Deleting all statefulset in ns statefulset-1359
  I1215 11:53:55.908634 21 rest.go:150] Scaling statefulset ss2 to 0
  I1215 11:54:05.930951 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 11:54:05.934427 21 rest.go:88] Deleting statefulset ss2
  I1215 11:54:05.971707 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1359" for this suite. @ 12/15/24 11:54:05.976
• [80.886 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 12/15/24 11:54:05.987
  I1215 11:54:05.987313 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 11:54:05.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:54:06.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:54:06.026
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 11:54:06.029
  STEP: Saw pod success @ 12/15/24 11:54:10.056
  I1215 11:54:10.060131 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-7acde18e-cc80-493d-894a-1542f5aecac1 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 11:54:10.07
  I1215 11:54:10.097020 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8744" for this suite. @ 12/15/24 11:54:10.1
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 12/15/24 11:54:10.112
  I1215 11:54:10.112597 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename discovery @ 12/15/24 11:54:10.113
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:54:10.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:54:10.139
  STEP: Setting up server cert @ 12/15/24 11:54:10.143
  I1215 11:54:10.503488 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I1215 11:54:10.504527 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I1215 11:54:10.504619 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I1215 11:54:10.504710 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I1215 11:54:10.504760 21 discovery.go:139] Checking APIGroup: apps
  I1215 11:54:10.505737 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I1215 11:54:10.505836 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I1215 11:54:10.505920 21 discovery.go:154] apps/v1 matches apps/v1
  I1215 11:54:10.505968 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I1215 11:54:10.506887 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I1215 11:54:10.507003 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I1215 11:54:10.507137 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I1215 11:54:10.507212 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I1215 11:54:10.508068 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I1215 11:54:10.508177 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I1215 11:54:10.508227 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I1215 11:54:10.508292 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I1215 11:54:10.509176 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I1215 11:54:10.509423 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I1215 11:54:10.509483 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I1215 11:54:10.509545 21 discovery.go:139] Checking APIGroup: autoscaling
  I1215 11:54:10.510360 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I1215 11:54:10.510466 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I1215 11:54:10.510504 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I1215 11:54:10.510615 21 discovery.go:139] Checking APIGroup: batch
  I1215 11:54:10.511480 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I1215 11:54:10.511514 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I1215 11:54:10.511539 21 discovery.go:154] batch/v1 matches batch/v1
  I1215 11:54:10.511548 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I1215 11:54:10.512461 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I1215 11:54:10.512486 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I1215 11:54:10.512492 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I1215 11:54:10.512523 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I1215 11:54:10.513253 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I1215 11:54:10.513395 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I1215 11:54:10.513464 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I1215 11:54:10.513519 21 discovery.go:139] Checking APIGroup: policy
  I1215 11:54:10.514325 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I1215 11:54:10.514344 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I1215 11:54:10.514351 21 discovery.go:154] policy/v1 matches policy/v1
  I1215 11:54:10.514392 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I1215 11:54:10.515058 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I1215 11:54:10.515074 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I1215 11:54:10.515095 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I1215 11:54:10.515106 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I1215 11:54:10.515747 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I1215 11:54:10.515763 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I1215 11:54:10.515789 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I1215 11:54:10.515800 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I1215 11:54:10.516348 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I1215 11:54:10.516362 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I1215 11:54:10.516371 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I1215 11:54:10.516395 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I1215 11:54:10.517072 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I1215 11:54:10.517091 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I1215 11:54:10.517105 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I1215 11:54:10.517112 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I1215 11:54:10.517913 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I1215 11:54:10.517940 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I1215 11:54:10.517954 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I1215 11:54:10.517997 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I1215 11:54:10.518715 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I1215 11:54:10.518735 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I1215 11:54:10.518741 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I1215 11:54:10.518765 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I1215 11:54:10.519753 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I1215 11:54:10.519787 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I1215 11:54:10.519927 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I1215 11:54:10.519942 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I1215 11:54:10.520763 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I1215 11:54:10.520784 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I1215 11:54:10.520792 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I1215 11:54:10.520799 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I1215 11:54:10.521576 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I1215 11:54:10.521596 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I1215 11:54:10.521608 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I1215 11:54:10.521639 21 discovery.go:139] Checking APIGroup: networking.istio.io
  I1215 11:54:10.522482 21 discovery.go:147] PreferredVersion.GroupVersion: networking.istio.io/v1
  I1215 11:54:10.522528 21 discovery.go:148] Versions found [{networking.istio.io/v1 v1} {networking.istio.io/v1beta1 v1beta1} {networking.istio.io/v1alpha3 v1alpha3}]
  I1215 11:54:10.522539 21 discovery.go:154] networking.istio.io/v1 matches networking.istio.io/v1
  I1215 11:54:10.522546 21 discovery.go:139] Checking APIGroup: security.istio.io
  I1215 11:54:10.523357 21 discovery.go:147] PreferredVersion.GroupVersion: security.istio.io/v1
  I1215 11:54:10.523372 21 discovery.go:148] Versions found [{security.istio.io/v1 v1} {security.istio.io/v1beta1 v1beta1}]
  I1215 11:54:10.523379 21 discovery.go:154] security.istio.io/v1 matches security.istio.io/v1
  I1215 11:54:10.523397 21 discovery.go:139] Checking APIGroup: telemetry.istio.io
  I1215 11:54:10.524103 21 discovery.go:147] PreferredVersion.GroupVersion: telemetry.istio.io/v1
  I1215 11:54:10.524125 21 discovery.go:148] Versions found [{telemetry.istio.io/v1 v1} {telemetry.istio.io/v1alpha1 v1alpha1}]
  I1215 11:54:10.524136 21 discovery.go:154] telemetry.istio.io/v1 matches telemetry.istio.io/v1
  I1215 11:54:10.524154 21 discovery.go:139] Checking APIGroup: extensions.istio.io
  I1215 11:54:10.524799 21 discovery.go:147] PreferredVersion.GroupVersion: extensions.istio.io/v1alpha1
  I1215 11:54:10.524822 21 discovery.go:148] Versions found [{extensions.istio.io/v1alpha1 v1alpha1}]
  I1215 11:54:10.524833 21 discovery.go:154] extensions.istio.io/v1alpha1 matches extensions.istio.io/v1alpha1
  I1215 11:54:10.524840 21 discovery.go:139] Checking APIGroup: kafka.strimzi.io
  I1215 11:54:10.525681 21 discovery.go:147] PreferredVersion.GroupVersion: kafka.strimzi.io/v1beta2
  I1215 11:54:10.525703 21 discovery.go:148] Versions found [{kafka.strimzi.io/v1beta2 v1beta2} {kafka.strimzi.io/v1beta1 v1beta1} {kafka.strimzi.io/v1alpha1 v1alpha1}]
  I1215 11:54:10.525710 21 discovery.go:154] kafka.strimzi.io/v1beta2 matches kafka.strimzi.io/v1beta2
  I1215 11:54:10.525721 21 discovery.go:139] Checking APIGroup: core.strimzi.io
  I1215 11:54:10.526302 21 discovery.go:147] PreferredVersion.GroupVersion: core.strimzi.io/v1beta2
  I1215 11:54:10.526317 21 discovery.go:148] Versions found [{core.strimzi.io/v1beta2 v1beta2}]
  I1215 11:54:10.526341 21 discovery.go:154] core.strimzi.io/v1beta2 matches core.strimzi.io/v1beta2
  I1215 11:54:10.526350 21 discovery.go:139] Checking APIGroup: cilium.io
  I1215 11:54:10.527195 21 discovery.go:147] PreferredVersion.GroupVersion: cilium.io/v2
  I1215 11:54:10.527290 21 discovery.go:148] Versions found [{cilium.io/v2 v2} {cilium.io/v2alpha1 v2alpha1}]
  I1215 11:54:10.527373 21 discovery.go:154] cilium.io/v2 matches cilium.io/v2
  I1215 11:54:10.527543 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7917" for this suite. @ 12/15/24 11:54:10.532
• [0.436 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 12/15/24 11:54:10.548
  I1215 11:54:10.548883 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 11:54:10.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:54:10.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:54:10.581
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 11:54:10.583
  STEP: Saw pod success @ 12/15/24 11:54:14.614
  I1215 11:54:14.618232 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-8f715171-ebf9-4d04-b820-b1926d7062a5 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 11:54:14.625
  I1215 11:54:14.657377 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2565" for this suite. @ 12/15/24 11:54:14.661
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 12/15/24 11:54:14.674
  I1215 11:54:14.674046 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename certificates @ 12/15/24 11:54:14.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:54:14.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:54:14.704
  STEP: getting /apis @ 12/15/24 11:54:15.475
  STEP: getting /apis/certificates.k8s.io @ 12/15/24 11:54:15.492
  STEP: getting /apis/certificates.k8s.io/v1 @ 12/15/24 11:54:15.493
  STEP: creating @ 12/15/24 11:54:15.494
  STEP: getting @ 12/15/24 11:54:15.52
  STEP: listing @ 12/15/24 11:54:15.523
  STEP: watching @ 12/15/24 11:54:15.527
  I1215 11:54:15.527561 21 certificates.go:316] starting watch
  STEP: patching @ 12/15/24 11:54:15.528
  STEP: updating @ 12/15/24 11:54:15.538
  I1215 11:54:15.545569 21 certificates.go:332] waiting for watch events with expected annotations
  I1215 11:54:15.545662 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 12/15/24 11:54:15.545
  STEP: patching /approval @ 12/15/24 11:54:15.549
  STEP: updating /approval @ 12/15/24 11:54:15.561
  STEP: getting /status @ 12/15/24 11:54:15.57
  STEP: patching /status @ 12/15/24 11:54:15.574
  STEP: updating /status @ 12/15/24 11:54:15.586
  STEP: deleting @ 12/15/24 11:54:15.595
  STEP: deleting a collection @ 12/15/24 11:54:15.616
  I1215 11:54:15.635450 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-8017" for this suite. @ 12/15/24 11:54:15.64
• [0.974 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:335
  STEP: Creating a kubernetes client @ 12/15/24 11:54:15.649
  I1215 11:54:15.649644 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 11:54:15.651
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:54:15.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:54:15.681
  STEP: Creating service test in namespace statefulset-1179 @ 12/15/24 11:54:15.684
  STEP: Creating a new StatefulSet @ 12/15/24 11:54:15.693
  I1215 11:54:15.713973 21 wait.go:40] Found 0 stateful pods, waiting for 3
  I1215 11:54:25.710495 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1215 11:54:25.710564 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1215 11:54:25.710587 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 12/15/24 11:54:25.722
  I1215 11:54:25.741939 21 statefulset.go:2507] Updating stateful set ss2
  STEP: Creating a new revision @ 12/15/24 11:54:25.742
  STEP: Not applying an update when the partition is greater than the number of replicas @ 12/15/24 11:54:35.75
  STEP: Performing a canary update @ 12/15/24 11:54:35.75
  I1215 11:54:35.764463 21 statefulset.go:2507] Updating stateful set ss2
  I1215 11:54:35.778103 21 wait.go:74] Waiting for Pod statefulset-1179/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 12/15/24 11:54:45.774
  I1215 11:54:45.858414 21 wait.go:40] Found 2 stateful pods, waiting for 3
  I1215 11:54:55.842753 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I1215 11:54:55.842799 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I1215 11:54:55.842810 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 12/15/24 11:54:55.85
  I1215 11:54:55.861688 21 statefulset.go:2507] Updating stateful set ss2
  I1215 11:54:55.876819 21 wait.go:74] Waiting for Pod statefulset-1179/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1215 11:55:05.886466 21 statefulset.go:2507] Updating stateful set ss2
  I1215 11:55:05.893295 21 wait.go:56] Waiting for StatefulSet statefulset-1179/ss2 to complete update
  I1215 11:55:05.893338 21 wait.go:63] Waiting for Pod statefulset-1179/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I1215 11:55:15.895982 21 statefulset.go:138] Deleting all statefulset in ns statefulset-1179
  I1215 11:55:15.899523 21 rest.go:150] Scaling statefulset ss2 to 0
  I1215 11:55:25.919694 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 11:55:25.923364 21 rest.go:88] Deleting statefulset ss2
  I1215 11:55:25.941579 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1179" for this suite. @ 12/15/24 11:55:25.949
• [70.319 seconds]
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:905
  STEP: Creating a kubernetes client @ 12/15/24 11:55:25.968
  I1215 11:55:25.968659 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 11:55:25.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:55:26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:55:26.003
  STEP: Creating service test in namespace statefulset-5364 @ 12/15/24 11:55:26.006
  STEP: Creating statefulset ss in namespace statefulset-5364 @ 12/15/24 11:55:26.014
  I1215 11:55:26.031257 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I1215 11:55:36.034649 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 12/15/24 11:55:36.041
  STEP: updating a scale subresource @ 12/15/24 11:55:36.045
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/15/24 11:55:36.059
  STEP: Patch a scale subresource @ 12/15/24 11:55:36.063
  STEP: verifying the statefulset Spec.Replicas was modified @ 12/15/24 11:55:36.089
  I1215 11:55:36.100041 21 statefulset.go:138] Deleting all statefulset in ns statefulset-5364
  I1215 11:55:36.103631 21 rest.go:150] Scaling statefulset ss to 0
  I1215 11:55:46.126047 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 11:55:46.128774 21 rest.go:88] Deleting statefulset ss
  I1215 11:55:46.151857 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5364" for this suite. @ 12/15/24 11:55:46.155
• [20.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 12/15/24 11:55:46.168
  I1215 11:55:46.168475 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 11:55:46.169
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:55:46.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:55:46.198
  STEP: Creating a pod to test substitution in container's command @ 12/15/24 11:55:46.201
  STEP: Saw pod success @ 12/15/24 11:55:50.228
  I1215 11:55:50.231657 21 output.go:196] Trying to get logs from node cncf-master-1 pod var-expansion-537c6c9d-b8c4-449b-9a1d-c06762bd37f3 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 11:55:50.243
  I1215 11:55:50.271865 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4215" for this suite. @ 12/15/24 11:55:50.276
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 12/15/24 11:55:50.284
  I1215 11:55:50.284807 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename server-version @ 12/15/24 11:55:50.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:55:50.304
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:55:50.307
  STEP: Request ServerVersion @ 12/15/24 11:55:50.31
  STEP: Confirm major version @ 12/15/24 11:55:50.311
  I1215 11:55:50.311712 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 12/15/24 11:55:50.311
  I1215 11:55:50.311860 21 server_version.go:58] cleanMinorVersion: 30
  I1215 11:55:50.311949 21 server_version.go:62] Minor version: 30
  I1215 11:55:50.312086 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-7136" for this suite. @ 12/15/24 11:55:50.316
• [0.041 seconds]
------------------------------
SSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 12/15/24 11:55:50.326
  I1215 11:55:50.326458 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename events @ 12/15/24 11:55:50.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:55:50.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:55:50.351
  STEP: Create set of events @ 12/15/24 11:55:50.354
  STEP: get a list of Events with a label in the current namespace @ 12/15/24 11:55:50.373
  STEP: delete a list of events @ 12/15/24 11:55:50.376
  I1215 11:55:50.376166 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/15/24 11:55:50.401
  I1215 11:55:50.405057 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-2833" for this suite. @ 12/15/24 11:55:50.41
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 12/15/24 11:55:50.423
  I1215 11:55:50.423175 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 11:55:50.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:55:50.445
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:55:50.448
  STEP: Creating projection with secret that has name projected-secret-test-map-3e09fa32-1139-4749-80fd-4477edc2d1e1 @ 12/15/24 11:55:50.452
  STEP: Creating a pod to test consume secrets @ 12/15/24 11:55:50.458
  STEP: Saw pod success @ 12/15/24 11:55:54.486
  I1215 11:55:54.490322 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-secrets-fa56014a-8471-4937-a38b-cf2517d69b0a container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 11:55:54.496
  I1215 11:55:54.515827 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9661" for this suite. @ 12/15/24 11:55:54.52
• [4.107 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 12/15/24 11:55:54.53
  I1215 11:55:54.530503 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename namespaces @ 12/15/24 11:55:54.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:55:54.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:55:54.558
  STEP: Updating Namespace "namespaces-5690" @ 12/15/24 11:55:54.56
  I1215 11:55:54.573119 21 namespace.go:389] Namespace "namespaces-5690" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"53d40f17-facd-4292-894b-d8e2f2cae16c", "kubernetes.io/metadata.name":"namespaces-5690", "namespaces-5690":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I1215 11:55:54.574138 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5690" for this suite. @ 12/15/24 11:55:54.583
• [0.062 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 12/15/24 11:55:54.593
  I1215 11:55:54.593092 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 11:55:54.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:55:54.619
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:55:54.622
  STEP: Creating configMap with name cm-test-opt-del-5a574687-8450-4c89-a9bf-1194b3b445f4 @ 12/15/24 11:55:54.63
  STEP: Creating configMap with name cm-test-opt-upd-efc128f3-0bd3-4ad6-9a39-d46b2ed6c955 @ 12/15/24 11:55:54.635
  STEP: Creating the pod @ 12/15/24 11:55:54.641
  STEP: Deleting configmap cm-test-opt-del-5a574687-8450-4c89-a9bf-1194b3b445f4 @ 12/15/24 11:55:56.691
  STEP: Updating configmap cm-test-opt-upd-efc128f3-0bd3-4ad6-9a39-d46b2ed6c955 @ 12/15/24 11:55:56.7
  STEP: Creating configMap with name cm-test-opt-create-22ca2eca-49fd-4e77-b5e7-b28602bc1002 @ 12/15/24 11:55:56.706
  STEP: waiting to observe update in volume @ 12/15/24 11:55:56.715
  I1215 11:57:23.159500 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-710" for this suite. @ 12/15/24 11:57:23.163
• [88.584 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 12/15/24 11:57:23.177
  I1215 11:57:23.177204 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename daemonsets @ 12/15/24 11:57:23.178
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:57:23.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:57:23.204
  STEP: Creating simple DaemonSet "daemon-set" @ 12/15/24 11:57:23.237
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/24 11:57:23.249
  I1215 11:57:23.257579 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 11:57:23.257673 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 11:57:24.259851 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1215 11:57:24.259905 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 11:57:25.260832 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 11:57:25.260904 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 12/15/24 11:57:25.264
  I1215 11:57:25.268375 21 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 12/15/24 11:57:25.268
  I1215 11:57:25.279787 21 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 12/15/24 11:57:25.279
  I1215 11:57:25.282764 21 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I1215 11:57:25.282946 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.283089 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.283217 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.283329 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.283449 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.283493 21 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-1167 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1215 11:57:25.283518 21 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 12/15/24 11:57:25.283
  STEP: watching for the daemon set status to be patched @ 12/15/24 11:57:25.297
  I1215 11:57:25.299653 21 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I1215 11:57:25.299945 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.300169 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.300383 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.300574 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.300748 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.300872 21 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-1167 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1215 11:57:25.301066 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I1215 11:57:25.301201 21 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-1167 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I1215 11:57:25.301372 21 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/24 11:57:25.308
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1167, will wait for the garbage collector to delete the pods @ 12/15/24 11:57:25.308
  I1215 11:57:25.373552 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.104917ms
  I1215 11:57:25.474764 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.074743ms
  I1215 11:57:26.985086 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 11:57:26.985152 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1215 11:57:26.988825 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5373980"},"items":null}

  I1215 11:57:26.992025 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5373980"},"items":null}

  I1215 11:57:27.016906 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1167" for this suite. @ 12/15/24 11:57:27.023
• [3.857 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 12/15/24 11:57:27.034
  I1215 11:57:27.034337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 11:57:27.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:57:27.059
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:57:27.061
  STEP: set up a multi version CRD @ 12/15/24 11:57:27.064
  I1215 11:57:27.065009 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: rename a version @ 12/15/24 11:57:37.318
  STEP: check the new version name is served @ 12/15/24 11:57:37.335
  STEP: check the old version name is removed @ 12/15/24 11:57:39.322
  STEP: check the other version is not changed @ 12/15/24 11:57:40.163
  I1215 11:57:44.250711 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-3314" for this suite. @ 12/15/24 11:57:44.26
• [17.243 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 12/15/24 11:57:44.277
  I1215 11:57:44.277595 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 11:57:44.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:57:44.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:57:44.305
  I1215 11:57:44.311144 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5226" for this suite. @ 12/15/24 11:57:44.315
• [0.046 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 12/15/24 11:57:44.323
  I1215 11:57:44.323993 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/24 11:57:44.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:57:44.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:57:44.357
  I1215 11:57:44.360174 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 11:58:45.895015 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7342" for this suite. @ 12/15/24 11:58:45.9
• [61.589 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1034
  STEP: Creating a kubernetes client @ 12/15/24 11:58:45.914
  I1215 11:58:45.914351 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 11:58:45.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:58:45.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:58:45.944
  STEP: Creating service test in namespace statefulset-7109 @ 12/15/24 11:58:45.953
  STEP: Creating statefulset ss in namespace statefulset-7109 @ 12/15/24 11:58:45.972
  I1215 11:58:45.988647 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I1215 11:58:55.989773 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 12/15/24 11:58:56
  STEP: Getting /status @ 12/15/24 11:58:56.009
  I1215 11:58:56.015332 21 statefulset.go:1070] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 12/15/24 11:58:56.015
  I1215 11:58:56.030137 21 statefulset.go:1090] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 12/15/24 11:58:56.03
  I1215 11:58:56.032924 21 statefulset.go:1118] Observed &StatefulSet event: ADDED
  I1215 11:58:56.032974 21 statefulset.go:1111] Found Statefulset ss in namespace statefulset-7109 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1215 11:58:56.032989 21 statefulset.go:1122] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 12/15/24 11:58:56.033
  I1215 11:58:56.033051 21 statefulset.go:1126] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1215 11:58:56.042020 21 statefulset.go:1130] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 12/15/24 11:58:56.042
  I1215 11:58:56.044353 21 statefulset.go:1155] Observed &StatefulSet event: ADDED
  I1215 11:58:56.044503 21 statefulset.go:138] Deleting all statefulset in ns statefulset-7109
  I1215 11:58:56.047589 21 rest.go:150] Scaling statefulset ss to 0
  I1215 11:59:06.067154 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 11:59:06.070893 21 rest.go:88] Deleting statefulset ss
  I1215 11:59:06.086581 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7109" for this suite. @ 12/15/24 11:59:06.093
• [20.190 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 12/15/24 11:59:06.105
  I1215 11:59:06.105703 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/24 11:59:06.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:59:06.126
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:59:06.131
  I1215 11:59:06.142543 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9660" for this suite. @ 12/15/24 11:59:06.147
• [0.050 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 12/15/24 11:59:06.156
  I1215 11:59:06.156291 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 11:59:06.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:59:06.18
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:59:06.183
  STEP: Creating secret with name secret-test-1ccc7d7c-186d-4098-bc61-ac1ca187d23c @ 12/15/24 11:59:06.22
  STEP: Creating a pod to test consume secrets @ 12/15/24 11:59:06.227
  STEP: Saw pod success @ 12/15/24 11:59:10.252
  I1215 11:59:10.255939 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-45ecb09b-82b9-481e-bc33-ff4470b266eb container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 11:59:10.272
  I1215 11:59:10.296258 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3780" for this suite. @ 12/15/24 11:59:10.301
  STEP: Destroying namespace "secret-namespace-6365" for this suite. @ 12/15/24 11:59:10.31
• [4.167 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 12/15/24 11:59:10.323
  I1215 11:59:10.323766 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 11:59:10.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:59:10.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:59:10.351
  STEP: creating a replication controller @ 12/15/24 11:59:10.353
  I1215 11:59:10.354091 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 create -f -'
  I1215 11:59:10.515475 21 builder.go:146] stderr: ""
  I1215 11:59:10.515618 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/24 11:59:10.515
  I1215 11:59:10.515975 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1215 11:59:10.599176 21 builder.go:146] stderr: ""
  I1215 11:59:10.599234 21 builder.go:147] stdout: "update-demo-nautilus-l6kdz update-demo-nautilus-pjqr9 "
  I1215 11:59:10.599310 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-l6kdz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 11:59:10.673323 21 builder.go:146] stderr: ""
  I1215 11:59:10.673404 21 builder.go:147] stdout: ""
  I1215 11:59:10.673417 21 kubectl.go:2501] update-demo-nautilus-l6kdz is created but not running
  I1215 11:59:15.674997 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1215 11:59:15.768476 21 builder.go:146] stderr: ""
  I1215 11:59:15.768581 21 builder.go:147] stdout: "update-demo-nautilus-l6kdz update-demo-nautilus-pjqr9 "
  I1215 11:59:15.768657 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-l6kdz -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 11:59:15.842518 21 builder.go:146] stderr: ""
  I1215 11:59:15.842598 21 builder.go:147] stdout: "true"
  I1215 11:59:15.842658 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-l6kdz -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1215 11:59:15.915023 21 builder.go:146] stderr: ""
  I1215 11:59:15.915114 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1215 11:59:15.915142 21 kubectl.go:2392] validating pod update-demo-nautilus-l6kdz
  I1215 11:59:15.921186 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1215 11:59:15.921408 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1215 11:59:15.921427 21 kubectl.go:2519] update-demo-nautilus-l6kdz is verified up and running
  I1215 11:59:15.921486 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-pjqr9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 11:59:15.998326 21 builder.go:146] stderr: ""
  I1215 11:59:15.998399 21 builder.go:147] stdout: "true"
  I1215 11:59:15.998455 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-pjqr9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1215 11:59:16.070536 21 builder.go:146] stderr: ""
  I1215 11:59:16.070646 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1215 11:59:16.070661 21 kubectl.go:2392] validating pod update-demo-nautilus-pjqr9
  I1215 11:59:16.079289 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1215 11:59:16.079415 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1215 11:59:16.079440 21 kubectl.go:2519] update-demo-nautilus-pjqr9 is verified up and running
  STEP: scaling down the replication controller @ 12/15/24 11:59:16.079
  I1215 11:59:16.081260 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I1215 11:59:16.081300 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I1215 11:59:17.183525 21 builder.go:146] stderr: ""
  I1215 11:59:17.183582 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/24 11:59:17.183
  I1215 11:59:17.183894 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1215 11:59:17.254307 21 builder.go:146] stderr: ""
  I1215 11:59:17.254396 21 builder.go:147] stdout: "update-demo-nautilus-pjqr9 "
  I1215 11:59:17.254455 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-pjqr9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 11:59:17.328632 21 builder.go:146] stderr: ""
  I1215 11:59:17.328690 21 builder.go:147] stdout: "true"
  I1215 11:59:17.328754 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-pjqr9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1215 11:59:17.401591 21 builder.go:146] stderr: ""
  I1215 11:59:17.401656 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1215 11:59:17.401671 21 kubectl.go:2392] validating pod update-demo-nautilus-pjqr9
  I1215 11:59:17.406636 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1215 11:59:17.406707 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1215 11:59:17.406723 21 kubectl.go:2519] update-demo-nautilus-pjqr9 is verified up and running
  STEP: scaling up the replication controller @ 12/15/24 11:59:17.406
  I1215 11:59:17.408170 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I1215 11:59:17.408213 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I1215 11:59:18.505848 21 builder.go:146] stderr: ""
  I1215 11:59:18.505938 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/24 11:59:18.505
  I1215 11:59:18.506155 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1215 11:59:18.585124 21 builder.go:146] stderr: ""
  I1215 11:59:18.585190 21 builder.go:147] stdout: "update-demo-nautilus-m47gx update-demo-nautilus-pjqr9 "
  I1215 11:59:18.585282 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-m47gx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 11:59:18.656629 21 builder.go:146] stderr: ""
  I1215 11:59:18.656709 21 builder.go:147] stdout: ""
  I1215 11:59:18.656722 21 kubectl.go:2501] update-demo-nautilus-m47gx is created but not running
  I1215 11:59:23.659232 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1215 11:59:23.734632 21 builder.go:146] stderr: ""
  I1215 11:59:23.734699 21 builder.go:147] stdout: "update-demo-nautilus-m47gx update-demo-nautilus-pjqr9 "
  I1215 11:59:23.734779 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-m47gx -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 11:59:23.805647 21 builder.go:146] stderr: ""
  I1215 11:59:23.805711 21 builder.go:147] stdout: "true"
  I1215 11:59:23.805836 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-m47gx -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1215 11:59:23.881942 21 builder.go:146] stderr: ""
  I1215 11:59:23.881997 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1215 11:59:23.882032 21 kubectl.go:2392] validating pod update-demo-nautilus-m47gx
  I1215 11:59:23.887333 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1215 11:59:23.887444 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1215 11:59:23.887460 21 kubectl.go:2519] update-demo-nautilus-m47gx is verified up and running
  I1215 11:59:23.887511 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-pjqr9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 11:59:23.962536 21 builder.go:146] stderr: ""
  I1215 11:59:23.962593 21 builder.go:147] stdout: "true"
  I1215 11:59:23.962646 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods update-demo-nautilus-pjqr9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1215 11:59:24.037758 21 builder.go:146] stderr: ""
  I1215 11:59:24.037830 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1215 11:59:24.037846 21 kubectl.go:2392] validating pod update-demo-nautilus-pjqr9
  I1215 11:59:24.043050 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1215 11:59:24.043117 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1215 11:59:24.043131 21 kubectl.go:2519] update-demo-nautilus-pjqr9 is verified up and running
  STEP: using delete to clean up resources @ 12/15/24 11:59:24.043
  I1215 11:59:24.043357 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 delete --grace-period=0 --force -f -'
  I1215 11:59:24.134818 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 11:59:24.134895 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1215 11:59:24.134984 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get rc,svc -l name=update-demo --no-headers'
  I1215 11:59:24.229847 21 builder.go:146] stderr: "No resources found in kubectl-3926 namespace.\n"
  I1215 11:59:24.229939 21 builder.go:147] stdout: ""
  I1215 11:59:24.230062 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3926 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1215 11:59:24.313300 21 builder.go:146] stderr: ""
  I1215 11:59:24.313396 21 builder.go:147] stdout: ""
  I1215 11:59:24.313765 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3926" for this suite. @ 12/15/24 11:59:24.319
• [14.004 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 12/15/24 11:59:24.328
  I1215 11:59:24.328336 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/15/24 11:59:24.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:59:24.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:59:24.357
  STEP: getting /apis @ 12/15/24 11:59:24.369
  STEP: getting /apis/admissionregistration.k8s.io @ 12/15/24 11:59:24.377
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/15/24 11:59:24.378
  STEP: creating @ 12/15/24 11:59:24.379
  STEP: getting @ 12/15/24 11:59:24.405
  STEP: listing @ 12/15/24 11:59:24.411
  STEP: watching @ 12/15/24 11:59:24.414
  I1215 11:59:24.414839 21 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 12/15/24 11:59:24.416
  STEP: updating @ 12/15/24 11:59:24.425
  I1215 11:59:24.437167 21 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 12/15/24 11:59:24.437
  STEP: deleting a collection @ 12/15/24 11:59:24.452
  I1215 11:59:24.487254 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6518" for this suite. @ 12/15/24 11:59:24.491
• [0.171 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 12/15/24 11:59:24.499
  I1215 11:59:24.499893 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-runtime @ 12/15/24 11:59:24.5
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:59:24.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:59:24.531
  STEP: create the container @ 12/15/24 11:59:24.534
  W1215 11:59:24.547314      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/15/24 11:59:24.547
  STEP: get the container status @ 12/15/24 11:59:27.571
  STEP: the container should be terminated @ 12/15/24 11:59:27.575
  STEP: the termination message should be set @ 12/15/24 11:59:27.575
  I1215 11:59:27.575278 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 12/15/24 11:59:27.575
  I1215 11:59:27.623167 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-5249" for this suite. @ 12/15/24 11:59:27.627
• [3.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 12/15/24 11:59:27.638
  I1215 11:59:27.638862 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 11:59:27.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:59:27.668
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:59:27.671
  STEP: Creating projection with secret that has name projected-secret-test-map-06e84e7d-af95-4f96-a3d3-54e21ba73ea9 @ 12/15/24 11:59:27.674
  STEP: Creating a pod to test consume secrets @ 12/15/24 11:59:27.69
  STEP: Saw pod success @ 12/15/24 11:59:31.714
  I1215 11:59:31.718585 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-secrets-d120229a-2aae-4a8b-91aa-cea963d68a08 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 11:59:31.725
  I1215 11:59:31.744605 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4458" for this suite. @ 12/15/24 11:59:31.748
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 12/15/24 11:59:31.757
  I1215 11:59:31.757118 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 11:59:31.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 11:59:31.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 11:59:31.784
  STEP: Creating pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654 @ 12/15/24 11:59:31.788
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 11:59:33.812
  I1215 11:59:33.816358 21 container_probe.go:1749] Initial restart count of pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 is 0
  I1215 11:59:33.819787 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:35.825446 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:37.831560 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:39.836367 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:41.842694 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:43.849140 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:45.855649 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:47.861436 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:49.867335 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:51.874061 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:53.880553 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:55.886070 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:57.892106 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 11:59:59.898273 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:01.903952 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:03.912215 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:05.917892 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:07.924534 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:09.930612 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:11.936800 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:13.943408 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:15.950596 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:17.956676 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:19.962569 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:21.968448 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:23.979380 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:25.986232 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:27.992774 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:30.000896 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:32.008668 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:34.014850 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:36.020474 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:38.027947 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:40.033286 21 container_probe.go:1759] Get pod test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 in namespace container-probe-9654
  I1215 12:00:40.033602 21 container_probe.go:1763] Restart count of pod container-probe-9654/test-grpc-b3efb0fc-8aa8-4485-ac64-95ad6049f126 is now 1 (1m6.217148664s elapsed)
  STEP: deleting the pod @ 12/15/24 12:00:40.033
  I1215 12:00:40.055903 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9654" for this suite. @ 12/15/24 12:00:40.067
• [68.322 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 12/15/24 12:00:40.079
  I1215 12:00:40.080048 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename field-validation @ 12/15/24 12:00:40.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:00:40.106
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:00:40.109
  I1215 12:00:40.112253 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  W1215 12:00:47.667982      21 warnings.go:70] unknown field "alpha"
  W1215 12:00:47.668023      21 warnings.go:70] unknown field "beta"
  W1215 12:00:47.668029      21 warnings.go:70] unknown field "delta"
  W1215 12:00:47.668033      21 warnings.go:70] unknown field "epsilon"
  W1215 12:00:47.668037      21 warnings.go:70] unknown field "gamma"
  I1215 12:00:48.215820 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9851" for this suite. @ 12/15/24 12:00:48.22
• [8.149 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 12/15/24 12:00:48.229
  I1215 12:00:48.229143 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename gc @ 12/15/24 12:00:48.23
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:00:48.266
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:00:48.269
  I1215 12:00:48.333583 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"00ff8a1c-8862-4436-a02e-31ac0fd43c37", Controller:(*bool)(0xc0053d9a9a), BlockOwnerDeletion:(*bool)(0xc0053d9a9b)}}
  I1215 12:00:48.343784 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"75827842-cc69-426d-a413-f9bc1542f0d0", Controller:(*bool)(0xc00724bbc2), BlockOwnerDeletion:(*bool)(0xc00724bbc3)}}
  I1215 12:00:48.352997 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"0ff0d128-a971-4814-83c6-35bcb1b2cf6a", Controller:(*bool)(0xc00724be0a), BlockOwnerDeletion:(*bool)(0xc00724be0b)}}
  I1215 12:00:53.372204 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9845" for this suite. @ 12/15/24 12:00:53.376
• [5.155 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 12/15/24 12:00:53.384
  I1215 12:00:53.384430 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:00:53.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:00:53.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:00:53.412
  STEP: Setting up server cert @ 12/15/24 12:00:53.454
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:00:53.995
  STEP: Deploying the webhook pod @ 12/15/24 12:00:54.008
  STEP: Wait for the deployment to be ready @ 12/15/24 12:00:54.032
  I1215 12:00:54.037850 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 12:00:56.05
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:00:56.069
  I1215 12:00:57.070115 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1215 12:00:57.110064 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-2712-crds.webhook.example.com via the AdmissionRegistration API @ 12/15/24 12:01:02.623
  STEP: Creating a custom resource while v1 is storage version @ 12/15/24 12:01:02.648
  STEP: Patching Custom Resource Definition to set v2 as storage @ 12/15/24 12:01:04.686
  STEP: Patching the custom resource while v2 is storage version @ 12/15/24 12:01:04.726
  I1215 12:01:05.336976 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8605" for this suite. @ 12/15/24 12:01:05.341
  STEP: Destroying namespace "webhook-markers-9622" for this suite. @ 12/15/24 12:01:05.353
• [11.981 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 12/15/24 12:01:05.368
  I1215 12:01:05.368276 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename disruption @ 12/15/24 12:01:05.369
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:05.393
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:05.397
  STEP: creating the pdb @ 12/15/24 12:01:05.4
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:01:05.412
  STEP: updating the pdb @ 12/15/24 12:01:07.417
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:01:07.429
  STEP: patching the pdb @ 12/15/24 12:01:09.435
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:01:09.449
  STEP: Waiting for the pdb to be deleted @ 12/15/24 12:01:11.463
  I1215 12:01:11.466685 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-5723" for this suite. @ 12/15/24 12:01:11.471
• [6.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 12/15/24 12:01:11.486
  I1215 12:01:11.486046 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:01:11.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:11.519
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:11.523
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/15/24 12:01:11.525
  STEP: Saw pod success @ 12/15/24 12:01:15.554
  I1215 12:01:15.557260 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-60435f8d-36ab-4924-ba7b-bc2ba0fee139 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:01:15.568
  I1215 12:01:15.588944 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8913" for this suite. @ 12/15/24 12:01:15.593
• [4.115 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 12/15/24 12:01:15.601
  I1215 12:01:15.601222 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/24 12:01:15.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:15.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:15.626
  STEP: Waiting for pod completion @ 12/15/24 12:01:15.639
  I1215 12:01:19.662717 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-9225" for this suite. @ 12/15/24 12:01:19.667
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 12/15/24 12:01:19.677
  I1215 12:01:19.678026 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename namespaces @ 12/15/24 12:01:19.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:19.712
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:19.716
  STEP: creating a Namespace @ 12/15/24 12:01:19.718
  STEP: patching the Namespace @ 12/15/24 12:01:19.737
  STEP: get the Namespace and ensuring it has the label @ 12/15/24 12:01:19.747
  I1215 12:01:19.750227 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5374" for this suite. @ 12/15/24 12:01:19.764
  STEP: Destroying namespace "nspatchtest-03c81ed8-e430-4eed-bdcb-142ea1ac42dc-1379" for this suite. @ 12/15/24 12:01:19.776
• [0.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 12/15/24 12:01:19.788
  I1215 12:01:19.788170 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:01:19.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:19.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:19.818
  STEP: Setting up server cert @ 12/15/24 12:01:19.849
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:01:20.058
  STEP: Deploying the webhook pod @ 12/15/24 12:01:20.069
  STEP: Wait for the deployment to be ready @ 12/15/24 12:01:20.091
  I1215 12:01:20.114979 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 12:01:22.126
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:01:22.141
  I1215 12:01:23.141867 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/15/24 12:01:23.15
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 12/15/24 12:01:23.169
  STEP: Creating a dummy validating-webhook-configuration object @ 12/15/24 12:01:23.186
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 12/15/24 12:01:23.2
  STEP: Creating a dummy mutating-webhook-configuration object @ 12/15/24 12:01:23.208
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 12/15/24 12:01:23.231
  I1215 12:01:23.323865 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1949" for this suite. @ 12/15/24 12:01:23.328
  STEP: Destroying namespace "webhook-markers-1990" for this suite. @ 12/15/24 12:01:23.339
• [3.569 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 12/15/24 12:01:23.357
  I1215 12:01:23.357966 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:01:23.359
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:23.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:23.384
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 12/15/24 12:01:23.387
  STEP: Saw pod success @ 12/15/24 12:01:27.437
  I1215 12:01:27.442220 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-1817817c-d0c7-4a90-9604-1a50162f0b11 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:01:27.449
  I1215 12:01:27.472899 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3478" for this suite. @ 12/15/24 12:01:27.477
• [4.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 12/15/24 12:01:27.489
  I1215 12:01:27.489239 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 12:01:27.49
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:27.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:27.518
  STEP: Creating a test headless service @ 12/15/24 12:01:27.521
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-6837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-6837.svc.cluster.local;sleep 1; done
   @ 12/15/24 12:01:27.532
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-6837.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-6837.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-6837.svc.cluster.local;sleep 1; done
   @ 12/15/24 12:01:27.532
  STEP: creating a pod to probe DNS @ 12/15/24 12:01:27.532
  STEP: submitting the pod to kubernetes @ 12/15/24 12:01:27.532
  STEP: retrieving the pod @ 12/15/24 12:01:39.595
  STEP: looking for the results for each expected name from probers @ 12/15/24 12:01:39.598
  I1215 12:01:39.612156 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-6837.svc.cluster.local from pod dns-6837/dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d: the server could not find the requested resource (get pods dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d)
  I1215 12:01:39.615667 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-6837.svc.cluster.local from pod dns-6837/dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d: the server could not find the requested resource (get pods dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d)
  I1215 12:01:39.620159 21 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local from pod dns-6837/dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d: the server could not find the requested resource (get pods dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d)
  I1215 12:01:39.623720 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local from pod dns-6837/dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d: the server could not find the requested resource (get pods dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d)
  I1215 12:01:39.631143 21 dns_common.go:489] Lookups using dns-6837/dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d failed for: [wheezy_udp@dns-test-service-2.dns-6837.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-6837.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-6837.svc.cluster.local]

  I1215 12:01:39.637308 21 dns_common.go:495] Pod client logs for webserver: 
  I1215 12:01:39.642520 21 dns_common.go:495] Pod client logs for querier: 
  I1215 12:01:39.648036 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I1215 12:01:44.625724 21 dns_common.go:527] DNS probes using dns-6837/dns-test-dc0ab007-e9e0-4be9-b918-76d0d75f745d succeeded

  STEP: deleting the pod @ 12/15/24 12:01:44.626
  STEP: deleting the test headless service @ 12/15/24 12:01:44.663
  I1215 12:01:45.612659 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-6837" for this suite. @ 12/15/24 12:01:45.624
• [18.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 12/15/24 12:01:45.636
  I1215 12:01:45.636606 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename cronjob @ 12/15/24 12:01:45.639
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:01:45.67
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:01:45.672
  STEP: Creating a cronjob @ 12/15/24 12:01:45.675
  STEP: Ensuring more than one job is running at a time @ 12/15/24 12:01:45.687
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 12/15/24 12:03:01.693
  STEP: Removing cronjob @ 12/15/24 12:03:01.697
  I1215 12:03:01.708779 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7615" for this suite. @ 12/15/24 12:03:01.718
• [76.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 12/15/24 12:03:01.74
  I1215 12:03:01.741018 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/15/24 12:03:01.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:01.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:01.787
  STEP: creating the policy @ 12/15/24 12:03:01.8
  STEP: waiting until the marker is denied @ 12/15/24 12:03:01.866
  STEP: testing a replicated Deployment to be allowed @ 12/15/24 12:03:02.577
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/15/24 12:03:02.6
  I1215 12:03:02.715979 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-4763" for this suite. @ 12/15/24 12:03:02.72
• [0.990 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 12/15/24 12:03:02.734
  I1215 12:03:02.734257 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/15/24 12:03:02.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:02.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:02.769
  STEP: Cleaning up the secret @ 12/15/24 12:03:04.811
  STEP: Cleaning up the configmap @ 12/15/24 12:03:04.823
  STEP: Cleaning up the pod @ 12/15/24 12:03:04.832
  I1215 12:03:04.859221 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-7407" for this suite. @ 12/15/24 12:03:04.863
• [2.139 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 12/15/24 12:03:04.872
  I1215 12:03:04.872830 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:03:04.873
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:04.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:04.899
  STEP: Setting up server cert @ 12/15/24 12:03:04.939
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:03:05.339
  STEP: Deploying the webhook pod @ 12/15/24 12:03:05.354
  STEP: Wait for the deployment to be ready @ 12/15/24 12:03:05.376
  I1215 12:03:05.393815 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 12:03:07.406
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:03:07.426
  I1215 12:03:08.427715 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 12/15/24 12:03:08.435
  STEP: create a configmap that should be updated by the webhook @ 12/15/24 12:03:08.454
  I1215 12:03:08.539936 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6604" for this suite. @ 12/15/24 12:03:08.546
  STEP: Destroying namespace "webhook-markers-7550" for this suite. @ 12/15/24 12:03:08.557
• [3.693 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 12/15/24 12:03:08.566
  I1215 12:03:08.566695 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-webhook @ 12/15/24 12:03:08.568
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:08.591
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:08.595
  STEP: Setting up server cert @ 12/15/24 12:03:08.598
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/15/24 12:03:09.063
  STEP: Deploying the custom resource conversion webhook pod @ 12/15/24 12:03:09.074
  STEP: Wait for the deployment to be ready @ 12/15/24 12:03:09.094
  I1215 12:03:09.106073 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 12:03:11.119
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:03:11.136
  I1215 12:03:12.136685 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1215 12:03:12.145518 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Creating a v1 custom resource @ 12/15/24 12:03:19.73
  STEP: Create a v2 custom resource @ 12/15/24 12:03:19.756
  STEP: List CRs in v1 @ 12/15/24 12:03:19.791
  STEP: List CRs in v2 @ 12/15/24 12:03:19.796
  I1215 12:03:20.375416 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8102" for this suite. @ 12/15/24 12:03:20.385
• [11.829 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 12/15/24 12:03:20.395
  I1215 12:03:20.395994 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 12:03:20.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:20.428
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:20.436
  STEP: creating the pod @ 12/15/24 12:03:20.44
  STEP: submitting the pod to kubernetes @ 12/15/24 12:03:20.44
  STEP: verifying QOS class is set on the pod @ 12/15/24 12:03:20.455
  I1215 12:03:20.464513 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3517" for this suite. @ 12/15/24 12:03:20.471
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 12/15/24 12:03:20.498
  I1215 12:03:20.498640 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename subpath @ 12/15/24 12:03:20.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:20.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:20.534
  STEP: Setting up data @ 12/15/24 12:03:20.538
  STEP: Creating pod pod-subpath-test-configmap-xwpx @ 12/15/24 12:03:20.557
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/24 12:03:20.557
  STEP: Saw pod success @ 12/15/24 12:03:44.646
  I1215 12:03:44.650033 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-subpath-test-configmap-xwpx container test-container-subpath-configmap-xwpx: <nil>
  STEP: delete the pod @ 12/15/24 12:03:44.663
  STEP: Deleting pod pod-subpath-test-configmap-xwpx @ 12/15/24 12:03:44.688
  I1215 12:03:44.688242 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-xwpx" in namespace "subpath-7215"
  I1215 12:03:44.691502 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-7215" for this suite. @ 12/15/24 12:03:44.695
• [24.208 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 12/15/24 12:03:44.704
  I1215 12:03:44.704180 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 12:03:44.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:44.736
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:44.739
  STEP: Starting the proxy @ 12/15/24 12:03:44.743
  I1215 12:03:44.743892 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-3274 proxy --unix-socket=/tmp/kubectl-proxy-unix3558034931/test'
  STEP: retrieving proxy /api/ output @ 12/15/24 12:03:44.812
  I1215 12:03:44.814111 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3274" for this suite. @ 12/15/24 12:03:44.82
• [0.129 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 12/15/24 12:03:44.834
  I1215 12:03:44.834038 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename cronjob @ 12/15/24 12:03:44.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:03:44.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:03:44.856
  STEP: Creating a ReplaceConcurrent cronjob @ 12/15/24 12:03:44.86
  STEP: Ensuring a job is scheduled @ 12/15/24 12:03:44.866
  STEP: Ensuring exactly one is scheduled @ 12/15/24 12:04:00.871
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/15/24 12:04:00.874
  STEP: Ensuring the job is replaced with a new one @ 12/15/24 12:04:00.877
  STEP: Removing cronjob @ 12/15/24 12:05:00.884
  I1215 12:05:00.893019 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-3954" for this suite. @ 12/15/24 12:05:00.898
• [76.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 12/15/24 12:05:00.908
  I1215 12:05:00.908731 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 12:05:00.914
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:05:00.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:05:00.948
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 12:05:00.951
  STEP: Saw pod success @ 12/15/24 12:05:04.995
  I1215 12:05:04.998964 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-f760a529-90b5-4a03-89b3-6b86b7b01926 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 12:05:05.008
  I1215 12:05:05.040109 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5293" for this suite. @ 12/15/24 12:05:05.044
• [4.144 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 12/15/24 12:05:05.053
  I1215 12:05:05.053255 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename job @ 12/15/24 12:05:05.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:05:05.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:05:05.081
  STEP: Creating a job @ 12/15/24 12:05:05.084
  STEP: Ensuring active pods == parallelism @ 12/15/24 12:05:05.095
  STEP: delete a job @ 12/15/24 12:05:07.102
  STEP: deleting Job.batch foo in namespace job-4611, will wait for the garbage collector to delete the pods @ 12/15/24 12:05:07.102
  I1215 12:05:07.167795 21 resources.go:139] Deleting Job.batch foo took: 11.018212ms
  I1215 12:05:07.268501 21 resources.go:163] Terminating Job.batch foo pods took: 100.741632ms
  STEP: Ensuring job was deleted @ 12/15/24 12:05:08.168
  I1215 12:05:08.172622 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4611" for this suite. @ 12/15/24 12:05:08.177
• [3.133 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 12/15/24 12:05:08.186
  I1215 12:05:08.187007 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:05:08.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:05:08.212
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:05:08.216
  STEP: Creating a ResourceQuota with terminating scope @ 12/15/24 12:05:08.22
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/24 12:05:08.231
  STEP: Creating a ResourceQuota with not terminating scope @ 12/15/24 12:05:10.237
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/24 12:05:10.248
  STEP: Creating a long running pod @ 12/15/24 12:05:12.252
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 12/15/24 12:05:12.272
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 12/15/24 12:05:14.28
  STEP: Deleting the pod @ 12/15/24 12:05:16.285
  STEP: Ensuring resource quota status released the pod usage @ 12/15/24 12:05:16.302
  STEP: Creating a terminating pod @ 12/15/24 12:05:18.306
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 12/15/24 12:05:18.325
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 12/15/24 12:05:20.33
  STEP: Deleting the pod @ 12/15/24 12:05:22.335
  STEP: Ensuring resource quota status released the pod usage @ 12/15/24 12:05:22.352
  I1215 12:05:24.360260 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9890" for this suite. @ 12/15/24 12:05:24.365
• [16.186 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 12/15/24 12:05:24.373
  I1215 12:05:24.373477 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 12:05:24.374
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:05:24.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:05:24.408
  STEP: Creating a pod to test env composition @ 12/15/24 12:05:24.412
  STEP: Saw pod success @ 12/15/24 12:05:28.444
  I1215 12:05:28.448191 21 output.go:196] Trying to get logs from node cncf-master-1 pod var-expansion-cb9b7c1c-50b5-4408-ada8-0355c5ac1c37 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 12:05:28.455
  I1215 12:05:28.480764 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7040" for this suite. @ 12/15/24 12:05:28.485
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 12/15/24 12:05:28.493
  I1215 12:05:28.493473 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:05:28.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:05:28.515
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:05:28.519
  STEP: creating service multiprotocol-test in namespace services-7160 @ 12/15/24 12:05:28.523
  STEP: creating pod pod1 in namespace services-7160 @ 12/15/24 12:05:28.537
  STEP: Creating pod pod1 in namespace services-7160 @ 12/15/24 12:05:28.537
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-7160 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 12/15/24 12:05:30.57
  I1215 12:05:30.580385 21 service.go:4351] successfully validated that service multiprotocol-test in namespace services-7160 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 12/15/24 12:05:30.58
  I1215 12:05:30.580498 21 resource.go:361] Creating new exec pod
  I1215 12:05:32.595043 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80'
  I1215 12:05:32.743003 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.31.18 80\nConnection to 10.233.31.18 80 port [tcp/http] succeeded!\n"
  I1215 12:05:32.743062 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:05:32.743156 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80'
  I1215 12:05:36.891886 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.31.18 80\nConnection to 10.233.31.18 80 port [udp/*] succeeded!\n"
  I1215 12:05:36.891955 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 12/15/24 12:05:36.892
  I1215 12:05:36.904486 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80'
  I1215 12:05:37.050720 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.31.18 80\nConnection to 10.233.31.18 80 port [tcp/http] succeeded!\n"
  I1215 12:05:37.050805 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:05:37.051219 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80'
  I1215 12:05:37.209461 21 builder.go:135] rc: 1
  I1215 12:05:37.209581 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.18 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:39.051730 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80'
  I1215 12:05:39.202733 21 builder.go:135] rc: 1
  I1215 12:05:39.202836 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.18 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:41.051044 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80'
  I1215 12:05:41.197452 21 builder.go:135] rc: 1
  I1215 12:05:41.197578 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.18 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:43.052346 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80'
  I1215 12:05:43.205215 21 builder.go:135] rc: 1
  I1215 12:05:43.205347 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.18 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  STEP: Checking if the Service forwards traffic to UDP only @ 12/15/24 12:05:43.205
  I1215 12:05:43.222956 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80'
  I1215 12:05:43.382073 21 builder.go:135] rc: 1
  I1215 12:05:43.382161 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -u -w 2 10.233.31.18 80
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:45.224057 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.233.31.18 80'
  I1215 12:05:49.369300 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.233.31.18 80\nConnection to 10.233.31.18 80 port [udp/*] succeeded!\n"
  I1215 12:05:49.369391 21 builder.go:147] stdout: "pod1"
  I1215 12:05:49.369531 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80'
  I1215 12:05:49.509635 21 builder.go:135] rc: 1
  I1215 12:05:49.509728 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.233.31.18 80
  + echo hostName
  nc: connect to 10.233.31.18 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:51.369796 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80'
  I1215 12:05:51.509019 21 builder.go:135] rc: 1
  I1215 12:05:51.509324 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.31.18 80
  nc: connect to 10.233.31.18 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:53.370553 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80'
  I1215 12:05:53.515393 21 builder.go:135] rc: 1
  I1215 12:05:53.515495 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.31.18 80
  nc: connect to 10.233.31.18 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:55.370551 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80'
  I1215 12:05:55.511018 21 builder.go:135] rc: 1
  I1215 12:05:55.511113 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7160 exec execpodtrcbn -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.31.18 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.233.31.18 80
  nc: connect to 10.233.31.18 port 80 (tcp) failed: Connection refused
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I1215 12:05:55.511347 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7160" for this suite. @ 12/15/24 12:05:55.516
• [27.031 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 12/15/24 12:05:55.525
  I1215 12:05:55.525183 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 12:05:55.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:05:55.552
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:05:55.555
  STEP: Creating pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262 @ 12/15/24 12:05:55.559
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 12:05:57.584
  I1215 12:05:57.588000 21 container_probe.go:1749] Initial restart count of pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb is 0
  I1215 12:05:57.591465 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:05:59.597117 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:01.603550 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:03.609274 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:05.613841 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:07.618917 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:09.625522 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:11.632013 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:13.638580 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:15.644551 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:17.649450 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:17.649515 21 container_probe.go:1763] Restart count of pod container-probe-262/liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb is now 1 (20.061457884s elapsed)
  I1215 12:06:19.655481 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:21.662223 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:23.668573 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:25.673595 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:27.679400 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:29.686217 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:31.691270 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:33.697528 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:35.703248 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:37.708585 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:37.708644 21 container_probe.go:1763] Restart count of pod container-probe-262/liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb is now 2 (40.120595026s elapsed)
  I1215 12:06:39.713687 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:41.720446 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:43.726100 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:45.732814 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:47.738914 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:49.744729 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:51.750871 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:53.758221 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:55.763993 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:57.770551 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:06:57.770622 21 container_probe.go:1763] Restart count of pod container-probe-262/liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb is now 3 (1m0.18256973s elapsed)
  I1215 12:06:59.776160 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:01.782278 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:03.788940 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:05.794356 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:07.799199 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:09.806063 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:11.811899 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:13.817542 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:15.822968 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:17.829404 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:17.829578 21 container_probe.go:1763] Restart count of pod container-probe-262/liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb is now 4 (1m20.241527354s elapsed)
  I1215 12:07:19.836148 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:21.841311 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:23.846825 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:25.852409 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:27.857487 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:29.865401 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:31.871646 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:33.876861 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:35.883642 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:37.890586 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:39.895287 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:41.901067 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:43.906796 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:45.912071 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:47.918359 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:49.924954 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:51.931731 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:53.938839 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:55.944198 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:57.950205 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:07:59.955194 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:01.962287 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:03.967049 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:05.973747 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:07.981179 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:09.986879 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:11.994408 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:13.999494 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:16.005157 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:18.012089 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:20.019142 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:22.024365 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:24.030122 21 container_probe.go:1759] Get pod liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb in namespace container-probe-262
  I1215 12:08:24.030207 21 container_probe.go:1763] Restart count of pod container-probe-262/liveness-b48f67a7-cd7a-4535-8b20-0d8fe3b48fdb is now 5 (2m26.442127517s elapsed)
  STEP: deleting the pod @ 12/15/24 12:08:24.03
  I1215 12:08:24.054254 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-262" for this suite. @ 12/15/24 12:08:24.06
• [148.548 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 12/15/24 12:08:24.073
  I1215 12:08:24.073722 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/24 12:08:24.075
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:08:24.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:08:24.103
  STEP: Deleting RuntimeClass runtimeclass-8647-delete-me @ 12/15/24 12:08:24.112
  STEP: Waiting for the RuntimeClass to disappear @ 12/15/24 12:08:24.119
  I1215 12:08:24.130464 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8647" for this suite. @ 12/15/24 12:08:24.134
• [0.069 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 12/15/24 12:08:24.143
  I1215 12:08:24.143414 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/24 12:08:24.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:08:24.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:08:24.172
  STEP: Performing setup for networking test in namespace pod-network-test-5004 @ 12/15/24 12:08:24.175
  STEP: creating a selector @ 12/15/24 12:08:24.175
  STEP: Creating the service pods in kubernetes @ 12/15/24 12:08:24.175
  I1215 12:08:24.175960 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/15/24 12:08:46.325
  I1215 12:08:48.344821 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1215 12:08:48.345101 21 networking.go:42] Breadth first check of 10.0.0.63 on host 172.10.60.89...
  I1215 12:08:48.348116 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.250:9080/dial?request=hostname&protocol=udp&host=10.0.0.63&port=8081&tries=1'] Namespace:pod-network-test-5004 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:08:48.348203 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:08:48.349235 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:08:48.349413 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5004/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.250%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.0.63%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1215 12:08:48.428131 21 utils.go:331] Waiting for responses: map[]
  I1215 12:08:48.428279 21 utils.go:335] reached 10.0.0.63 after 0/1 tries
  I1215 12:08:48.428295 21 networking.go:42] Breadth first check of 10.0.1.85 on host 172.10.60.210...
  I1215 12:08:48.436011 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.250:9080/dial?request=hostname&protocol=udp&host=10.0.1.85&port=8081&tries=1'] Namespace:pod-network-test-5004 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:08:48.436051 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:08:48.437089 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:08:48.437354 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5004/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.250%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.1.85%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1215 12:08:48.503682 21 utils.go:331] Waiting for responses: map[]
  I1215 12:08:48.503829 21 utils.go:335] reached 10.0.1.85 after 0/1 tries
  I1215 12:08:48.503846 21 networking.go:42] Breadth first check of 10.0.2.163 on host 172.10.60.35...
  I1215 12:08:48.508119 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.250:9080/dial?request=hostname&protocol=udp&host=10.0.2.163&port=8081&tries=1'] Namespace:pod-network-test-5004 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:08:48.508174 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:08:48.509469 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:08:48.509576 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-5004/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.250%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.0.2.163%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1215 12:08:48.575502 21 utils.go:331] Waiting for responses: map[]
  I1215 12:08:48.575551 21 utils.go:335] reached 10.0.2.163 after 0/1 tries
  I1215 12:08:48.575736 21 networking.go:53] Going to retry 0 out of 3 pods....
  I1215 12:08:48.576028 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5004" for this suite. @ 12/15/24 12:08:48.582
• [24.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 12/15/24 12:08:48.594
  I1215 12:08:48.594823 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 12:08:48.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:08:48.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:08:48.624
  STEP: creating a Deployment @ 12/15/24 12:08:48.636
  STEP: waiting for Deployment to be created @ 12/15/24 12:08:48.648
  STEP: waiting for all Replicas to be Ready @ 12/15/24 12:08:48.649
  I1215 12:08:48.651543 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:48.651678 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:48.670438 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:48.670487 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:48.695096 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:48.695142 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:48.739227 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:48.739280 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I1215 12:08:49.624526 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1215 12:08:49.624578 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I1215 12:08:49.936370 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 12/15/24 12:08:49.936
  I1215 12:08:49.952533 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 12/15/24 12:08:49.952
  I1215 12:08:49.956821 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957004 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957131 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957265 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957347 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957444 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957519 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957617 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 0
  I1215 12:08:49.957809 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:49.957841 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:49.957884 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:49.957892 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:49.957902 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:49.957909 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:49.975851 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:49.975897 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:50.021395 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:50.021448 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:50.047368 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:50.047437 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:50.058610 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:50.058655 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:50.970722 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:50.970792 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:51.016355 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  STEP: listing Deployments @ 12/15/24 12:08:51.016
  I1215 12:08:51.022149 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 12/15/24 12:08:51.022
  I1215 12:08:51.046500 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 12/15/24 12:08:51.046
  I1215 12:08:51.057291 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:51.064702 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:51.112070 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:51.155919 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:52.633555 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:52.961687 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:53.034007 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:53.058398 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I1215 12:08:54.677214 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 12/15/24 12:08:54.72
  STEP: fetching the DeploymentStatus @ 12/15/24 12:08:54.733
  I1215 12:08:54.744420 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:54.744478 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:54.744497 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:54.744861 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 1
  I1215 12:08:54.744891 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:54.744906 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 3
  I1215 12:08:54.745179 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:54.745205 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 2
  I1215 12:08:54.745221 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-8975 with ReadyReplicas 3
  STEP: deleting the Deployment @ 12/15/24 12:08:54.745
  I1215 12:08:54.754978 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.755119 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.755163 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.755323 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.755656 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.755680 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.756104 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.756624 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.756768 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.756960 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.757950 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.757986 21 deployment.go:475] observed event type MODIFIED
  I1215 12:08:54.769475 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I1215 12:08:54.772964 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-8975" for this suite. @ 12/15/24 12:08:54.784
• [6.197 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 12/15/24 12:08:54.792
  I1215 12:08:54.792651 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename limitrange @ 12/15/24 12:08:54.794
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:08:54.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:08:54.822
  STEP: Creating a LimitRange @ 12/15/24 12:08:54.824
  STEP: Setting up watch @ 12/15/24 12:08:54.824
  STEP: Submitting a LimitRange @ 12/15/24 12:08:54.928
  STEP: Verifying LimitRange creation was observed @ 12/15/24 12:08:54.938
  STEP: Fetching the LimitRange to ensure it has proper values @ 12/15/24 12:08:54.938
  I1215 12:08:54.941828 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1215 12:08:54.941945 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 12/15/24 12:08:54.941
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 12/15/24 12:08:54.952
  I1215 12:08:54.958709 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I1215 12:08:54.958755 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 12/15/24 12:08:54.958
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 12/15/24 12:08:54.972
  I1215 12:08:54.992300 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I1215 12:08:54.992355 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 12/15/24 12:08:54.992
  STEP: Failing to create a Pod with more than max resources @ 12/15/24 12:08:54.994
  STEP: Updating a LimitRange @ 12/15/24 12:08:54.996
  STEP: Verifying LimitRange updating is effective @ 12/15/24 12:08:55.004
  STEP: Creating a Pod with less than former min resources @ 12/15/24 12:08:57.008
  STEP: Failing to create a Pod with more than max resources @ 12/15/24 12:08:57.02
  STEP: Deleting a LimitRange @ 12/15/24 12:08:57.023
  STEP: Verifying the LimitRange was deleted @ 12/15/24 12:08:57.041
  I1215 12:09:02.046891 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 12/15/24 12:09:02.046
  I1215 12:09:02.057817 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-2047" for this suite. @ 12/15/24 12:09:02.063
• [7.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 12/15/24 12:09:02.08
  I1215 12:09:02.080069 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 12:09:02.081
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:09:02.107
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:09:02.11
  STEP: Creating secret with name secret-test-f5872ec9-886d-4576-baaa-cc8d32ce2321 @ 12/15/24 12:09:02.112
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:09:02.119
  STEP: Saw pod success @ 12/15/24 12:09:06.152
  I1215 12:09:06.156925 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-73dddf44-df1e-48cc-86ba-85f2b6035bc1 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:09:06.17
  I1215 12:09:06.193875 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2286" for this suite. @ 12/15/24 12:09:06.198
• [4.127 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 12/15/24 12:09:06.206
  I1215 12:09:06.207010 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename endpointslice @ 12/15/24 12:09:06.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:09:06.233
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:09:06.236
  STEP: getting /apis @ 12/15/24 12:09:06.239
  STEP: getting /apis/discovery.k8s.io @ 12/15/24 12:09:06.246
  STEP: getting /apis/discovery.k8s.iov1 @ 12/15/24 12:09:06.247
  STEP: creating @ 12/15/24 12:09:06.248
  STEP: getting @ 12/15/24 12:09:06.269
  STEP: listing @ 12/15/24 12:09:06.28
  STEP: watching @ 12/15/24 12:09:06.283
  I1215 12:09:06.283831 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 12/15/24 12:09:06.285
  STEP: cluster-wide watching @ 12/15/24 12:09:06.289
  I1215 12:09:06.289963 21 endpointslice.go:459] starting watch
  STEP: patching @ 12/15/24 12:09:06.291
  STEP: updating @ 12/15/24 12:09:06.298
  I1215 12:09:06.307986 21 endpointslice.go:482] waiting for watch events with expected annotations
  I1215 12:09:06.308035 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 12/15/24 12:09:06.308
  STEP: deleting a collection @ 12/15/24 12:09:06.321
  I1215 12:09:06.339714 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1117" for this suite. @ 12/15/24 12:09:06.344
• [0.148 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 12/15/24 12:09:06.354
  I1215 12:09:06.354832 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename namespaces @ 12/15/24 12:09:06.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:09:06.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:09:06.386
  STEP: Creating namespace "e2e-ns-gfh5x" @ 12/15/24 12:09:06.389
  I1215 12:09:06.411834 21 namespace.go:411] Namespace "e2e-ns-gfh5x-2180" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-gfh5x-2180" @ 12/15/24 12:09:06.411
  I1215 12:09:06.422674 21 namespace.go:434] Namespace "e2e-ns-gfh5x-2180" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-gfh5x-2180" @ 12/15/24 12:09:06.422
  I1215 12:09:06.433261 21 namespace.go:463] Namespace "e2e-ns-gfh5x-2180" has []v1.FinalizerName{"kubernetes"}
  I1215 12:09:06.433613 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-47" for this suite. @ 12/15/24 12:09:06.438
  STEP: Destroying namespace "e2e-ns-gfh5x-2180" for this suite. @ 12/15/24 12:09:06.449
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 12/15/24 12:09:06.459
  I1215 12:09:06.459356 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 12:09:06.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:09:06.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:09:06.484
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/24 12:09:06.487
  I1215 12:09:06.487362 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1083 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I1215 12:09:06.602167 21 builder.go:146] stderr: ""
  I1215 12:09:06.602223 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 12/15/24 12:09:06.602
  I1215 12:09:06.602341 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1083 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I1215 12:09:06.691178 21 builder.go:146] stderr: ""
  I1215 12:09:06.691257 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/24 12:09:06.691
  I1215 12:09:06.697122 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1083 delete pods e2e-test-httpd-pod'
  I1215 12:09:08.024718 21 builder.go:146] stderr: ""
  I1215 12:09:08.024778 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1215 12:09:08.024930 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1083" for this suite. @ 12/15/24 12:09:08.03
• [1.585 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 12/15/24 12:09:08.044
  I1215 12:09:08.044461 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 12:09:08.045
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:09:08.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:09:08.073
  STEP: creating a replication controller @ 12/15/24 12:09:08.076
  I1215 12:09:08.076772 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 create -f -'
  I1215 12:09:08.221646 21 builder.go:146] stderr: ""
  I1215 12:09:08.221926 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 12/15/24 12:09:08.222
  I1215 12:09:08.222115 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1215 12:09:08.310635 21 builder.go:146] stderr: ""
  I1215 12:09:08.310694 21 builder.go:147] stdout: "update-demo-nautilus-lllnc update-demo-nautilus-zct9f "
  I1215 12:09:08.310789 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods update-demo-nautilus-lllnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 12:09:08.385348 21 builder.go:146] stderr: ""
  I1215 12:09:08.385449 21 builder.go:147] stdout: ""
  I1215 12:09:08.385464 21 kubectl.go:2501] update-demo-nautilus-lllnc is created but not running
  I1215 12:09:13.386797 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I1215 12:09:13.470836 21 builder.go:146] stderr: ""
  I1215 12:09:13.470947 21 builder.go:147] stdout: "update-demo-nautilus-lllnc update-demo-nautilus-zct9f "
  I1215 12:09:13.471035 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods update-demo-nautilus-lllnc -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 12:09:13.545618 21 builder.go:146] stderr: ""
  I1215 12:09:13.545687 21 builder.go:147] stdout: "true"
  I1215 12:09:13.545767 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods update-demo-nautilus-lllnc -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1215 12:09:13.622676 21 builder.go:146] stderr: ""
  I1215 12:09:13.622756 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1215 12:09:13.622777 21 kubectl.go:2392] validating pod update-demo-nautilus-lllnc
  I1215 12:09:13.629517 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1215 12:09:13.629612 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1215 12:09:13.629627 21 kubectl.go:2519] update-demo-nautilus-lllnc is verified up and running
  I1215 12:09:13.629734 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods update-demo-nautilus-zct9f -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I1215 12:09:13.705724 21 builder.go:146] stderr: ""
  I1215 12:09:13.705786 21 builder.go:147] stdout: "true"
  I1215 12:09:13.705836 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods update-demo-nautilus-zct9f -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I1215 12:09:13.776052 21 builder.go:146] stderr: ""
  I1215 12:09:13.776111 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I1215 12:09:13.776127 21 kubectl.go:2392] validating pod update-demo-nautilus-zct9f
  I1215 12:09:13.782879 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I1215 12:09:13.782954 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I1215 12:09:13.782974 21 kubectl.go:2519] update-demo-nautilus-zct9f is verified up and running
  STEP: using delete to clean up resources @ 12/15/24 12:09:13.783
  I1215 12:09:13.783273 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 delete --grace-period=0 --force -f -'
  I1215 12:09:13.864057 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 12:09:13.864126 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I1215 12:09:13.864198 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get rc,svc -l name=update-demo --no-headers'
  I1215 12:09:13.955767 21 builder.go:146] stderr: "No resources found in kubectl-8192 namespace.\n"
  I1215 12:09:13.955832 21 builder.go:147] stdout: ""
  I1215 12:09:13.955910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8192 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1215 12:09:14.043957 21 builder.go:146] stderr: ""
  I1215 12:09:14.044019 21 builder.go:147] stdout: ""
  I1215 12:09:14.044161 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8192" for this suite. @ 12/15/24 12:09:14.048
• [6.013 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 12/15/24 12:09:14.057
  I1215 12:09:14.057980 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename taint-single-pod @ 12/15/24 12:09:14.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:09:14.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:09:14.086
  I1215 12:09:14.089211 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1215 12:10:14.090242 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I1215 12:10:14.095720 21 taints.go:150] Starting informer...
  STEP: Starting pod... @ 12/15/24 12:10:14.095
  I1215 12:10:14.318899 21 taints.go:300] Pod is running on cncf-master-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/15/24 12:10:14.318
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/24 12:10:14.336
  STEP: Waiting short time to make sure Pod is queued for deletion @ 12/15/24 12:10:14.34
  I1215 12:10:14.340602 21 taints.go:319] Pod wasn't evicted. Proceeding
  I1215 12:10:14.340620 21 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/24 12:10:14.365
  STEP: Waiting some time to make sure that toleration time passed. @ 12/15/24 12:10:14.369
  I1215 12:11:29.372815 21 taints.go:335] Pod wasn't evicted. Test successful
  I1215 12:11:29.373852 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-2170" for this suite. @ 12/15/24 12:11:29.38
• [135.332 seconds]
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 12/15/24 12:11:29.39
  I1215 12:11:29.390470 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 12/15/24 12:11:29.391
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:11:29.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:11:29.425
  STEP: Setting up the test @ 12/15/24 12:11:29.427
  STEP: Creating hostNetwork=false pod @ 12/15/24 12:11:29.427
  STEP: Creating hostNetwork=true pod @ 12/15/24 12:11:33.458
  STEP: Running the test @ 12/15/24 12:11:35.484
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 12/15/24 12:11:35.484
  I1215 12:11:35.484461 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.484497 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.485493 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.485627 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1215 12:11:35.564252 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:35.564387 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.564399 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.565315 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.565411 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1215 12:11:35.606723 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:35.607129 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.607194 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.607937 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.608150 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1215 12:11:35.674605 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:35.674683 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.674694 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.675881 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.675951 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1215 12:11:35.757186 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 12/15/24 12:11:35.757
  I1215 12:11:35.757341 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.757355 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.758183 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.758275 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1215 12:11:35.803213 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:35.803553 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.803698 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.804396 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.804630 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I1215 12:11:35.872843 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 12/15/24 12:11:35.873
  I1215 12:11:35.873431 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.873518 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.874192 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.874379 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1215 12:11:35.920813 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:35.921171 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.921266 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.922004 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.922167 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I1215 12:11:35.989360 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:35.989477 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:35.989502 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:35.990889 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:35.991092 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1215 12:11:36.033059 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:36.033149 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-5070 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:11:36.033165 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:11:36.033892 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:11:36.034065 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-5070/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I1215 12:11:36.101935 21 exec_util.go:106] Exec stderr: ""
  I1215 12:11:36.102321 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-5070" for this suite. @ 12/15/24 12:11:36.107
• [6.725 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 12/15/24 12:11:36.116
  I1215 12:11:36.116216 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename events @ 12/15/24 12:11:36.117
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:11:36.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:11:36.148
  STEP: Create set of events @ 12/15/24 12:11:36.151
  I1215 12:11:36.165092 21 core_events.go:198] created test-event-1
  I1215 12:11:36.173168 21 core_events.go:198] created test-event-2
  I1215 12:11:36.182774 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 12/15/24 12:11:36.183
  STEP: delete collection of events @ 12/15/24 12:11:36.186
  I1215 12:11:36.186826 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 12/15/24 12:11:36.22
  I1215 12:11:36.221169 21 core_events.go:230] requesting list of events to confirm quantity
  I1215 12:11:36.225012 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4141" for this suite. @ 12/15/24 12:11:36.23
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 12/15/24 12:11:36.243
  I1215 12:11:36.243621 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename disruption @ 12/15/24 12:11:36.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:11:36.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:11:36.278
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:11:36.291
  STEP: Waiting for all pods to be running @ 12/15/24 12:11:38.347
  I1215 12:11:38.355879 21 disruption.go:578] running pods: 0 < 3
  I1215 12:11:40.357651 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8146" for this suite. @ 12/15/24 12:11:40.362
• [4.131 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 12/15/24 12:11:40.374
  I1215 12:11:40.374445 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replication-controller @ 12/15/24 12:11:40.375
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:11:40.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:11:40.403
  STEP: Creating replication controller my-hostname-basic-bf16c9fe-8c35-49ac-b0d3-20885ddf5b4f @ 12/15/24 12:11:40.406
  I1215 12:11:40.421126 21 resource.go:87] Pod name my-hostname-basic-bf16c9fe-8c35-49ac-b0d3-20885ddf5b4f: Found 0 pods out of 1
  I1215 12:11:45.430807 21 resource.go:87] Pod name my-hostname-basic-bf16c9fe-8c35-49ac-b0d3-20885ddf5b4f: Found 1 pods out of 1
  I1215 12:11:45.430883 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-bf16c9fe-8c35-49ac-b0d3-20885ddf5b4f" are running
  I1215 12:11:45.434941 21 rc.go:523] Pod "my-hostname-basic-bf16c9fe-8c35-49ac-b0d3-20885ddf5b4f-2ts6m" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:11:41 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:11:40 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:11:41 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:11:41 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:11:40 +0000 UTC Reason: Message:}])
  I1215 12:11:45.435312 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/15/24 12:11:45.435
  I1215 12:11:45.447960 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-8981" for this suite. @ 12/15/24 12:11:45.452
• [5.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 12/15/24 12:11:45.47
  I1215 12:11:45.470540 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:11:45.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:11:45.513
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:11:45.518
  STEP: Creating configMap configmap-1987/configmap-test-a106a25b-64bc-4950-8819-c897748e95e5 @ 12/15/24 12:11:45.521
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:11:45.54
  STEP: Saw pod success @ 12/15/24 12:11:49.564
  I1215 12:11:49.567154 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-03b39b23-1954-419e-a54c-201144fd8074 container env-test: <nil>
  STEP: delete the pod @ 12/15/24 12:11:49.583
  I1215 12:11:49.605860 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1987" for this suite. @ 12/15/24 12:11:49.609
• [4.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 12/15/24 12:11:49.619
  I1215 12:11:49.619386 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 12:11:49.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:11:49.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:11:49.646
  STEP: Creating a test headless service @ 12/15/24 12:11:49.652
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7612.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7612.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-7612.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-7612.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 220.5.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.5.220_udp@PTR;check="$$(dig +tcp +noall +answer +search 220.5.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.5.220_tcp@PTR;sleep 1; done
   @ 12/15/24 12:11:49.687
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-7612.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-7612.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-7612.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-7612.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-7612.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 220.5.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.5.220_udp@PTR;check="$$(dig +tcp +noall +answer +search 220.5.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.5.220_tcp@PTR;sleep 1; done
   @ 12/15/24 12:11:49.687
  STEP: creating a pod to probe DNS @ 12/15/24 12:11:49.687
  STEP: submitting the pod to kubernetes @ 12/15/24 12:11:49.687
  STEP: retrieving the pod @ 12/15/24 12:11:53.722
  STEP: looking for the results for each expected name from probers @ 12/15/24 12:11:53.725
  I1215 12:11:53.729875 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-7612.svc.cluster.local from pod dns-7612/dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2: the server could not find the requested resource (get pods dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2)
  I1215 12:11:53.733349 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-7612.svc.cluster.local from pod dns-7612/dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2: the server could not find the requested resource (get pods dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2)
  I1215 12:11:53.761260 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local from pod dns-7612/dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2: the server could not find the requested resource (get pods dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2)
  I1215 12:11:53.764347 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local from pod dns-7612/dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2: the server could not find the requested resource (get pods dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2)
  I1215 12:11:53.776064 21 dns_common.go:489] Lookups using dns-7612/dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2 failed for: [wheezy_udp@dns-test-service.dns-7612.svc.cluster.local wheezy_tcp@dns-test-service.dns-7612.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-7612.svc.cluster.local]

  I1215 12:11:53.781322 21 dns_common.go:495] Pod client logs for webserver: 
  I1215 12:11:53.786873 21 dns_common.go:495] Pod client logs for querier: 
  I1215 12:11:53.791661 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I1215 12:11:58.786266 21 dns_common.go:527] DNS probes using dns-7612/dns-test-a920bf2c-f51c-4036-99ad-8a7ef35f9bb2 succeeded

  STEP: deleting the pod @ 12/15/24 12:11:58.786
  STEP: deleting the test service @ 12/15/24 12:11:58.811
  STEP: deleting the test headless service @ 12/15/24 12:11:58.867
  I1215 12:11:58.882800 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7612" for this suite. @ 12/15/24 12:11:58.887
• [9.278 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 12/15/24 12:11:58.897
  I1215 12:11:58.897862 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 12:11:58.898
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:11:58.924
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:11:58.927
  I1215 12:11:58.930336 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-5141 create -f -'
  I1215 12:11:59.112611 21 builder.go:146] stderr: ""
  I1215 12:11:59.112687 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I1215 12:11:59.112768 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-5141 create -f -'
  I1215 12:11:59.265124 21 builder.go:146] stderr: ""
  I1215 12:11:59.265184 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/15/24 12:11:59.265
  I1215 12:12:00.276771 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 12:12:00.276827 21 framework.go:733] Found 0 / 1
  I1215 12:12:01.269777 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 12:12:01.269826 21 framework.go:733] Found 1 / 1
  I1215 12:12:01.269844 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1215 12:12:01.272647 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 12:12:01.272699 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1215 12:12:01.272817 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-5141 describe pod agnhost-primary-l7msq'
  I1215 12:12:01.355373 21 builder.go:146] stderr: ""
  I1215 12:12:01.355741 21 builder.go:147] stdout: "Name:             agnhost-primary-l7msq\nNamespace:        kubectl-5141\nPriority:         0\nService Account:  default\nNode:             cncf-master-1/172.10.60.89\nStart Time:       Sun, 15 Dec 2024 12:11:59 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      <none>\nStatus:           Running\nIP:               10.0.0.108\nIPs:\n  IP:           10.0.0.108\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   containerd://53aa17fda0b8bc9021c8c0001edd67f8036272bb2e123881f17ed3f9a5ef6f0a\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Sun, 15 Dec 2024 12:12:00 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-m8lmf (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-m8lmf:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-5141/agnhost-primary-l7msq to cncf-master-1\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    1s    kubelet            Started container agnhost-primary\n"
  I1215 12:12:01.355962 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-5141 describe rc agnhost-primary'
  I1215 12:12:01.444229 21 builder.go:146] stderr: ""
  I1215 12:12:01.444301 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-5141\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-l7msq\n"
  I1215 12:12:01.444743 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-5141 describe service agnhost-primary'
  I1215 12:12:01.523236 21 builder.go:146] stderr: ""
  I1215 12:12:01.523379 21 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-5141\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.233.27.197\nIPs:               10.233.27.197\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.0.0.108:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I1215 12:12:01.528910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-5141 describe node cncf-master-1'
  I1215 12:12:01.708330 21 builder.go:146] stderr: ""
  I1215 12:12:01.708556 21 builder.go:147] stdout: "Name:               cncf-master-1\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=cncf-master-1\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/containerd/containerd.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Tue, 03 Dec 2024 02:28:38 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  cncf-master-1\n  AcquireTime:     <unset>\n  RenewTime:       Sun, 15 Dec 2024 12:11:52 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Tue, 03 Dec 2024 02:30:39 +0000   Tue, 03 Dec 2024 02:30:39 +0000   CiliumIsUp                   Cilium is running on this node\n  MemoryPressure       False   Sun, 15 Dec 2024 12:11:53 +0000   Tue, 03 Dec 2024 02:28:38 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Sun, 15 Dec 2024 12:11:53 +0000   Tue, 03 Dec 2024 02:28:38 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Sun, 15 Dec 2024 12:11:53 +0000   Tue, 03 Dec 2024 02:28:38 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Sun, 15 Dec 2024 12:11:53 +0000   Sun, 15 Dec 2024 10:57:22 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.10.60.89\n  Hostname:    cncf-master-1\nCapacity:\n  cpu:                8\n  ephemeral-storage:  101430960Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16371260Ki\n  pods:               110\nAllocatable:\n  cpu:                7800m\n  ephemeral-storage:  93478772582\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             15744572Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 ce7a54f4aef24ba5819c75e5ca1e41c0\n  System UUID:                ce7a54f4-aef2-4ba5-819c-75e5ca1e41c0\n  Boot ID:                    fa80664b-8c49-4bab-b718-4dc929aeedef\n  Kernel Version:             5.15.0-79-generic\n  OS Image:                   Ubuntu 22.04.3 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  containerd://1.7.23\n  Kubelet Version:            v1.30.4\n  Kube-Proxy Version:         v1.30.4\nPodCIDR:                      10.233.64.0/24\nPodCIDRs:                     10.233.64.0/24\nNon-terminated Pods:          (17 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  auth                        oauth2-redis-admin-2                                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         105s\n  auth                        oauth2-redis-admin-4                                       0 (0%)        0 (0%)      0 (0%)           0 (0%)         103s\n  cmp                         cloud-service-api-57f54bfb54-mndwq                         100m (1%)     2 (25%)     128Mi (0%)       1Gi (6%)       107s\n  cmp                         maestro-host-app-5cd79d5b8c-mjm47                          100m (1%)     2 (25%)     128Mi (0%)       1Gi (6%)       106s\n  cmp                         maestro-iam-adapter-api-77f4d875b5-ns4k4                   100m (1%)     2 (25%)     128Mi (0%)       1Gi (6%)       106s\n  dataplatform                mariadb-sts-0                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         104s\n  dataplatform                redis-0                                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         105s\n  dataplatform                vault-2                                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         99s\n  kube-system                 cilium-n8zrz                                               100m (1%)     0 (0%)      10Mi (0%)        0 (0%)         81m\n  kube-system                 cilium-operator-64664858c8-nxfhd                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         81m\n  kube-system                 kube-apiserver-cncf-master-1                               250m (3%)     0 (0%)      0 (0%)           0 (0%)         38m\n  kube-system                 kube-controller-manager-cncf-master-1                      200m (2%)     0 (0%)      0 (0%)           0 (0%)         39m\n  kube-system                 kube-proxy-nwc8x                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         76m\n  kube-system                 kube-scheduler-cncf-master-1                               100m (1%)     0 (0%)      0 (0%)           0 (0%)         39m\n  kubectl-5141                agnhost-primary-l7msq                                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         2s\n  sonobuoy                    sonobuoy                                                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         24m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-jlphr    0 (0%)        0 (0%)      0 (0%)           0 (0%)         23m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                950m (12%)  6 (76%)\n  memory             394Mi (2%)  3Gi (19%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I1215 12:12:01.708683 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-5141 describe namespace kubectl-5141'
  I1215 12:12:01.786769 21 builder.go:146] stderr: ""
  I1215 12:12:01.786842 21 builder.go:147] stdout: "Name:         kubectl-5141\nLabels:       e2e-framework=kubectl\n              e2e-run=53d40f17-facd-4292-894b-d8e2f2cae16c\n              kubernetes.io/metadata.name=kubectl-5141\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I1215 12:12:01.786972 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5141" for this suite. @ 12/15/24 12:12:01.792
• [2.904 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 12/15/24 12:12:01.804
  I1215 12:12:01.804535 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/15/24 12:12:01.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:01.823
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:01.825
  I1215 12:12:01.829688 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:12:09.917158 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-6692" for this suite. @ 12/15/24 12:12:09.921
• [8.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 12/15/24 12:12:09.931
  I1215 12:12:09.931176 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 12:12:09.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:09.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:09.966
  I1215 12:12:11.991982 21 delete.go:62] Deleting pod "var-expansion-f91525cf-a529-42dc-addd-4e935f30efa2" in namespace "var-expansion-385"
  I1215 12:12:12.006324 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-f91525cf-a529-42dc-addd-4e935f30efa2" to be fully deleted
  I1215 12:12:14.014342 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-385" for this suite. @ 12/15/24 12:12:14.019
• [4.097 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 12/15/24 12:12:14.028
  I1215 12:12:14.028933 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:12:14.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:14.051
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:14.054
  STEP: Creating the pod @ 12/15/24 12:12:14.057
  I1215 12:12:16.612757 21 pod_client.go:141] Successfully updated pod "annotationupdate89a2ec98-f115-4194-9540-dc115f49ed4c"
  I1215 12:12:20.636773 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7301" for this suite. @ 12/15/24 12:12:20.641
• [6.623 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 12/15/24 12:12:20.653
  I1215 12:12:20.653673 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sysctl @ 12/15/24 12:12:20.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:20.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:20.695
  STEP: Creating a pod with one valid and two invalid sysctls @ 12/15/24 12:12:20.698
  I1215 12:12:20.703994 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-1160" for this suite. @ 12/15/24 12:12:20.708
• [0.063 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 12/15/24 12:12:20.716
  I1215 12:12:20.716406 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir-wrapper @ 12/15/24 12:12:20.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:20.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:20.748
  STEP: Creating 50 configmaps @ 12/15/24 12:12:20.754
  STEP: Creating RC which spawns configmap-volume pods @ 12/15/24 12:12:21.12
  I1215 12:12:21.139306 21 resource.go:87] Pod name wrapped-volume-race-af0adbc5-a378-4653-91f8-f488bb48c6b6: Found 0 pods out of 5
  I1215 12:12:26.149105 21 resource.go:87] Pod name wrapped-volume-race-af0adbc5-a378-4653-91f8-f488bb48c6b6: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/15/24 12:12:26.149
  STEP: Creating RC which spawns configmap-volume pods @ 12/15/24 12:12:26.201
  I1215 12:12:26.219817 21 resource.go:87] Pod name wrapped-volume-race-822a30ae-376d-4b6c-b809-8ae8975c46eb: Found 0 pods out of 5
  I1215 12:12:31.228728 21 resource.go:87] Pod name wrapped-volume-race-822a30ae-376d-4b6c-b809-8ae8975c46eb: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/15/24 12:12:31.228
  STEP: Creating RC which spawns configmap-volume pods @ 12/15/24 12:12:31.254
  I1215 12:12:31.273146 21 resource.go:87] Pod name wrapped-volume-race-f4202975-29b9-4e6a-8991-6440e9b39989: Found 0 pods out of 5
  I1215 12:12:36.284176 21 resource.go:87] Pod name wrapped-volume-race-f4202975-29b9-4e6a-8991-6440e9b39989: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 12/15/24 12:12:36.284
  STEP: deleting ReplicationController wrapped-volume-race-f4202975-29b9-4e6a-8991-6440e9b39989 in namespace emptydir-wrapper-4553, will wait for the garbage collector to delete the pods @ 12/15/24 12:12:36.302
  I1215 12:12:36.369013 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-f4202975-29b9-4e6a-8991-6440e9b39989 took: 11.816876ms
  I1215 12:12:36.470141 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-f4202975-29b9-4e6a-8991-6440e9b39989 pods took: 101.122453ms
  STEP: deleting ReplicationController wrapped-volume-race-822a30ae-376d-4b6c-b809-8ae8975c46eb in namespace emptydir-wrapper-4553, will wait for the garbage collector to delete the pods @ 12/15/24 12:12:38.171
  I1215 12:12:38.244502 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-822a30ae-376d-4b6c-b809-8ae8975c46eb took: 18.196218ms
  I1215 12:12:38.345245 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-822a30ae-376d-4b6c-b809-8ae8975c46eb pods took: 100.711192ms
  STEP: deleting ReplicationController wrapped-volume-race-af0adbc5-a378-4653-91f8-f488bb48c6b6 in namespace emptydir-wrapper-4553, will wait for the garbage collector to delete the pods @ 12/15/24 12:12:39.745
  I1215 12:12:39.819595 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-af0adbc5-a378-4653-91f8-f488bb48c6b6 took: 13.438622ms
  I1215 12:12:39.921134 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-af0adbc5-a378-4653-91f8-f488bb48c6b6 pods took: 101.537547ms
  STEP: Cleaning up the configMaps @ 12/15/24 12:12:41.122
  I1215 12:12:41.569161 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-4553" for this suite. @ 12/15/24 12:12:41.573
• [20.868 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 12/15/24 12:12:41.584
  I1215 12:12:41.584607 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:12:41.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:41.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:41.63
  STEP: Creating configMap with name configmap-test-upd-ade76d5d-7b19-46ad-805a-3669c7de9632 @ 12/15/24 12:12:41.638
  STEP: Creating the pod @ 12/15/24 12:12:41.648
  STEP: Waiting for pod with text data @ 12/15/24 12:12:43.67
  STEP: Waiting for pod with binary data @ 12/15/24 12:12:43.678
  I1215 12:12:43.684092 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6683" for this suite. @ 12/15/24 12:12:43.689
• [2.117 seconds]
------------------------------
SS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 12/15/24 12:12:43.701
  I1215 12:12:43.701364 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename endpointslice @ 12/15/24 12:12:43.702
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:43.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:43.736
  I1215 12:12:43.749660 21 endpointslice.go:1045] Endpoints addresses: [172.10.60.210 172.10.60.35 172.10.60.89] , ports: [6443]
  I1215 12:12:43.749858 21 endpointslice.go:1075] EndpointSlices addresses: [172.10.60.210 172.10.60.35 172.10.60.89] , ports: [6443]
  I1215 12:12:43.750054 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-844" for this suite. @ 12/15/24 12:12:43.753
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 12/15/24 12:12:43.766
  I1215 12:12:43.766180 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:12:43.767
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:43.788
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:43.79
  STEP: Creating a ResourceQuota @ 12/15/24 12:12:43.794
  STEP: Getting a ResourceQuota @ 12/15/24 12:12:43.801
  STEP: Updating a ResourceQuota @ 12/15/24 12:12:43.804
  STEP: Verifying a ResourceQuota was modified @ 12/15/24 12:12:43.82
  STEP: Deleting a ResourceQuota @ 12/15/24 12:12:43.822
  STEP: Verifying the deleted ResourceQuota @ 12/15/24 12:12:43.838
  I1215 12:12:43.841126 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2046" for this suite. @ 12/15/24 12:12:43.844
• [0.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 12/15/24 12:12:43.855
  I1215 12:12:43.855279 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pv @ 12/15/24 12:12:43.856
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:43.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:43.892
  STEP: Creating initial PV and PVC @ 12/15/24 12:12:43.895
  I1215 12:12:43.895338 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-6608" @ 12/15/24 12:12:43.91
  STEP: Listing PVCs in namespace "pv-6608" @ 12/15/24 12:12:43.914
  STEP: Patching the PV "pv-6608-lbdtt" @ 12/15/24 12:12:43.917
  STEP: Patching the PVC "pvc-sktsd" @ 12/15/24 12:12:43.94
  STEP: Getting PV "pv-6608-lbdtt" @ 12/15/24 12:12:43.95
  STEP: Getting PVC "pvc-sktsd" @ 12/15/24 12:12:43.953
  STEP: Deleting PVC "pvc-sktsd" @ 12/15/24 12:12:43.959
  STEP: Confirm deletion of PVC "pvc-sktsd" @ 12/15/24 12:12:43.972
  STEP: Deleting PV "pv-6608-lbdtt" @ 12/15/24 12:12:45.981
  STEP: Confirm deletion of PV "pv-6608-lbdtt" @ 12/15/24 12:12:45.989
  STEP: Recreating another PV & PVC @ 12/15/24 12:12:48
  I1215 12:12:48.000455 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-6608-h2p9z" @ 12/15/24 12:12:48.019
  STEP: Updating the PVC "pvc-vsr99" @ 12/15/24 12:12:48.039
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-vsr99=updated" @ 12/15/24 12:12:48.057
  STEP: Deleting PVC "pvc-vsr99" via DeleteCollection @ 12/15/24 12:12:48.062
  STEP: Confirm deletion of PVC "pvc-vsr99" @ 12/15/24 12:12:48.073
  STEP: Deleting PV "pv-6608-h2p9z" via DeleteCollection @ 12/15/24 12:12:50.082
  STEP: Confirm deletion of PV "pv-6608-h2p9z" @ 12/15/24 12:12:50.104
  I1215 12:12:52.116198 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I1215 12:12:52.116247 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-vsr99"
  I1215 12:12:52.119740 21 pv.go:189] Deleting PersistentVolume "pv-6608-h2p9z"
  I1215 12:12:52.122619 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-6608" for this suite. @ 12/15/24 12:12:52.126
• [8.281 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 12/15/24 12:12:52.136
  I1215 12:12:52.136596 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 12:12:52.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:52.189
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:52.192
  STEP: creating Agnhost RC @ 12/15/24 12:12:52.195
  I1215 12:12:52.195345 21 kubectl.go:1540] namespace kubectl-4997
  I1215 12:12:52.195429 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4997 create -f -'
  I1215 12:12:52.349738 21 builder.go:146] stderr: ""
  I1215 12:12:52.349808 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/15/24 12:12:52.349
  I1215 12:12:53.355752 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 12:12:53.355795 21 framework.go:733] Found 0 / 1
  I1215 12:12:54.355129 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 12:12:54.355196 21 framework.go:733] Found 1 / 1
  I1215 12:12:54.355232 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I1215 12:12:54.366539 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 12:12:54.366609 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1215 12:12:54.366639 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-4997 
  I1215 12:12:54.366869 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4997 logs agnhost-primary-wbdf5 agnhost-primary'
  I1215 12:12:54.444992 21 builder.go:146] stderr: ""
  I1215 12:12:54.445177 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 12/15/24 12:12:54.445
  I1215 12:12:54.445295 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4997 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I1215 12:12:54.539316 21 builder.go:146] stderr: ""
  I1215 12:12:54.539383 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I1215 12:12:54.555204 21 utils.go:1179] Service rm2 in namespace kubectl-4997 found.
  STEP: exposing service @ 12/15/24 12:12:56.564
  I1215 12:12:56.564669 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4997 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I1215 12:12:56.675067 21 builder.go:146] stderr: ""
  I1215 12:12:56.675133 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I1215 12:12:56.688827 21 utils.go:1179] Service rm3 in namespace kubectl-4997 found.
  I1215 12:12:58.697790 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4997" for this suite. @ 12/15/24 12:12:58.702
• [6.578 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 12/15/24 12:12:58.715
  I1215 12:12:58.715193 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:12:58.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:58.744
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:58.748
  STEP: creating an Endpoint @ 12/15/24 12:12:58.756
  STEP: waiting for available Endpoint @ 12/15/24 12:12:58.763
  STEP: listing all Endpoints @ 12/15/24 12:12:58.769
  STEP: updating the Endpoint @ 12/15/24 12:12:58.773
  STEP: fetching the Endpoint @ 12/15/24 12:12:58.785
  STEP: patching the Endpoint @ 12/15/24 12:12:58.788
  STEP: fetching the Endpoint @ 12/15/24 12:12:58.796
  STEP: deleting the Endpoint by Collection @ 12/15/24 12:12:58.799
  STEP: waiting for Endpoint deletion @ 12/15/24 12:12:58.807
  STEP: fetching the Endpoint @ 12/15/24 12:12:58.808
  I1215 12:12:58.814523 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-379" for this suite. @ 12/15/24 12:12:58.818
• [0.113 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 12/15/24 12:12:58.828
  I1215 12:12:58.828552 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename field-validation @ 12/15/24 12:12:58.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:12:58.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:12:58.862
  I1215 12:12:58.864866 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  W1215 12:13:06.419441      21 warnings.go:70] unknown field "alpha"
  W1215 12:13:06.419531      21 warnings.go:70] unknown field "beta"
  W1215 12:13:06.419536      21 warnings.go:70] unknown field "delta"
  W1215 12:13:06.419555      21 warnings.go:70] unknown field "epsilon"
  W1215 12:13:06.419560      21 warnings.go:70] unknown field "gamma"
  I1215 12:13:06.987847 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-659" for this suite. @ 12/15/24 12:13:06.991
• [8.171 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 12/15/24 12:13:06.999
  I1215 12:13:06.999586 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 12:13:07
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:13:07.026
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:13:07.029
  STEP: Creating pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158 @ 12/15/24 12:13:07.032
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 12:13:09.062
  I1215 12:13:09.066635 21 container_probe.go:1749] Initial restart count of pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 is 0
  I1215 12:13:09.070172 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:11.074856 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:13.079867 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:15.085804 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:17.091556 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:19.096439 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:21.102169 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:23.108155 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:25.113898 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:27.119054 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:29.123951 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:31.128464 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:33.132760 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:35.136898 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:37.141735 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:39.146422 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:41.151519 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:43.157643 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:45.163034 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:47.167895 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:49.173600 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:51.179458 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:53.185140 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:55.190296 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:57.196842 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:13:59.202941 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:01.208261 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:03.212985 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:05.218449 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:07.224089 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:09.229840 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:11.234252 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:13.242998 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:15.247765 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:17.254177 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:19.261893 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:21.267833 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:23.274878 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:25.281183 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:27.286787 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:29.292672 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:31.298105 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:33.302758 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:35.308034 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:37.313665 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:39.320665 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:41.327514 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:43.333660 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:45.339756 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:47.346702 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:49.353232 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:51.359076 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:53.363739 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:55.369185 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:57.375544 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:14:59.381571 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:01.385805 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:03.391222 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:05.396453 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:07.402236 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:09.408970 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:11.414243 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:13.419665 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:15.424545 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:17.430209 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:19.436546 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:21.442387 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:23.446801 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:25.452231 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:27.460026 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:29.465267 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:31.470466 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:33.479433 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:35.485077 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:37.491083 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:39.496854 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:41.501033 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:43.513007 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:45.517743 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:47.525558 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:49.531876 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:51.537636 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:53.543123 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:55.550151 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:57.555419 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:15:59.560348 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:01.565707 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:03.571565 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:05.576618 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:07.581401 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:09.587397 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:11.592487 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:13.597290 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:15.602047 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:17.608822 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:19.615567 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:21.621558 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:23.645878 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:25.659477 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:27.665959 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:29.672927 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:31.678953 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:33.684223 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:35.689466 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:37.721179 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:39.747276 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:41.757455 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:43.763246 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:45.768308 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:47.774670 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:49.780798 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:51.785983 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:53.791463 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:55.797140 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:57.804041 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:16:59.817197 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:17:01.822850 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:17:03.828867 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:17:05.851371 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  I1215 12:17:07.855715 21 container_probe.go:1759] Get pod test-grpc-c09fca06-e583-4e43-a3c0-112e5ae50dd7 in namespace container-probe-2158
  STEP: deleting the pod @ 12/15/24 12:17:09.857
  I1215 12:17:09.966246 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2158" for this suite. @ 12/15/24 12:17:09.972
• [243.034 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 12/15/24 12:17:10.034
  I1215 12:17:10.034230 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/15/24 12:17:10.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:17:10.092
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:17:10.095
  I1215 12:17:10.119603 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-5497" for this suite. @ 12/15/24 12:17:10.123
• [0.125 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 12/15/24 12:17:10.159
  I1215 12:17:10.159655 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename daemonsets @ 12/15/24 12:17:10.16
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:17:10.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:17:10.202
  STEP: Creating simple DaemonSet "daemon-set" @ 12/15/24 12:17:10.234
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/24 12:17:10.266
  I1215 12:17:10.278060 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 12:17:10.278176 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 12:17:11.283021 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 12:17:11.283101 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 12:17:12.277524 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 12:17:12.277633 21 fixtures.go:130] Node cncf-master-2 is running 0 daemon pod, expected 1
  I1215 12:17:13.276638 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 12:17:13.276697 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 12/15/24 12:17:13.279
  STEP: DeleteCollection of the DaemonSets @ 12/15/24 12:17:13.283
  STEP: Verify that ReplicaSets have been deleted @ 12/15/24 12:17:13.315
  I1215 12:17:13.378216 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5383463"},"items":null}

  I1215 12:17:13.384285 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5383466"},"items":[{"metadata":{"name":"daemon-set-9q88z","generateName":"daemon-set-","namespace":"daemonsets-2476","uid":"56276942-4402-44dc-a351-d6fc6f040da8","resourceVersion":"5383466","creationTimestamp":"2024-12-15T12:17:10Z","deletionTimestamp":"2024-12-15T12:17:43Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"dfb5374a-378f-4fe9-8064-cf976160111f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-15T12:17:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dfb5374a-378f-4fe9-8064-cf976160111f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-15T12:17:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.0.84\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-l54mh","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-l54mh","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-master-1","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-master-1"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:10Z"}],"hostIP":"172.10.60.89","hostIPs":[{"ip":"172.10.60.89"}],"podIP":"10.0.0.84","podIPs":[{"ip":"10.0.0.84"}],"startTime":"2024-12-15T12:17:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-15T12:17:11Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://8e42945b7f0dbaa0d17d632b4128bf79f31c8924fd93638df631b3e72a4de2a4","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-ptdrn","generateName":"daemon-set-","namespace":"daemonsets-2476","uid":"6d6cee01-561b-44c3-8dd7-1bc4404498b9","resourceVersion":"5383464","creationTimestamp":"2024-12-15T12:17:10Z","deletionTimestamp":"2024-12-15T12:17:43Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"dfb5374a-378f-4fe9-8064-cf976160111f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-15T12:17:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dfb5374a-378f-4fe9-8064-cf976160111f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-15T12:17:11Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.2.219\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-8847w","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-8847w","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-master-3","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-master-3"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:11Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:11Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:11Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:10Z"}],"hostIP":"172.10.60.35","hostIPs":[{"ip":"172.10.60.35"}],"podIP":"10.0.2.219","podIPs":[{"ip":"10.0.2.219"}],"startTime":"2024-12-15T12:17:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-15T12:17:11Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://d2018a2822a7d948cd5e8dd23b73e8521b022a45f91324fe7023a9695cdb8cb0","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-qm7xc","generateName":"daemon-set-","namespace":"daemonsets-2476","uid":"deef0ad6-9623-432c-a796-4cd847f208c6","resourceVersion":"5383465","creationTimestamp":"2024-12-15T12:17:10Z","deletionTimestamp":"2024-12-15T12:17:43Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"dfb5374a-378f-4fe9-8064-cf976160111f","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-12-15T12:17:10Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"dfb5374a-378f-4fe9-8064-cf976160111f\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-12-15T12:17:12Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.0.1.27\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-kkhgc","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-kkhgc","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"cncf-master-2","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["cncf-master-2"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:12Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:10Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:12Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:12Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-12-15T12:17:10Z"}],"hostIP":"172.10.60.210","hostIPs":[{"ip":"172.10.60.210"}],"podIP":"10.0.1.27","podIPs":[{"ip":"10.0.1.27"}],"startTime":"2024-12-15T12:17:10Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-12-15T12:17:11Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"containerd://33d60bddc135d5052084a52617530d753b893e5c3127003d97a08f9c1c354754","started":true}],"qosClass":"BestEffort"}}]}

  I1215 12:17:13.405072 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2476" for this suite. @ 12/15/24 12:17:13.48
• [3.341 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 12/15/24 12:17:13.501
  I1215 12:17:13.501454 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename containers @ 12/15/24 12:17:13.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:17:13.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:17:13.576
  STEP: Creating a pod to test override all @ 12/15/24 12:17:13.579
  STEP: Saw pod success @ 12/15/24 12:17:17.634
  I1215 12:17:17.637869 21 output.go:196] Trying to get logs from node cncf-master-1 pod client-containers-e33bcf60-47e1-4891-824e-ea5a71ac77fe container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:17:17.654
  I1215 12:17:17.725982 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6877" for this suite. @ 12/15/24 12:17:17.729
• [4.254 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 12/15/24 12:17:17.755
  I1215 12:17:17.755807 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename subpath @ 12/15/24 12:17:17.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:17:17.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:17:17.789
  STEP: Setting up data @ 12/15/24 12:17:17.812
  STEP: Creating pod pod-subpath-test-projected-6qz7 @ 12/15/24 12:17:17.855
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/24 12:17:17.855
  STEP: Saw pod success @ 12/15/24 12:17:41.96
  I1215 12:17:41.964052 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-subpath-test-projected-6qz7 container test-container-subpath-projected-6qz7: <nil>
  STEP: delete the pod @ 12/15/24 12:17:41.971
  STEP: Deleting pod pod-subpath-test-projected-6qz7 @ 12/15/24 12:17:42.041
  I1215 12:17:42.041259 21 delete.go:62] Deleting pod "pod-subpath-test-projected-6qz7" in namespace "subpath-9355"
  I1215 12:17:42.051332 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9355" for this suite. @ 12/15/24 12:17:42.056
• [24.312 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 12/15/24 12:17:42.067
  I1215 12:17:42.067868 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename security-context-test @ 12/15/24 12:17:42.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:17:42.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:17:42.128
  I1215 12:17:46.202078 21 security_context.go:538] Got logs for pod "busybox-privileged-false-c93a76bd-c2c9-47b5-95a2-fe0924caffa5": "ip: RTNETLINK answers: Operation not permitted\n"
  I1215 12:17:46.202236 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8447" for this suite. @ 12/15/24 12:17:46.206
• [4.158 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 12/15/24 12:17:46.225
  I1215 12:17:46.225904 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:17:46.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:17:46.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:17:46.288
  STEP: Creating resourceQuota "e2e-rq-status-xk4sg" @ 12/15/24 12:17:46.309
  I1215 12:17:46.329400 21 resource_quota.go:1051] Resource quota "e2e-rq-status-xk4sg" reports spec: hard cpu limit of 500m
  I1215 12:17:46.329456 21 resource_quota.go:1053] Resource quota "e2e-rq-status-xk4sg" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-xk4sg" /status @ 12/15/24 12:17:46.329
  STEP: Confirm /status for "e2e-rq-status-xk4sg" resourceQuota via watch @ 12/15/24 12:17:46.381
  I1215 12:17:46.384076 21 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-xk4sg" in namespace "resourcequota-2662" with hard status: v1.ResourceList(nil)
  I1215 12:17:46.384331 21 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-xk4sg" in namespace "resourcequota-2662" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1215 12:17:46.384364 21 resource_quota.go:1090] ResourceQuota "e2e-rq-status-xk4sg" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 12/15/24 12:17:46.387
  I1215 12:17:46.404029 21 resource_quota.go:1101] Resource quota "e2e-rq-status-xk4sg" reports spec: hard cpu limit of 1
  I1215 12:17:46.404067 21 resource_quota.go:1102] Resource quota "e2e-rq-status-xk4sg" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-xk4sg" /status @ 12/15/24 12:17:46.404
  STEP: Confirm /status for "e2e-rq-status-xk4sg" resourceQuota via watch @ 12/15/24 12:17:46.426
  I1215 12:17:46.428315 21 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-xk4sg" in namespace "resourcequota-2662" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I1215 12:17:46.428374 21 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-xk4sg" in namespace "resourcequota-2662" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I1215 12:17:46.428390 21 resource_quota.go:1134] ResourceQuota "e2e-rq-status-xk4sg" /status was patched
  STEP: Get "e2e-rq-status-xk4sg" /status @ 12/15/24 12:17:46.428
  I1215 12:17:46.458667 21 resource_quota.go:1145] Resourcequota "e2e-rq-status-xk4sg" reports status: hard cpu of 1
  I1215 12:17:46.458724 21 resource_quota.go:1147] Resourcequota "e2e-rq-status-xk4sg" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-xk4sg" /status before checking Spec is unchanged @ 12/15/24 12:17:46.461
  I1215 12:17:46.471791 21 resource_quota.go:1167] Resourcequota "e2e-rq-status-xk4sg" reports status: hard cpu of 2
  I1215 12:17:46.471844 21 resource_quota.go:1169] Resourcequota "e2e-rq-status-xk4sg" reports status: hard memory of 2Gi
  I1215 12:17:46.473162 21 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-xk4sg" in namespace "resourcequota-2662" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I1215 12:17:46.476238 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c0d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:17:51.477620 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c270), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c2a0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c2e8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:17:56.478189 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004431bf0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004431c20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004431c50), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:01.479924 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004431d40), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004431d70), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004431da0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:06.477726 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c480), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c4c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c4f8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:11.477561 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c630), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:16.478153 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d960f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:21.479023 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f40f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f41b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:26.476999 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96300), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96348), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d963a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:31.498698 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c7e0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c810), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c840), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:36.476689 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96600), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96660), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:41.478999 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4498), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4510), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:46.477539 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d960a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:51.476942 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96318), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d963c0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:18:56.478801 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f41b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:01.479435 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f43a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4438), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:06.477686 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f46a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4738), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4798), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:11.483064 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d966d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96708), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96780), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:16.478354 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f49f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4a68), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4a98), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:21.479240 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4c48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4c78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4cf0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:26.477962 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4f30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4f78), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5008), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:31.478640 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96a98), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96ac8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96b40), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:36.478122 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f52a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5308), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5368), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:41.479368 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5518), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5560), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f55f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:46.478134 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96de0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96e28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d96f00), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:51.479638 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d971b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97278), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97320), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:19:56.478455 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d975c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97620), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97680), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:01.478186 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97878), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d978a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97968), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:06.479281 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c1c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c1f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c228), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:11.479244 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c360), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c3a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:16.477368 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97bc0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97c08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97c68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:21.478353 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97e48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000d97ed8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506000), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:26.478760 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506150), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506198), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045061c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:31.483147 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5a88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5ad0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5b60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:36.478892 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045062e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506318), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:41.477780 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506438), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506498), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:46.476910 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4108), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4180), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f41b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:51.479583 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4348), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f43a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f43f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:20:56.479526 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4690), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f46d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4750), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:01.478676 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f49d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4a08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4a80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:06.478652 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045060d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:11.479567 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4c78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4cf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4d38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:16.477977 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506240), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506270), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0045062a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:21.480004 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c0f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:26.479013 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c288), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c2d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c300), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:31.478668 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c450), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c480), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c4c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:36.478675 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506420), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506450), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004506480), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:41.478661 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c618), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c648), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c678), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:46.478249 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c7b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c7e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c810), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:51.479286 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c900), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c930), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00498c960), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:21:56.478441 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-xk4sg" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-xk4sg", GenerateName:"", Namespace:"resourcequota-2662", SelfLink:"", UID:"5e6f786b-4864-4325-8255-e06f214c485a", ResourceVersion:"5383740", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-xk4sg"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f4f78), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5008), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 17, 46, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0035f5050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I1215 12:22:01.477780 21 resource_quota.go:1209] ResourceQuota "e2e-rq-status-xk4sg" Spec was unchanged and /status reset
  I1215 12:22:01.478808 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2662" for this suite. @ 12/15/24 12:22:01.485
• [255.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 12/15/24 12:22:01.499
  I1215 12:22:01.499099 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:22:01.502
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:22:01.528
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:22:01.532
  STEP: Setting up server cert @ 12/15/24 12:22:01.569
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:22:01.936
  STEP: Deploying the webhook pod @ 12/15/24 12:22:01.95
  STEP: Wait for the deployment to be ready @ 12/15/24 12:22:01.97
  I1215 12:22:01.993232 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 12:22:04.005
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:22:04.024
  I1215 12:22:05.024816 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 12/15/24 12:22:05.034
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 12/15/24 12:22:05.035
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 12/15/24 12:22:05.036
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 12/15/24 12:22:05.036
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 12/15/24 12:22:05.037
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/15/24 12:22:05.037
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 12/15/24 12:22:05.038
  I1215 12:22:05.091814 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1279" for this suite. @ 12/15/24 12:22:05.096
  STEP: Destroying namespace "webhook-markers-2505" for this suite. @ 12/15/24 12:22:05.112
• [3.630 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 12/15/24 12:22:05.129
  I1215 12:22:05.129735 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:22:05.13
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:22:05.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:22:05.161
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9012 @ 12/15/24 12:22:05.163
  STEP: changing the ExternalName service to type=NodePort @ 12/15/24 12:22:05.173
  STEP: creating replication controller externalname-service in namespace services-9012 @ 12/15/24 12:22:05.203
  I1215 12:22:05.220838      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-9012, replica count: 2
  I1215 12:22:08.272351      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:22:08.272446 21 resource.go:361] Creating new exec pod
  I1215 12:22:11.307645 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-9012 exec execpod5ddqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1215 12:22:11.463370 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1215 12:22:11.463449 21 builder.go:147] stdout: "externalname-service-tzjgh"
  I1215 12:22:11.463720 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-9012 exec execpod5ddqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.20.14 80'
  I1215 12:22:11.596996 21 builder.go:146] stderr: "+ echo+  hostNamenc -v -t -w 2 10.233.20.14 80\n\nConnection to 10.233.20.14 80 port [tcp/http] succeeded!\n"
  I1215 12:22:11.597063 21 builder.go:147] stdout: "externalname-service-5vcrm"
  I1215 12:22:11.597160 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-9012 exec execpod5ddqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.210 30781'
  I1215 12:22:11.737985 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.210 30781\nConnection to 172.10.60.210 30781 port [tcp/*] succeeded!\n"
  I1215 12:22:11.738055 21 builder.go:147] stdout: "externalname-service-tzjgh"
  I1215 12:22:11.738226 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-9012 exec execpod5ddqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.35 30781'
  I1215 12:22:11.878515 21 builder.go:146] stderr: "+ + echonc hostName\n -v -t -w 2 172.10.60.35 30781\nConnection to 172.10.60.35 30781 port [tcp/*] succeeded!\n"
  I1215 12:22:11.878576 21 builder.go:147] stdout: ""
  I1215 12:22:12.738997 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-9012 exec execpod5ddqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.35 30781'
  I1215 12:22:12.852697 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.35 30781\nConnection to 172.10.60.35 30781 port [tcp/*] succeeded!\n"
  I1215 12:22:12.852768 21 builder.go:147] stdout: ""
  I1215 12:22:13.739046 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-9012 exec execpod5ddqk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.35 30781'
  I1215 12:22:13.894025 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.35 30781\nConnection to 172.10.60.35 30781 port [tcp/*] succeeded!\n"
  I1215 12:22:13.894084 21 builder.go:147] stdout: "externalname-service-tzjgh"
  I1215 12:22:13.894331 21 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I1215 12:22:13.927687 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9012" for this suite. @ 12/15/24 12:22:13.935
• [8.820 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 12/15/24 12:22:13.951
  I1215 12:22:13.951741 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replication-controller @ 12/15/24 12:22:13.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:22:13.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:22:13.987
  STEP: Given a ReplicationController is created @ 12/15/24 12:22:13.99
  STEP: When the matched label of one of its pods change @ 12/15/24 12:22:13.996
  I1215 12:22:14.005100 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I1215 12:22:19.021767 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 12/15/24 12:22:19.042
  I1215 12:22:20.054082 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6594" for this suite. @ 12/15/24 12:22:20.059
• [6.116 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 12/15/24 12:22:20.068
  I1215 12:22:20.068617 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 12:22:20.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:22:20.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:22:20.096
  STEP: validating cluster-info @ 12/15/24 12:22:20.099
  I1215 12:22:20.099968 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-7024 cluster-info'
  I1215 12:22:20.181198 21 builder.go:146] stderr: ""
  I1215 12:22:20.181255 21 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.233.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I1215 12:22:20.181388 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7024" for this suite. @ 12/15/24 12:22:20.185
• [0.127 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 12/15/24 12:22:20.195
  I1215 12:22:20.195657 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename daemonsets @ 12/15/24 12:22:20.196
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:22:20.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:22:20.229
  I1215 12:22:20.254980 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/24 12:22:20.263
  I1215 12:22:20.274032 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 12:22:20.274092 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 12:22:21.272471 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 12:22:21.272520 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 12:22:22.271758 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 12:22:22.271817 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 12/15/24 12:22:22.285
  STEP: Check that daemon pods images are updated. @ 12/15/24 12:22:22.3
  I1215 12:22:22.307061 21 daemon_set.go:1178] Wrong image for pod: daemon-set-lvx99. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:22.307116 21 daemon_set.go:1178] Wrong image for pod: daemon-set-vvvwp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:22.307125 21 daemon_set.go:1178] Wrong image for pod: daemon-set-vwzjp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:23.305832 21 daemon_set.go:1178] Wrong image for pod: daemon-set-lvx99. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:23.305893 21 daemon_set.go:1183] Pod daemon-set-q6vtd is not available
  I1215 12:22:23.305907 21 daemon_set.go:1178] Wrong image for pod: daemon-set-vwzjp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:24.307233 21 daemon_set.go:1178] Wrong image for pod: daemon-set-lvx99. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:24.307276 21 daemon_set.go:1183] Pod daemon-set-q6vtd is not available
  I1215 12:22:24.307285 21 daemon_set.go:1178] Wrong image for pod: daemon-set-vwzjp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:25.310111 21 daemon_set.go:1183] Pod daemon-set-hnmsf is not available
  I1215 12:22:25.310167 21 daemon_set.go:1178] Wrong image for pod: daemon-set-vwzjp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:26.307496 21 daemon_set.go:1183] Pod daemon-set-hnmsf is not available
  I1215 12:22:26.307550 21 daemon_set.go:1178] Wrong image for pod: daemon-set-vwzjp. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I1215 12:22:28.304958 21 daemon_set.go:1183] Pod daemon-set-tswb7 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 12/15/24 12:22:28.308
  I1215 12:22:28.316020 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 12:22:28.316061 21 fixtures.go:130] Node cncf-master-2 is running 0 daemon pod, expected 1
  I1215 12:22:29.319053 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 12:22:29.319160 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/24 12:22:29.333
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1065, will wait for the garbage collector to delete the pods @ 12/15/24 12:22:29.333
  I1215 12:22:29.395964 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 9.523506ms
  I1215 12:22:29.496927 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.980879ms
  I1215 12:22:30.602857 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 12:22:30.602925 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1215 12:22:30.606467 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5385448"},"items":null}

  I1215 12:22:30.609282 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5385448"},"items":null}

  I1215 12:22:30.621728 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1065" for this suite. @ 12/15/24 12:22:30.625
• [10.453 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 12/15/24 12:22:30.648
  I1215 12:22:30.648851 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/24 12:22:30.649
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:22:30.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:22:30.674
  I1215 12:22:30.697957 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1215 12:23:30.707050 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/15/24 12:23:30.711
  I1215 12:23:30.746587 21 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I1215 12:23:30.757285 21 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I1215 12:23:30.791267 21 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I1215 12:23:30.799960 21 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I1215 12:23:30.835506 21 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I1215 12:23:30.842888 21 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/15/24 12:23:30.842
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 12/15/24 12:23:32.878
  I1215 12:23:37.014233 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-8628" for this suite. @ 12/15/24 12:23:37.018
• [66.380 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 12/15/24 12:23:37.029
  I1215 12:23:37.029571 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:23:37.03
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:23:37.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:23:37.056
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/15/24 12:23:37.059
  STEP: Saw pod success @ 12/15/24 12:23:41.086
  I1215 12:23:41.089900 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-febd9f85-29e9-4769-b0d5-b5c03e573bec container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:23:41.106
  I1215 12:23:41.126884 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8449" for this suite. @ 12/15/24 12:23:41.131
• [4.112 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 12/15/24 12:23:41.143
  I1215 12:23:41.143287 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:23:41.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:23:41.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:23:41.177
  STEP: creating service in namespace services-2661 @ 12/15/24 12:23:41.18
  STEP: creating service affinity-clusterip in namespace services-2661 @ 12/15/24 12:23:41.18
  STEP: creating replication controller affinity-clusterip in namespace services-2661 @ 12/15/24 12:23:41.194
  I1215 12:23:41.212407      21 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-2661, replica count: 3
  I1215 12:23:44.263449      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:23:44.273087 21 resource.go:361] Creating new exec pod
  I1215 12:23:47.293174 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-2661 exec execpod-affinitysv4kr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I1215 12:23:47.433620 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I1215 12:23:47.433747 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:23:47.433889 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-2661 exec execpod-affinitysv4kr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.41.237 80'
  I1215 12:23:47.576077 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.41.237 80\nConnection to 10.233.41.237 80 port [tcp/http] succeeded!\n"
  I1215 12:23:47.576188 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:23:47.576370 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-2661 exec execpod-affinitysv4kr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.41.237:80/ ; done'
  I1215 12:23:47.791749 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.41.237:80/\n"
  I1215 12:23:47.791852 21 builder.go:147] stdout: "\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl\naffinity-clusterip-55drl"
  I1215 12:23:47.791883 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.791898 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.791910 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.791921 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.791936 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.791946 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.791955 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.791983 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792003 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792014 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792024 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792035 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792045 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792055 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792065 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792077 21 service.go:242] Received response from host: affinity-clusterip-55drl
  I1215 12:23:47.792221 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-2661, will wait for the garbage collector to delete the pods @ 12/15/24 12:23:47.818
  I1215 12:23:47.881882 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 9.068599ms
  I1215 12:23:47.982982 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 101.090685ms
  I1215 12:23:51.116108 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2661" for this suite. @ 12/15/24 12:23:51.12
• [9.987 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 12/15/24 12:23:51.13
  I1215 12:23:51.130689 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 12:23:51.131
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:23:51.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:23:51.16
  STEP: Creating a pod to test downward api env vars @ 12/15/24 12:23:51.163
  STEP: Saw pod success @ 12/15/24 12:23:55.19
  I1215 12:23:55.193191 21 output.go:196] Trying to get logs from node cncf-master-1 pod downward-api-f642eba5-e832-4aa7-829a-da7c526becee container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 12:23:55.2
  I1215 12:23:55.225523 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7093" for this suite. @ 12/15/24 12:23:55.23
• [4.107 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 12/15/24 12:23:55.238
  I1215 12:23:55.238304 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:23:55.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:23:55.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:23:55.264
  STEP: Setting up server cert @ 12/15/24 12:23:55.298
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:23:55.452
  STEP: Deploying the webhook pod @ 12/15/24 12:23:55.469
  STEP: Wait for the deployment to be ready @ 12/15/24 12:23:55.535
  I1215 12:23:55.546590 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 12:23:57.56
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:23:57.577
  I1215 12:23:58.578267 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 12/15/24 12:23:58.586
  STEP: Creating a custom resource definition that should be denied by the webhook @ 12/15/24 12:23:58.607
  I1215 12:23:58.607148 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:23:58.688254 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2386" for this suite. @ 12/15/24 12:23:58.694
  STEP: Destroying namespace "webhook-markers-1426" for this suite. @ 12/15/24 12:23:58.703
• [3.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 12/15/24 12:23:58.714
  I1215 12:23:58.714170 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:23:58.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:23:58.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:23:58.743
  STEP: Creating configMap with name projected-configmap-test-volume-ea07db05-f744-4d00-9d10-977c5376a827 @ 12/15/24 12:23:58.745
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:23:58.753
  STEP: Saw pod success @ 12/15/24 12:24:02.794
  I1215 12:24:02.797607 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-configmaps-1b22ced3-7f2e-4c9d-92aa-92ad8e21dcc0 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:24:02.807
  I1215 12:24:02.826458 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7602" for this suite. @ 12/15/24 12:24:02.831
• [4.127 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 12/15/24 12:24:02.841
  I1215 12:24:02.841535 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename apf @ 12/15/24 12:24:02.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:24:02.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:24:02.869
  STEP: getting /apis @ 12/15/24 12:24:02.872
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/15/24 12:24:02.878
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/15/24 12:24:02.879
  STEP: creating @ 12/15/24 12:24:02.88
  STEP: getting @ 12/15/24 12:24:02.901
  STEP: listing @ 12/15/24 12:24:02.904
  STEP: watching @ 12/15/24 12:24:02.907
  I1215 12:24:02.907895 21 flowcontrol.go:620] starting watch
  STEP: patching @ 12/15/24 12:24:02.908
  STEP: updating @ 12/15/24 12:24:02.918
  I1215 12:24:02.928812 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 12/15/24 12:24:02.928
  STEP: patching /status @ 12/15/24 12:24:02.932
  STEP: updating /status @ 12/15/24 12:24:02.94
  STEP: deleting @ 12/15/24 12:24:02.954
  STEP: deleting a collection @ 12/15/24 12:24:02.968
  I1215 12:24:02.988056 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-4159" for this suite. @ 12/15/24 12:24:02.991
• [0.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 12/15/24 12:24:03.003
  I1215 12:24:03.003623 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:24:03.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:24:03.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:24:03.045
  STEP: Setting up server cert @ 12/15/24 12:24:03.077
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:24:03.335
  STEP: Deploying the webhook pod @ 12/15/24 12:24:03.346
  STEP: Wait for the deployment to be ready @ 12/15/24 12:24:03.367
  I1215 12:24:03.373964 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 12:24:05.385
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:24:05.401
  I1215 12:24:06.401656 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 12/15/24 12:24:06.409
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 12/15/24 12:24:06.434
  STEP: Creating a configMap that should not be mutated @ 12/15/24 12:24:06.445
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 12/15/24 12:24:06.46
  STEP: Creating a configMap that should be mutated @ 12/15/24 12:24:06.47
  I1215 12:24:06.563030 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9113" for this suite. @ 12/15/24 12:24:06.574
  STEP: Destroying namespace "webhook-markers-8352" for this suite. @ 12/15/24 12:24:06.583
• [3.595 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 12/15/24 12:24:06.598
  I1215 12:24:06.598979 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-pred @ 12/15/24 12:24:06.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:24:06.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:24:06.631
  I1215 12:24:06.635767 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1215 12:24:06.643886 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I1215 12:24:06.647218 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-1 before test
  I1215 12:24:06.669511 21 predicates.go:887] oauth2-proxy-admin-7cbd66946c-6rc86 from auth started at 2024-12-15 12:15:02 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669557 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 0
  I1215 12:24:06.669567 21 predicates.go:887] oauth2-redis-admin-2 from auth started at 2024-12-15 12:10:16 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669574 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:24:06.669581 21 predicates.go:887] oauth2-redis-admin-4 from auth started at 2024-12-15 12:10:18 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669587 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:24:06.669594 21 predicates.go:887] redis-cluster-maintenance-cronjob-28904415-lsznm from auth started at 2024-12-15 12:15:00 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669600 21 predicates.go:889] 	Container redis-cluster-check ready: false, restart count 0
  I1215 12:24:06.669606 21 predicates.go:887] cloud-service-api-57f54bfb54-mndwq from cmp started at 2024-12-15 12:10:14 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.669611 21 predicates.go:889] 	Container cloud-service-api ready: true, restart count 0
  I1215 12:24:06.669617 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.669623 21 predicates.go:887] maestro-host-app-5cd79d5b8c-mjm47 from cmp started at 2024-12-15 12:10:15 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.669631 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.669637 21 predicates.go:889] 	Container maestro-host-app ready: true, restart count 0
  I1215 12:24:06.669643 21 predicates.go:887] maestro-iam-adapter-api-77f4d875b5-ns4k4 from cmp started at 2024-12-15 12:10:15 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.669649 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.669654 21 predicates.go:889] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I1215 12:24:06.669660 21 predicates.go:887] mariadb-backup-cronjob-28904420-v4zgh from dataplatform started at 2024-12-15 12:20:00 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669665 21 predicates.go:889] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I1215 12:24:06.669671 21 predicates.go:887] mariadb-sts-0 from dataplatform started at 2024-12-15 12:10:17 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669676 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 12:24:06.669688 21 predicates.go:887] my-cluster-kafka-0 from dataplatform started at 2024-12-15 12:15:32 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669693 21 predicates.go:889] 	Container kafka ready: true, restart count 0
  I1215 12:24:06.669699 21 predicates.go:887] my-cluster-zookeeper-2 from dataplatform started at 2024-12-15 12:15:32 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669704 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 12:24:06.669710 21 predicates.go:887] redis-0 from dataplatform started at 2024-12-15 12:10:16 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669715 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:24:06.669721 21 predicates.go:887] vault-2 from dataplatform started at 2024-12-15 12:10:22 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669726 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 12:24:06.669732 21 predicates.go:887] vault-unsealer-28904420-ncj9d from dataplatform started at 2024-12-15 12:20:00 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669737 21 predicates.go:889] 	Container unsealer ready: false, restart count 0
  I1215 12:24:06.669743 21 predicates.go:887] cilium-n8zrz from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669749 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 12:24:06.669757 21 predicates.go:887] cilium-operator-64664858c8-nxfhd from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669763 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 12:24:06.669769 21 predicates.go:887] kube-apiserver-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669774 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 12:24:06.669781 21 predicates.go:887] kube-controller-manager-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669786 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 12:24:06.669793 21 predicates.go:887] kube-proxy-nwc8x from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669799 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 12:24:06.669805 21 predicates.go:887] kube-scheduler-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669810 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 12:24:06.669816 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-15 11:48:01 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.669821 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1215 12:24:06.669827 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-jlphr from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.669832 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:24:06.669837 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 12:24:06.669844 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-2 before test
  I1215 12:24:06.702791 21 predicates.go:887] keycloak-846b587bd-gf8fz from auth started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702835 21 predicates.go:889] 	Container keycloak ready: true, restart count 0
  I1215 12:24:06.702845 21 predicates.go:887] oauth2-proxy-admin-7cbd66946c-fblh5 from auth started at 2024-12-15 12:15:03 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702853 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 0
  I1215 12:24:06.702860 21 predicates.go:887] oauth2-redis-admin-3 from auth started at 2024-12-15 11:36:50 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702868 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:24:06.702874 21 predicates.go:887] oauth2-redis-admin-5 from auth started at 2024-12-15 11:37:10 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702879 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:24:06.702885 21 predicates.go:887] maestro-common-api-85ff5d9f5b-pbqbq from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.702891 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.702897 21 predicates.go:889] 	Container maestro-common-api ready: true, restart count 0
  I1215 12:24:06.702902 21 predicates.go:887] notification-adapter-api-5cf9dbf5f6-ptnnd from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.702909 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.702916 21 predicates.go:889] 	Container noti-api ready: true, restart count 0
  I1215 12:24:06.702925 21 predicates.go:887] mariadb-maxscale-f58d897f7-46j52 from dataplatform started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702931 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 12:24:06.702937 21 predicates.go:887] mariadb-sts-1 from dataplatform started at 2024-12-15 11:38:49 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702943 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 12:24:06.702950 21 predicates.go:887] my-cluster-entity-operator-5685c69c9c-w2rp4 from dataplatform started at 2024-12-15 11:43:40 +0000 UTC (3 container statuses recorded)
  I1215 12:24:06.702956 21 predicates.go:889] 	Container tls-sidecar ready: true, restart count 0
  I1215 12:24:06.702962 21 predicates.go:889] 	Container topic-operator ready: true, restart count 0
  I1215 12:24:06.702973 21 predicates.go:889] 	Container user-operator ready: true, restart count 0
  I1215 12:24:06.702979 21 predicates.go:887] my-cluster-kafka-1 from dataplatform started at 2024-12-15 11:41:34 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702984 21 predicates.go:889] 	Container kafka ready: true, restart count 2
  I1215 12:24:06.702990 21 predicates.go:887] my-cluster-zookeeper-0 from dataplatform started at 2024-12-15 11:41:45 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.702996 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 12:24:06.703002 21 predicates.go:887] strimzi-cluster-operator-698dc7549d-tj5s6 from dataplatform started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703007 21 predicates.go:889] 	Container strimzi-cluster-operator ready: true, restart count 0
  I1215 12:24:06.703013 21 predicates.go:887] vault-1 from dataplatform started at 2024-12-15 11:34:41 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703018 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 12:24:06.703024 21 predicates.go:887] cilium-78qk5 from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703030 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 12:24:06.703036 21 predicates.go:887] coredns-776bb9db5d-6fcp7 from kube-system started at 2024-12-15 11:33:49 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703041 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 12:24:06.703047 21 predicates.go:887] kube-apiserver-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703052 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 12:24:06.703058 21 predicates.go:887] kube-controller-manager-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703080 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 12:24:06.703086 21 predicates.go:887] kube-proxy-zmqc8 from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703091 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 12:24:06.703097 21 predicates.go:887] kube-scheduler-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.703102 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 12:24:06.703108 21 predicates.go:887] sonobuoy-e2e-job-37381f2984c64bf4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.703114 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1215 12:24:06.703119 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:24:06.703125 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-xhsgf from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.703131 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:24:06.703136 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 12:24:06.703144 21 predicates.go:887] contrabass-api-567f74fcd-hpbfs from viola started at 2024-12-15 11:40:51 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.703150 21 predicates.go:889] 	Container contrabass-api ready: true, restart count 0
  I1215 12:24:06.703155 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.703162 21 predicates.go:887] viola-api-5bb88dfd5c-v9pxd from viola started at 2024-12-15 11:41:06 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.703167 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.703178 21 predicates.go:889] 	Container viola-api ready: true, restart count 0
  I1215 12:24:06.703185 21 predicates.go:887] viola-remote-app-79bd8cf4dc-khsxs from viola started at 2024-12-15 11:41:16 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.703190 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.703195 21 predicates.go:889] 	Container viola-remote-app ready: true, restart count 0
  I1215 12:24:06.703202 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-3 before test
  I1215 12:24:06.720382 21 predicates.go:887] keycloak-846b587bd-qr4xk from auth started at 2024-12-15 11:35:14 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720425 21 predicates.go:889] 	Container keycloak ready: true, restart count 2
  I1215 12:24:06.720434 21 predicates.go:887] mariadb-keycloak-0 from auth started at 2024-12-15 11:35:52 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720443 21 predicates.go:889] 	Container mariadb-keycloak ready: true, restart count 0
  I1215 12:24:06.720450 21 predicates.go:887] oauth2-redis-admin-0 from auth started at 2024-12-15 11:36:30 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720457 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:24:06.720464 21 predicates.go:887] oauth2-redis-admin-1 from auth started at 2024-12-15 11:36:32 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720470 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:24:06.720476 21 predicates.go:887] cloud-service-collector-6f4b74fdfb-mpdbx from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.720482 21 predicates.go:889] 	Container cloud-service-collector ready: true, restart count 0
  I1215 12:24:06.720488 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.720495 21 predicates.go:887] maestro-auth-gateway-6cbd44676b-rvrdl from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.720501 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.720507 21 predicates.go:889] 	Container maestro-auth-gateway ready: true, restart count 0
  I1215 12:24:06.720513 21 predicates.go:887] maestro-event-pusher-65b595dc6-v869s from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.720519 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.720524 21 predicates.go:889] 	Container maestro-event-pusher ready: true, restart count 1
  I1215 12:24:06.720531 21 predicates.go:887] maestro-remote-app-769bc9cff9-kgdd5 from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.720536 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.720542 21 predicates.go:889] 	Container maestro-remote-app ready: true, restart count 0
  I1215 12:24:06.720548 21 predicates.go:887] mariadb-maxscale-f58d897f7-bfh7f from dataplatform started at 2024-12-15 11:38:45 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720555 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 12:24:06.720560 21 predicates.go:887] my-cluster-kafka-2 from dataplatform started at 2024-12-15 11:40:09 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720566 21 predicates.go:889] 	Container kafka ready: true, restart count 4
  I1215 12:24:06.720572 21 predicates.go:887] my-cluster-zookeeper-1 from dataplatform started at 2024-12-15 11:41:46 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720577 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 12:24:06.720583 21 predicates.go:887] vault-0 from dataplatform started at 2024-12-15 11:36:43 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720588 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 12:24:06.720602 21 predicates.go:887] nfs-client-provisioner-5d85d7bdcf-7gdx4 from default started at 2024-12-15 11:34:15 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720608 21 predicates.go:889] 	Container nfs-client-provisioner ready: true, restart count 0
  I1215 12:24:06.720614 21 predicates.go:887] nginx-pod from default started at 2024-12-15 10:52:29 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720619 21 predicates.go:889] 	Container nginx ready: true, restart count 0
  I1215 12:24:06.720625 21 predicates.go:887] ingress-nginx-controller-7d4db76476-8nsf6 from ingress-nginx started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720630 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I1215 12:24:06.720637 21 predicates.go:887] istio-gateway-67c8555b98-22b98 from istio-system started at 2024-12-15 11:34:03 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720642 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:24:06.720648 21 predicates.go:887] istiod-66c776b765-bdcx2 from istio-system started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720653 21 predicates.go:889] 	Container discovery ready: true, restart count 0
  I1215 12:24:06.720658 21 predicates.go:887] cilium-operator-64664858c8-rr65m from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720664 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 12:24:06.720669 21 predicates.go:887] cilium-zl6bh from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720675 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 12:24:06.720681 21 predicates.go:887] coredns-776bb9db5d-mbxjb from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720687 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 12:24:06.720694 21 predicates.go:887] dns-autoscaler-6ffb84bd6-hht9v from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720700 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I1215 12:24:06.720706 21 predicates.go:887] kube-apiserver-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720717 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 2
  I1215 12:24:06.720724 21 predicates.go:887] kube-controller-manager-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720731 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 12:24:06.720740 21 predicates.go:887] kube-proxy-mxh4s from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720750 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 12:24:06.720758 21 predicates.go:887] kube-scheduler-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 12:24:06.720766 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 12:24:06.720773 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-dhdt4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:24:06.720779 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:24:06.720784 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/15/24 12:24:06.72
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/15/24 12:24:08.745
  STEP: Trying to apply a random label on the found node. @ 12/15/24 12:24:08.772
  STEP: verifying the node has the label kubernetes.io/e2e-463a13fb-d0aa-4c34-99fb-6252e1218af9 95 @ 12/15/24 12:24:08.787
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 12/15/24 12:24:08.791
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.10.60.89 on the node which pod4 resides and expect not scheduled @ 12/15/24 12:24:10.811
  STEP: removing the label kubernetes.io/e2e-463a13fb-d0aa-4c34-99fb-6252e1218af9 off the node cncf-master-1 @ 12/15/24 12:29:10.826
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-463a13fb-d0aa-4c34-99fb-6252e1218af9 @ 12/15/24 12:29:10.863
  I1215 12:29:10.869646 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6245" for this suite. @ 12/15/24 12:29:10.874
• [304.325 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 12/15/24 12:29:10.925
  I1215 12:29:10.925837 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename init-container @ 12/15/24 12:29:10.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:29:10.986
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:29:10.989
  STEP: creating the pod @ 12/15/24 12:29:10.992
  I1215 12:29:10.992257 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I1215 12:29:16.386632 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-803" for this suite. @ 12/15/24 12:29:16.417
• [5.500 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 12/15/24 12:29:16.425
  I1215 12:29:16.425822 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/24 12:29:16.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:29:16.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:29:16.559
  I1215 12:29:16.667301 21 service_accounts.go:253] created pod pod-service-account-defaultsa
  I1215 12:29:16.667372 21 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I1215 12:29:16.684459 21 service_accounts.go:253] created pod pod-service-account-mountsa
  I1215 12:29:16.684505 21 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I1215 12:29:16.720129 21 service_accounts.go:253] created pod pod-service-account-nomountsa
  I1215 12:29:16.720185 21 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I1215 12:29:16.756836 21 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I1215 12:29:16.756883 21 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I1215 12:29:16.799038 21 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I1215 12:29:16.799100 21 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I1215 12:29:16.914042 21 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I1215 12:29:16.914099 21 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I1215 12:29:16.984881 21 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I1215 12:29:16.984931 21 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I1215 12:29:17.029214 21 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I1215 12:29:17.029283 21 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I1215 12:29:17.067681 21 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I1215 12:29:17.067739 21 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I1215 12:29:17.068055 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8289" for this suite. @ 12/15/24 12:29:17.099
• [0.781 seconds]
------------------------------
SS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 12/15/24 12:29:17.207
  I1215 12:29:17.207043 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/24 12:29:17.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:29:17.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:29:17.324
  STEP: Performing setup for networking test in namespace pod-network-test-7777 @ 12/15/24 12:29:17.327
  STEP: creating a selector @ 12/15/24 12:29:17.327
  STEP: Creating the service pods in kubernetes @ 12/15/24 12:29:17.327
  I1215 12:29:17.327959 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/15/24 12:29:39.966
  I1215 12:29:44.087823 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1215 12:29:44.088055 21 utils.go:472] Going to poll 10.0.0.51 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1215 12:29:44.116853 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.0.51:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:29:44.116903 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:29:44.117573 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:29:44.117670 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.0.51%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1215 12:29:44.186960 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I1215 12:29:44.187052 21 utils.go:472] Going to poll 10.0.1.97 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1215 12:29:44.191477 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.1.97:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:29:44.191511 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:29:44.192181 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:29:44.192274 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.1.97%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1215 12:29:44.247323 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I1215 12:29:44.247396 21 utils.go:472] Going to poll 10.0.2.40 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I1215 12:29:44.251427 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.0.2.40:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-7777 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:29:44.251629 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:29:44.252483 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:29:44.252725 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-7777/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.0.2.40%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1215 12:29:44.319128 21 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I1215 12:29:44.319386 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-7777" for this suite. @ 12/15/24 12:29:44.324
• [27.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 12/15/24 12:29:44.349
  I1215 12:29:44.349819 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename security-context @ 12/15/24 12:29:44.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:29:44.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:29:44.386
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/15/24 12:29:44.409
  STEP: Saw pod success @ 12/15/24 12:29:48.454
  I1215 12:29:48.459401 21 output.go:196] Trying to get logs from node cncf-master-1 pod security-context-4ee384b5-27c0-453b-9caf-84627a9d8ac2 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:29:48.473
  I1215 12:29:48.560887 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7270" for this suite. @ 12/15/24 12:29:48.564
• [4.227 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 12/15/24 12:29:48.577
  I1215 12:29:48.577140 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 12:29:48.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:29:48.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:29:48.651
  I1215 12:29:48.695997 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/24 12:29:48.696
  I1215 12:29:50.708023 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 12/15/24 12:29:50.75
  I1215 12:29:52.789774 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1901",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3febec7-d5dd-476c-ba77-bbda6467d400",
      ResourceVersion: (string) (len=7) "5388321",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862590,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=76) "ReplicaSet \"test-cleanup-deployment-7c4d497584\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1215 12:29:52.795671 21 deployment.go:39] New ReplicaSet "test-cleanup-deployment-7c4d497584" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1901",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "49a63e39-946e-4910-bb1d-187b5490da43",
      ResourceVersion: (string) (len=7) "5388310",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862590,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "b3febec7-d5dd-476c-ba77-bbda6467d400",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 62 33 66 65 62 65  63 37 2d 64 35 64 64 2d  |\"b3febec7-d5dd-|
              00000120  34 37 36 63 2d 62 61 37  37 2d 62 62 64 61 36 34  |476c-ba77-bbda64|
              00000130  36 37 64 34 30 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |67d400\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 12:29:52.800344 21 deployment.go:67] Pod "test-cleanup-deployment-7c4d497584-g6m4x" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7c4d497584-g6m4x",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7c4d497584-",
      Namespace: (string) (len=15) "deployment-1901",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "425cd184-51a1-4bb7-8e09-a312e09db14c",
      ResourceVersion: (string) (len=7) "5388309",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862590,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
          UID: (types.UID) (len=36) "49a63e39-946e-4910-bb1d-187b5490da43",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 34 39  61 36 33 65 33 39 2d 39  |d\":\"49a63e39-9|
              00000090  34 36 65 2d 34 39 31 30  2d 62 62 31 64 2d 31 38  |46e-4910-bb1d-18|
              000000a0  37 62 35 34 39 30 64 61  34 33 5c 22 7d 22 3a 7b  |7b5490da43\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 38 37 5c  22 7d 22 3a 7b 22 2e 22  |.0.0.87\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tjsg6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tjsg6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862592,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862590,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=9) "10.0.0.87",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.0.87"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862590,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862592,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://a17b5c9313c81f30282bf1e3c3ba6821af55252bf27b5152f2bb3dcebec47122",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:29:52.801707 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1901" for this suite. @ 12/15/24 12:29:52.806
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 12/15/24 12:29:52.823
  I1215 12:29:52.823551 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename proxy @ 12/15/24 12:29:52.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:29:52.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:29:52.861
  STEP: starting an echo server on multiple ports @ 12/15/24 12:29:52.93
  STEP: creating replication controller proxy-service-6sgdc in namespace proxy-1030 @ 12/15/24 12:29:52.93
  I1215 12:29:52.950763      21 runners.go:198] Created replication controller with name: proxy-service-6sgdc, namespace: proxy-1030, replica count: 1
  I1215 12:29:54.002341      21 runners.go:198] proxy-service-6sgdc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:29:55.002951      21 runners.go:198] proxy-service-6sgdc Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I1215 12:29:56.003744      21 runners.go:198] proxy-service-6sgdc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:29:56.008443 21 proxy.go:230] setup took 3.144191351s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 12/15/24 12:29:56.008
  I1215 12:29:56.015095 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 6.331539ms)
  I1215 12:29:56.015113 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 6.385364ms)
  I1215 12:29:56.015410 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 6.478386ms)
  I1215 12:29:56.015619 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 6.673473ms)
  I1215 12:29:56.015644 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 6.911793ms)
  I1215 12:29:56.015655 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.889622ms)
  I1215 12:29:56.015716 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 7.107144ms)
  I1215 12:29:56.015862 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.990221ms)
  I1215 12:29:56.016355 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 7.44674ms)
  I1215 12:29:56.016718 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 7.888048ms)
  I1215 12:29:56.016731 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 7.894995ms)
  I1215 12:29:56.020491 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 11.701171ms)
  I1215 12:29:56.020509 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 11.674641ms)
  I1215 12:29:56.020555 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 11.743215ms)
  I1215 12:29:56.020579 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 12.00065ms)
  I1215 12:29:56.020597 21 proxy.go:558] (0) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 12.046719ms)
  I1215 12:29:56.026294 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 5.047999ms)
  I1215 12:29:56.027260 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.606531ms)
  I1215 12:29:56.027428 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 6.148605ms)
  I1215 12:29:56.027554 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 5.750955ms)
  I1215 12:29:56.027556 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 6.167137ms)
  I1215 12:29:56.027592 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.21197ms)
  I1215 12:29:56.027663 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 5.823235ms)
  I1215 12:29:56.027976 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 5.957372ms)
  I1215 12:29:56.028534 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.509954ms)
  I1215 12:29:56.043359 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 22.417801ms)
  I1215 12:29:56.043855 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 22.161895ms)
  I1215 12:29:56.044102 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 22.574544ms)
  I1215 12:29:56.044134 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 22.041745ms)
  I1215 12:29:56.044248 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 22.806572ms)
  I1215 12:29:56.045671 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 23.670202ms)
  I1215 12:29:56.064916 21 proxy.go:558] (1) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 43.332504ms)
  I1215 12:29:56.068510 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 3.443488ms)
  I1215 12:29:56.069065 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 3.905551ms)
  I1215 12:29:56.069878 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.69064ms)
  I1215 12:29:56.069898 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 4.667856ms)
  I1215 12:29:56.070267 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 5.013384ms)
  I1215 12:29:56.070312 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.207329ms)
  I1215 12:29:56.070443 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.474022ms)
  I1215 12:29:56.070801 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.589338ms)
  I1215 12:29:56.071144 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 6.152743ms)
  I1215 12:29:56.071216 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 5.996358ms)
  I1215 12:29:56.071369 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 6.247072ms)
  I1215 12:29:56.071381 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.376578ms)
  I1215 12:29:56.071403 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 6.327619ms)
  I1215 12:29:56.071528 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 6.416681ms)
  I1215 12:29:56.071636 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.428528ms)
  I1215 12:29:56.072291 21 proxy.go:558] (2) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 7.194881ms)
  I1215 12:29:56.075226 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 2.736992ms)
  I1215 12:29:56.075860 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.147618ms)
  I1215 12:29:56.076273 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.49574ms)
  I1215 12:29:56.076395 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.400573ms)
  I1215 12:29:56.076519 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 2.94851ms)
  I1215 12:29:56.076582 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 3.240999ms)
  I1215 12:29:56.077077 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 3.635345ms)
  I1215 12:29:56.077402 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 4.487171ms)
  I1215 12:29:56.077104 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 3.981435ms)
  I1215 12:29:56.077132 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 3.608441ms)
  I1215 12:29:56.077783 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 4.614618ms)
  I1215 12:29:56.078177 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 5.559139ms)
  I1215 12:29:56.078278 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.425551ms)
  I1215 12:29:56.078514 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 5.186285ms)
  I1215 12:29:56.079189 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.935873ms)
  I1215 12:29:56.079193 21 proxy.go:558] (3) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 5.809836ms)
  I1215 12:29:56.082481 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 3.218827ms)
  I1215 12:29:56.082503 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.249035ms)
  I1215 12:29:56.082766 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 3.495381ms)
  I1215 12:29:56.083212 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 3.930522ms)
  I1215 12:29:56.083239 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 3.891373ms)
  I1215 12:29:56.084064 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.705485ms)
  I1215 12:29:56.084092 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.70963ms)
  I1215 12:29:56.084523 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.139591ms)
  I1215 12:29:56.084797 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 5.346747ms)
  I1215 12:29:56.085154 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.743011ms)
  I1215 12:29:56.085328 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 5.855337ms)
  I1215 12:29:56.085657 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.224791ms)
  I1215 12:29:56.086049 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.557085ms)
  I1215 12:29:56.087133 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 7.736967ms)
  I1215 12:29:56.087441 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 7.978056ms)
  I1215 12:29:56.088773 21 proxy.go:558] (4) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 9.364057ms)
  I1215 12:29:56.091787 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 2.852295ms)
  I1215 12:29:56.092638 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.833087ms)
  I1215 12:29:56.093010 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.852858ms)
  I1215 12:29:56.093247 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.136556ms)
  I1215 12:29:56.093916 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.643462ms)
  I1215 12:29:56.094183 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 5.175491ms)
  I1215 12:29:56.094321 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 4.679591ms)
  I1215 12:29:56.094325 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 4.886609ms)
  I1215 12:29:56.094865 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 5.232383ms)
  I1215 12:29:56.094899 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 5.286432ms)
  I1215 12:29:56.094864 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.463281ms)
  I1215 12:29:56.095312 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.723282ms)
  I1215 12:29:56.096365 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 7.16086ms)
  I1215 12:29:56.096436 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 7.115735ms)
  I1215 12:29:56.096467 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.805811ms)
  I1215 12:29:56.097698 21 proxy.go:558] (5) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 8.202675ms)
  I1215 12:29:56.102150 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.353976ms)
  I1215 12:29:56.102946 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.201376ms)
  I1215 12:29:56.102955 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 5.128531ms)
  I1215 12:29:56.102957 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.039765ms)
  I1215 12:29:56.103559 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.713976ms)
  I1215 12:29:56.103566 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.590028ms)
  I1215 12:29:56.103657 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.913036ms)
  I1215 12:29:56.104552 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 6.609821ms)
  I1215 12:29:56.104554 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.692658ms)
  I1215 12:29:56.104882 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.924952ms)
  I1215 12:29:56.115863 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 17.945774ms)
  I1215 12:29:56.115876 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 17.954424ms)
  I1215 12:29:56.116374 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 18.500921ms)
  I1215 12:29:56.116584 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 18.619763ms)
  I1215 12:29:56.116912 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 19.096672ms)
  I1215 12:29:56.117224 21 proxy.go:558] (6) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 19.321942ms)
  I1215 12:29:56.121410 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 3.967469ms)
  I1215 12:29:56.121446 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.910767ms)
  I1215 12:29:56.121794 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.236671ms)
  I1215 12:29:56.121817 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.239922ms)
  I1215 12:29:56.122209 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 4.599564ms)
  I1215 12:29:56.122403 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 4.953224ms)
  I1215 12:29:56.122329 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.826974ms)
  I1215 12:29:56.122803 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.319451ms)
  I1215 12:29:56.123761 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 6.239399ms)
  I1215 12:29:56.123797 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 6.343436ms)
  I1215 12:29:56.123828 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.223605ms)
  I1215 12:29:56.123758 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 6.15521ms)
  I1215 12:29:56.124256 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 6.616434ms)
  I1215 12:29:56.124307 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.672036ms)
  I1215 12:29:56.124432 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.785307ms)
  I1215 12:29:56.124642 21 proxy.go:558] (7) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 7.021432ms)
  I1215 12:29:56.128613 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 3.91638ms)
  I1215 12:29:56.128834 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.015828ms)
  I1215 12:29:56.128859 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 4.068206ms)
  I1215 12:29:56.128872 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.03533ms)
  I1215 12:29:56.129018 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.179075ms)
  I1215 12:29:56.129062 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 4.203047ms)
  I1215 12:29:56.129106 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 4.383681ms)
  I1215 12:29:56.130806 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 6.02529ms)
  I1215 12:29:56.130872 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 6.025557ms)
  I1215 12:29:56.130949 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 6.130026ms)
  I1215 12:29:56.130965 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.229715ms)
  I1215 12:29:56.131661 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.799889ms)
  I1215 12:29:56.131692 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.879548ms)
  I1215 12:29:56.131715 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 6.968575ms)
  I1215 12:29:56.132159 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 7.305529ms)
  I1215 12:29:56.132253 21 proxy.go:558] (8) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 7.397056ms)
  I1215 12:29:56.135714 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 3.401316ms)
  I1215 12:29:56.136561 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.768844ms)
  I1215 12:29:56.136576 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.482965ms)
  I1215 12:29:56.136625 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 4.180798ms)
  I1215 12:29:56.136776 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 4.083641ms)
  I1215 12:29:56.137163 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.121291ms)
  I1215 12:29:56.137676 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 4.363962ms)
  I1215 12:29:56.137782 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 5.047661ms)
  I1215 12:29:56.137808 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 4.609921ms)
  I1215 12:29:56.137860 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.337611ms)
  I1215 12:29:56.138254 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 5.40535ms)
  I1215 12:29:56.138511 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 5.594008ms)
  I1215 12:29:56.138561 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.297934ms)
  I1215 12:29:56.138582 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 6.006139ms)
  I1215 12:29:56.138651 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.519111ms)
  I1215 12:29:56.138868 21 proxy.go:558] (9) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.219344ms)
  I1215 12:29:56.142953 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 3.576821ms)
  I1215 12:29:56.143064 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.156901ms)
  I1215 12:29:56.144092 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 4.905128ms)
  I1215 12:29:56.144122 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.623913ms)
  I1215 12:29:56.144199 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 4.948233ms)
  I1215 12:29:56.144554 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 4.980033ms)
  I1215 12:29:56.144577 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 5.464353ms)
  I1215 12:29:56.144595 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 5.277985ms)
  I1215 12:29:56.144620 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 5.189211ms)
  I1215 12:29:56.144682 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.894694ms)
  I1215 12:29:56.144906 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.198809ms)
  I1215 12:29:56.144930 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.005398ms)
  I1215 12:29:56.144944 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.96836ms)
  I1215 12:29:56.147848 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 8.192418ms)
  I1215 12:29:56.147877 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 8.036808ms)
  I1215 12:29:56.151038 21 proxy.go:558] (10) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 10.986742ms)
  I1215 12:29:56.154622 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.533081ms)
  I1215 12:29:56.154841 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 3.601593ms)
  I1215 12:29:56.155135 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.866165ms)
  I1215 12:29:56.155622 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 4.524097ms)
  I1215 12:29:56.155852 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 4.724262ms)
  I1215 12:29:56.156305 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.958271ms)
  I1215 12:29:56.156397 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.105055ms)
  I1215 12:29:56.156514 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 5.34439ms)
  I1215 12:29:56.157224 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 5.908741ms)
  I1215 12:29:56.157258 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 6.057612ms)
  I1215 12:29:56.157293 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 6.013ms)
  I1215 12:29:56.157308 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 5.959341ms)
  I1215 12:29:56.157387 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 6.088942ms)
  I1215 12:29:56.157596 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 6.266481ms)
  I1215 12:29:56.157869 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 6.647826ms)
  I1215 12:29:56.158654 21 proxy.go:558] (11) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 7.356491ms)
  I1215 12:29:56.161868 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.124354ms)
  I1215 12:29:56.162099 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.182987ms)
  I1215 12:29:56.162246 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 3.495156ms)
  I1215 12:29:56.162472 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 3.718287ms)
  I1215 12:29:56.162536 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 3.708878ms)
  I1215 12:29:56.162918 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.112794ms)
  I1215 12:29:56.162954 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 4.149606ms)
  I1215 12:29:56.163485 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 4.584846ms)
  I1215 12:29:56.163492 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.624498ms)
  I1215 12:29:56.163978 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 5.130772ms)
  I1215 12:29:56.164028 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.04053ms)
  I1215 12:29:56.164547 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.678367ms)
  I1215 12:29:56.164691 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.745148ms)
  I1215 12:29:56.164921 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.940636ms)
  I1215 12:29:56.165305 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.312404ms)
  I1215 12:29:56.167114 21 proxy.go:558] (12) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 8.145838ms)
  I1215 12:29:56.171342 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 4.103272ms)
  I1215 12:29:56.171603 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.266665ms)
  I1215 12:29:56.171882 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 4.569245ms)
  I1215 12:29:56.171936 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.653645ms)
  I1215 12:29:56.171938 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 4.62456ms)
  I1215 12:29:56.172076 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 4.793743ms)
  I1215 12:29:56.172753 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.598215ms)
  I1215 12:29:56.173120 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.833608ms)
  I1215 12:29:56.173156 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 5.947382ms)
  I1215 12:29:56.173230 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 6.080559ms)
  I1215 12:29:56.173354 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 6.035029ms)
  I1215 12:29:56.173401 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 6.131093ms)
  I1215 12:29:56.173792 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 6.614028ms)
  I1215 12:29:56.174012 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.669792ms)
  I1215 12:29:56.174056 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 6.762087ms)
  I1215 12:29:56.174230 21 proxy.go:558] (13) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.892429ms)
  I1215 12:29:56.178926 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.636189ms)
  I1215 12:29:56.178996 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.730729ms)
  I1215 12:29:56.179025 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 4.69016ms)
  I1215 12:29:56.179285 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.939064ms)
  I1215 12:29:56.179403 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.082369ms)
  I1215 12:29:56.179967 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 5.695684ms)
  I1215 12:29:56.180006 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.602666ms)
  I1215 12:29:56.180468 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 6.022589ms)
  I1215 12:29:56.180882 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 6.454087ms)
  I1215 12:29:56.180967 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.599961ms)
  I1215 12:29:56.181190 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.881691ms)
  I1215 12:29:56.181339 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 6.935031ms)
  I1215 12:29:56.181865 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 7.44515ms)
  I1215 12:29:56.181902 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 7.480483ms)
  I1215 12:29:56.182224 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 7.777363ms)
  I1215 12:29:56.182701 21 proxy.go:558] (14) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 8.270868ms)
  I1215 12:29:56.186157 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 3.371573ms)
  I1215 12:29:56.186346 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 3.249676ms)
  I1215 12:29:56.186853 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.794499ms)
  I1215 12:29:56.187227 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 4.251668ms)
  I1215 12:29:56.187232 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.91359ms)
  I1215 12:29:56.188061 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.875289ms)
  I1215 12:29:56.188071 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.842965ms)
  I1215 12:29:56.188093 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.804401ms)
  I1215 12:29:56.189148 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 6.023242ms)
  I1215 12:29:56.189156 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.941477ms)
  I1215 12:29:56.189229 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 5.974728ms)
  I1215 12:29:56.189666 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 6.536735ms)
  I1215 12:29:56.189680 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 6.472557ms)
  I1215 12:29:56.189901 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.624301ms)
  I1215 12:29:56.190270 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 7.115108ms)
  I1215 12:29:56.190320 21 proxy.go:558] (15) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 7.064675ms)
  I1215 12:29:56.194200 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.793781ms)
  I1215 12:29:56.194463 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 4.002329ms)
  I1215 12:29:56.194907 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.299078ms)
  I1215 12:29:56.195015 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 4.420065ms)
  I1215 12:29:56.195058 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.496627ms)
  I1215 12:29:56.196198 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.783925ms)
  I1215 12:29:56.196206 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.723557ms)
  I1215 12:29:56.196229 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 5.75417ms)
  I1215 12:29:56.196204 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 5.628654ms)
  I1215 12:29:56.196257 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 5.819122ms)
  I1215 12:29:56.196214 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.667276ms)
  I1215 12:29:56.196467 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.951221ms)
  I1215 12:29:56.196462 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 5.850216ms)
  I1215 12:29:56.196627 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.089934ms)
  I1215 12:29:56.196644 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 6.087736ms)
  I1215 12:29:56.197216 21 proxy.go:558] (16) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 6.649029ms)
  I1215 12:29:56.200225 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 2.970157ms)
  I1215 12:29:56.200417 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 3.131205ms)
  I1215 12:29:56.201120 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.810001ms)
  I1215 12:29:56.201268 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 3.86451ms)
  I1215 12:29:56.201732 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.331141ms)
  I1215 12:29:56.201987 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 4.625994ms)
  I1215 12:29:56.202327 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 4.887746ms)
  I1215 12:29:56.202511 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 5.146965ms)
  I1215 12:29:56.203147 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.858795ms)
  I1215 12:29:56.203162 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 5.790079ms)
  I1215 12:29:56.203441 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 6.027265ms)
  I1215 12:29:56.203594 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 6.183436ms)
  I1215 12:29:56.203896 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.466485ms)
  I1215 12:29:56.204577 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 7.251577ms)
  I1215 12:29:56.204759 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 7.368678ms)
  I1215 12:29:56.205767 21 proxy.go:558] (17) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 8.359504ms)
  I1215 12:29:56.209131 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.30875ms)
  I1215 12:29:56.209379 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 3.430919ms)
  I1215 12:29:56.209595 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 3.769012ms)
  I1215 12:29:56.209594 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 3.715004ms)
  I1215 12:29:56.210672 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 4.739924ms)
  I1215 12:29:56.210728 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.821518ms)
  I1215 12:29:56.210794 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 4.821265ms)
  I1215 12:29:56.211138 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.236202ms)
  I1215 12:29:56.211181 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 5.199672ms)
  I1215 12:29:56.211388 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.390047ms)
  I1215 12:29:56.211429 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 5.51667ms)
  I1215 12:29:56.212035 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 6.109636ms)
  I1215 12:29:56.212067 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 6.220881ms)
  I1215 12:29:56.212536 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 6.592393ms)
  I1215 12:29:56.212582 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 6.662366ms)
  I1215 12:29:56.213007 21 proxy.go:558] (18) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 7.056089ms)
  I1215 12:29:56.216286 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:462/proxy/: tls qux (200; 3.247929ms)
  I1215 12:29:56.216364 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.205466ms)
  I1215 12:29:56.216662 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">test<... (200; 3.284142ms)
  I1215 12:29:56.216951 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:460/proxy/: tls baz (200; 3.398146ms)
  I1215 12:29:56.217025 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.807438ms)
  I1215 12:29:56.217035 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:160/proxy/: foo (200; 3.583915ms)
  I1215 12:29:56.217377 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/https:proxy-service-6sgdc-nf8v9:443/proxy/tlsrewritem... (200; 3.888866ms)
  I1215 12:29:56.217532 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9:162/proxy/: bar (200; 3.483174ms)
  I1215 12:29:56.217827 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/proxy-service-6sgdc-nf8v9/proxy/rewriteme">test</a> (200; 3.848986ms)
  I1215 12:29:56.218034 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname1/proxy/: foo (200; 4.417534ms)
  I1215 12:29:56.218237 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/: <a href="/api/v1/namespaces/proxy-1030/pods/http:proxy-service-6sgdc-nf8v9:1080/proxy/rewriteme">... (200; 4.337344ms)
  I1215 12:29:56.218238 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/services/proxy-service-6sgdc:portname2/proxy/: bar (200; 5.121292ms)
  I1215 12:29:56.218887 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname2/proxy/: tls qux (200; 5.582124ms)
  I1215 12:29:56.218898 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname2/proxy/: bar (200; 5.127898ms)
  I1215 12:29:56.218966 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/services/https:proxy-service-6sgdc:tlsportname1/proxy/: tls baz (200; 5.142142ms)
  I1215 12:29:56.219122 21 proxy.go:558] (19) /api/v1/namespaces/proxy-1030/services/http:proxy-service-6sgdc:portname1/proxy/: foo (200; 5.425003ms)
  STEP: deleting ReplicationController proxy-service-6sgdc in namespace proxy-1030, will wait for the garbage collector to delete the pods @ 12/15/24 12:29:56.219
  I1215 12:29:56.289882 21 resources.go:139] Deleting ReplicationController proxy-service-6sgdc took: 16.688745ms
  I1215 12:29:56.390788 21 resources.go:163] Terminating ReplicationController proxy-service-6sgdc pods took: 100.890585ms
  I1215 12:29:58.491532 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1030" for this suite. @ 12/15/24 12:29:58.495
• [5.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 12/15/24 12:29:58.519
  I1215 12:29:58.519538 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:29:58.52
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:29:58.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:29:58.547
  STEP: Creating the pod @ 12/15/24 12:29:58.55
  I1215 12:30:01.139997 21 pod_client.go:141] Successfully updated pod "labelsupdatebfa1b967-509c-4bdc-8937-93c69c20564c"
  I1215 12:30:03.198134 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-481" for this suite. @ 12/15/24 12:30:03.202
• [4.727 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 12/15/24 12:30:03.248
  I1215 12:30:03.248215 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:30:03.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:03.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:03.28
  STEP: Setting up server cert @ 12/15/24 12:30:03.344
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:30:03.766
  STEP: Deploying the webhook pod @ 12/15/24 12:30:03.789
  STEP: Wait for the deployment to be ready @ 12/15/24 12:30:03.835
  I1215 12:30:03.852178 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 12:30:05.931
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:30:05.996
  I1215 12:30:06.997193 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/15/24 12:30:07.355
  STEP: Creating a configMap that should be mutated @ 12/15/24 12:30:07.372
  STEP: Deleting the collection of validation webhooks @ 12/15/24 12:30:07.431
  STEP: Creating a configMap that should not be mutated @ 12/15/24 12:30:07.575
  I1215 12:30:07.743153 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7518" for this suite. @ 12/15/24 12:30:07.778
  STEP: Destroying namespace "webhook-markers-9133" for this suite. @ 12/15/24 12:30:07.787
• [4.574 seconds]
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 12/15/24 12:30:07.822
  I1215 12:30:07.822610 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replication-controller @ 12/15/24 12:30:07.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:07.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:07.893
  I1215 12:30:07.910180 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 12/15/24 12:30:08.95
  STEP: Checking rc "condition-test" has the desired failure condition set @ 12/15/24 12:30:08.972
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 12/15/24 12:30:09.988
  I1215 12:30:10.020157 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 12/15/24 12:30:10.02
  I1215 12:30:10.032142 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-254" for this suite. @ 12/15/24 12:30:10.036
• [2.227 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 12/15/24 12:30:10.049
  I1215 12:30:10.049604 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename disruption @ 12/15/24 12:30:10.05
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:10.13
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:10.134
  STEP: Creating a kubernetes client @ 12/15/24 12:30:10.137
  I1215 12:30:10.137073 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename disruption-2 @ 12/15/24 12:30:10.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:10.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:10.195
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:30:10.214
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:30:12.308
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:30:12.353
  STEP: listing a collection of PDBs across all namespaces @ 12/15/24 12:30:14.37
  STEP: listing a collection of PDBs in namespace disruption-9777 @ 12/15/24 12:30:14.374
  STEP: deleting a collection of PDBs @ 12/15/24 12:30:14.379
  STEP: Waiting for the PDB collection to be deleted @ 12/15/24 12:30:14.407
  I1215 12:30:14.409967 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-5369" for this suite. @ 12/15/24 12:30:14.414
  I1215 12:30:14.453583 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9777" for this suite. @ 12/15/24 12:30:14.458
• [4.418 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 12/15/24 12:30:14.467
  I1215 12:30:14.467866 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:30:14.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:14.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:14.504
  STEP: Creating configMap with name configmap-test-volume-86aa32ac-afa4-4171-9ed5-4d023ad15827 @ 12/15/24 12:30:14.506
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:30:14.512
  STEP: Saw pod success @ 12/15/24 12:30:18.56
  I1215 12:30:18.563437 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-49e338fc-f5dd-44c6-973a-175726de0602 container configmap-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:30:18.572
  I1215 12:30:18.617697 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4583" for this suite. @ 12/15/24 12:30:18.621
• [4.175 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 12/15/24 12:30:18.643
  I1215 12:30:18.643375 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:30:18.644
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:18.681
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:18.684
  STEP: Creating configMap with name projected-configmap-test-volume-2f437a13-c0ca-4574-b9e7-ea31545de738 @ 12/15/24 12:30:18.687
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:30:18.693
  STEP: Saw pod success @ 12/15/24 12:30:22.733
  I1215 12:30:22.737062 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-configmaps-e16a9565-5ff2-42dc-bc67-357997ec9ae7 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:30:22.743
  I1215 12:30:22.781739 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9546" for this suite. @ 12/15/24 12:30:22.786
• [4.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 12/15/24 12:30:22.802
  I1215 12:30:22.802585 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 12:30:22.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:22.857
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:22.86
  I1215 12:30:22.863204 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I1215 12:30:22.878498 21 deployment.go:1200] Waiting for observed generation 1
  I1215 12:30:24.917485 21 deployment.go:1205] Waiting for all required pods to come up
  I1215 12:30:24.924948 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 12/15/24 12:30:24.925
  I1215 12:30:26.963486 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I1215 12:30:26.969981 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I1215 12:30:26.991878 21 deployment.go:313] Updating deployment webserver-deployment
  I1215 12:30:26.991944 21 deployment.go:1224] Waiting for observed generation 2
  I1215 12:30:29.000886 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I1215 12:30:29.004533 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I1215 12:30:29.019035 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1215 12:30:29.043012 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I1215 12:30:29.043065 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I1215 12:30:29.045745 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I1215 12:30:29.052288 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I1215 12:30:29.052466 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I1215 12:30:29.071400 21 deployment.go:313] Updating deployment webserver-deployment
  I1215 12:30:29.071471 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I1215 12:30:29.077089 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I1215 12:30:31.098395 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I1215 12:30:31.289317 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fbf84058-a9ed-44e7-9645-91c6e20ebbb3",
      ResourceVersion: (string) (len=7) "5389310",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 33,
      UpdatedReplicas: (int32) 13,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1215 12:30:31.327278 21 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
      ResourceVersion: (string) (len=7) "5389302",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862626,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fbf84058-a9ed-44e7-9645-91c6e20ebbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 66 38 34 30  35 38 2d 61 39 65 64 2d  |\"fbf84058-a9ed-|
              00000120  34 34 65 37 2d 39 36 34  35 2d 39 31 63 36 65 32  |44e7-9645-91c6e2|
              00000130  30 65 62 62 62 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0ebbb3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 13,
      FullyLabeledReplicas: (int32) 13,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 12:30:31.327823 21 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I1215 12:30:31.328090 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
      ResourceVersion: (string) (len=7) "5389304",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "fbf84058-a9ed-44e7-9645-91c6e20ebbb3",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 62 66 38 34 30  35 38 2d 61 39 65 64 2d  |\"fbf84058-a9ed-|
              00000120  34 34 65 37 2d 39 36 34  35 2d 39 31 63 36 65 32  |44e7-9645-91c6e2|
              00000130  30 65 62 62 62 33 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0ebbb3\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 20,
      FullyLabeledReplicas: (int32) 20,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 12:30:31.339034 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-4ftnm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-4ftnm",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b7a5813-5c0f-4e27-ad51-37326f5c7a1a",
      ResourceVersion: (string) (len=7) "5389328",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dlctw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dlctw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.340839 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-5vklx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-5vklx",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ac09908c-61fd-4e30-90cc-b82357f3ff08",
      ResourceVersion: (string) (len=7) "5389327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wt5qw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wt5qw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.342517 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-7682z" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7682z",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7b646dd8-8a5c-4024-8231-540963d494c1",
      ResourceVersion: (string) (len=7) "5389343",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=703) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  32 2e 33 36 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |2.36\"}":{".":{}|
              000002a0  2c 22 66 3a 69 70 22 3a  7b 7d 7d 7d 2c 22 66 3a  |,"f:ip":{}}},"f:|
              000002b0  73 74 61 72 74 54 69 6d  65 22 3a 7b 7d 7d 7d     |startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-m5kbj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-m5kbj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) (len=9) "10.0.2.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.2.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.344683 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-8q22n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-8q22n",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c0b84e40-5ed7-468a-885a-53368a7b4e89",
      ResourceVersion: (string) (len=7) "5389340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tp55s",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tp55s",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.346153 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-c8v2l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-c8v2l",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "91f05d20-bd68-47a3-9a8b-010cae455011",
      ResourceVersion: (string) (len=7) "5389308",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wnqg5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wnqg5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.347851 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-cbgqj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-cbgqj",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25a8580b-00a7-49b6-ba1a-8933ef9985fd",
      ResourceVersion: (string) (len=7) "5389360",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=702) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  30 2e 31 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |0.1\"}":{".":{},|
              000002a0  22 66 3a 69 70 22 3a 7b  7d 7d 7d 2c 22 66 3a 73  |"f:ip":{}}},"f:s|
              000002b0  74 61 72 74 54 69 6d 65  22 3a 7b 7d 7d 7d        |tartTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9mf5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9mf5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=8) "10.0.0.1",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=8) "10.0.0.1"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.349171 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-flp98" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-flp98",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f56e0ef0-978a-4532-81f0-6283e4787705",
      ResourceVersion: (string) (len=7) "5389314",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f8s8f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f8s8f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.351298 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-jxt9v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-jxt9v",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef64733f-b48f-41a1-b336-5006d3f67caa",
      ResourceVersion: (string) (len=7) "5389337",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5v2nz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5v2nz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.353453 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-llbcv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-llbcv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f539e65c-1364-40fd-9fca-45cff3b06450",
      ResourceVersion: (string) (len=7) "5389269",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-t7l2x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-t7l2x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.355143 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-q8m82" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-q8m82",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6167fc98-87f3-4c7a-8246-5db1a4bee61d",
      ResourceVersion: (string) (len=7) "5389187",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rff5w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rff5w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.356924 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-r5dcx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-r5dcx",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "187997a4-75f0-474a-80f1-6c354da64b84",
      ResourceVersion: (string) (len=7) "5389186",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-25bdz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-25bdz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.364260 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-vxvzz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-vxvzz",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2dd5e32b-d414-4526-b933-afc82539239a",
      ResourceVersion: (string) (len=7) "5389347",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=704) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 70 6f 64 49 50 22 3a  7b 7d 2c 22 66 3a 70 6f  |:podIP":{},"f:po|
              00000270  64 49 50 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |dIPs":{".":{},"k|
              00000280  3a 7b 5c 22 69 70 5c 22  3a 5c 22 31 30 2e 30 2e  |:{\"ip\":\"10.0.|
              00000290  31 2e 31 38 34 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |1.184\"}":{".":{|
              000002a0  7d 2c 22 66 3a 69 70 22  3a 7b 7d 7d 7d 2c 22 66  |},"f:ip":{}}},"f|
              000002b0  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xkgv2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xkgv2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862627,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) (len=10) "10.0.1.184",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.184"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862627,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=12) "ErrImagePull",
              Message: (string) (len=262) "failed to pull and unpack image \"docker.io/library/webserver:404\": failed to resolve reference \"docker.io/library/webserver:404\": pull access denied, repository does not exist or may require authorization: server message: insufficient_scope: authorization failed"
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.366104 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-wrvfw" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-wrvfw",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "814a16b7-6994-4a04-b174-746d26d8b7ff",
      ResourceVersion: (string) (len=7) "5389291",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "c29f5dab-0423-4aee-8b17-f3f9fd8d07f7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 63 32  39 66 35 64 61 62 2d 30  |d\":\"c29f5dab-0|
              00000090  34 32 33 2d 34 61 65 65  2d 38 62 31 37 2d 66 33  |423-4aee-8b17-f3|
              000000a0  66 39 66 64 38 64 30 37  66 37 5c 22 7d 22 3a 7b  |f9fd8d07f7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vtzbh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vtzbh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.367939 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-45hql" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-45hql",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "119a9549-608a-4cc3-8d86-530d427fc8de",
      ResourceVersion: (string) (len=7) "5389247",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sc8h5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sc8h5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.369597 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-4bjnf" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4bjnf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "45203379-50b0-4797-a4f6-465df4e4e658",
      ResourceVersion: (string) (len=7) "5389336",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jr8wp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jr8wp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.371891 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-4f6kw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4f6kw",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c9150eb2-06aa-4058-a808-a96171bd4026",
      ResourceVersion: (string) (len=7) "5389106",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 32 2e 31 32 36  5c 22 7d 22 3a 7b 22 2e  |.0.2.126\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-trlwn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-trlwn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) (len=10) "10.0.2.126",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.2.126"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://824557d9bcf21d6dfee1c27738fa4059aa1b833999b0e099331a48219577e6b9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.373977 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-6xcr2" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-6xcr2",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5f4c6ec5-c4de-4a5c-b2c4-bfcfd93947e5",
      ResourceVersion: (string) (len=7) "5389341",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-djnzw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-djnzw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.375800 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-7dqq5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7dqq5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bf477bf-9639-4bc3-a74c-29ab0d27252a",
      ResourceVersion: (string) (len=7) "5389322",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qsdlh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qsdlh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.378392 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-9gphd" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-9gphd",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f62a37b-698e-4abd-9792-2ce6d5a4ac32",
      ResourceVersion: (string) (len=7) "5389317",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jwvvg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jwvvg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.379824 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-9rh55" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-9rh55",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fced617f-5446-44fb-8a3b-2cb26b5d77a1",
      ResourceVersion: (string) (len=7) "5389320",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h4mnq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h4mnq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.382706 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-bjq95" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-bjq95",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "83ac4e34-44dd-432e-b972-a2e135130d5a",
      ResourceVersion: (string) (len=7) "5389331",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nbdv6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nbdv6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.385424 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-ctsxv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-ctsxv",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "76db70a9-dfda-4a46-aef3-1117bc1069ce",
      ResourceVersion: (string) (len=7) "5389294",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vlwcv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vlwcv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.389120 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-drprc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-drprc",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ffac507d-6e40-4c45-87ca-182eb6f72a59",
      ResourceVersion: (string) (len=7) "5389297",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bxgs5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bxgs5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.390990 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-j87dw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-j87dw",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4a5c7055-3a4f-4d3e-a445-c57293547027",
      ResourceVersion: (string) (len=7) "5389114",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 33 36 5c  22 7d 22 3a 7b 22 2e 22  |.0.1.36\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4ph48",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4ph48",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) (len=9) "10.0.1.36",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.1.36"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://d768c91bbe446ec5dd4aefc4b20a8a02990a1961c233b05c22feaf2da8b85810",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.392560 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-jksv5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-jksv5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "de7e18d3-e28a-4bb0-b4bd-a6bef51f985b",
      ResourceVersion: (string) (len=7) "5389313",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wjvxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wjvxc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.394066 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-ldgql" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-ldgql",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a78d5fc5-7965-41e5-9d96-012dd698c43b",
      ResourceVersion: (string) (len=7) "5389335",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862630,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w87hw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w87hw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.396027 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-pgtg4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-pgtg4",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99a5ca4b-8d25-4f02-b678-05e1f9c87296",
      ResourceVersion: (string) (len=7) "5389311",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fg2bv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fg2bv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862629,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862629,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.398212 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-qvjz9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-qvjz9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "636f2112-42a0-4cbf-a927-a35c4a39085d",
      ResourceVersion: (string) (len=7) "5389082",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 36 33 5c  22 7d 22 3a 7b 22 2e 22  |.0.0.63\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g6llt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g6llt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=9) "10.0.0.63",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.0.63"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://7c7111e3d5df89f8b67e47970bde6dcfa0f7427cc6797dbbd192ed2ad6c41bf1",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.400967 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-tk4mq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tk4mq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "18646fb0-1156-4d89-bd4e-b1d2c7b5f9a6",
      ResourceVersion: (string) (len=7) "5389100",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 32 2e 34 36 5c  22 7d 22 3a 7b 22 2e 22  |.0.2.46\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2nlnk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2nlnk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) (len=9) "10.0.2.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.2.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://337151355f6ce42fd6ff5af22f20d4462d39abb2b17e5fa8f8d5515a2f0d4d0d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.404459 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-wc8bb" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-wc8bb",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "70b8ed2e-2b86-48fb-87b9-97e586aebcd5",
      ResourceVersion: (string) (len=7) "5389129",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 36 35 5c  22 7d 22 3a 7b 22 2e 22  |.0.0.65\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-gs822",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-gs822",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=9) "10.0.0.65",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.0.65"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://80f40fcaf1f5e84e0f3ae11a91403240b1551fb1c9a52872b5d61d1a80a0aa60",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.406849 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-x7j2j" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-x7j2j",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "af26fcd0-5751-4310-a510-bef514cef8ed",
      ResourceVersion: (string) (len=7) "5389110",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 32 35 33  5c 22 7d 22 3a 7b 22 2e  |.0.1.253\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bhbwm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bhbwm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) (len=10) "10.0.1.253",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.253"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://06b545a9fb096efbb752aed4aaf90abd2fc8ee5674cdc6bbc67b41cf629d6b14",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.408886 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-xsbjn" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-xsbjn",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae16a52c-9ccd-4c16-a9e9-63f5b837ab68",
      ResourceVersion: (string) (len=7) "5389096",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 32 2e 37 39 5c  22 7d 22 3a 7b 22 2e 22  |.0.2.79\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vxpx6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vxpx6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-3",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862624,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.35",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.35"
        }
      },
      PodIP: (string) (len=9) "10.0.2.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.0.2.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://6c5692200ecb1153d9492bf773b4ab45043aebd3934db519723de4fbff7d1e16",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.410573 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-zh99k" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zh99k",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=14) "deployment-177",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8341b600-b625-4436-9172-a8d78f6c35e4",
      ResourceVersion: (string) (len=7) "5389116",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862622,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "055bb1a0-d20a-4532-b27d-33c9971630c2",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862622,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 35  35 62 62 31 61 30 2d 64  |d\":\"055bb1a0-d|
              00000090  32 30 61 2d 34 35 33 32  2d 62 32 37 64 2d 33 33  |20a-4532-b27d-33|
              000000a0  63 39 39 37 31 36 33 30  63 32 5c 22 7d 22 3a 7b  |c9971630c2\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 31 2e 32 34 34  5c 22 7d 22 3a 7b 22 2e  |.0.1.244\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wlwbv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wlwbv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862625,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869862623,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=13) "172.10.60.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=13) "172.10.60.210"
        }
      },
      PodIP: (string) (len=10) "10.0.1.244",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.1.244"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869862623,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869862624,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://9690ecf2cadf83095ce4696df994c54d917cbed3a6b40cf132aa99ed13de3bc9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:30:31.411684 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-177" for this suite. @ 12/15/24 12:30:31.418
• [8.653 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 12/15/24 12:30:31.457
  I1215 12:30:31.457372 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename job @ 12/15/24 12:30:31.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:31.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:31.512
  STEP: Creating a job @ 12/15/24 12:30:31.587
  STEP: Ensuring active pods == parallelism @ 12/15/24 12:30:31.623
  STEP: Orphaning one of the Job's Pods @ 12/15/24 12:30:33.632
  I1215 12:30:34.171769 21 pod_client.go:141] Successfully updated pod "adopt-release-4dsvq"
  STEP: Checking that the Job readopts the Pod @ 12/15/24 12:30:34.171
  STEP: Removing the labels from the Job's Pod @ 12/15/24 12:30:36.182
  I1215 12:30:36.791680 21 pod_client.go:141] Successfully updated pod "adopt-release-4dsvq"
  STEP: Checking that the Job releases the Pod @ 12/15/24 12:30:36.791
  I1215 12:30:38.848761 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5059" for this suite. @ 12/15/24 12:30:38.857
• [7.413 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 12/15/24 12:30:38.87
  I1215 12:30:38.870730 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename security-context-test @ 12/15/24 12:30:38.871
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:39.091
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:39.095
  I1215 12:30:43.264393 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-9993" for this suite. @ 12/15/24 12:30:43.269
• [4.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 12/15/24 12:30:43.288
  I1215 12:30:43.288830 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:30:43.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:43.331
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:43.334
  STEP: creating service endpoint-test2 in namespace services-3613 @ 12/15/24 12:30:43.336
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3613 to expose endpoints map[] @ 12/15/24 12:30:43.407
  I1215 12:30:43.424357 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3613 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-3613 @ 12/15/24 12:30:43.424
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3613 to expose endpoints map[pod1:[80]] @ 12/15/24 12:30:47.471
  I1215 12:30:47.480838 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3613 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 12/15/24 12:30:47.48
  I1215 12:30:47.480912 21 resource.go:361] Creating new exec pod
  I1215 12:30:50.526685 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-3613 exec execpodwrrd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1215 12:30:50.693650 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1215 12:30:50.693714 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:30:50.693837 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-3613 exec execpodwrrd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.27 80'
  I1215 12:30:50.881355 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.56.27 80\nConnection to 10.233.56.27 80 port [tcp/http] succeeded!\n"
  I1215 12:30:50.881430 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-3613 @ 12/15/24 12:30:50.881
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3613 to expose endpoints map[pod1:[80] pod2:[80]] @ 12/15/24 12:30:52.904
  I1215 12:30:52.917768 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3613 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 12/15/24 12:30:52.917
  I1215 12:30:53.918893 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-3613 exec execpodwrrd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1215 12:30:54.066690 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1215 12:30:54.066750 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:30:54.066849 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-3613 exec execpodwrrd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.27 80'
  I1215 12:30:54.193003 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.56.27 80\nConnection to 10.233.56.27 80 port [tcp/http] succeeded!\n"
  I1215 12:30:54.193076 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-3613 @ 12/15/24 12:30:54.193
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3613 to expose endpoints map[pod2:[80]] @ 12/15/24 12:30:54.244
  I1215 12:30:54.255774 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3613 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 12/15/24 12:30:54.255
  I1215 12:30:55.256533 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-3613 exec execpodwrrd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I1215 12:30:55.383910 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I1215 12:30:55.383974 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:30:55.384088 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-3613 exec execpodwrrd6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.56.27 80'
  I1215 12:30:55.524065 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.56.27 80\nConnection to 10.233.56.27 80 port [tcp/http] succeeded!\n"
  I1215 12:30:55.524186 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-3613 @ 12/15/24 12:30:55.524
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-3613 to expose endpoints map[] @ 12/15/24 12:30:55.622
  I1215 12:30:55.640634 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-3613 exposes endpoints map[]
  I1215 12:30:55.687165 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3613" for this suite. @ 12/15/24 12:30:55.715
• [12.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 12/15/24 12:30:55.735
  I1215 12:30:55.735632 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename apf @ 12/15/24 12:30:55.737
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:55.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:55.798
  STEP: getting /apis @ 12/15/24 12:30:55.801
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 12/15/24 12:30:55.81
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 12/15/24 12:30:55.815
  STEP: creating @ 12/15/24 12:30:55.817
  STEP: getting @ 12/15/24 12:30:55.895
  STEP: listing @ 12/15/24 12:30:55.898
  STEP: watching @ 12/15/24 12:30:55.941
  I1215 12:30:55.941213 21 flowcontrol.go:394] starting watch
  STEP: patching @ 12/15/24 12:30:55.942
  STEP: updating @ 12/15/24 12:30:55.965
  I1215 12:30:55.990394 21 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 12/15/24 12:30:55.99
  STEP: patching /status @ 12/15/24 12:30:55.994
  STEP: updating /status @ 12/15/24 12:30:56.001
  STEP: deleting @ 12/15/24 12:30:56.032
  STEP: deleting a collection @ 12/15/24 12:30:56.121
  I1215 12:30:56.174721 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-7287" for this suite. @ 12/15/24 12:30:56.179
• [0.470 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 12/15/24 12:30:56.208
  I1215 12:30:56.208403 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename containers @ 12/15/24 12:30:56.209
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:56.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:56.244
  I1215 12:30:58.274707 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3244" for this suite. @ 12/15/24 12:30:58.279
• [2.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 12/15/24 12:30:58.314
  I1215 12:30:58.314742 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:30:58.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:30:58.36
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:30:58.364
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/15/24 12:30:58.366
  STEP: Saw pod success @ 12/15/24 12:31:02.472
  I1215 12:31:02.493366 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-93d9983a-ac7a-448e-ae03-1d3741e6c592 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:31:02.499
  I1215 12:31:02.547923 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-756" for this suite. @ 12/15/24 12:31:02.552
• [4.252 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 12/15/24 12:31:02.567
  I1215 12:31:02.567201 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-runtime @ 12/15/24 12:31:02.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:31:02.631
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:31:02.634
  STEP: create the container @ 12/15/24 12:31:02.637
  W1215 12:31:02.646645      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 12/15/24 12:31:02.646
  STEP: get the container status @ 12/15/24 12:31:06.731
  STEP: the container should be terminated @ 12/15/24 12:31:06.734
  STEP: the termination message should be set @ 12/15/24 12:31:06.734
  I1215 12:31:06.734886 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/15/24 12:31:06.734
  I1215 12:31:06.804036 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-6592" for this suite. @ 12/15/24 12:31:06.808
• [4.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 12/15/24 12:31:06.861
  I1215 12:31:06.861671 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replicaset @ 12/15/24 12:31:06.862
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:31:06.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:31:06.89
  I1215 12:31:06.954227 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1215 12:31:11.958956 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/24 12:31:11.959
  STEP: Scaling up "test-rs" replicaset @ 12/15/24 12:31:11.959
  I1215 12:31:11.984255 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 12/15/24 12:31:11.984
  I1215 12:31:12.048904 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7838 with ReadyReplicas 1, AvailableReplicas 1
  I1215 12:31:12.122757 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7838 with ReadyReplicas 1, AvailableReplicas 1
  I1215 12:31:12.262315 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7838 with ReadyReplicas 1, AvailableReplicas 1
  I1215 12:31:12.340566 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7838 with ReadyReplicas 1, AvailableReplicas 1
  I1215 12:31:13.510888 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-7838 with ReadyReplicas 2, AvailableReplicas 2
  I1215 12:31:13.952835 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-7838 with ReadyReplicas 3 found true
  I1215 12:31:13.953122 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7838" for this suite. @ 12/15/24 12:31:13.958
• [7.108 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 12/15/24 12:31:13.969
  I1215 12:31:13.969805 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:31:13.97
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:31:14.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:31:14.006
  STEP: Creating configMap with name configmap-test-upd-39fd7a49-973f-42dd-b7fc-22d98816b131 @ 12/15/24 12:31:14.012
  STEP: Creating the pod @ 12/15/24 12:31:14.018
  STEP: Updating configmap configmap-test-upd-39fd7a49-973f-42dd-b7fc-22d98816b131 @ 12/15/24 12:31:16.121
  STEP: waiting to observe update in volume @ 12/15/24 12:31:16.134
  I1215 12:32:44.917597 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8461" for this suite. @ 12/15/24 12:32:44.921
• [90.962 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 12/15/24 12:32:44.933
  I1215 12:32:44.933131 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:32:44.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:32:44.989
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:32:44.992
  STEP: Counting existing ResourceQuota @ 12/15/24 12:32:44.995
  STEP: Creating a ResourceQuota @ 12/15/24 12:32:49.998
  STEP: Ensuring resource quota status is calculated @ 12/15/24 12:32:50.021
  STEP: Creating a ReplicaSet @ 12/15/24 12:32:52.033
  STEP: Ensuring resource quota status captures replicaset creation @ 12/15/24 12:32:52.069
  STEP: Deleting a ReplicaSet @ 12/15/24 12:32:54.075
  STEP: Ensuring resource quota status released usage @ 12/15/24 12:32:54.084
  I1215 12:32:56.089346 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1421" for this suite. @ 12/15/24 12:32:56.094
• [11.174 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 12/15/24 12:32:56.109
  I1215 12:32:56.109134 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:32:56.11
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:32:56.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:32:56.174
  STEP: Creating secret with name s-test-opt-del-64cd7f39-d238-4b7e-80d2-ff141f5d1749 @ 12/15/24 12:32:56.183
  STEP: Creating secret with name s-test-opt-upd-a916dee8-b164-48db-86b2-783ee9ee16f5 @ 12/15/24 12:32:56.191
  STEP: Creating the pod @ 12/15/24 12:32:56.205
  STEP: Deleting secret s-test-opt-del-64cd7f39-d238-4b7e-80d2-ff141f5d1749 @ 12/15/24 12:32:58.262
  STEP: Updating secret s-test-opt-upd-a916dee8-b164-48db-86b2-783ee9ee16f5 @ 12/15/24 12:32:58.283
  STEP: Creating secret with name s-test-opt-create-78915cd4-9cbd-4724-86fd-ce513fd473ff @ 12/15/24 12:32:58.295
  STEP: waiting to observe update in volume @ 12/15/24 12:32:58.307
  I1215 12:34:20.777191 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4574" for this suite. @ 12/15/24 12:34:20.782
• [84.683 seconds]
------------------------------
SS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 12/15/24 12:34:20.792
  I1215 12:34:20.792631 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename disruption @ 12/15/24 12:34:20.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:20.82
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:20.824
  STEP: Creating a pdb that targets all three pods in a test replica set @ 12/15/24 12:34:20.827
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:34:20.833
  STEP: First trying to evict a pod which shouldn't be evictable @ 12/15/24 12:34:22.852
  STEP: Waiting for all pods to be running @ 12/15/24 12:34:22.852
  I1215 12:34:22.855927 21 disruption.go:567] pods: 0 < 3
  STEP: locating a running pod @ 12/15/24 12:34:24.857
  STEP: Updating the pdb to allow a pod to be evicted @ 12/15/24 12:34:24.868
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:34:24.878
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/15/24 12:34:26.883
  STEP: Waiting for all pods to be running @ 12/15/24 12:34:26.883
  STEP: Waiting for the pdb to observed all healthy pods @ 12/15/24 12:34:26.887
  STEP: Patching the pdb to disallow a pod to be evicted @ 12/15/24 12:34:26.929
  STEP: Waiting for the pdb to be processed @ 12/15/24 12:34:26.961
  STEP: Waiting for all pods to be running @ 12/15/24 12:34:28.972
  STEP: locating a running pod @ 12/15/24 12:34:28.979
  STEP: Deleting the pdb to allow a pod to be evicted @ 12/15/24 12:34:28.988
  STEP: Waiting for the pdb to be deleted @ 12/15/24 12:34:28.997
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 12/15/24 12:34:29
  STEP: Waiting for all pods to be running @ 12/15/24 12:34:29
  I1215 12:34:29.033422 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7104" for this suite. @ 12/15/24 12:34:29.039
• [8.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 12/15/24 12:34:29.047
  I1215 12:34:29.047697 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl-logs @ 12/15/24 12:34:29.049
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:29.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:29.086
  STEP: creating an pod @ 12/15/24 12:34:29.09
  I1215 12:34:29.090423 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I1215 12:34:29.199384 21 builder.go:146] stderr: ""
  I1215 12:34:29.199446 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 12/15/24 12:34:29.199
  I1215 12:34:29.199655 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I1215 12:34:31.208377 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 12/15/24 12:34:31.208
  I1215 12:34:31.208535 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 logs logs-generator logs-generator'
  I1215 12:34:31.284199 21 builder.go:146] stderr: ""
  I1215 12:34:31.284321 21 builder.go:147] stdout: "I1215 12:34:30.094203       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/cvp 264\nI1215 12:34:30.294576       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/vpz4 558\nI1215 12:34:30.494999       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/bnk 467\nI1215 12:34:30.694638       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/nrz 462\nI1215 12:34:30.894702       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/fb6 234\nI1215 12:34:31.094894       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/6cg 267\n"
  STEP: limiting log lines @ 12/15/24 12:34:31.284
  I1215 12:34:31.284496 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 logs logs-generator logs-generator --tail=1'
  I1215 12:34:31.362687 21 builder.go:146] stderr: ""
  I1215 12:34:31.362765 21 builder.go:147] stdout: "I1215 12:34:31.294180       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/dwm 557\n"
  I1215 12:34:31.362779 21 logs.go:127] got output "I1215 12:34:31.294180       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/dwm 557\n"
  STEP: limiting log bytes @ 12/15/24 12:34:31.362
  I1215 12:34:31.362887 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 logs logs-generator logs-generator --limit-bytes=1'
  I1215 12:34:31.451564 21 builder.go:146] stderr: ""
  I1215 12:34:31.451620 21 builder.go:147] stdout: "I"
  I1215 12:34:31.451633 21 logs.go:133] got output "I"
  STEP: exposing timestamps @ 12/15/24 12:34:31.451
  I1215 12:34:31.451754 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 logs logs-generator logs-generator --tail=1 --timestamps'
  I1215 12:34:31.540970 21 builder.go:146] stderr: ""
  I1215 12:34:31.541053 21 builder.go:147] stdout: "2024-12-15T12:34:31.494830432Z I1215 12:34:31.494655       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/v7b 566\n"
  I1215 12:34:31.541069 21 logs.go:139] got output "2024-12-15T12:34:31.494830432Z I1215 12:34:31.494655       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/v7b 566\n"
  STEP: restricting to a time range @ 12/15/24 12:34:31.541
  I1215 12:34:34.042577 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 logs logs-generator logs-generator --since=1s'
  I1215 12:34:34.142955 21 builder.go:146] stderr: ""
  I1215 12:34:34.143022 21 builder.go:147] stdout: "I1215 12:34:33.294574       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/bst7 558\nI1215 12:34:33.494956       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/rgrk 302\nI1215 12:34:33.694231       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/x47 228\nI1215 12:34:33.894579       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/nfm5 456\nI1215 12:34:34.094941       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/pxv 551\n"
  I1215 12:34:34.143093 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 logs logs-generator logs-generator --since=24h'
  I1215 12:34:34.231787 21 builder.go:146] stderr: ""
  I1215 12:34:34.231902 21 builder.go:147] stdout: "I1215 12:34:30.094203       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/cvp 264\nI1215 12:34:30.294576       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/vpz4 558\nI1215 12:34:30.494999       1 logs_generator.go:76] 2 PUT /api/v1/namespaces/ns/pods/bnk 467\nI1215 12:34:30.694638       1 logs_generator.go:76] 3 POST /api/v1/namespaces/kube-system/pods/nrz 462\nI1215 12:34:30.894702       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/fb6 234\nI1215 12:34:31.094894       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/6cg 267\nI1215 12:34:31.294180       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/default/pods/dwm 557\nI1215 12:34:31.494655       1 logs_generator.go:76] 7 POST /api/v1/namespaces/kube-system/pods/v7b 566\nI1215 12:34:31.695015       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/ns/pods/9nkp 549\nI1215 12:34:31.894281       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/2k2 208\nI1215 12:34:32.094699       1 logs_generator.go:76] 10 GET /api/v1/namespaces/ns/pods/2s58 359\nI1215 12:34:32.295027       1 logs_generator.go:76] 11 GET /api/v1/namespaces/kube-system/pods/mg4 584\nI1215 12:34:32.494412       1 logs_generator.go:76] 12 PUT /api/v1/namespaces/kube-system/pods/s5tx 216\nI1215 12:34:32.694738       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/zwx 271\nI1215 12:34:32.895069       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/default/pods/2sg 412\nI1215 12:34:33.094355       1 logs_generator.go:76] 15 GET /api/v1/namespaces/kube-system/pods/n8tf 268\nI1215 12:34:33.294574       1 logs_generator.go:76] 16 POST /api/v1/namespaces/default/pods/bst7 558\nI1215 12:34:33.494956       1 logs_generator.go:76] 17 GET /api/v1/namespaces/ns/pods/rgrk 302\nI1215 12:34:33.694231       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/x47 228\nI1215 12:34:33.894579       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/nfm5 456\nI1215 12:34:34.094941       1 logs_generator.go:76] 20 POST /api/v1/namespaces/default/pods/pxv 551\n"
  I1215 12:34:34.232041 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-logs-3050 delete pod logs-generator'
  I1215 12:34:35.448019 21 builder.go:146] stderr: ""
  I1215 12:34:35.448087 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I1215 12:34:35.448246 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-3050" for this suite. @ 12/15/24 12:34:35.453
• [6.414 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 12/15/24 12:34:35.462
  I1215 12:34:35.462584 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename security-context @ 12/15/24 12:34:35.463
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:35.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:35.496
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 12/15/24 12:34:35.499
  STEP: Saw pod success @ 12/15/24 12:34:39.536
  I1215 12:34:39.540162 21 output.go:196] Trying to get logs from node cncf-master-1 pod security-context-5e7c3f6f-b25b-4a2a-8b8e-5009d40cde9b container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:34:39.549
  I1215 12:34:39.572239 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7417" for this suite. @ 12/15/24 12:34:39.576
• [4.126 seconds]
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 12/15/24 12:34:39.588
  I1215 12:34:39.588541 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 12:34:39.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:39.617
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:39.62
  I1215 12:34:39.623994 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: creating the pod @ 12/15/24 12:34:39.624
  STEP: submitting the pod to kubernetes @ 12/15/24 12:34:39.625
  I1215 12:34:41.744326 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1612" for this suite. @ 12/15/24 12:34:41.75
• [2.170 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 12/15/24 12:34:41.758
  I1215 12:34:41.758820 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename security-context-test @ 12/15/24 12:34:41.759
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:41.785
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:41.789
  I1215 12:34:45.821090 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-8063" for this suite. @ 12/15/24 12:34:45.825
• [4.079 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 12/15/24 12:34:45.838
  I1215 12:34:45.838468 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename prestop @ 12/15/24 12:34:45.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:45.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:45.867
  STEP: Creating server pod server in namespace prestop-9895 @ 12/15/24 12:34:45.871
  STEP: Waiting for pods to come up. @ 12/15/24 12:34:45.884
  STEP: Creating tester pod tester in namespace prestop-9895 @ 12/15/24 12:34:47.896
  STEP: Deleting pre-stop pod @ 12/15/24 12:34:49.911
  I1215 12:34:54.937121 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 12/15/24 12:34:54.937
  I1215 12:34:54.969822 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-9895" for this suite. @ 12/15/24 12:34:54.974
• [9.151 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 12/15/24 12:34:54.989
  I1215 12:34:54.989668 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename tables @ 12/15/24 12:34:54.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:55.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:55.017
  I1215 12:34:55.023583 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-1020" for this suite. @ 12/15/24 12:34:55.028
• [0.048 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 12/15/24 12:34:55.037
  I1215 12:34:55.037897 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 12:34:55.038
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:55.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:55.067
  STEP: creating the pod @ 12/15/24 12:34:55.07
  STEP: setting up watch @ 12/15/24 12:34:55.07
  STEP: submitting the pod to kubernetes @ 12/15/24 12:34:55.173
  STEP: verifying the pod is in kubernetes @ 12/15/24 12:34:55.184
  STEP: verifying pod creation was observed @ 12/15/24 12:34:55.187
  STEP: deleting the pod gracefully @ 12/15/24 12:34:57.207
  STEP: verifying pod deletion was observed @ 12/15/24 12:34:57.22
  I1215 12:34:58.504963 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6158" for this suite. @ 12/15/24 12:34:58.509
• [3.483 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 12/15/24 12:34:58.521
  I1215 12:34:58.521314 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:34:58.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:34:58.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:34:58.547
  STEP: Creating configMap with name projected-configmap-test-volume-map-08e9e2ad-4bc0-4df1-9ef7-09fb521e7f51 @ 12/15/24 12:34:58.55
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:34:58.555
  STEP: Saw pod success @ 12/15/24 12:35:02.587
  I1215 12:35:02.591137 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-configmaps-ed9a1f61-815d-42c1-aaf6-3ac1c8aac43e container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:35:02.599
  I1215 12:35:02.629858 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6085" for this suite. @ 12/15/24 12:35:02.633
• [4.119 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 12/15/24 12:35:02.642
  I1215 12:35:02.642642 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename init-container @ 12/15/24 12:35:02.643
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:02.665
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:02.668
  STEP: creating the pod @ 12/15/24 12:35:02.671
  I1215 12:35:02.671465 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I1215 12:35:06.530752 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9567" for this suite. @ 12/15/24 12:35:06.535
• [3.904 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 12/15/24 12:35:06.545
  I1215 12:35:06.545338 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 12:35:06.546
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:06.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:06.571
  STEP: Creating secret with name secret-test-f354f0c8-68fd-4632-b5d1-431f7d2b3796 @ 12/15/24 12:35:06.574
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:35:06.58
  STEP: Saw pod success @ 12/15/24 12:35:10.615
  I1215 12:35:10.619643 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-b58c62a8-ddce-4d6e-96b1-0fc0265af2a4 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:35:10.625
  I1215 12:35:10.647616 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8078" for this suite. @ 12/15/24 12:35:10.651
• [4.118 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 12/15/24 12:35:10.663
  I1215 12:35:10.663919 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:35:10.664
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:10.697
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:10.7
  STEP: Creating configMap with name configmap-test-volume-map-004c7369-97d0-48fc-8d55-44595bd59cc6 @ 12/15/24 12:35:10.704
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:35:10.71
  STEP: Saw pod success @ 12/15/24 12:35:14.743
  I1215 12:35:14.746157 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-cf246aa0-97fb-416e-94b4-dff421d9db2e container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:35:14.754
  I1215 12:35:14.777524 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1886" for this suite. @ 12/15/24 12:35:14.781
• [4.128 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 12/15/24 12:35:14.791
  I1215 12:35:14.792020 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename subpath @ 12/15/24 12:35:14.792
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:14.818
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:14.82
  STEP: Setting up data @ 12/15/24 12:35:14.823
  STEP: Creating pod pod-subpath-test-downwardapi-h24q @ 12/15/24 12:35:14.834
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/24 12:35:14.834
  STEP: Saw pod success @ 12/15/24 12:35:38.933
  I1215 12:35:38.936802 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-subpath-test-downwardapi-h24q container test-container-subpath-downwardapi-h24q: <nil>
  STEP: delete the pod @ 12/15/24 12:35:38.943
  STEP: Deleting pod pod-subpath-test-downwardapi-h24q @ 12/15/24 12:35:38.961
  I1215 12:35:38.961555 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-h24q" in namespace "subpath-2834"
  I1215 12:35:38.964653 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2834" for this suite. @ 12/15/24 12:35:38.97
• [24.186 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 12/15/24 12:35:38.98
  I1215 12:35:38.980250 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:35:38.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:39.004
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:39.007
  STEP: Creating a pod to test emptydir volume type on node default medium @ 12/15/24 12:35:39.01
  STEP: Saw pod success @ 12/15/24 12:35:43.051
  I1215 12:35:43.055327 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-de05cdd1-b9ea-46f8-8f38-1c8caefa0651 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:35:43.06
  I1215 12:35:43.084883 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9947" for this suite. @ 12/15/24 12:35:43.089
• [4.118 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 12/15/24 12:35:43.098
  I1215 12:35:43.098582 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename podtemplate @ 12/15/24 12:35:43.099
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:43.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:43.125
  I1215 12:35:43.164045 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-8041" for this suite. @ 12/15/24 12:35:43.168
• [0.076 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 12/15/24 12:35:43.175
  I1215 12:35:43.175381 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 12:35:43.176
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:43.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:43.203
  STEP: Creating the pod @ 12/15/24 12:35:43.205
  I1215 12:35:45.753585 21 pod_client.go:141] Successfully updated pod "annotationupdatedc5ff579-9df7-42c3-96bf-d1bbe64cddaf"
  I1215 12:35:47.770745 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8066" for this suite. @ 12/15/24 12:35:47.776
• [4.615 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 12/15/24 12:35:47.79
  I1215 12:35:47.790584 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/24 12:35:47.791
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:47.826
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:47.83
  I1215 12:35:47.880222 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1971" for this suite. @ 12/15/24 12:35:47.884
• [0.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 12/15/24 12:35:47.892
  I1215 12:35:47.892706 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 12:35:47.893
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:47.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:47.919
  STEP: creating all guestbook components @ 12/15/24 12:35:47.922
  I1215 12:35:47.922567 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I1215 12:35:47.922719 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 create -f -'
  I1215 12:35:48.077968 21 builder.go:146] stderr: ""
  I1215 12:35:48.078042 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I1215 12:35:48.078159 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I1215 12:35:48.078309 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 create -f -'
  I1215 12:35:48.280535 21 builder.go:146] stderr: ""
  I1215 12:35:48.280623 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I1215 12:35:48.280738 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I1215 12:35:48.280896 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 create -f -'
  I1215 12:35:48.463720 21 builder.go:146] stderr: ""
  I1215 12:35:48.463778 21 builder.go:147] stdout: "service/frontend created\n"
  I1215 12:35:48.463972 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I1215 12:35:48.464126 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 create -f -'
  I1215 12:35:48.609551 21 builder.go:146] stderr: ""
  I1215 12:35:48.609645 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I1215 12:35:48.611671 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1215 12:35:48.611821 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 create -f -'
  I1215 12:35:48.724254 21 builder.go:146] stderr: ""
  I1215 12:35:48.724321 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I1215 12:35:48.724412 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I1215 12:35:48.724883 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 create -f -'
  I1215 12:35:48.835486 21 builder.go:146] stderr: ""
  I1215 12:35:48.835559 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 12/15/24 12:35:48.835
  I1215 12:35:48.835645 21 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I1215 12:35:53.887260 21 kubectl.go:2275] Waiting for frontend to serve content.
  I1215 12:35:53.899674 21 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I1215 12:35:53.910506 21 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 12/15/24 12:35:53.92
  I1215 12:35:53.920468 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 delete --grace-period=0 --force -f -'
  I1215 12:35:54.008024 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 12:35:54.008083 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/24 12:35:54.008
  I1215 12:35:54.008219 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 delete --grace-period=0 --force -f -'
  I1215 12:35:54.107684 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 12:35:54.107758 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/24 12:35:54.107
  I1215 12:35:54.107941 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 delete --grace-period=0 --force -f -'
  I1215 12:35:54.212880 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 12:35:54.212946 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/24 12:35:54.213
  I1215 12:35:54.213212 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 delete --grace-period=0 --force -f -'
  I1215 12:35:54.296670 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 12:35:54.296765 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/24 12:35:54.296
  I1215 12:35:54.297187 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 delete --grace-period=0 --force -f -'
  I1215 12:35:54.407248 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 12:35:54.407303 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 12/15/24 12:35:54.407
  I1215 12:35:54.407545 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4913 delete --grace-period=0 --force -f -'
  I1215 12:35:54.497838 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 12:35:54.497925 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I1215 12:35:54.498217 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4913" for this suite. @ 12/15/24 12:35:54.504
• [6.632 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 12/15/24 12:35:54.524
  I1215 12:35:54.524922 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:35:54.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:35:54.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:35:54.56
  STEP: Discovering how many secrets are in namespace by default @ 12/15/24 12:35:54.564
  STEP: Counting existing ResourceQuota @ 12/15/24 12:35:59.568
  STEP: Creating a ResourceQuota @ 12/15/24 12:36:04.574
  STEP: Ensuring resource quota status is calculated @ 12/15/24 12:36:04.585
  STEP: Creating a Secret @ 12/15/24 12:36:06.59
  STEP: Ensuring resource quota status captures secret creation @ 12/15/24 12:36:06.614
  STEP: Deleting a secret @ 12/15/24 12:36:08.619
  STEP: Ensuring resource quota status released usage @ 12/15/24 12:36:08.632
  I1215 12:36:10.638023 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6503" for this suite. @ 12/15/24 12:36:10.643
• [16.126 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 12/15/24 12:36:10.652
  I1215 12:36:10.652704 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename job @ 12/15/24 12:36:10.653
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:36:10.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:36:10.685
  STEP: Creating a job @ 12/15/24 12:36:10.69
  STEP: Ensure pods equal to parallelism count is attached to the job @ 12/15/24 12:36:10.698
  STEP: patching /status @ 12/15/24 12:36:12.704
  STEP: updating /status @ 12/15/24 12:36:12.718
  STEP: get /status @ 12/15/24 12:36:12.725
  I1215 12:36:12.729020 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5708" for this suite. @ 12/15/24 12:36:12.732
• [2.087 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 12/15/24 12:36:12.74
  I1215 12:36:12.740480 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:36:12.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:36:12.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:36:12.767
  STEP: creating service multi-endpoint-test in namespace services-5055 @ 12/15/24 12:36:12.77
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5055 to expose endpoints map[] @ 12/15/24 12:36:12.788
  I1215 12:36:12.791594 21 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I1215 12:36:13.801126 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5055 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5055 @ 12/15/24 12:36:13.801
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5055 to expose endpoints map[pod1:[100]] @ 12/15/24 12:36:15.82
  I1215 12:36:15.830742 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5055 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-5055 @ 12/15/24 12:36:15.83
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5055 to expose endpoints map[pod1:[100] pod2:[101]] @ 12/15/24 12:36:17.855
  I1215 12:36:17.881196 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5055 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 12/15/24 12:36:17.881
  I1215 12:36:17.881546 21 resource.go:361] Creating new exec pod
  I1215 12:36:20.922828 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5055 exec execpod7jgsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I1215 12:36:21.095755 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I1215 12:36:21.095823 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:36:21.095978 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5055 exec execpod7jgsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.42 80'
  I1215 12:36:21.216944 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.42 80\nConnection to 10.233.15.42 80 port [tcp/http] succeeded!\n"
  I1215 12:36:21.217011 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:36:21.217128 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5055 exec execpod7jgsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I1215 12:36:21.339477 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I1215 12:36:21.339535 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:36:21.339713 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5055 exec execpod7jgsw -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.15.42 81'
  I1215 12:36:21.498564 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.15.42 81\nConnection to 10.233.15.42 81 port [tcp/*] succeeded!\n"
  I1215 12:36:21.498636 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5055 @ 12/15/24 12:36:21.498
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5055 to expose endpoints map[pod2:[101]] @ 12/15/24 12:36:21.52
  I1215 12:36:22.548871 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5055 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-5055 @ 12/15/24 12:36:22.548
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-5055 to expose endpoints map[] @ 12/15/24 12:36:22.571
  I1215 12:36:23.590593 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-5055 exposes endpoints map[]
  I1215 12:36:23.616851 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5055" for this suite. @ 12/15/24 12:36:23.622
• [10.890 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 12/15/24 12:36:23.631
  I1215 12:36:23.631659 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:36:23.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:36:23.653
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:36:23.656
  STEP: Creating configMap with name configmap-test-volume-a139f6ac-a5b6-46e2-b0d1-cb8d918c0556 @ 12/15/24 12:36:23.661
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:36:23.666
  STEP: Saw pod success @ 12/15/24 12:36:27.692
  I1215 12:36:27.696618 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-204642b5-9657-499c-9810-96c411a5eacb container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:36:27.703
  I1215 12:36:27.731005 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1622" for this suite. @ 12/15/24 12:36:27.736
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 12/15/24 12:36:27.754
  I1215 12:36:27.754096 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/24 12:36:27.755
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:36:27.78
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:36:27.783
  I1215 12:36:27.804532 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1215 12:37:27.810962 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/15/24 12:37:27.815
  I1215 12:37:27.815301 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/15/24 12:37:27.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:37:27.843
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:37:27.846
  I1215 12:37:27.868740 21 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I1215 12:37:27.871760 21 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I1215 12:37:27.994506 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5350" for this suite. @ 12/15/24 12:37:27.999
  I1215 12:37:28.006674 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3880" for this suite. @ 12/15/24 12:37:28.015
• [60.273 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 12/15/24 12:37:28.026
  I1215 12:37:28.026678 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/24 12:37:28.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:37:28.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:37:28.054
  I1215 12:37:28.084549 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1215 12:38:28.091629 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 12/15/24 12:38:28.095
  I1215 12:38:28.125787 21 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I1215 12:38:28.138962 21 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I1215 12:38:28.166256 21 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I1215 12:38:28.181743 21 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I1215 12:38:28.213056 21 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I1215 12:38:28.236946 21 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 12/15/24 12:38:28.237
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 12/15/24 12:38:30.266
  I1215 12:38:36.373868 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-4252" for this suite. @ 12/15/24 12:38:36.378
• [68.369 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 12/15/24 12:38:36.396
  I1215 12:38:36.396633 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename endpointslicemirroring @ 12/15/24 12:38:36.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:38:36.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:38:36.428
  STEP: mirroring a new custom Endpoint @ 12/15/24 12:38:36.448
  I1215 12:38:36.457515 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 12/15/24 12:38:38.462
  I1215 12:38:38.478162 21 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 12/15/24 12:38:40.483
  I1215 12:38:40.497095 21 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I1215 12:38:42.505643 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-8690" for this suite. @ 12/15/24 12:38:42.514
• [6.134 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 12/15/24 12:38:42.53
  I1215 12:38:42.530308 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename containers @ 12/15/24 12:38:42.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:38:42.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:38:42.562
  STEP: Creating a pod to test override arguments @ 12/15/24 12:38:42.565
  STEP: Saw pod success @ 12/15/24 12:38:46.587
  I1215 12:38:46.591102 21 output.go:196] Trying to get logs from node cncf-master-1 pod client-containers-5b1f78ad-b002-4215-b803-86626f14d0b9 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:38:46.603
  I1215 12:38:46.622597 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9436" for this suite. @ 12/15/24 12:38:46.626
• [4.105 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 12/15/24 12:38:46.65
  I1215 12:38:46.650949 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 12:38:46.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:38:46.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:38:46.681
  STEP: creating a Deployment @ 12/15/24 12:38:46.689
  I1215 12:38:46.689640 21 deployment.go:507] Creating simple deployment test-deployment-85lmp
  I1215 12:38:46.707615 21 deployment.go:222] new replicaset for deployment "test-deployment-85lmp" is yet to be created
  STEP: Getting /status @ 12/15/24 12:38:48.722
  I1215 12:38:48.726005 21 deployment.go:532] Deployment test-deployment-85lmp has Conditions: [{Available True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-85lmp-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 12/15/24 12:38:48.726
  I1215 12:38:48.740022 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 38, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 38, 48, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 38, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 38, 46, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-85lmp-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 12/15/24 12:38:48.74
  I1215 12:38:48.742951 21 deployment.go:579] Observed &Deployment event: ADDED
  I1215 12:38:48.743078 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-85lmp-c8586b885"}
  I1215 12:38:48.743290 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I1215 12:38:48.743357 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-85lmp-c8586b885"}
  I1215 12:38:48.743373 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1215 12:38:48.743524 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I1215 12:38:48.743547 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1215 12:38:48.743587 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-85lmp-c8586b885" is progressing.}
  I1215 12:38:48.743711 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I1215 12:38:48.743846 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1215 12:38:48.744038 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-85lmp-c8586b885" has successfully progressed.}
  I1215 12:38:48.744375 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I1215 12:38:48.744490 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1215 12:38:48.744553 21 deployment.go:575] Observed Deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-85lmp-c8586b885" has successfully progressed.}
  I1215 12:38:48.744636 21 deployment.go:572] Found Deployment test-deployment-85lmp in namespace deployment-5715 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1215 12:38:48.744729 21 deployment.go:583] Deployment test-deployment-85lmp has an updated status
  STEP: patching the Statefulset Status @ 12/15/24 12:38:48.744
  I1215 12:38:48.744872 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1215 12:38:48.760328 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 12/15/24 12:38:48.76
  I1215 12:38:48.763568 21 deployment.go:616] Observed &Deployment event: ADDED
  I1215 12:38:48.763615 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-85lmp-c8586b885"}
  I1215 12:38:48.763786 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I1215 12:38:48.763811 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-85lmp-c8586b885"}
  I1215 12:38:48.763852 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1215 12:38:48.763995 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I1215 12:38:48.764018 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I1215 12:38:48.764029 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:46 +0000 UTC 2024-12-15 12:38:46 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-85lmp-c8586b885" is progressing.}
  I1215 12:38:48.764158 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I1215 12:38:48.764245 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1215 12:38:48.764272 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-85lmp-c8586b885" has successfully progressed.}
  I1215 12:38:48.764391 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I1215 12:38:48.764412 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:48 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I1215 12:38:48.764447 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-12-15 12:38:48 +0000 UTC 2024-12-15 12:38:46 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-85lmp-c8586b885" has successfully progressed.}
  I1215 12:38:48.764458 21 deployment.go:612] Observed deployment test-deployment-85lmp in namespace deployment-5715 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1215 12:38:48.764607 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I1215 12:38:48.764632 21 deployment.go:609] Found deployment test-deployment-85lmp in namespace deployment-5715 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I1215 12:38:48.764671 21 deployment.go:620] Deployment test-deployment-85lmp has a patched status
  I1215 12:38:48.769190 21 deployment.go:633] Deployment "test-deployment-85lmp":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-85lmp",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5715",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "25b8ad08-3888-45c0-9d73-4baa6fc31e5c",
      ResourceVersion: (string) (len=7) "5393739",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863126,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1215 12:38:48.783801 21 deployment.go:39] New ReplicaSet "test-deployment-85lmp-c8586b885" of Deployment "test-deployment-85lmp":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-85lmp-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5715",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f3ceca00-2ca5-4549-8b58-daca621a2a77",
      ResourceVersion: (string) (len=7) "5393732",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863126,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-85lmp",
          UID: (types.UID) (len=36) "25b8ad08-3888-45c0-9d73-4baa6fc31e5c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 32 35 62  |k:{\"uid\":\"25b|
              00000120  38 61 64 30 38 2d 33 38  38 38 2d 34 35 63 30 2d  |8ad08-3888-45c0-|
              00000130  39 64 37 33 2d 34 62 61  61 36 66 63 33 31 65 35  |9d73-4baa6fc31e5|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 12:38:48.809842 21 deployment.go:67] Pod "test-deployment-85lmp-c8586b885-xqbrw" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-85lmp-c8586b885-xqbrw",
      GenerateName: (string) (len=32) "test-deployment-85lmp-c8586b885-",
      Namespace: (string) (len=15) "deployment-5715",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "300e08cd-b509-4ab7-aeb1-c93c1ff4c8e7",
      ResourceVersion: (string) (len=7) "5393731",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863126,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-85lmp-c8586b885",
          UID: (types.UID) (len=36) "f3ceca00-2ca5-4549-8b58-daca621a2a77",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 66 33 63 65 63 61 30  30 2d 32 63 61 35 2d 34  |"f3ceca00-2ca5-4|
              000000a0  35 34 39 2d 38 62 35 38  2d 64 61 63 61 36 32 31  |549-8b58-daca621|
              000000b0  61 32 61 37 37 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |a2a77\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 32 34 37  5c 22 7d 22 3a 7b 22 2e  |.0.0.247\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-d8jt7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-d8jt7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863128,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863126,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=10) "10.0.0.247",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.0.247"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863126,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869863127,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://f1891e347bf6d665e0e283343e73e9c5fc9489fc574e759d5ab305e644d16db5",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:38:48.821924 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5715" for this suite. @ 12/15/24 12:38:48.826
• [2.190 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 12/15/24 12:38:48.841
  I1215 12:38:48.841338 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 12:38:48.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:38:48.867
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:38:48.871
  STEP: Creating pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154 @ 12/15/24 12:38:48.873
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 12:38:50.896
  I1215 12:38:50.900590 21 container_probe.go:1749] Initial restart count of pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be is 0
  I1215 12:38:50.903972 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:38:52.910494 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:38:54.916381 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:38:56.921762 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:38:58.928112 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:00.933842 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:02.938891 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:04.944659 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:06.950433 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:08.956416 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:10.961800 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:12.967056 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:14.972341 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:16.981437 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:18.985088 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:20.990257 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:22.996097 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:25.001236 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:27.006883 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:29.013985 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:31.019854 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:33.025397 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:35.031628 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:37.037890 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:39.044046 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:41.049555 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:43.053823 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:45.058187 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:47.064857 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:49.070580 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:51.075339 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:53.079897 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:55.086063 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:57.092908 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:39:59.099502 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:01.105777 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:03.110955 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:05.115970 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:07.121376 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:09.127376 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:11.133052 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:13.137528 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:15.142250 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:17.146763 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:19.153387 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:21.158855 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:23.164912 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:25.170955 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:27.177187 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:29.182868 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:31.188108 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:33.195056 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:35.199679 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:37.203878 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:39.208668 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:41.214205 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:43.219322 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:45.224755 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:47.232793 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:49.238316 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:51.245638 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:53.252324 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:55.263039 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:57.268536 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:40:59.273581 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:01.278914 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:03.284394 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:05.290032 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:07.295753 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:09.301810 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:11.307835 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:13.313194 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:15.316881 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:17.323682 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:19.328579 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:21.344310 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:23.350064 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:25.356674 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:27.362549 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:29.369011 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:31.381451 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:33.386326 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:35.390105 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:37.394034 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:39.405905 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:41.411551 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:43.417453 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:45.424040 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:47.429382 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:49.434755 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:51.445390 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:53.451461 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:55.457308 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:57.463003 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:41:59.468172 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:01.473734 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:03.477966 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:05.484119 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:07.499808 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:09.504505 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:11.509868 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:13.516592 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:15.521669 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:17.527674 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:19.538140 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:21.542587 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:23.547948 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:25.553843 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:27.559335 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:29.564111 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:31.570656 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:33.575061 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:35.581031 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:37.585888 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:39.591488 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:41.597005 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:43.602673 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:45.607995 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:47.613183 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  I1215 12:42:49.619459 21 container_probe.go:1759] Get pod liveness-f8f8efd0-c8d4-4dde-9ee4-a45dff03e9be in namespace container-probe-9154
  STEP: deleting the pod @ 12/15/24 12:42:51.62
  I1215 12:42:51.647120 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9154" for this suite. @ 12/15/24 12:42:51.665
• [242.844 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 12/15/24 12:42:51.685
  I1215 12:42:51.685906 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svc-latency @ 12/15/24 12:42:51.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:42:51.711
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:42:51.714
  I1215 12:42:51.717396 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-83 @ 12/15/24 12:42:51.718
  I1215 12:42:51.729431      21 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-83, replica count: 1
  I1215 12:42:52.780521      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:42:53.781538      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:42:53.920435 21 service_latency.go:356] Created: latency-svc-tmxcf
  I1215 12:42:53.929071 21 service_latency.go:363] Got endpoints: latency-svc-tmxcf [45.976389ms]
  I1215 12:42:53.953713 21 service_latency.go:356] Created: latency-svc-fbwpv
  I1215 12:42:53.968643 21 service_latency.go:363] Got endpoints: latency-svc-fbwpv [39.332154ms]
  I1215 12:42:53.972980 21 service_latency.go:356] Created: latency-svc-7pfqb
  I1215 12:42:53.990834 21 service_latency.go:363] Got endpoints: latency-svc-7pfqb [61.053058ms]
  I1215 12:42:53.991133 21 service_latency.go:356] Created: latency-svc-gqzvn
  I1215 12:42:54.001435 21 service_latency.go:363] Got endpoints: latency-svc-gqzvn [71.840673ms]
  I1215 12:42:54.011832 21 service_latency.go:356] Created: latency-svc-ltqmv
  I1215 12:42:54.026110 21 service_latency.go:363] Got endpoints: latency-svc-ltqmv [96.212774ms]
  I1215 12:42:54.029950 21 service_latency.go:356] Created: latency-svc-vjj5t
  I1215 12:42:54.045867 21 service_latency.go:363] Got endpoints: latency-svc-vjj5t [115.672464ms]
  I1215 12:42:54.047757 21 service_latency.go:356] Created: latency-svc-9skm5
  I1215 12:42:54.066988 21 service_latency.go:363] Got endpoints: latency-svc-9skm5 [137.005961ms]
  I1215 12:42:54.075653 21 service_latency.go:356] Created: latency-svc-vfbxm
  I1215 12:42:54.085892 21 service_latency.go:363] Got endpoints: latency-svc-vfbxm [156.034425ms]
  I1215 12:42:54.104726 21 service_latency.go:356] Created: latency-svc-6vqm5
  I1215 12:42:54.110751 21 service_latency.go:356] Created: latency-svc-ph9fp
  I1215 12:42:54.118888 21 service_latency.go:363] Got endpoints: latency-svc-ph9fp [188.851218ms]
  I1215 12:42:54.122867 21 service_latency.go:363] Got endpoints: latency-svc-6vqm5 [192.624935ms]
  I1215 12:42:54.130216 21 service_latency.go:356] Created: latency-svc-w8rkd
  I1215 12:42:54.136408 21 service_latency.go:363] Got endpoints: latency-svc-w8rkd [206.250959ms]
  I1215 12:42:54.146719 21 service_latency.go:356] Created: latency-svc-4c72n
  I1215 12:42:54.160654 21 service_latency.go:363] Got endpoints: latency-svc-4c72n [230.364434ms]
  I1215 12:42:54.163982 21 service_latency.go:356] Created: latency-svc-zx27f
  I1215 12:42:54.172963 21 service_latency.go:363] Got endpoints: latency-svc-zx27f [242.950654ms]
  I1215 12:42:54.184526 21 service_latency.go:356] Created: latency-svc-q2stl
  I1215 12:42:54.193494 21 service_latency.go:363] Got endpoints: latency-svc-q2stl [263.394811ms]
  I1215 12:42:54.199044 21 service_latency.go:356] Created: latency-svc-xz6hr
  I1215 12:42:54.208924 21 service_latency.go:363] Got endpoints: latency-svc-xz6hr [278.786886ms]
  I1215 12:42:54.218177 21 service_latency.go:356] Created: latency-svc-n9qwt
  I1215 12:42:54.231127 21 service_latency.go:363] Got endpoints: latency-svc-n9qwt [301.047152ms]
  I1215 12:42:54.236879 21 service_latency.go:356] Created: latency-svc-khrnn
  I1215 12:42:54.249719 21 service_latency.go:363] Got endpoints: latency-svc-khrnn [281.010193ms]
  I1215 12:42:54.253274 21 service_latency.go:356] Created: latency-svc-8xzk5
  I1215 12:42:54.265034 21 service_latency.go:363] Got endpoints: latency-svc-8xzk5 [274.139921ms]
  I1215 12:42:54.273378 21 service_latency.go:356] Created: latency-svc-8sd2s
  I1215 12:42:54.284653 21 service_latency.go:363] Got endpoints: latency-svc-8sd2s [283.142237ms]
  I1215 12:42:54.297616 21 service_latency.go:356] Created: latency-svc-rjcqp
  I1215 12:42:54.311676 21 service_latency.go:363] Got endpoints: latency-svc-rjcqp [285.494021ms]
  I1215 12:42:54.314965 21 service_latency.go:356] Created: latency-svc-t8jrn
  I1215 12:42:54.325360 21 service_latency.go:363] Got endpoints: latency-svc-t8jrn [279.4384ms]
  I1215 12:42:54.339260 21 service_latency.go:356] Created: latency-svc-nssbz
  I1215 12:42:54.346580 21 service_latency.go:356] Created: latency-svc-jmdw2
  I1215 12:42:54.351147 21 service_latency.go:363] Got endpoints: latency-svc-nssbz [284.091725ms]
  I1215 12:42:54.358004 21 service_latency.go:363] Got endpoints: latency-svc-jmdw2 [272.048133ms]
  I1215 12:42:54.363221 21 service_latency.go:356] Created: latency-svc-hgj7z
  I1215 12:42:54.372216 21 service_latency.go:363] Got endpoints: latency-svc-hgj7z [253.10794ms]
  I1215 12:42:54.379399 21 service_latency.go:356] Created: latency-svc-q99qq
  I1215 12:42:54.389408 21 service_latency.go:363] Got endpoints: latency-svc-q99qq [266.496592ms]
  I1215 12:42:54.399869 21 service_latency.go:356] Created: latency-svc-zwwsg
  I1215 12:42:54.419546 21 service_latency.go:363] Got endpoints: latency-svc-zwwsg [282.880103ms]
  I1215 12:42:54.420159 21 service_latency.go:356] Created: latency-svc-9xqvz
  I1215 12:42:54.433773 21 service_latency.go:356] Created: latency-svc-n9xsg
  I1215 12:42:54.434195 21 service_latency.go:363] Got endpoints: latency-svc-9xqvz [273.475583ms]
  I1215 12:42:54.444234 21 service_latency.go:363] Got endpoints: latency-svc-n9xsg [270.943413ms]
  I1215 12:42:54.451773 21 service_latency.go:356] Created: latency-svc-5dftn
  I1215 12:42:54.464024 21 service_latency.go:363] Got endpoints: latency-svc-5dftn [270.076023ms]
  I1215 12:42:54.471287 21 service_latency.go:356] Created: latency-svc-vn2pz
  I1215 12:42:54.487163 21 service_latency.go:363] Got endpoints: latency-svc-vn2pz [277.746241ms]
  I1215 12:42:54.487553 21 service_latency.go:356] Created: latency-svc-krpzn
  I1215 12:42:54.502320 21 service_latency.go:363] Got endpoints: latency-svc-krpzn [270.756464ms]
  I1215 12:42:54.511319 21 service_latency.go:356] Created: latency-svc-vhlr7
  I1215 12:42:54.525631 21 service_latency.go:363] Got endpoints: latency-svc-vhlr7 [275.823306ms]
  I1215 12:42:54.530460 21 service_latency.go:356] Created: latency-svc-6g22c
  I1215 12:42:54.543604 21 service_latency.go:363] Got endpoints: latency-svc-6g22c [278.51318ms]
  I1215 12:42:54.553599 21 service_latency.go:356] Created: latency-svc-vm258
  I1215 12:42:54.567770 21 service_latency.go:363] Got endpoints: latency-svc-vm258 [282.837541ms]
  I1215 12:42:54.572830 21 service_latency.go:356] Created: latency-svc-lmhtx
  I1215 12:42:54.588758 21 service_latency.go:363] Got endpoints: latency-svc-lmhtx [276.66118ms]
  I1215 12:42:54.602033 21 service_latency.go:356] Created: latency-svc-j8sct
  I1215 12:42:54.603982 21 service_latency.go:356] Created: latency-svc-t7s9k
  I1215 12:42:54.612726 21 service_latency.go:363] Got endpoints: latency-svc-j8sct [261.535322ms]
  I1215 12:42:54.618650 21 service_latency.go:363] Got endpoints: latency-svc-t7s9k [293.240241ms]
  I1215 12:42:54.625476 21 service_latency.go:356] Created: latency-svc-tk6gk
  I1215 12:42:54.640147 21 service_latency.go:363] Got endpoints: latency-svc-tk6gk [282.094029ms]
  I1215 12:42:54.644022 21 service_latency.go:356] Created: latency-svc-pj7rw
  I1215 12:42:54.660653 21 service_latency.go:363] Got endpoints: latency-svc-pj7rw [288.383726ms]
  I1215 12:42:54.661432 21 service_latency.go:356] Created: latency-svc-cxzxs
  I1215 12:42:54.669854 21 service_latency.go:363] Got endpoints: latency-svc-cxzxs [280.394947ms]
  I1215 12:42:54.681793 21 service_latency.go:356] Created: latency-svc-stkqf
  I1215 12:42:54.697866 21 service_latency.go:356] Created: latency-svc-jn5gb
  I1215 12:42:54.698048 21 service_latency.go:363] Got endpoints: latency-svc-stkqf [278.428774ms]
  I1215 12:42:54.707055 21 service_latency.go:363] Got endpoints: latency-svc-jn5gb [272.825781ms]
  I1215 12:42:54.714170 21 service_latency.go:356] Created: latency-svc-fmz27
  I1215 12:42:54.724796 21 service_latency.go:363] Got endpoints: latency-svc-fmz27 [280.033765ms]
  I1215 12:42:54.733261 21 service_latency.go:356] Created: latency-svc-zfbs2
  I1215 12:42:54.746145 21 service_latency.go:363] Got endpoints: latency-svc-zfbs2 [282.052883ms]
  I1215 12:42:54.752316 21 service_latency.go:356] Created: latency-svc-7px2q
  I1215 12:42:54.766672 21 service_latency.go:356] Created: latency-svc-wwjd4
  I1215 12:42:54.767812 21 service_latency.go:363] Got endpoints: latency-svc-7px2q [280.592562ms]
  I1215 12:42:54.775581 21 service_latency.go:363] Got endpoints: latency-svc-wwjd4 [273.152987ms]
  I1215 12:42:54.787328 21 service_latency.go:356] Created: latency-svc-9mldl
  I1215 12:42:54.800589 21 service_latency.go:363] Got endpoints: latency-svc-9mldl [274.8855ms]
  I1215 12:42:54.803857 21 service_latency.go:356] Created: latency-svc-nlbsh
  I1215 12:42:54.817233 21 service_latency.go:356] Created: latency-svc-zj8ft
  I1215 12:42:54.830708 21 service_latency.go:356] Created: latency-svc-g5j9z
  I1215 12:42:54.834088 21 service_latency.go:363] Got endpoints: latency-svc-nlbsh [290.416081ms]
  I1215 12:42:54.843831 21 service_latency.go:356] Created: latency-svc-66qbb
  I1215 12:42:54.856671 21 service_latency.go:356] Created: latency-svc-nrrwz
  I1215 12:42:54.868566 21 service_latency.go:356] Created: latency-svc-5vgfm
  I1215 12:42:54.880092 21 service_latency.go:363] Got endpoints: latency-svc-zj8ft [312.266629ms]
  I1215 12:42:54.892445 21 service_latency.go:356] Created: latency-svc-7gm8g
  I1215 12:42:54.893478 21 service_latency.go:356] Created: latency-svc-7sgqj
  I1215 12:42:54.906178 21 service_latency.go:356] Created: latency-svc-rchrr
  I1215 12:42:54.932294 21 service_latency.go:356] Created: latency-svc-j2v5z
  I1215 12:42:54.932692 21 service_latency.go:363] Got endpoints: latency-svc-g5j9z [343.844651ms]
  I1215 12:42:54.938336 21 service_latency.go:356] Created: latency-svc-frrz5
  I1215 12:42:54.950599 21 service_latency.go:356] Created: latency-svc-pmw4w
  I1215 12:42:54.962562 21 service_latency.go:356] Created: latency-svc-vwtcg
  I1215 12:42:54.978472 21 service_latency.go:363] Got endpoints: latency-svc-66qbb [365.686926ms]
  I1215 12:42:54.983214 21 service_latency.go:356] Created: latency-svc-7h8x2
  I1215 12:42:54.993938 21 service_latency.go:356] Created: latency-svc-dcn7f
  I1215 12:42:55.005531 21 service_latency.go:356] Created: latency-svc-gtn56
  I1215 12:42:55.020975 21 service_latency.go:356] Created: latency-svc-8bbpm
  I1215 12:42:55.036764 21 service_latency.go:363] Got endpoints: latency-svc-nrrwz [418.069168ms]
  I1215 12:42:55.045047 21 service_latency.go:356] Created: latency-svc-84qnx
  I1215 12:42:55.060424 21 service_latency.go:356] Created: latency-svc-cxm8c
  I1215 12:42:55.064207 21 service_latency.go:356] Created: latency-svc-76hm8
  I1215 12:42:55.084315 21 service_latency.go:363] Got endpoints: latency-svc-5vgfm [444.098962ms]
  I1215 12:42:55.100792 21 service_latency.go:356] Created: latency-svc-fqj99
  I1215 12:42:55.133691 21 service_latency.go:363] Got endpoints: latency-svc-7gm8g [472.972516ms]
  I1215 12:42:55.159941 21 service_latency.go:356] Created: latency-svc-b6xf7
  I1215 12:42:55.185011 21 service_latency.go:363] Got endpoints: latency-svc-7sgqj [515.109869ms]
  I1215 12:42:55.200624 21 service_latency.go:356] Created: latency-svc-r4lgg
  I1215 12:42:55.232633 21 service_latency.go:363] Got endpoints: latency-svc-rchrr [534.532314ms]
  I1215 12:42:55.248255 21 service_latency.go:356] Created: latency-svc-w5z24
  I1215 12:42:55.284151 21 service_latency.go:363] Got endpoints: latency-svc-j2v5z [577.027338ms]
  I1215 12:42:55.302110 21 service_latency.go:356] Created: latency-svc-kzdsv
  I1215 12:42:55.327649 21 service_latency.go:363] Got endpoints: latency-svc-frrz5 [602.79105ms]
  I1215 12:42:55.346359 21 service_latency.go:356] Created: latency-svc-9lzb2
  I1215 12:42:55.381141 21 service_latency.go:363] Got endpoints: latency-svc-pmw4w [634.921927ms]
  I1215 12:42:55.414440 21 service_latency.go:356] Created: latency-svc-q92h2
  I1215 12:42:55.434398 21 service_latency.go:363] Got endpoints: latency-svc-vwtcg [666.041771ms]
  I1215 12:42:55.450885 21 service_latency.go:356] Created: latency-svc-bhlxt
  I1215 12:42:55.480253 21 service_latency.go:363] Got endpoints: latency-svc-7h8x2 [704.624483ms]
  I1215 12:42:55.499574 21 service_latency.go:356] Created: latency-svc-6rfvw
  I1215 12:42:55.529107 21 service_latency.go:363] Got endpoints: latency-svc-dcn7f [728.456887ms]
  I1215 12:42:55.548727 21 service_latency.go:356] Created: latency-svc-dv7gm
  I1215 12:42:55.583493 21 service_latency.go:363] Got endpoints: latency-svc-gtn56 [749.152188ms]
  I1215 12:42:55.601371 21 service_latency.go:356] Created: latency-svc-pzqgd
  I1215 12:42:55.629452 21 service_latency.go:363] Got endpoints: latency-svc-8bbpm [749.302343ms]
  I1215 12:42:55.648237 21 service_latency.go:356] Created: latency-svc-lzj5m
  I1215 12:42:55.680600 21 service_latency.go:363] Got endpoints: latency-svc-84qnx [747.854998ms]
  I1215 12:42:55.702355 21 service_latency.go:356] Created: latency-svc-jnbkp
  I1215 12:42:55.732980 21 service_latency.go:363] Got endpoints: latency-svc-cxm8c [754.175411ms]
  I1215 12:42:55.752952 21 service_latency.go:356] Created: latency-svc-qchg5
  I1215 12:42:55.778995 21 service_latency.go:363] Got endpoints: latency-svc-76hm8 [742.160955ms]
  I1215 12:42:55.797054 21 service_latency.go:356] Created: latency-svc-s8x7z
  I1215 12:42:55.831925 21 service_latency.go:363] Got endpoints: latency-svc-fqj99 [747.555559ms]
  I1215 12:42:55.847507 21 service_latency.go:356] Created: latency-svc-4zsc8
  I1215 12:42:55.879422 21 service_latency.go:363] Got endpoints: latency-svc-b6xf7 [745.665207ms]
  I1215 12:42:55.907254 21 service_latency.go:356] Created: latency-svc-hvkmc
  I1215 12:42:55.934340 21 service_latency.go:363] Got endpoints: latency-svc-r4lgg [749.256164ms]
  I1215 12:42:55.951599 21 service_latency.go:356] Created: latency-svc-gs4rh
  I1215 12:42:55.983590 21 service_latency.go:363] Got endpoints: latency-svc-w5z24 [750.888023ms]
  I1215 12:42:56.003297 21 service_latency.go:356] Created: latency-svc-s48gl
  I1215 12:42:56.031570 21 service_latency.go:363] Got endpoints: latency-svc-kzdsv [747.096256ms]
  I1215 12:42:56.047725 21 service_latency.go:356] Created: latency-svc-pm9g6
  I1215 12:42:56.080356 21 service_latency.go:363] Got endpoints: latency-svc-9lzb2 [752.481829ms]
  I1215 12:42:56.096823 21 service_latency.go:356] Created: latency-svc-kpctx
  I1215 12:42:56.132943 21 service_latency.go:363] Got endpoints: latency-svc-q92h2 [751.71613ms]
  I1215 12:42:56.155694 21 service_latency.go:356] Created: latency-svc-kk575
  I1215 12:42:56.179360 21 service_latency.go:363] Got endpoints: latency-svc-bhlxt [744.889126ms]
  I1215 12:42:56.198547 21 service_latency.go:356] Created: latency-svc-5lc49
  I1215 12:42:56.231112 21 service_latency.go:363] Got endpoints: latency-svc-6rfvw [750.786985ms]
  I1215 12:42:56.254195 21 service_latency.go:356] Created: latency-svc-l4rnt
  I1215 12:42:56.280530 21 service_latency.go:363] Got endpoints: latency-svc-dv7gm [751.340467ms]
  I1215 12:42:56.300945 21 service_latency.go:356] Created: latency-svc-jhdqc
  I1215 12:42:56.336607 21 service_latency.go:363] Got endpoints: latency-svc-pzqgd [753.023865ms]
  I1215 12:42:56.362363 21 service_latency.go:356] Created: latency-svc-w9ms9
  I1215 12:42:56.379272 21 service_latency.go:363] Got endpoints: latency-svc-lzj5m [749.724192ms]
  I1215 12:42:56.398945 21 service_latency.go:356] Created: latency-svc-6s5h8
  I1215 12:42:56.432589 21 service_latency.go:363] Got endpoints: latency-svc-jnbkp [751.916368ms]
  I1215 12:42:56.451978 21 service_latency.go:356] Created: latency-svc-2d6fj
  I1215 12:42:56.483265 21 service_latency.go:363] Got endpoints: latency-svc-qchg5 [750.209522ms]
  I1215 12:42:56.498592 21 service_latency.go:356] Created: latency-svc-6mw6v
  I1215 12:42:56.530479 21 service_latency.go:363] Got endpoints: latency-svc-s8x7z [751.172791ms]
  I1215 12:42:56.547770 21 service_latency.go:356] Created: latency-svc-x26mk
  I1215 12:42:56.586095 21 service_latency.go:363] Got endpoints: latency-svc-4zsc8 [754.098406ms]
  I1215 12:42:56.603965 21 service_latency.go:356] Created: latency-svc-x5mn6
  I1215 12:42:56.633464 21 service_latency.go:363] Got endpoints: latency-svc-hvkmc [753.79838ms]
  I1215 12:42:56.652123 21 service_latency.go:356] Created: latency-svc-mb6w5
  I1215 12:42:56.680353 21 service_latency.go:363] Got endpoints: latency-svc-gs4rh [745.904606ms]
  I1215 12:42:56.701143 21 service_latency.go:356] Created: latency-svc-h8xrx
  I1215 12:42:56.732429 21 service_latency.go:363] Got endpoints: latency-svc-s48gl [748.760561ms]
  I1215 12:42:56.750078 21 service_latency.go:356] Created: latency-svc-tqslf
  I1215 12:42:56.781212 21 service_latency.go:363] Got endpoints: latency-svc-pm9g6 [749.559557ms]
  I1215 12:42:56.795340 21 service_latency.go:356] Created: latency-svc-vj9wz
  I1215 12:42:56.828562 21 service_latency.go:363] Got endpoints: latency-svc-kpctx [748.112261ms]
  I1215 12:42:56.846898 21 service_latency.go:356] Created: latency-svc-6tv88
  I1215 12:42:56.885783 21 service_latency.go:363] Got endpoints: latency-svc-kk575 [752.738137ms]
  I1215 12:42:56.901832 21 service_latency.go:356] Created: latency-svc-9hkpj
  I1215 12:42:56.929551 21 service_latency.go:363] Got endpoints: latency-svc-5lc49 [750.091981ms]
  I1215 12:42:56.945639 21 service_latency.go:356] Created: latency-svc-vwgk4
  I1215 12:42:56.982012 21 service_latency.go:363] Got endpoints: latency-svc-l4rnt [750.820289ms]
  I1215 12:42:56.998902 21 service_latency.go:356] Created: latency-svc-njg2t
  I1215 12:42:57.031013 21 service_latency.go:363] Got endpoints: latency-svc-jhdqc [750.413604ms]
  I1215 12:42:57.047837 21 service_latency.go:356] Created: latency-svc-trb6c
  I1215 12:42:57.080818 21 service_latency.go:363] Got endpoints: latency-svc-w9ms9 [744.138777ms]
  I1215 12:42:57.097883 21 service_latency.go:356] Created: latency-svc-hfld7
  I1215 12:42:57.129503 21 service_latency.go:363] Got endpoints: latency-svc-6s5h8 [750.159636ms]
  I1215 12:42:57.145826 21 service_latency.go:356] Created: latency-svc-49xkw
  I1215 12:42:57.185651 21 service_latency.go:363] Got endpoints: latency-svc-2d6fj [752.953261ms]
  I1215 12:42:57.200584 21 service_latency.go:356] Created: latency-svc-zzhld
  I1215 12:42:57.238810 21 service_latency.go:363] Got endpoints: latency-svc-6mw6v [755.474958ms]
  I1215 12:42:57.259151 21 service_latency.go:356] Created: latency-svc-c6ckr
  I1215 12:42:57.277394 21 service_latency.go:363] Got endpoints: latency-svc-x26mk [746.822921ms]
  I1215 12:42:57.300567 21 service_latency.go:356] Created: latency-svc-97ph8
  I1215 12:42:57.329510 21 service_latency.go:363] Got endpoints: latency-svc-x5mn6 [743.345135ms]
  I1215 12:42:57.346262 21 service_latency.go:356] Created: latency-svc-drwx7
  I1215 12:42:57.383583 21 service_latency.go:363] Got endpoints: latency-svc-mb6w5 [750.038196ms]
  I1215 12:42:57.399348 21 service_latency.go:356] Created: latency-svc-7lg7m
  I1215 12:42:57.433165 21 service_latency.go:363] Got endpoints: latency-svc-h8xrx [752.722256ms]
  I1215 12:42:57.449859 21 service_latency.go:356] Created: latency-svc-5vlx6
  I1215 12:42:57.481671 21 service_latency.go:363] Got endpoints: latency-svc-tqslf [749.169317ms]
  I1215 12:42:57.499174 21 service_latency.go:356] Created: latency-svc-kfw7c
  I1215 12:42:57.533964 21 service_latency.go:363] Got endpoints: latency-svc-vj9wz [752.66055ms]
  I1215 12:42:57.553702 21 service_latency.go:356] Created: latency-svc-zdckg
  I1215 12:42:57.580135 21 service_latency.go:363] Got endpoints: latency-svc-6tv88 [751.422345ms]
  I1215 12:42:57.597583 21 service_latency.go:356] Created: latency-svc-xcvjn
  I1215 12:42:57.629245 21 service_latency.go:363] Got endpoints: latency-svc-9hkpj [743.365378ms]
  I1215 12:42:57.649376 21 service_latency.go:356] Created: latency-svc-xx9cw
  I1215 12:42:57.684736 21 service_latency.go:363] Got endpoints: latency-svc-vwgk4 [755.087204ms]
  I1215 12:42:57.708808 21 service_latency.go:356] Created: latency-svc-llt5g
  I1215 12:42:57.730071 21 service_latency.go:363] Got endpoints: latency-svc-njg2t [747.839553ms]
  I1215 12:42:57.750026 21 service_latency.go:356] Created: latency-svc-xcc2s
  I1215 12:42:57.785689 21 service_latency.go:363] Got endpoints: latency-svc-trb6c [754.589961ms]
  I1215 12:42:57.805102 21 service_latency.go:356] Created: latency-svc-hnd74
  I1215 12:42:57.840859 21 service_latency.go:363] Got endpoints: latency-svc-hfld7 [759.965548ms]
  I1215 12:42:57.857160 21 service_latency.go:356] Created: latency-svc-l4c5j
  I1215 12:42:57.879647 21 service_latency.go:363] Got endpoints: latency-svc-49xkw [750.062806ms]
  I1215 12:42:57.896072 21 service_latency.go:356] Created: latency-svc-f4gbd
  I1215 12:42:57.930554 21 service_latency.go:363] Got endpoints: latency-svc-zzhld [744.809137ms]
  I1215 12:42:57.951220 21 service_latency.go:356] Created: latency-svc-tn25t
  I1215 12:42:57.992833 21 service_latency.go:363] Got endpoints: latency-svc-c6ckr [753.956718ms]
  I1215 12:42:58.016260 21 service_latency.go:356] Created: latency-svc-m6sv6
  I1215 12:42:58.027789 21 service_latency.go:363] Got endpoints: latency-svc-97ph8 [750.343724ms]
  I1215 12:42:58.044073 21 service_latency.go:356] Created: latency-svc-5qd7d
  I1215 12:42:58.089707 21 service_latency.go:363] Got endpoints: latency-svc-drwx7 [760.106616ms]
  I1215 12:42:58.105978 21 service_latency.go:356] Created: latency-svc-jt5xg
  I1215 12:42:58.131047 21 service_latency.go:363] Got endpoints: latency-svc-7lg7m [747.392905ms]
  I1215 12:42:58.164970 21 service_latency.go:356] Created: latency-svc-znnsd
  I1215 12:42:58.178861 21 service_latency.go:363] Got endpoints: latency-svc-5vlx6 [745.338362ms]
  I1215 12:42:58.198497 21 service_latency.go:356] Created: latency-svc-hslrb
  I1215 12:42:58.233698 21 service_latency.go:363] Got endpoints: latency-svc-kfw7c [751.966863ms]
  I1215 12:42:58.251320 21 service_latency.go:356] Created: latency-svc-2748g
  I1215 12:42:58.282485 21 service_latency.go:363] Got endpoints: latency-svc-zdckg [748.180446ms]
  I1215 12:42:58.301637 21 service_latency.go:356] Created: latency-svc-h5nqz
  I1215 12:42:58.333934 21 service_latency.go:363] Got endpoints: latency-svc-xcvjn [753.606669ms]
  I1215 12:42:58.351362 21 service_latency.go:356] Created: latency-svc-9msmj
  I1215 12:42:58.384100 21 service_latency.go:363] Got endpoints: latency-svc-xx9cw [754.77258ms]
  I1215 12:42:58.399509 21 service_latency.go:356] Created: latency-svc-rhjjx
  I1215 12:42:58.433263 21 service_latency.go:363] Got endpoints: latency-svc-llt5g [748.434019ms]
  I1215 12:42:58.450645 21 service_latency.go:356] Created: latency-svc-cm7lj
  I1215 12:42:58.479815 21 service_latency.go:363] Got endpoints: latency-svc-xcc2s [749.675773ms]
  I1215 12:42:58.497020 21 service_latency.go:356] Created: latency-svc-lm62p
  I1215 12:42:58.533895 21 service_latency.go:363] Got endpoints: latency-svc-hnd74 [748.099859ms]
  I1215 12:42:58.555207 21 service_latency.go:356] Created: latency-svc-64fqr
  I1215 12:42:58.577779 21 service_latency.go:363] Got endpoints: latency-svc-l4c5j [736.847148ms]
  I1215 12:42:58.603482 21 service_latency.go:356] Created: latency-svc-6svx4
  I1215 12:42:58.628754 21 service_latency.go:363] Got endpoints: latency-svc-f4gbd [748.971592ms]
  I1215 12:42:58.645230 21 service_latency.go:356] Created: latency-svc-2pckt
  I1215 12:42:58.682136 21 service_latency.go:363] Got endpoints: latency-svc-tn25t [751.492496ms]
  I1215 12:42:58.696712 21 service_latency.go:356] Created: latency-svc-p7qf5
  I1215 12:42:58.738003 21 service_latency.go:363] Got endpoints: latency-svc-m6sv6 [745.097158ms]
  I1215 12:42:58.757395 21 service_latency.go:356] Created: latency-svc-tcp8g
  I1215 12:42:58.777707 21 service_latency.go:363] Got endpoints: latency-svc-5qd7d [749.831196ms]
  I1215 12:42:58.792808 21 service_latency.go:356] Created: latency-svc-tzg5r
  I1215 12:42:58.831088 21 service_latency.go:363] Got endpoints: latency-svc-jt5xg [741.299743ms]
  I1215 12:42:58.851665 21 service_latency.go:356] Created: latency-svc-sqg9j
  I1215 12:42:58.882499 21 service_latency.go:363] Got endpoints: latency-svc-znnsd [751.372261ms]
  I1215 12:42:58.905925 21 service_latency.go:356] Created: latency-svc-8b9vl
  I1215 12:42:58.929565 21 service_latency.go:363] Got endpoints: latency-svc-hslrb [750.634931ms]
  I1215 12:42:58.943382 21 service_latency.go:356] Created: latency-svc-kgpfm
  I1215 12:42:58.978666 21 service_latency.go:363] Got endpoints: latency-svc-2748g [744.765118ms]
  I1215 12:42:59.003153 21 service_latency.go:356] Created: latency-svc-x6c79
  I1215 12:42:59.032892 21 service_latency.go:363] Got endpoints: latency-svc-h5nqz [750.31497ms]
  I1215 12:42:59.051180 21 service_latency.go:356] Created: latency-svc-fkrwr
  I1215 12:42:59.081132 21 service_latency.go:363] Got endpoints: latency-svc-9msmj [747.010973ms]
  I1215 12:42:59.102752 21 service_latency.go:356] Created: latency-svc-6hm2w
  I1215 12:42:59.133595 21 service_latency.go:363] Got endpoints: latency-svc-rhjjx [749.421472ms]
  I1215 12:42:59.150811 21 service_latency.go:356] Created: latency-svc-ngczb
  I1215 12:42:59.183576 21 service_latency.go:363] Got endpoints: latency-svc-cm7lj [750.22909ms]
  I1215 12:42:59.199207 21 service_latency.go:356] Created: latency-svc-zbgbx
  I1215 12:42:59.234268 21 service_latency.go:363] Got endpoints: latency-svc-lm62p [754.276597ms]
  I1215 12:42:59.251503 21 service_latency.go:356] Created: latency-svc-77mgh
  I1215 12:42:59.280219 21 service_latency.go:363] Got endpoints: latency-svc-64fqr [746.246374ms]
  I1215 12:42:59.295827 21 service_latency.go:356] Created: latency-svc-9hwj9
  I1215 12:42:59.328583 21 service_latency.go:363] Got endpoints: latency-svc-6svx4 [750.735439ms]
  I1215 12:42:59.352406 21 service_latency.go:356] Created: latency-svc-25pdh
  I1215 12:42:59.382803 21 service_latency.go:363] Got endpoints: latency-svc-2pckt [753.990499ms]
  I1215 12:42:59.398351 21 service_latency.go:356] Created: latency-svc-k2z7d
  I1215 12:42:59.434675 21 service_latency.go:363] Got endpoints: latency-svc-p7qf5 [752.422092ms]
  I1215 12:42:59.452557 21 service_latency.go:356] Created: latency-svc-h86z8
  I1215 12:42:59.482672 21 service_latency.go:363] Got endpoints: latency-svc-tcp8g [744.606405ms]
  I1215 12:42:59.507029 21 service_latency.go:356] Created: latency-svc-dvqk2
  I1215 12:42:59.537674 21 service_latency.go:363] Got endpoints: latency-svc-tzg5r [759.881367ms]
  I1215 12:42:59.553414 21 service_latency.go:356] Created: latency-svc-w8t86
  I1215 12:42:59.584743 21 service_latency.go:363] Got endpoints: latency-svc-sqg9j [753.584689ms]
  I1215 12:42:59.606546 21 service_latency.go:356] Created: latency-svc-n6jbt
  I1215 12:42:59.629793 21 service_latency.go:363] Got endpoints: latency-svc-8b9vl [745.277602ms]
  I1215 12:42:59.648081 21 service_latency.go:356] Created: latency-svc-4g8bh
  I1215 12:42:59.678904 21 service_latency.go:363] Got endpoints: latency-svc-kgpfm [748.914632ms]
  I1215 12:42:59.695550 21 service_latency.go:356] Created: latency-svc-lqnw7
  I1215 12:42:59.730245 21 service_latency.go:363] Got endpoints: latency-svc-x6c79 [751.279231ms]
  I1215 12:42:59.746824 21 service_latency.go:356] Created: latency-svc-rns7m
  I1215 12:42:59.777836 21 service_latency.go:363] Got endpoints: latency-svc-fkrwr [744.850742ms]
  I1215 12:42:59.797552 21 service_latency.go:356] Created: latency-svc-6lx9v
  I1215 12:42:59.834505 21 service_latency.go:363] Got endpoints: latency-svc-6hm2w [753.309532ms]
  I1215 12:42:59.853559 21 service_latency.go:356] Created: latency-svc-xvk4p
  I1215 12:42:59.880401 21 service_latency.go:363] Got endpoints: latency-svc-ngczb [746.712797ms]
  I1215 12:42:59.896621 21 service_latency.go:356] Created: latency-svc-lb65d
  I1215 12:42:59.928461 21 service_latency.go:363] Got endpoints: latency-svc-zbgbx [744.820377ms]
  I1215 12:42:59.951961 21 service_latency.go:356] Created: latency-svc-4xsl4
  I1215 12:42:59.977679 21 service_latency.go:363] Got endpoints: latency-svc-77mgh [743.332129ms]
  I1215 12:42:59.996828 21 service_latency.go:356] Created: latency-svc-zbsjx
  I1215 12:43:00.037579 21 service_latency.go:363] Got endpoints: latency-svc-9hwj9 [757.135529ms]
  I1215 12:43:00.052928 21 service_latency.go:356] Created: latency-svc-ptknn
  I1215 12:43:00.083729 21 service_latency.go:363] Got endpoints: latency-svc-25pdh [755.072533ms]
  I1215 12:43:00.101670 21 service_latency.go:356] Created: latency-svc-8rdnx
  I1215 12:43:00.136649 21 service_latency.go:363] Got endpoints: latency-svc-k2z7d [753.777497ms]
  I1215 12:43:00.153238 21 service_latency.go:356] Created: latency-svc-ccl8w
  I1215 12:43:00.187495 21 service_latency.go:363] Got endpoints: latency-svc-h86z8 [752.629443ms]
  I1215 12:43:00.205747 21 service_latency.go:356] Created: latency-svc-b8tbs
  I1215 12:43:00.233812 21 service_latency.go:363] Got endpoints: latency-svc-dvqk2 [751.074408ms]
  I1215 12:43:00.252051 21 service_latency.go:356] Created: latency-svc-lfqnt
  I1215 12:43:00.280464 21 service_latency.go:363] Got endpoints: latency-svc-w8t86 [742.682766ms]
  I1215 12:43:00.295838 21 service_latency.go:356] Created: latency-svc-x4hfl
  I1215 12:43:00.333023 21 service_latency.go:363] Got endpoints: latency-svc-n6jbt [748.057299ms]
  I1215 12:43:00.358101 21 service_latency.go:356] Created: latency-svc-m8b76
  I1215 12:43:00.385327 21 service_latency.go:363] Got endpoints: latency-svc-4g8bh [755.335998ms]
  I1215 12:43:00.400921 21 service_latency.go:356] Created: latency-svc-t59wf
  I1215 12:43:00.431272 21 service_latency.go:363] Got endpoints: latency-svc-lqnw7 [752.279478ms]
  I1215 12:43:00.449531 21 service_latency.go:356] Created: latency-svc-lt97r
  I1215 12:43:00.483474 21 service_latency.go:363] Got endpoints: latency-svc-rns7m [753.142987ms]
  I1215 12:43:00.501293 21 service_latency.go:356] Created: latency-svc-ss2hf
  I1215 12:43:00.534623 21 service_latency.go:363] Got endpoints: latency-svc-6lx9v [756.69505ms]
  I1215 12:43:00.552682 21 service_latency.go:356] Created: latency-svc-7c6r4
  I1215 12:43:00.578440 21 service_latency.go:363] Got endpoints: latency-svc-xvk4p [743.703097ms]
  I1215 12:43:00.603163 21 service_latency.go:356] Created: latency-svc-xlcmx
  I1215 12:43:00.631609 21 service_latency.go:363] Got endpoints: latency-svc-lb65d [751.004569ms]
  I1215 12:43:00.649113 21 service_latency.go:356] Created: latency-svc-lj88v
  I1215 12:43:00.691299 21 service_latency.go:363] Got endpoints: latency-svc-4xsl4 [762.664441ms]
  I1215 12:43:00.712238 21 service_latency.go:356] Created: latency-svc-fl4pr
  I1215 12:43:00.733020 21 service_latency.go:363] Got endpoints: latency-svc-zbsjx [755.140907ms]
  I1215 12:43:00.761098 21 service_latency.go:356] Created: latency-svc-cl7fj
  I1215 12:43:00.781514 21 service_latency.go:363] Got endpoints: latency-svc-ptknn [743.756949ms]
  I1215 12:43:00.799431 21 service_latency.go:356] Created: latency-svc-vlg2s
  I1215 12:43:00.828892 21 service_latency.go:363] Got endpoints: latency-svc-8rdnx [745.088397ms]
  I1215 12:43:00.849973 21 service_latency.go:356] Created: latency-svc-w89xt
  I1215 12:43:00.888524 21 service_latency.go:363] Got endpoints: latency-svc-ccl8w [751.788991ms]
  I1215 12:43:00.904917 21 service_latency.go:356] Created: latency-svc-bxkgp
  I1215 12:43:00.935771 21 service_latency.go:363] Got endpoints: latency-svc-b8tbs [748.103482ms]
  I1215 12:43:00.954286 21 service_latency.go:356] Created: latency-svc-c856w
  I1215 12:43:00.986548 21 service_latency.go:363] Got endpoints: latency-svc-lfqnt [752.505649ms]
  I1215 12:43:01.003549 21 service_latency.go:356] Created: latency-svc-92tj4
  I1215 12:43:01.032885 21 service_latency.go:363] Got endpoints: latency-svc-x4hfl [752.257184ms]
  I1215 12:43:01.049167 21 service_latency.go:356] Created: latency-svc-xh782
  I1215 12:43:01.084331 21 service_latency.go:363] Got endpoints: latency-svc-m8b76 [751.237283ms]
  I1215 12:43:01.102904 21 service_latency.go:356] Created: latency-svc-sq857
  I1215 12:43:01.130942 21 service_latency.go:363] Got endpoints: latency-svc-t59wf [745.283332ms]
  I1215 12:43:01.149927 21 service_latency.go:356] Created: latency-svc-6blmw
  I1215 12:43:01.179312 21 service_latency.go:363] Got endpoints: latency-svc-lt97r [747.967023ms]
  I1215 12:43:01.194762 21 service_latency.go:356] Created: latency-svc-cq9sc
  I1215 12:43:01.233395 21 service_latency.go:363] Got endpoints: latency-svc-ss2hf [749.845013ms]
  I1215 12:43:01.250253 21 service_latency.go:356] Created: latency-svc-dsknq
  I1215 12:43:01.283449 21 service_latency.go:363] Got endpoints: latency-svc-7c6r4 [748.743991ms]
  I1215 12:43:01.310087 21 service_latency.go:356] Created: latency-svc-kjp9l
  I1215 12:43:01.328762 21 service_latency.go:363] Got endpoints: latency-svc-xlcmx [750.1918ms]
  I1215 12:43:01.345305 21 service_latency.go:356] Created: latency-svc-ktwzl
  I1215 12:43:01.385462 21 service_latency.go:363] Got endpoints: latency-svc-lj88v [753.66228ms]
  I1215 12:43:01.402544 21 service_latency.go:356] Created: latency-svc-jmlrw
  I1215 12:43:01.432035 21 service_latency.go:363] Got endpoints: latency-svc-fl4pr [740.641552ms]
  I1215 12:43:01.452141 21 service_latency.go:356] Created: latency-svc-l7jqk
  I1215 12:43:01.479557 21 service_latency.go:363] Got endpoints: latency-svc-cl7fj [746.455762ms]
  I1215 12:43:01.501686 21 service_latency.go:356] Created: latency-svc-gn8mm
  I1215 12:43:01.530552 21 service_latency.go:363] Got endpoints: latency-svc-vlg2s [748.884844ms]
  I1215 12:43:01.549001 21 service_latency.go:356] Created: latency-svc-khhlv
  I1215 12:43:01.585511 21 service_latency.go:363] Got endpoints: latency-svc-w89xt [756.236607ms]
  I1215 12:43:01.618130 21 service_latency.go:356] Created: latency-svc-qzdbz
  I1215 12:43:01.629787 21 service_latency.go:363] Got endpoints: latency-svc-bxkgp [741.142429ms]
  I1215 12:43:01.654197 21 service_latency.go:356] Created: latency-svc-5bnlr
  I1215 12:43:01.683460 21 service_latency.go:363] Got endpoints: latency-svc-c856w [747.623832ms]
  I1215 12:43:01.699165 21 service_latency.go:356] Created: latency-svc-4qv9d
  I1215 12:43:01.735998 21 service_latency.go:363] Got endpoints: latency-svc-92tj4 [749.387246ms]
  I1215 12:43:01.754599 21 service_latency.go:356] Created: latency-svc-nsbhz
  I1215 12:43:01.779826 21 service_latency.go:363] Got endpoints: latency-svc-xh782 [746.871686ms]
  I1215 12:43:01.834364 21 service_latency.go:363] Got endpoints: latency-svc-sq857 [749.948723ms]
  I1215 12:43:01.880453 21 service_latency.go:363] Got endpoints: latency-svc-6blmw [749.445708ms]
  I1215 12:43:01.934641 21 service_latency.go:363] Got endpoints: latency-svc-cq9sc [755.266939ms]
  I1215 12:43:01.980867 21 service_latency.go:363] Got endpoints: latency-svc-dsknq [747.408953ms]
  I1215 12:43:02.033509 21 service_latency.go:363] Got endpoints: latency-svc-kjp9l [749.995738ms]
  I1215 12:43:02.082912 21 service_latency.go:363] Got endpoints: latency-svc-ktwzl [754.070799ms]
  I1215 12:43:02.133315 21 service_latency.go:363] Got endpoints: latency-svc-jmlrw [747.79229ms]
  I1215 12:43:02.190937 21 service_latency.go:363] Got endpoints: latency-svc-l7jqk [758.682185ms]
  I1215 12:43:02.229343 21 service_latency.go:363] Got endpoints: latency-svc-gn8mm [749.69566ms]
  I1215 12:43:02.282455 21 service_latency.go:363] Got endpoints: latency-svc-khhlv [751.838942ms]
  I1215 12:43:02.331306 21 service_latency.go:363] Got endpoints: latency-svc-qzdbz [745.699291ms]
  I1215 12:43:02.385430 21 service_latency.go:363] Got endpoints: latency-svc-5bnlr [755.443231ms]
  I1215 12:43:02.433819 21 service_latency.go:363] Got endpoints: latency-svc-4qv9d [750.127811ms]
  I1215 12:43:02.480933 21 service_latency.go:363] Got endpoints: latency-svc-nsbhz [744.872354ms]
  I1215 12:43:02.481087 21 service_latency.go:114] Latencies: [39.332154ms 61.053058ms 71.840673ms 96.212774ms 115.672464ms 137.005961ms 156.034425ms 188.851218ms 192.624935ms 206.250959ms 230.364434ms 242.950654ms 253.10794ms 261.535322ms 263.394811ms 266.496592ms 270.076023ms 270.756464ms 270.943413ms 272.048133ms 272.825781ms 273.152987ms 273.475583ms 274.139921ms 274.8855ms 275.823306ms 276.66118ms 277.746241ms 278.428774ms 278.51318ms 278.786886ms 279.4384ms 280.033765ms 280.394947ms 280.592562ms 281.010193ms 282.052883ms 282.094029ms 282.837541ms 282.880103ms 283.142237ms 284.091725ms 285.494021ms 288.383726ms 290.416081ms 293.240241ms 301.047152ms 312.266629ms 343.844651ms 365.686926ms 418.069168ms 444.098962ms 472.972516ms 515.109869ms 534.532314ms 577.027338ms 602.79105ms 634.921927ms 666.041771ms 704.624483ms 728.456887ms 736.847148ms 740.641552ms 741.142429ms 741.299743ms 742.160955ms 742.682766ms 743.332129ms 743.345135ms 743.365378ms 743.703097ms 743.756949ms 744.138777ms 744.606405ms 744.765118ms 744.809137ms 744.820377ms 744.850742ms 744.872354ms 744.889126ms 745.088397ms 745.097158ms 745.277602ms 745.283332ms 745.338362ms 745.665207ms 745.699291ms 745.904606ms 746.246374ms 746.455762ms 746.712797ms 746.822921ms 746.871686ms 747.010973ms 747.096256ms 747.392905ms 747.408953ms 747.555559ms 747.623832ms 747.79229ms 747.839553ms 747.854998ms 747.967023ms 748.057299ms 748.099859ms 748.103482ms 748.112261ms 748.180446ms 748.434019ms 748.743991ms 748.760561ms 748.884844ms 748.914632ms 748.971592ms 749.152188ms 749.169317ms 749.256164ms 749.302343ms 749.387246ms 749.421472ms 749.445708ms 749.559557ms 749.675773ms 749.69566ms 749.724192ms 749.831196ms 749.845013ms 749.948723ms 749.995738ms 750.038196ms 750.062806ms 750.091981ms 750.127811ms 750.159636ms 750.1918ms 750.209522ms 750.22909ms 750.31497ms 750.343724ms 750.413604ms 750.634931ms 750.735439ms 750.786985ms 750.820289ms 750.888023ms 751.004569ms 751.074408ms 751.172791ms 751.237283ms 751.279231ms 751.340467ms 751.372261ms 751.422345ms 751.492496ms 751.71613ms 751.788991ms 751.838942ms 751.916368ms 751.966863ms 752.257184ms 752.279478ms 752.422092ms 752.481829ms 752.505649ms 752.629443ms 752.66055ms 752.722256ms 752.738137ms 752.953261ms 753.023865ms 753.142987ms 753.309532ms 753.584689ms 753.606669ms 753.66228ms 753.777497ms 753.79838ms 753.956718ms 753.990499ms 754.070799ms 754.098406ms 754.175411ms 754.276597ms 754.589961ms 754.77258ms 755.072533ms 755.087204ms 755.140907ms 755.266939ms 755.335998ms 755.443231ms 755.474958ms 756.236607ms 756.69505ms 757.135529ms 758.682185ms 759.881367ms 759.965548ms 760.106616ms 762.664441ms]
  I1215 12:43:02.481153 21 service_latency.go:118] 50 %ile: 747.839553ms
  I1215 12:43:02.481161 21 service_latency.go:119] 90 %ile: 754.098406ms
  I1215 12:43:02.481169 21 service_latency.go:120] 99 %ile: 760.106616ms
  I1215 12:43:02.481175 21 service_latency.go:121] Total sample count: 200
  I1215 12:43:02.481347 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-83" for this suite. @ 12/15/24 12:43:02.488
• [10.811 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 12/15/24 12:43:02.498
  I1215 12:43:02.498777 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 12:43:02.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:43:02.536
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:43:02.539
  STEP: Creating secret with name secret-test-map-11e24711-4a99-4e49-9ee7-ab6133533e11 @ 12/15/24 12:43:02.542
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:43:02.55
  STEP: Saw pod success @ 12/15/24 12:43:06.575
  I1215 12:43:06.579022 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-e0bbcde3-0bb2-4a0f-a125-594696f3208c container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:43:06.595
  I1215 12:43:06.628279 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-7739" for this suite. @ 12/15/24 12:43:06.632
• [4.146 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 12/15/24 12:43:06.645
  I1215 12:43:06.645300 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename gc @ 12/15/24 12:43:06.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:43:06.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:43:06.675
  STEP: create the rc @ 12/15/24 12:43:06.682
  W1215 12:43:06.693311      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/15/24 12:43:12.706
  STEP: wait for the rc to be deleted @ 12/15/24 12:43:12.722
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 12/15/24 12:43:17.73
  STEP: Gathering metrics @ 12/15/24 12:43:47.744
  I1215 12:43:47.848585 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1215 12:43:47.850495 21 delete.go:95] Deleting pod "simpletest.rc-29q92" in namespace "gc-9497"
  I1215 12:43:47.869038 21 delete.go:95] Deleting pod "simpletest.rc-2bf8f" in namespace "gc-9497"
  I1215 12:43:47.896075 21 delete.go:95] Deleting pod "simpletest.rc-2j2j2" in namespace "gc-9497"
  I1215 12:43:47.921498 21 delete.go:95] Deleting pod "simpletest.rc-2mbns" in namespace "gc-9497"
  I1215 12:43:47.950663 21 delete.go:95] Deleting pod "simpletest.rc-2x66g" in namespace "gc-9497"
  I1215 12:43:47.980101 21 delete.go:95] Deleting pod "simpletest.rc-2zp22" in namespace "gc-9497"
  I1215 12:43:48.011939 21 delete.go:95] Deleting pod "simpletest.rc-4cj7q" in namespace "gc-9497"
  I1215 12:43:48.047618 21 delete.go:95] Deleting pod "simpletest.rc-4gptw" in namespace "gc-9497"
  I1215 12:43:48.080361 21 delete.go:95] Deleting pod "simpletest.rc-4vjjv" in namespace "gc-9497"
  I1215 12:43:48.128589 21 delete.go:95] Deleting pod "simpletest.rc-4wv7p" in namespace "gc-9497"
  I1215 12:43:48.159431 21 delete.go:95] Deleting pod "simpletest.rc-4xpmz" in namespace "gc-9497"
  I1215 12:43:48.191164 21 delete.go:95] Deleting pod "simpletest.rc-4xzpn" in namespace "gc-9497"
  I1215 12:43:48.221688 21 delete.go:95] Deleting pod "simpletest.rc-562l6" in namespace "gc-9497"
  I1215 12:43:48.246355 21 delete.go:95] Deleting pod "simpletest.rc-64ch6" in namespace "gc-9497"
  I1215 12:43:48.303193 21 delete.go:95] Deleting pod "simpletest.rc-69dpc" in namespace "gc-9497"
  I1215 12:43:48.333715 21 delete.go:95] Deleting pod "simpletest.rc-6h652" in namespace "gc-9497"
  I1215 12:43:48.370184 21 delete.go:95] Deleting pod "simpletest.rc-6kqt6" in namespace "gc-9497"
  I1215 12:43:48.411636 21 delete.go:95] Deleting pod "simpletest.rc-75rfg" in namespace "gc-9497"
  I1215 12:43:48.461813 21 delete.go:95] Deleting pod "simpletest.rc-7b9cd" in namespace "gc-9497"
  I1215 12:43:48.522068 21 delete.go:95] Deleting pod "simpletest.rc-7fgbf" in namespace "gc-9497"
  I1215 12:43:48.556896 21 delete.go:95] Deleting pod "simpletest.rc-7kvjd" in namespace "gc-9497"
  I1215 12:43:48.606803 21 delete.go:95] Deleting pod "simpletest.rc-7mdtn" in namespace "gc-9497"
  I1215 12:43:48.627134 21 delete.go:95] Deleting pod "simpletest.rc-7mpvl" in namespace "gc-9497"
  I1215 12:43:48.662630 21 delete.go:95] Deleting pod "simpletest.rc-827q4" in namespace "gc-9497"
  I1215 12:43:48.692468 21 delete.go:95] Deleting pod "simpletest.rc-87l8p" in namespace "gc-9497"
  I1215 12:43:48.730571 21 delete.go:95] Deleting pod "simpletest.rc-8grvn" in namespace "gc-9497"
  I1215 12:43:48.774422 21 delete.go:95] Deleting pod "simpletest.rc-8mrl5" in namespace "gc-9497"
  I1215 12:43:48.802897 21 delete.go:95] Deleting pod "simpletest.rc-9jv7s" in namespace "gc-9497"
  I1215 12:43:48.828026 21 delete.go:95] Deleting pod "simpletest.rc-b4r4c" in namespace "gc-9497"
  I1215 12:43:48.873513 21 delete.go:95] Deleting pod "simpletest.rc-bqffh" in namespace "gc-9497"
  I1215 12:43:48.923011 21 delete.go:95] Deleting pod "simpletest.rc-bqtd8" in namespace "gc-9497"
  I1215 12:43:48.955543 21 delete.go:95] Deleting pod "simpletest.rc-bqzhx" in namespace "gc-9497"
  I1215 12:43:48.997129 21 delete.go:95] Deleting pod "simpletest.rc-br77d" in namespace "gc-9497"
  I1215 12:43:49.035321 21 delete.go:95] Deleting pod "simpletest.rc-c5qmj" in namespace "gc-9497"
  I1215 12:43:49.101765 21 delete.go:95] Deleting pod "simpletest.rc-c6tq6" in namespace "gc-9497"
  I1215 12:43:49.138278 21 delete.go:95] Deleting pod "simpletest.rc-clthm" in namespace "gc-9497"
  I1215 12:43:49.170969 21 delete.go:95] Deleting pod "simpletest.rc-cvjqq" in namespace "gc-9497"
  I1215 12:43:49.226318 21 delete.go:95] Deleting pod "simpletest.rc-d4vnz" in namespace "gc-9497"
  I1215 12:43:49.265130 21 delete.go:95] Deleting pod "simpletest.rc-ddsz5" in namespace "gc-9497"
  I1215 12:43:49.282016 21 delete.go:95] Deleting pod "simpletest.rc-ddxg8" in namespace "gc-9497"
  I1215 12:43:49.315651 21 delete.go:95] Deleting pod "simpletest.rc-drhh9" in namespace "gc-9497"
  I1215 12:43:49.352995 21 delete.go:95] Deleting pod "simpletest.rc-fbhhp" in namespace "gc-9497"
  I1215 12:43:49.383761 21 delete.go:95] Deleting pod "simpletest.rc-fd6j6" in namespace "gc-9497"
  I1215 12:43:49.423170 21 delete.go:95] Deleting pod "simpletest.rc-fp9zz" in namespace "gc-9497"
  I1215 12:43:49.465876 21 delete.go:95] Deleting pod "simpletest.rc-fwhs4" in namespace "gc-9497"
  I1215 12:43:49.503429 21 delete.go:95] Deleting pod "simpletest.rc-fzm2t" in namespace "gc-9497"
  I1215 12:43:49.544720 21 delete.go:95] Deleting pod "simpletest.rc-fzqz6" in namespace "gc-9497"
  I1215 12:43:49.605952 21 delete.go:95] Deleting pod "simpletest.rc-g9whk" in namespace "gc-9497"
  I1215 12:43:49.654483 21 delete.go:95] Deleting pod "simpletest.rc-g9zxd" in namespace "gc-9497"
  I1215 12:43:49.698901 21 delete.go:95] Deleting pod "simpletest.rc-gkfjt" in namespace "gc-9497"
  I1215 12:43:49.722032 21 delete.go:95] Deleting pod "simpletest.rc-gq6cl" in namespace "gc-9497"
  I1215 12:43:49.753017 21 delete.go:95] Deleting pod "simpletest.rc-hbc2z" in namespace "gc-9497"
  I1215 12:43:49.796722 21 delete.go:95] Deleting pod "simpletest.rc-hg75l" in namespace "gc-9497"
  I1215 12:43:49.865429 21 delete.go:95] Deleting pod "simpletest.rc-hjcgp" in namespace "gc-9497"
  I1215 12:43:49.891453 21 delete.go:95] Deleting pod "simpletest.rc-hw5df" in namespace "gc-9497"
  I1215 12:43:49.980427 21 delete.go:95] Deleting pod "simpletest.rc-hxxp7" in namespace "gc-9497"
  I1215 12:43:50.015689 21 delete.go:95] Deleting pod "simpletest.rc-jdjs6" in namespace "gc-9497"
  I1215 12:43:50.045482 21 delete.go:95] Deleting pod "simpletest.rc-jmwwt" in namespace "gc-9497"
  I1215 12:43:50.086177 21 delete.go:95] Deleting pod "simpletest.rc-jnt2g" in namespace "gc-9497"
  I1215 12:43:50.120166 21 delete.go:95] Deleting pod "simpletest.rc-kx85z" in namespace "gc-9497"
  I1215 12:43:50.183653 21 delete.go:95] Deleting pod "simpletest.rc-ll59m" in namespace "gc-9497"
  I1215 12:43:50.220527 21 delete.go:95] Deleting pod "simpletest.rc-mgnq5" in namespace "gc-9497"
  I1215 12:43:50.252869 21 delete.go:95] Deleting pod "simpletest.rc-mqlv8" in namespace "gc-9497"
  I1215 12:43:50.315428 21 delete.go:95] Deleting pod "simpletest.rc-nknh4" in namespace "gc-9497"
  I1215 12:43:50.347471 21 delete.go:95] Deleting pod "simpletest.rc-nvp7m" in namespace "gc-9497"
  I1215 12:43:50.377403 21 delete.go:95] Deleting pod "simpletest.rc-p2pnn" in namespace "gc-9497"
  I1215 12:43:50.405544 21 delete.go:95] Deleting pod "simpletest.rc-p4f7v" in namespace "gc-9497"
  I1215 12:43:50.441568 21 delete.go:95] Deleting pod "simpletest.rc-p4rtv" in namespace "gc-9497"
  I1215 12:43:50.484915 21 delete.go:95] Deleting pod "simpletest.rc-p7c7t" in namespace "gc-9497"
  I1215 12:43:50.544729 21 delete.go:95] Deleting pod "simpletest.rc-p9h7m" in namespace "gc-9497"
  I1215 12:43:50.573192 21 delete.go:95] Deleting pod "simpletest.rc-pdgp6" in namespace "gc-9497"
  I1215 12:43:50.625860 21 delete.go:95] Deleting pod "simpletest.rc-pntbk" in namespace "gc-9497"
  I1215 12:43:50.655055 21 delete.go:95] Deleting pod "simpletest.rc-qc6kb" in namespace "gc-9497"
  I1215 12:43:50.703381 21 delete.go:95] Deleting pod "simpletest.rc-qrm4l" in namespace "gc-9497"
  I1215 12:43:50.738687 21 delete.go:95] Deleting pod "simpletest.rc-r2bcq" in namespace "gc-9497"
  I1215 12:43:50.782131 21 delete.go:95] Deleting pod "simpletest.rc-r5htk" in namespace "gc-9497"
  I1215 12:43:50.821277 21 delete.go:95] Deleting pod "simpletest.rc-rj9qg" in namespace "gc-9497"
  I1215 12:43:50.872917 21 delete.go:95] Deleting pod "simpletest.rc-rjw84" in namespace "gc-9497"
  I1215 12:43:50.898968 21 delete.go:95] Deleting pod "simpletest.rc-s5gvs" in namespace "gc-9497"
  I1215 12:43:50.936753 21 delete.go:95] Deleting pod "simpletest.rc-sg9m2" in namespace "gc-9497"
  I1215 12:43:51.027161 21 delete.go:95] Deleting pod "simpletest.rc-sj4mb" in namespace "gc-9497"
  I1215 12:43:51.091559 21 delete.go:95] Deleting pod "simpletest.rc-t89d2" in namespace "gc-9497"
  I1215 12:43:51.120922 21 delete.go:95] Deleting pod "simpletest.rc-tcx4n" in namespace "gc-9497"
  I1215 12:43:51.161239 21 delete.go:95] Deleting pod "simpletest.rc-th587" in namespace "gc-9497"
  I1215 12:43:51.193437 21 delete.go:95] Deleting pod "simpletest.rc-tj465" in namespace "gc-9497"
  I1215 12:43:51.218889 21 delete.go:95] Deleting pod "simpletest.rc-tp9c6" in namespace "gc-9497"
  I1215 12:43:51.280093 21 delete.go:95] Deleting pod "simpletest.rc-twqwg" in namespace "gc-9497"
  I1215 12:43:51.328886 21 delete.go:95] Deleting pod "simpletest.rc-txxkf" in namespace "gc-9497"
  I1215 12:43:51.356598 21 delete.go:95] Deleting pod "simpletest.rc-v2c24" in namespace "gc-9497"
  I1215 12:43:51.389581 21 delete.go:95] Deleting pod "simpletest.rc-v8vb5" in namespace "gc-9497"
  I1215 12:43:51.414742 21 delete.go:95] Deleting pod "simpletest.rc-v9r48" in namespace "gc-9497"
  I1215 12:43:51.451019 21 delete.go:95] Deleting pod "simpletest.rc-vbkn7" in namespace "gc-9497"
  I1215 12:43:51.473688 21 delete.go:95] Deleting pod "simpletest.rc-vxkz6" in namespace "gc-9497"
  I1215 12:43:51.528071 21 delete.go:95] Deleting pod "simpletest.rc-w2qg4" in namespace "gc-9497"
  I1215 12:43:51.559316 21 delete.go:95] Deleting pod "simpletest.rc-wgp92" in namespace "gc-9497"
  I1215 12:43:51.597167 21 delete.go:95] Deleting pod "simpletest.rc-x7ntl" in namespace "gc-9497"
  I1215 12:43:51.673855 21 delete.go:95] Deleting pod "simpletest.rc-xcfnd" in namespace "gc-9497"
  I1215 12:43:51.712909 21 delete.go:95] Deleting pod "simpletest.rc-zbvmr" in namespace "gc-9497"
  I1215 12:43:51.731089 21 delete.go:95] Deleting pod "simpletest.rc-znbsb" in namespace "gc-9497"
  I1215 12:43:51.775268 21 delete.go:95] Deleting pod "simpletest.rc-zvxbv" in namespace "gc-9497"
  I1215 12:43:51.851084 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-9497" for this suite. @ 12/15/24 12:43:51.855
• [45.222 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 12/15/24 12:43:51.867
  I1215 12:43:51.867861 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:43:51.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:43:51.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:43:51.907
  I1215 12:43:51.977639 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9881" for this suite. @ 12/15/24 12:43:51.995
• [0.141 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 12/15/24 12:43:52.009
  I1215 12:43:52.009595 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/24 12:43:52.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:43:52.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:43:52.1
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/24 12:43:52.153
  STEP: create the pod with lifecycle hook @ 12/15/24 12:43:54.179
  STEP: delete the pod with lifecycle hook @ 12/15/24 12:43:56.197
  STEP: check prestop hook @ 12/15/24 12:43:58.215
  I1215 12:43:58.231528 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-7079" for this suite. @ 12/15/24 12:43:58.235
• [6.240 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 12/15/24 12:43:58.249
  I1215 12:43:58.249884 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replicaset @ 12/15/24 12:43:58.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:43:58.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:43:58.28
  STEP: Create a Replicaset @ 12/15/24 12:43:58.288
  STEP: Verify that the required pods have come up. @ 12/15/24 12:43:58.296
  I1215 12:43:58.299598 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1215 12:44:03.303730 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/24 12:44:03.303
  STEP: Getting /status @ 12/15/24 12:44:03.303
  I1215 12:44:03.307222 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 12/15/24 12:44:03.307
  I1215 12:44:03.317020 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 12/15/24 12:44:03.317
  I1215 12:44:03.319199 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I1215 12:44:03.319353 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1215 12:44:03.319493 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1215 12:44:03.319847 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I1215 12:44:03.319943 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-500 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I1215 12:44:03.319972 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 12/15/24 12:44:03.319
  I1215 12:44:03.320019 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I1215 12:44:03.333332 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 12/15/24 12:44:03.333
  I1215 12:44:03.335482 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I1215 12:44:03.335621 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1215 12:44:03.336444 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1215 12:44:03.336542 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1215 12:44:03.336571 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-500 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1215 12:44:03.336750 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I1215 12:44:03.336773 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-500 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I1215 12:44:03.336789 21 replica_set.go:729] Replicaset test-rs has a patched status
  I1215 12:44:03.336899 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-500" for this suite. @ 12/15/24 12:44:03.357
• [5.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 12/15/24 12:44:03.37
  I1215 12:44:03.370700 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/15/24 12:44:03.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:44:03.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:44:03.399
  I1215 12:44:03.410641 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2219" for this suite. @ 12/15/24 12:44:03.415
• [0.058 seconds]
------------------------------
SS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 12/15/24 12:44:03.429
  I1215 12:44:03.429038 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename taint-multiple-pods @ 12/15/24 12:44:03.429
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:44:03.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:44:03.453
  I1215 12:44:03.469263 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1215 12:45:03.470214 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I1215 12:45:03.475156 21 taints.go:150] Starting informer...
  STEP: Starting pods... @ 12/15/24 12:45:03.475
  I1215 12:45:03.706135 21 taints.go:469] Pod1 is running on cncf-master-1. Tainting Node
  I1215 12:45:05.928647 21 taints.go:477] Pod2 is running on cncf-master-1. Tainting Node
  STEP: Trying to apply a taint on the Node @ 12/15/24 12:45:05.928
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/24 12:45:05.953
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 12/15/24 12:45:05.957
  I1215 12:45:12.168652 21 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  I1215 12:45:32.086793 21 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 12/15/24 12:45:32.106
  I1215 12:45:32.110092 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-959" for this suite. @ 12/15/24 12:45:32.114
• [88.695 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 12/15/24 12:45:32.125
  I1215 12:45:32.125253 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/24 12:45:32.128
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:45:32.155
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:45:32.158
  STEP: getting /apis @ 12/15/24 12:45:32.162
  STEP: getting /apis/node.k8s.io @ 12/15/24 12:45:32.168
  STEP: getting /apis/node.k8s.io/v1 @ 12/15/24 12:45:32.169
  STEP: creating @ 12/15/24 12:45:32.17
  STEP: watching @ 12/15/24 12:45:32.192
  I1215 12:45:32.192432 21 runtimeclass.go:275] starting watch
  STEP: getting @ 12/15/24 12:45:32.2
  STEP: listing @ 12/15/24 12:45:32.203
  STEP: patching @ 12/15/24 12:45:32.206
  STEP: updating @ 12/15/24 12:45:32.213
  I1215 12:45:32.221265 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 12/15/24 12:45:32.221
  STEP: deleting a collection @ 12/15/24 12:45:32.233
  I1215 12:45:32.249279 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-6731" for this suite. @ 12/15/24 12:45:32.253
• [0.135 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 12/15/24 12:45:32.26
  I1215 12:45:32.260151 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:45:32.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:45:32.285
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:45:32.289
  STEP: Creating projection with secret that has name projected-secret-test-de67292b-a22b-4589-90a1-e7a97c3d8dd1 @ 12/15/24 12:45:32.292
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:45:32.301
  STEP: Saw pod success @ 12/15/24 12:45:36.335
  I1215 12:45:36.338834 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-secrets-e831f642-fb01-4f91-9af2-ccd48273214e container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:45:36.351
  I1215 12:45:36.393764 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4026" for this suite. @ 12/15/24 12:45:36.398
• [4.150 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 12/15/24 12:45:36.41
  I1215 12:45:36.410719 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename field-validation @ 12/15/24 12:45:36.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:45:36.435
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:45:36.438
  STEP: apply creating a deployment @ 12/15/24 12:45:36.44
  I1215 12:45:36.452571 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-929" for this suite. @ 12/15/24 12:45:36.457
• [0.055 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 12/15/24 12:45:36.466
  I1215 12:45:36.466959 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename gc @ 12/15/24 12:45:36.468
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:45:36.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:45:36.504
  STEP: create the rc @ 12/15/24 12:45:36.511
  W1215 12:45:36.525128      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 12/15/24 12:45:42.534
  STEP: wait for the rc to be deleted @ 12/15/24 12:45:42.544
  I1215 12:45:43.565333 21 garbage_collector.go:670] 100 pods remaining
  I1215 12:45:43.565394 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I1215 12:45:43.565406 21 garbage_collector.go:678] 
  I1215 12:45:44.575375 21 garbage_collector.go:670] 100 pods remaining
  I1215 12:45:44.575421 21 garbage_collector.go:677] 71 pods has nil DeletionTimestamp
  I1215 12:45:44.575427 21 garbage_collector.go:678] 
  I1215 12:45:45.562093 21 garbage_collector.go:670] 100 pods remaining
  I1215 12:45:45.562143 21 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I1215 12:45:45.562152 21 garbage_collector.go:678] 
  I1215 12:45:46.561767 21 garbage_collector.go:670] 100 pods remaining
  I1215 12:45:46.561807 21 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I1215 12:45:46.561813 21 garbage_collector.go:678] 
  I1215 12:45:47.563467 21 garbage_collector.go:670] 100 pods remaining
  I1215 12:45:47.563508 21 garbage_collector.go:677] 31 pods has nil DeletionTimestamp
  I1215 12:45:47.563514 21 garbage_collector.go:678] 
  I1215 12:45:48.563379 21 garbage_collector.go:670] 100 pods remaining
  I1215 12:45:48.563430 21 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I1215 12:45:48.563442 21 garbage_collector.go:678] 
  I1215 12:45:49.561434 21 garbage_collector.go:670] 100 pods remaining
  I1215 12:45:49.561482 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:49.561491 21 garbage_collector.go:678] 
  I1215 12:45:50.564581 21 garbage_collector.go:670] 96 pods remaining
  I1215 12:45:50.564631 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:50.564639 21 garbage_collector.go:678] 
  I1215 12:45:51.566543 21 garbage_collector.go:670] 84 pods remaining
  I1215 12:45:51.566598 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:51.566605 21 garbage_collector.go:678] 
  I1215 12:45:52.568880 21 garbage_collector.go:670] 74 pods remaining
  I1215 12:45:52.568924 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:52.568930 21 garbage_collector.go:678] 
  I1215 12:45:53.563237 21 garbage_collector.go:670] 65 pods remaining
  I1215 12:45:53.563280 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:53.563286 21 garbage_collector.go:678] 
  I1215 12:45:54.560256 21 garbage_collector.go:670] 54 pods remaining
  I1215 12:45:54.560324 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:54.560336 21 garbage_collector.go:678] 
  I1215 12:45:55.555007 21 garbage_collector.go:670] 44 pods remaining
  I1215 12:45:55.555051 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:55.555059 21 garbage_collector.go:678] 
  I1215 12:45:56.560155 21 garbage_collector.go:670] 35 pods remaining
  I1215 12:45:56.560330 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:56.560384 21 garbage_collector.go:678] 
  I1215 12:45:57.553987 21 garbage_collector.go:670] 24 pods remaining
  I1215 12:45:57.554037 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:57.554046 21 garbage_collector.go:678] 
  I1215 12:45:58.553708 21 garbage_collector.go:670] 14 pods remaining
  I1215 12:45:58.553754 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I1215 12:45:58.553762 21 garbage_collector.go:678] 
  STEP: Gathering metrics @ 12/15/24 12:45:59.551
  I1215 12:45:59.642857 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1215 12:45:59.643156 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6488" for this suite. @ 12/15/24 12:45:59.648
• [23.190 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 12/15/24 12:45:59.657
  I1215 12:45:59.657929 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:45:59.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:45:59.691
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:45:59.694
  STEP: Creating secret with name projected-secret-test-58d7beb8-a6fe-43c8-8883-2237e4e696d6 @ 12/15/24 12:45:59.696
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:45:59.702
  STEP: Saw pod success @ 12/15/24 12:46:03.729
  I1215 12:46:03.733742 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-secrets-2eac13b6-64db-41d6-8299-374d222a811f container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:46:03.74
  I1215 12:46:03.761406 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4549" for this suite. @ 12/15/24 12:46:03.765
• [4.115 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 12/15/24 12:46:03.772
  I1215 12:46:03.772953 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 12:46:03.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:03.797
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:03.8
  STEP: Creating secret with name secret-test-230fe24a-a43d-4055-ae39-845c84c119ba @ 12/15/24 12:46:03.802
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:46:03.81
  STEP: Saw pod success @ 12/15/24 12:46:07.836
  I1215 12:46:07.841135 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-3b56f991-3f8a-4901-949a-f0221ae19256 container secret-env-test: <nil>
  STEP: delete the pod @ 12/15/24 12:46:07.846
  I1215 12:46:07.876256 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9624" for this suite. @ 12/15/24 12:46:07.879
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 12/15/24 12:46:07.89
  I1215 12:46:07.890256 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:46:07.891
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:07.921
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:07.924
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/15/24 12:46:07.929
  STEP: Saw pod success @ 12/15/24 12:46:12.011
  I1215 12:46:12.014672 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-85adc032-e30a-4894-b91c-7d99d5235cb2 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:46:12.021
  I1215 12:46:12.044997 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3037" for this suite. @ 12/15/24 12:46:12.049
• [4.167 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 12/15/24 12:46:12.057
  I1215 12:46:12.057466 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename limitrange @ 12/15/24 12:46:12.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:12.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:12.086
  STEP: Creating LimitRange "e2e-limitrange-jg4zt" in namespace "limitrange-3643" @ 12/15/24 12:46:12.089
  STEP: Creating another limitRange in another namespace @ 12/15/24 12:46:12.098
  I1215 12:46:12.119606 21 limit_range.go:299] Namespace "e2e-limitrange-jg4zt-9412" created
  I1215 12:46:12.119738 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-jg4zt" in namespace "e2e-limitrange-jg4zt-9412"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-jg4zt" @ 12/15/24 12:46:12.125
  I1215 12:46:12.127817 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-jg4zt" in "limitrange-3643" namespace @ 12/15/24 12:46:12.127
  I1215 12:46:12.138345 21 limit_range.go:335] LimitRange "e2e-limitrange-jg4zt" has been patched
  STEP: Delete LimitRange "e2e-limitrange-jg4zt" by Collection with labelSelector: "e2e-limitrange-jg4zt=patched" @ 12/15/24 12:46:12.138
  STEP: Confirm that the limitRange "e2e-limitrange-jg4zt" has been deleted @ 12/15/24 12:46:12.148
  I1215 12:46:12.148644 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I1215 12:46:12.151053 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-jg4zt=patched"
  I1215 12:46:12.151112 21 limit_range.go:344] LimitRange "e2e-limitrange-jg4zt" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-jg4zt" @ 12/15/24 12:46:12.151
  I1215 12:46:12.153730 21 limit_range.go:350] Found 1 limitRange
  I1215 12:46:12.153849 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3643" for this suite. @ 12/15/24 12:46:12.157
  STEP: Destroying namespace "e2e-limitrange-jg4zt-9412" for this suite. @ 12/15/24 12:46:12.164
• [0.114 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 12/15/24 12:46:12.172
  I1215 12:46:12.172043 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:46:12.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:12.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:12.197
  STEP: Creating configMap with name projected-configmap-test-volume-e770ff13-c65c-43da-93a0-07841ecb0a3f @ 12/15/24 12:46:12.202
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:46:12.209
  STEP: Saw pod success @ 12/15/24 12:46:16.236
  I1215 12:46:16.239941 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-configmaps-45ca6279-bb0a-4bf5-9698-021ec1298cc7 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:46:16.247
  I1215 12:46:16.275270 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9295" for this suite. @ 12/15/24 12:46:16.28
• [4.116 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 12/15/24 12:46:16.288
  I1215 12:46:16.288771 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:46:16.289
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:16.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:16.312
  STEP: Setting up server cert @ 12/15/24 12:46:16.353
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:46:16.481
  STEP: Deploying the webhook pod @ 12/15/24 12:46:16.497
  STEP: Wait for the deployment to be ready @ 12/15/24 12:46:16.514
  I1215 12:46:16.521640 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 12:46:18.534
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:46:18.552
  I1215 12:46:19.552654 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 12/15/24 12:46:19.56
  STEP: create a namespace for the webhook @ 12/15/24 12:46:19.584
  STEP: create a configmap should be unconditionally rejected by the webhook @ 12/15/24 12:46:19.608
  I1215 12:46:19.688336 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4710" for this suite. @ 12/15/24 12:46:19.695
  STEP: Destroying namespace "webhook-markers-604" for this suite. @ 12/15/24 12:46:19.716
  STEP: Destroying namespace "fail-closed-namespace-5489" for this suite. @ 12/15/24 12:46:19.726
• [3.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 12/15/24 12:46:19.734
  I1215 12:46:19.734217 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-webhook @ 12/15/24 12:46:19.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:19.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:19.782
  STEP: Setting up server cert @ 12/15/24 12:46:19.791
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 12/15/24 12:46:20.079
  STEP: Deploying the custom resource conversion webhook pod @ 12/15/24 12:46:20.091
  STEP: Wait for the deployment to be ready @ 12/15/24 12:46:20.11
  I1215 12:46:20.120397 21 deployment.go:222] new replicaset for deployment "sample-crd-conversion-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 12:46:22.138
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:46:22.153
  I1215 12:46:23.154662 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I1215 12:46:23.161965 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Creating a v1 custom resource @ 12/15/24 12:46:30.731
  STEP: v2 custom resource should be converted @ 12/15/24 12:46:30.739
  I1215 12:46:31.320446 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-8861" for this suite. @ 12/15/24 12:46:31.324
• [11.601 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 12/15/24 12:46:31.335
  I1215 12:46:31.335933 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:46:31.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:31.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:31.37
  STEP: Creating Pod @ 12/15/24 12:46:31.373
  STEP: Reading file content from the nginx-container @ 12/15/24 12:46:33.402
  I1215 12:46:33.403100 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-5745 PodName:pod-sharedvolume-483dfc89-2914-4995-bbcc-70a5ed328dcf ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:46:33.403123 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:46:33.403819 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:46:33.403875 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/emptydir-5745/pods/pod-sharedvolume-483dfc89-2914-4995-bbcc-70a5ed328dcf/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I1215 12:46:33.479054 21 exec_util.go:106] Exec stderr: ""
  I1215 12:46:33.479270 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5745" for this suite. @ 12/15/24 12:46:33.495
• [2.170 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 12/15/24 12:46:33.506
  I1215 12:46:33.506700 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replicaset @ 12/15/24 12:46:33.507
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:33.535
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:33.538
  STEP: Create a ReplicaSet @ 12/15/24 12:46:33.541
  STEP: Verify that the required pods have come up @ 12/15/24 12:46:33.549
  I1215 12:46:33.552289 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I1215 12:46:38.564809 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 12/15/24 12:46:38.564
  I1215 12:46:38.567793 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 12/15/24 12:46:38.567
  STEP: DeleteCollection of the ReplicaSets @ 12/15/24 12:46:38.574
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 12/15/24 12:46:38.582
  I1215 12:46:38.590103 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-705" for this suite. @ 12/15/24 12:46:38.614
• [5.126 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 12/15/24 12:46:38.633
  I1215 12:46:38.633159 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/24 12:46:38.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:38.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:38.719
  I1215 12:46:40.773040 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-1483" for this suite. @ 12/15/24 12:46:40.776
• [2.150 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 12/15/24 12:46:40.784
  I1215 12:46:40.784158 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:46:40.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:40.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:40.814
  STEP: Setting up server cert @ 12/15/24 12:46:40.872
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:46:41.029
  STEP: Deploying the webhook pod @ 12/15/24 12:46:41.037
  STEP: Wait for the deployment to be ready @ 12/15/24 12:46:41.059
  I1215 12:46:41.070865 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 12:46:43.083
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:46:43.1
  I1215 12:46:44.100735 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 12/15/24 12:46:44.223
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/24 12:46:44.244
  STEP: Deleting the collection of validation webhooks @ 12/15/24 12:46:44.257
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/24 12:46:44.335
  I1215 12:46:44.400503 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2514" for this suite. @ 12/15/24 12:46:44.404
  STEP: Destroying namespace "webhook-markers-196" for this suite. @ 12/15/24 12:46:44.42
• [3.645 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 12/15/24 12:46:44.43
  I1215 12:46:44.430524 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 12:46:44.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:44.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:44.474
  STEP: Saw pod success @ 12/15/24 12:46:50.542
  I1215 12:46:50.546083 21 output.go:196] Trying to get logs from node cncf-master-1 pod client-envvars-d13c14c7-fd5b-4e01-b454-1f0c9f97c88a container env3cont: <nil>
  STEP: delete the pod @ 12/15/24 12:46:50.552
  I1215 12:46:50.572885 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8058" for this suite. @ 12/15/24 12:46:50.576
• [6.156 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 12/15/24 12:46:50.587
  I1215 12:46:50.587238 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:46:50.588
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:50.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:50.616
  STEP: Creating configMap with name configmap-projected-all-test-volume-68784630-0928-4122-b45d-e5252c17377e @ 12/15/24 12:46:50.619
  STEP: Creating secret with name secret-projected-all-test-volume-fac9ec97-5d85-47fe-a5c1-0df468d8979a @ 12/15/24 12:46:50.624
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 12/15/24 12:46:50.635
  STEP: Saw pod success @ 12/15/24 12:46:54.663
  I1215 12:46:54.666268 21 output.go:196] Trying to get logs from node cncf-master-1 pod projected-volume-d50e4756-5022-407d-87cd-0724507b6654 container projected-all-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:46:54.673
  I1215 12:46:54.696596 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5492" for this suite. @ 12/15/24 12:46:54.705
• [4.130 seconds]
------------------------------
SSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 12/15/24 12:46:54.716
  I1215 12:46:54.716928 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename init-container @ 12/15/24 12:46:54.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:46:54.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:46:54.741
  STEP: creating the pod @ 12/15/24 12:46:54.744
  I1215 12:46:54.744078 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I1215 12:47:37.830119 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-4815cb5d-e662-4153-a572-b6622cff37f2", GenerateName:"", Namespace:"init-container-5870", SelfLink:"", UID:"c69821e1-afba-4e56-b8fc-b72a0f4d9718", ResourceVersion:"5403324", Generation:0, CreationTimestamp:time.Date(2024, time.December, 15, 12, 46, 54, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"744054701"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 46, 54, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003df3b48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.December, 15, 12, 47, 37, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc003df3b90), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-bqdk4", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc001012c60), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bqdk4", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bqdk4", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-bqdk4", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc00345d320), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"cncf-master-1", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc00425c400), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00345d3b0)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc00345d3d0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc00345d3d8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00345d3dc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004db8f30), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 15, 12, 46, 55, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 15, 12, 46, 54, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 15, 12, 46, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 15, 12, 46, 54, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.December, 15, 12, 46, 54, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.10.60.89", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.10.60.89"}}, PodIP:"10.0.0.138", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.0.0.138"}}, StartTime:time.Date(2024, time.December, 15, 12, 46, 54, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0006220e0)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0006221c0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"containerd://0d50350093ca884101ba0edf6a8c92f95889e5185da951a40a97a53902a05e5c", Started:(*bool)(0xc00345d47a), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001012ce0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc00345d48f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc001012cc0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc00345d45f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I1215 12:47:37.831419 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5870" for this suite. @ 12/15/24 12:47:37.836
• [43.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 12/15/24 12:47:37.845
  I1215 12:47:37.845593 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:47:37.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:47:37.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:47:37.877
  STEP: Creating configMap with name cm-test-opt-del-dccceecb-8f1f-4daf-b7cf-0a43d59a76c8 @ 12/15/24 12:47:37.89
  STEP: Creating configMap with name cm-test-opt-upd-3b58f65c-5250-4a4e-a644-331b3bcd6e55 @ 12/15/24 12:47:37.898
  STEP: Creating the pod @ 12/15/24 12:47:37.904
  STEP: Deleting configmap cm-test-opt-del-dccceecb-8f1f-4daf-b7cf-0a43d59a76c8 @ 12/15/24 12:47:39.955
  STEP: Updating configmap cm-test-opt-upd-3b58f65c-5250-4a4e-a644-331b3bcd6e55 @ 12/15/24 12:47:39.962
  STEP: Creating configMap with name cm-test-opt-create-1a49f70d-89ad-417e-80fd-2c63465932fe @ 12/15/24 12:47:39.968
  STEP: waiting to observe update in volume @ 12/15/24 12:47:39.975
  I1215 12:47:44.016367 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5703" for this suite. @ 12/15/24 12:47:44.02
• [6.188 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 12/15/24 12:47:44.034
  I1215 12:47:44.034140 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:47:44.035
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:47:44.06
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:47:44.063
  STEP: Setting up server cert @ 12/15/24 12:47:44.104
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:47:44.395
  STEP: Deploying the webhook pod @ 12/15/24 12:47:44.406
  STEP: Wait for the deployment to be ready @ 12/15/24 12:47:44.422
  I1215 12:47:44.428918 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 12:47:46.443
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:47:46.459
  I1215 12:47:47.460484 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/15/24 12:47:47.472
  STEP: create a pod @ 12/15/24 12:47:47.498
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 12/15/24 12:47:49.517
  I1215 12:47:49.518134 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=webhook-2594 attach --namespace=webhook-2594 to-be-attached-pod -i -c=container1'
  I1215 12:47:49.624283 21 builder.go:135] rc: 1
  I1215 12:47:49.690963 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2594" for this suite. @ 12/15/24 12:47:49.707
  STEP: Destroying namespace "webhook-markers-6357" for this suite. @ 12/15/24 12:47:49.718
• [5.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 12/15/24 12:47:49.731
  I1215 12:47:49.731610 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:47:49.732
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:47:49.774
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:47:49.783
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 12:47:49.805
  STEP: Saw pod success @ 12/15/24 12:47:53.841
  I1215 12:47:53.843945 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-55b29f79-9277-40a3-8672-32865dd6a77e container client-container: <nil>
  STEP: delete the pod @ 12/15/24 12:47:53.849
  I1215 12:47:53.871968 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9934" for this suite. @ 12/15/24 12:47:53.876
• [4.156 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 12/15/24 12:47:53.889
  I1215 12:47:53.889336 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-watch @ 12/15/24 12:47:53.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:47:53.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:47:53.919
  I1215 12:47:53.922091 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Creating first CR  @ 12/15/24 12:48:01.469
  I1215 12:48:01.476004 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-15T12:48:01Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-15T12:48:01Z]] name:name1 resourceVersion:5403629 uid:2ba1a7a3-edda-4cc5-88cd-fd6a35f50edf] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 12/15/24 12:48:11.476
  I1215 12:48:11.488078 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-15T12:48:11Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-15T12:48:11Z]] name:name2 resourceVersion:5403672 uid:0c731fde-1f0a-4982-8b5b-e7b3623ef65c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 12/15/24 12:48:21.488
  I1215 12:48:21.498584 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-15T12:48:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-15T12:48:21Z]] name:name1 resourceVersion:5403717 uid:2ba1a7a3-edda-4cc5-88cd-fd6a35f50edf] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 12/15/24 12:48:31.499
  I1215 12:48:31.508859 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-15T12:48:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-15T12:48:31Z]] name:name2 resourceVersion:5403762 uid:0c731fde-1f0a-4982-8b5b-e7b3623ef65c] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 12/15/24 12:48:41.509
  I1215 12:48:41.522906 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-15T12:48:01Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-15T12:48:21Z]] name:name1 resourceVersion:5403805 uid:2ba1a7a3-edda-4cc5-88cd-fd6a35f50edf] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 12/15/24 12:48:51.523
  I1215 12:48:51.534508 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-12-15T12:48:11Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-12-15T12:48:31Z]] name:name2 resourceVersion:5403850 uid:0c731fde-1f0a-4982-8b5b-e7b3623ef65c] num:map[num1:9223372036854775807 num2:1000000]]}
  I1215 12:49:02.053509 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-2272" for this suite. @ 12/15/24 12:49:02.059
• [68.180 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 12/15/24 12:49:02.07
  I1215 12:49:02.070530 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 12:49:02.073
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:49:02.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:49:02.107
  I1215 12:49:02.129086 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I1215 12:49:07.134531 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/24 12:49:07.134
  I1215 12:49:07.134887 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I1215 12:49:09.142740 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I1215 12:49:09.157071 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I1215 12:49:11.165210 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I1215 12:49:11.171851 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I1215 12:49:11.177280 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I1215 12:49:11.189485 21 deployment.go:313] Updating deployment test-rollover-deployment
  I1215 12:49:11.189559 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I1215 12:49:13.200409 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I1215 12:49:13.206869 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I1215 12:49:13.217241 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1215 12:49:13.217403 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 12:49:15.226045 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1215 12:49:15.226156 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 12:49:17.228975 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1215 12:49:17.229177 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 12:49:19.225554 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1215 12:49:19.225649 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 12:49:21.226354 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I1215 12:49:21.226536 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 49, 13, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 49, 9, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 12:49:23.225341 21 deployment.go:94] 
  I1215 12:49:23.225814 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I1215 12:49:23.234967 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d9ea2b1-0393-4981-97fc-7e222714bbd9",
      ResourceVersion: (string) (len=7) "5404087",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863749,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1215 12:49:23.240108 21 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c0b8ed8-ca5c-4468-a53f-7f1ded96dafc",
      ResourceVersion: (string) (len=7) "5404075",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5d9ea2b1-0393-4981-97fc-7e222714bbd9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 64 39 65 61 32  62 31 2d 30 33 39 33 2d  |\"5d9ea2b1-0393-|
              00000120  34 39 38 31 2d 39 37 66  63 2d 37 65 32 32 32 37  |4981-97fc-7e2227|
              00000130  31 34 62 62 64 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |14bbd9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 12:49:23.258789 21 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I1215 12:49:23.259294 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f3e0777-1f3d-4c28-92ea-b6754ab7566f",
      ResourceVersion: (string) (len=7) "5404085",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863742,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5d9ea2b1-0393-4981-97fc-7e222714bbd9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863742,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  35 64 39 65 61 32 62 31  2d 30 33 39 33 2d 34 39  |5d9ea2b1-0393-49|
              000000c0  38 31 2d 39 37 66 63 2d  37 65 32 32 32 37 31 34  |81-97fc-7e222714|
              000000d0  62 62 64 39 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |bbd9\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863763,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 12:49:23.260850 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "082cf643-3572-4ded-bcd3-e60c5c9fc541",
      ResourceVersion: (string) (len=7) "5404010",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863749,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "5d9ea2b1-0393-4981-97fc-7e222714bbd9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 35 64 39 65 61 32  62 31 2d 30 33 39 33 2d  |\"5d9ea2b1-0393-|
              00000120  34 39 38 31 2d 39 37 66  63 2d 37 65 32 32 32 37  |4981-97fc-7e2227|
              00000130  31 34 62 62 64 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |14bbd9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 12:49:23.266994 21 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-htjlx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-htjlx",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-7006",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6e665f66-2535-479a-8634-05dd06d6195e",
      ResourceVersion: (string) (len=7) "5404028",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "9c0b8ed8-ca5c-4468-a53f-7f1ded96dafc",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 63  30 62 38 65 64 38 2d 63  |d\":\"9c0b8ed8-c|
              00000090  61 35 63 2d 34 34 36 38  2d 61 35 33 66 2d 37 66  |a5c-4468-a53f-7f|
              000000a0  31 64 65 64 39 36 64 61  66 63 5c 22 7d 22 3a 7b  |1ded96dafc\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 31 36 33  5c 22 7d 22 3a 7b 22 2e  |.0.0.163\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r8q9b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r8q9b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863753,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869863751,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=10) "10.0.0.163",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.0.163"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869863751,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869863752,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://c233a1d2080987f50e2d3fcd319dd83e8aaf664e1f135148b61965b7c5da0ad9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 12:49:23.268165 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7006" for this suite. @ 12/15/24 12:49:23.275
• [21.223 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 12/15/24 12:49:23.294
  I1215 12:49:23.294886 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 12:49:23.296
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:49:23.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:49:23.325
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 12:49:23.328
  STEP: Saw pod success @ 12/15/24 12:49:27.354
  I1215 12:49:27.357863 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-e2f58aac-9239-4ed1-93df-0d44a1d2ee40 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 12:49:27.373
  I1215 12:49:27.396535 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1839" for this suite. @ 12/15/24 12:49:27.427
• [4.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 12/15/24 12:49:27.465
  I1215 12:49:27.465338 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replicaset @ 12/15/24 12:49:27.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:49:27.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:49:27.499
  I1215 12:49:27.502656 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-ec4756c7-4973-4bc7-8b41-e4a9d2642353
  I1215 12:49:27.519895 21 resource.go:87] Pod name my-hostname-basic-ec4756c7-4973-4bc7-8b41-e4a9d2642353: Found 0 pods out of 1
  I1215 12:49:32.524847 21 resource.go:87] Pod name my-hostname-basic-ec4756c7-4973-4bc7-8b41-e4a9d2642353: Found 1 pods out of 1
  I1215 12:49:32.524945 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-ec4756c7-4973-4bc7-8b41-e4a9d2642353" is running
  I1215 12:49:32.528674 21 replica_set.go:220] Pod "my-hostname-basic-ec4756c7-4973-4bc7-8b41-e4a9d2642353-mpx7z" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:49:29 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:49:27 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:49:29 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:49:29 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-12-15 12:49:27 +0000 UTC Reason: Message:}])
  I1215 12:49:32.528837 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 12/15/24 12:49:32.528
  I1215 12:49:32.540510 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9500" for this suite. @ 12/15/24 12:49:32.545
• [5.090 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 12/15/24 12:49:32.555
  I1215 12:49:32.555641 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename chunking @ 12/15/24 12:49:32.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:49:32.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:49:32.599
  STEP: creating a large number of resources @ 12/15/24 12:49:32.602
  STEP: retrieving those results in paged fashion several times @ 12/15/24 12:49:50.265
  I1215 12:49:50.313985 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I1215 12:49:50.362855 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I1215 12:49:50.411919 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I1215 12:49:50.465134 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I1215 12:49:50.512720 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I1215 12:49:50.563010 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I1215 12:49:50.613710 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I1215 12:49:50.664060 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I1215 12:49:50.716273 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I1215 12:49:50.761891 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I1215 12:49:50.813578 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I1215 12:49:50.862736 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I1215 12:49:50.912812 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I1215 12:49:50.963331 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I1215 12:49:51.012648 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I1215 12:49:51.063601 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I1215 12:49:51.113288 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I1215 12:49:51.162003 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I1215 12:49:51.211572 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I1215 12:49:51.262506 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I1215 12:49:51.314024 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I1215 12:49:51.362903 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I1215 12:49:51.410902 21 chunking.go:98] Retrieved 17/17 results with rv 5404710 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I1215 12:49:51.466991 21 chunking.go:98] Retrieved 9/17 results with rv 5404710 and continue 
  I1215 12:49:51.514281 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I1215 12:49:51.562596 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I1215 12:49:51.612897 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I1215 12:49:51.662917 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I1215 12:49:51.712420 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I1215 12:49:51.763355 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I1215 12:49:51.813331 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I1215 12:49:51.862801 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I1215 12:49:51.914862 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I1215 12:49:51.962339 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I1215 12:49:52.012701 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I1215 12:49:52.064388 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I1215 12:49:52.113252 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I1215 12:49:52.162290 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I1215 12:49:52.212862 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I1215 12:49:52.261797 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I1215 12:49:52.313447 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I1215 12:49:52.363511 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I1215 12:49:52.413090 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I1215 12:49:52.465737 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I1215 12:49:52.513147 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I1215 12:49:52.563372 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I1215 12:49:52.612396 21 chunking.go:98] Retrieved 17/17 results with rv 5404715 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxNSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I1215 12:49:52.662086 21 chunking.go:98] Retrieved 9/17 results with rv 5404715 and continue 
  I1215 12:49:52.713725 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDE2XHUwMDAwIn0
  I1215 12:49:52.763046 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDMzXHUwMDAwIn0
  I1215 12:49:52.813187 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDUwXHUwMDAwIn0
  I1215 12:49:52.863340 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDY3XHUwMDAwIn0
  I1215 12:49:52.912203 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDg0XHUwMDAwIn0
  I1215 12:49:52.962728 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTAxXHUwMDAwIn0
  I1215 12:49:53.013691 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE4XHUwMDAwIn0
  I1215 12:49:53.068376 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTM1XHUwMDAwIn0
  I1215 12:49:53.117120 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTUyXHUwMDAwIn0
  I1215 12:49:53.162685 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTY5XHUwMDAwIn0
  I1215 12:49:53.215664 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTg2XHUwMDAwIn0
  I1215 12:49:53.262145 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjAzXHUwMDAwIn0
  I1215 12:49:53.312410 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjIwXHUwMDAwIn0
  I1215 12:49:53.362247 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM3XHUwMDAwIn0
  I1215 12:49:53.412739 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjU0XHUwMDAwIn0
  I1215 12:49:53.462850 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjcxXHUwMDAwIn0
  I1215 12:49:53.514515 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjg4XHUwMDAwIn0
  I1215 12:49:53.562857 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzA1XHUwMDAwIn0
  I1215 12:49:53.612884 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzIyXHUwMDAwIn0
  I1215 12:49:53.661796 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzM5XHUwMDAwIn0
  I1215 12:49:53.711953 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU2XHUwMDAwIn0
  I1215 12:49:53.762802 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzczXHUwMDAwIn0
  I1215 12:49:53.813161 21 chunking.go:98] Retrieved 17/17 results with rv 5404719 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQwNDcxOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzkwXHUwMDAwIn0
  I1215 12:49:53.863177 21 chunking.go:98] Retrieved 9/17 results with rv 5404719 and continue 
  STEP: retrieving those results all at once @ 12/15/24 12:49:53.863
  I1215 12:49:53.925252 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-582" for this suite. @ 12/15/24 12:49:53.963
• [21.462 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 12/15/24 12:49:54.018
  I1215 12:49:54.018293 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename subpath @ 12/15/24 12:49:54.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:49:54.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:49:54.07
  STEP: Setting up data @ 12/15/24 12:49:54.074
  STEP: Creating pod pod-subpath-test-configmap-mjsd @ 12/15/24 12:49:54.09
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/24 12:49:54.09
  STEP: Saw pod success @ 12/15/24 12:50:18.186
  I1215 12:50:18.190108 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-subpath-test-configmap-mjsd container test-container-subpath-configmap-mjsd: <nil>
  STEP: delete the pod @ 12/15/24 12:50:18.196
  STEP: Deleting pod pod-subpath-test-configmap-mjsd @ 12/15/24 12:50:18.227
  I1215 12:50:18.227261 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-mjsd" in namespace "subpath-229"
  I1215 12:50:18.230127 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-229" for this suite. @ 12/15/24 12:50:18.234
• [24.229 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 12/15/24 12:50:18.247
  I1215 12:50:18.247443 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 12:50:18.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:50:18.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:50:18.277
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 12:50:18.281
  STEP: Saw pod success @ 12/15/24 12:50:22.323
  I1215 12:50:22.332721 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-f7ad8e68-3973-4c5f-9563-e840d394d853 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 12:50:22.339
  I1215 12:50:22.365175 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1398" for this suite. @ 12/15/24 12:50:22.369
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 12/15/24 12:50:22.382
  I1215 12:50:22.382817 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename endpointslice @ 12/15/24 12:50:22.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:50:22.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:50:22.419
  STEP: referencing a single matching pod @ 12/15/24 12:50:24.562
  STEP: referencing matching pods with named port @ 12/15/24 12:50:24.569
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 12/15/24 12:50:24.576
  STEP: recreating EndpointSlices after they've been deleted @ 12/15/24 12:50:24.583
  I1215 12:50:24.605401 21 endpointslice.go:938] EndpointSlice for Service endpointslice-2641/example-named-port not found
  I1215 12:50:26.609375 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2641" for this suite. @ 12/15/24 12:50:26.613
• [4.245 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 12/15/24 12:50:26.628
  I1215 12:50:26.628721 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 12:50:26.63
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:50:26.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:50:26.659
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 12/15/24 12:50:26.661
  I1215 12:50:26.670878 21 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-8106  89ad814c-9583-4c53-9bb7-2f1669bc49a5 5405438 0 2024-12-15 12:50:26 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-12-15 12:50:26 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-q4xcg,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-q4xcg,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 12/15/24 12:50:28.684
  I1215 12:50:28.684700 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-8106 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:50:28.684726 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:50:28.685410 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:50:28.685483 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-8106/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 12/15/24 12:50:28.768
  I1215 12:50:28.769008 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-8106 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 12:50:28.769046 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:50:28.769879 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 12:50:28.769941 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/dns-8106/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1215 12:50:28.860350 21 dns.go:421] Deleting pod test-dns-nameservers...
  I1215 12:50:28.895670 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8106" for this suite. @ 12/15/24 12:50:28.9
• [2.279 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 12/15/24 12:50:28.907
  I1215 12:50:28.908018 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:50:28.908
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:50:28.931
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:50:28.934
  STEP: Counting existing ResourceQuota @ 12/15/24 12:50:45.943
  STEP: Creating a ResourceQuota @ 12/15/24 12:50:50.947
  STEP: Ensuring resource quota status is calculated @ 12/15/24 12:50:50.957
  STEP: Creating a ConfigMap @ 12/15/24 12:50:52.963
  STEP: Ensuring resource quota status captures configMap creation @ 12/15/24 12:50:52.988
  STEP: Deleting a ConfigMap @ 12/15/24 12:50:54.992
  STEP: Ensuring resource quota status released usage @ 12/15/24 12:50:55.001
  I1215 12:50:57.007278 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5416" for this suite. @ 12/15/24 12:50:57.011
• [28.112 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 12/15/24 12:50:57.02
  I1215 12:50:57.020104 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:50:57.021
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:50:57.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:50:57.052
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 12:50:57.054
  STEP: Saw pod success @ 12/15/24 12:51:01.081
  I1215 12:51:01.084607 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-89e4fdcc-7ff9-4a36-a066-7483c638e766 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 12:51:01.091
  I1215 12:51:01.113355 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1702" for this suite. @ 12/15/24 12:51:01.117
• [4.108 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 12/15/24 12:51:01.128
  I1215 12:51:01.128669 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename ingressclass @ 12/15/24 12:51:01.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:51:01.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:51:01.156
  STEP: getting /apis @ 12/15/24 12:51:01.159
  STEP: getting /apis/networking.k8s.io @ 12/15/24 12:51:01.164
  STEP: getting /apis/networking.k8s.iov1 @ 12/15/24 12:51:01.165
  STEP: creating @ 12/15/24 12:51:01.166
  STEP: getting @ 12/15/24 12:51:01.185
  STEP: listing @ 12/15/24 12:51:01.188
  STEP: watching @ 12/15/24 12:51:01.19
  I1215 12:51:01.190865 21 ingressclass.go:348] starting watch
  STEP: patching @ 12/15/24 12:51:01.192
  STEP: updating @ 12/15/24 12:51:01.201
  I1215 12:51:01.210479 21 ingressclass.go:364] waiting for watch events with expected annotations
  I1215 12:51:01.210946 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 12/15/24 12:51:01.211
  STEP: deleting a collection @ 12/15/24 12:51:01.224
  I1215 12:51:01.240308 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-8105" for this suite. @ 12/15/24 12:51:01.243
• [0.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 12/15/24 12:51:01.25
  I1215 12:51:01.251011 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:51:01.251
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:51:01.274
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:51:01.276
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/15/24 12:51:01.278
  STEP: Saw pod success @ 12/15/24 12:51:05.301
  I1215 12:51:05.304731 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-86e79715-db19-4e02-9604-0d17d0bed979 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:51:05.311
  I1215 12:51:05.330765 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4483" for this suite. @ 12/15/24 12:51:05.335
• [4.094 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 12/15/24 12:51:05.345
  I1215 12:51:05.345178 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-runtime @ 12/15/24 12:51:05.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:51:05.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:51:05.378
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 12/15/24 12:51:05.391
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 12/15/24 12:51:24.494
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 12/15/24 12:51:24.497
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 12/15/24 12:51:24.503
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 12/15/24 12:51:24.503
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 12/15/24 12:51:24.543
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 12/15/24 12:51:26.558
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 12/15/24 12:51:28.574
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 12/15/24 12:51:28.581
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 12/15/24 12:51:28.581
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 12/15/24 12:51:28.622
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 12/15/24 12:51:29.63
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 12/15/24 12:51:32.676
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 12/15/24 12:51:32.683
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 12/15/24 12:51:32.683
  I1215 12:51:32.713921 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7852" for this suite. @ 12/15/24 12:51:32.718
• [27.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 12/15/24 12:51:32.727
  I1215 12:51:32.727842 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:51:32.728
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:51:32.75
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:51:32.753
  STEP: creating service nodeport-test with type=NodePort in namespace services-1027 @ 12/15/24 12:51:32.756
  STEP: creating replication controller nodeport-test in namespace services-1027 @ 12/15/24 12:51:32.779
  I1215 12:51:32.791318      21 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-1027, replica count: 2
  I1215 12:51:35.843012      21 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:51:35.843102 21 resource.go:361] Creating new exec pod
  I1215 12:51:38.871816 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-1027 exec execpodk8grg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I1215 12:51:39.028805 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I1215 12:51:39.028885 21 builder.go:147] stdout: "nodeport-test-rgpg6"
  I1215 12:51:39.029042 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-1027 exec execpodk8grg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.20.69 80'
  I1215 12:51:39.167589 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.20.69 80\nConnection to 10.233.20.69 80 port [tcp/http] succeeded!\n"
  I1215 12:51:39.167735 21 builder.go:147] stdout: "nodeport-test-pptm5"
  I1215 12:51:39.168024 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-1027 exec execpodk8grg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.89 31698'
  I1215 12:51:39.315652 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.89 31698\nConnection to 172.10.60.89 31698 port [tcp/*] succeeded!\n"
  I1215 12:51:39.315710 21 builder.go:147] stdout: "nodeport-test-rgpg6"
  I1215 12:51:39.315850 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-1027 exec execpodk8grg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.35 31698'
  I1215 12:51:39.449931 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.35 31698\nConnection to 172.10.60.35 31698 port [tcp/*] succeeded!\n"
  I1215 12:51:39.450005 21 builder.go:147] stdout: "nodeport-test-rgpg6"
  I1215 12:51:39.450179 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1027" for this suite. @ 12/15/24 12:51:39.455
• [6.739 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:754
  STEP: Creating a kubernetes client @ 12/15/24 12:51:39.467
  I1215 12:51:39.468017 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 12:51:39.469
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:51:39.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:51:39.504
  STEP: Creating service test in namespace statefulset-3533 @ 12/15/24 12:51:39.507
  STEP: Creating stateful set ss in namespace statefulset-3533 @ 12/15/24 12:51:39.514
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-3533 @ 12/15/24 12:51:39.528
  I1215 12:51:39.541038 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I1215 12:51:49.535235 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 12/15/24 12:51:49.535
  I1215 12:51:49.539336 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-3533 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 12:51:49.714893 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 12:51:49.714968 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 12:51:49.714984 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 12:51:49.720661 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1215 12:51:59.722469 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1215 12:51:59.722571 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1215 12:51:59.745570 21 resource.go:168] POD   NODE           PHASE    GRACE  CONDITIONS
  I1215 12:51:59.745656 21 resource.go:175] ss-0  cncf-master-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:39 +0000 UTC  }]
  I1215 12:51:59.745666 21 resource.go:178] 
  I1215 12:51:59.745674 21 statefulset.go:2413] StatefulSet ss has not reached scale 3, at 1
  I1215 12:52:00.751611 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.994545473s
  I1215 12:52:01.757392 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.988973785s
  I1215 12:52:02.762735 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.983210823s
  I1215 12:52:03.766394 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.978511196s
  I1215 12:52:04.772295 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.97393728s
  I1215 12:52:05.778272 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.968458425s
  I1215 12:52:06.784890 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.96224988s
  I1215 12:52:07.789888 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.956303073s
  I1215 12:52:08.795654 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 951.304336ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-3533 @ 12/15/24 12:52:09.796
  I1215 12:52:09.802605 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-3533 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 12:52:09.943952 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1215 12:52:09.944020 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 12:52:09.944048 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 12:52:09.944122 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-3533 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 12:52:10.087482 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1215 12:52:10.087549 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 12:52:10.087592 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 12:52:10.087651 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-3533 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 12:52:10.232725 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I1215 12:52:10.232808 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 12:52:10.232828 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 12:52:10.237125 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I1215 12:52:20.243095 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1215 12:52:20.243144 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1215 12:52:20.243154 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 12/15/24 12:52:20.243
  I1215 12:52:20.246488 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-3533 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 12:52:20.378865 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 12:52:20.378977 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 12:52:20.379001 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 12:52:20.379109 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-3533 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 12:52:20.526392 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 12:52:20.526479 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 12:52:20.526540 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 12:52:20.526617 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-3533 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 12:52:20.677877 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 12:52:20.677944 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 12:52:20.677963 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 12:52:20.677976 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1215 12:52:20.682425 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I1215 12:52:30.688888 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1215 12:52:30.688945 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1215 12:52:30.688953 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1215 12:52:30.709231 21 resource.go:168] POD   NODE           PHASE    GRACE  CONDITIONS
  I1215 12:52:30.709324 21 resource.go:175] ss-0  cncf-master-1  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:39 +0000 UTC  }]
  I1215 12:52:30.709347 21 resource.go:175] ss-1  cncf-master-2  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:59 +0000 UTC  }]
  I1215 12:52:30.709369 21 resource.go:175] ss-2  cncf-master-3  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:21 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:59 +0000 UTC  }]
  I1215 12:52:30.709375 21 resource.go:178] 
  I1215 12:52:30.709383 21 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 3
  I1215 12:52:31.718937 21 resource.go:168] POD   NODE           PHASE      GRACE  CONDITIONS
  I1215 12:52:31.719027 21 resource.go:175] ss-0  cncf-master-1  Succeeded  0s     [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:39 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:20 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:20 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:39 +0000 UTC  }]
  I1215 12:52:31.719081 21 resource.go:175] ss-1  cncf-master-2  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:31 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:59 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:21 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:52:21 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 12:51:59 +0000 UTC  }]
  I1215 12:52:31.719089 21 resource.go:178] 
  I1215 12:52:31.719097 21 statefulset.go:2413] StatefulSet ss has not reached scale 0, at 2
  I1215 12:52:32.724084 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 7.984742516s
  I1215 12:52:33.729134 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 6.979478161s
  I1215 12:52:34.734459 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 5.974258206s
  I1215 12:52:35.739979 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 4.968718191s
  I1215 12:52:36.744031 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 3.964108016s
  I1215 12:52:37.749299 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 2.960107505s
  I1215 12:52:38.754118 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 1.954802816s
  I1215 12:52:39.758015 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 0 for another 949.855645ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-3533 @ 12/15/24 12:52:40.758
  I1215 12:52:40.762196 21 rest.go:150] Scaling statefulset ss to 0
  I1215 12:52:40.769136 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 12:52:40.771934 21 statefulset.go:138] Deleting all statefulset in ns statefulset-3533
  I1215 12:52:40.775296 21 rest.go:150] Scaling statefulset ss to 0
  I1215 12:52:40.781615 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 12:52:40.784472 21 rest.go:88] Deleting statefulset ss
  I1215 12:52:40.802639 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-3533" for this suite. @ 12/15/24 12:52:40.807
• [61.353 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 12/15/24 12:52:40.821
  I1215 12:52:40.821887 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:52:40.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:52:40.859
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:52:40.862
  STEP: Creating configMap with name configmap-test-volume-63904c3e-cf47-417b-a38d-c407b49ebb11 @ 12/15/24 12:52:40.865
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:52:40.871
  STEP: Saw pod success @ 12/15/24 12:52:44.895
  I1215 12:52:44.899467 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-c61fccf9-eea3-41eb-a59f-c70da463ca77 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:52:44.912
  I1215 12:52:44.937559 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7449" for this suite. @ 12/15/24 12:52:44.942
• [4.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 12/15/24 12:52:44.959
  I1215 12:52:44.959217 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 12:52:44.96
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:52:44.992
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:52:44.995
  I1215 12:53:07.077206 21 container_probe.go:92] Container started at 2024-12-15 12:52:45 +0000 UTC, pod became ready at 2024-12-15 12:53:05 +0000 UTC
  I1215 12:53:07.077449 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4507" for this suite. @ 12/15/24 12:53:07.082
• [22.133 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 12/15/24 12:53:07.093
  I1215 12:53:07.093232 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 12:53:07.094
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:53:07.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:53:07.122
  STEP: Creating secret with name secret-test-f773d0cf-803a-4f9b-93d8-26ced69dd3fa @ 12/15/24 12:53:07.125
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:53:07.137
  STEP: Saw pod success @ 12/15/24 12:53:11.172
  I1215 12:53:11.175688 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-4df32aa2-efc7-48d4-ac12-ae9829a11961 container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:53:11.182
  I1215 12:53:11.206029 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5590" for this suite. @ 12/15/24 12:53:11.21
• [4.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 12/15/24 12:53:11.217
  I1215 12:53:11.217583 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 12:53:11.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:53:11.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:53:11.248
  STEP: Creating configMap with name configmap-test-volume-4e83c948-4f1e-4928-b01a-3c5a6a7cd06f @ 12/15/24 12:53:11.25
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:53:11.256
  STEP: Saw pod success @ 12/15/24 12:53:15.284
  I1215 12:53:15.286952 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-fd2a852e-f619-45b2-9d74-299a44956b4e container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:53:15.292
  I1215 12:53:15.314544 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-363" for this suite. @ 12/15/24 12:53:15.318
• [4.110 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 12/15/24 12:53:15.327
  I1215 12:53:15.327967 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:53:15.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:53:15.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:53:15.361
  STEP: creating service in namespace services-2634 @ 12/15/24 12:53:15.364
  STEP: creating service affinity-clusterip-transition in namespace services-2634 @ 12/15/24 12:53:15.364
  STEP: creating replication controller affinity-clusterip-transition in namespace services-2634 @ 12/15/24 12:53:15.382
  I1215 12:53:15.394577      21 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-2634, replica count: 3
  I1215 12:53:18.445628      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 12:53:18.465428 21 resource.go:361] Creating new exec pod
  I1215 12:53:21.494507 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-2634 exec execpod-affinitydxqrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I1215 12:53:21.645891 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I1215 12:53:21.645997 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:53:21.646171 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-2634 exec execpod-affinitydxqrd -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.23.137 80'
  I1215 12:53:21.791669 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.23.137 80\nConnection to 10.233.23.137 80 port [tcp/http] succeeded!\n"
  I1215 12:53:21.791751 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 12:53:21.804282 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-2634 exec execpod-affinitydxqrd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.23.137:80/ ; done'
  I1215 12:53:22.034916 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n"
  I1215 12:53:22.034994 21 builder.go:147] stdout: "\naffinity-clusterip-transition-c5j5t\naffinity-clusterip-transition-srvpf\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-c5j5t\naffinity-clusterip-transition-srvpf\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-c5j5t\naffinity-clusterip-transition-srvpf\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-c5j5t\naffinity-clusterip-transition-srvpf\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-c5j5t\naffinity-clusterip-transition-srvpf\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-c5j5t"
  I1215 12:53:22.035059 21 service.go:242] Received response from host: affinity-clusterip-transition-c5j5t
  I1215 12:53:22.035072 21 service.go:242] Received response from host: affinity-clusterip-transition-srvpf
  I1215 12:53:22.035080 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.035087 21 service.go:242] Received response from host: affinity-clusterip-transition-c5j5t
  I1215 12:53:22.035099 21 service.go:242] Received response from host: affinity-clusterip-transition-srvpf
  I1215 12:53:22.035106 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.035113 21 service.go:242] Received response from host: affinity-clusterip-transition-c5j5t
  I1215 12:53:22.035119 21 service.go:242] Received response from host: affinity-clusterip-transition-srvpf
  I1215 12:53:22.035154 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.035162 21 service.go:242] Received response from host: affinity-clusterip-transition-c5j5t
  I1215 12:53:22.035169 21 service.go:242] Received response from host: affinity-clusterip-transition-srvpf
  I1215 12:53:22.035175 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.035183 21 service.go:242] Received response from host: affinity-clusterip-transition-c5j5t
  I1215 12:53:22.035189 21 service.go:242] Received response from host: affinity-clusterip-transition-srvpf
  I1215 12:53:22.035196 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.035202 21 service.go:242] Received response from host: affinity-clusterip-transition-c5j5t
  I1215 12:53:22.045942 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-2634 exec execpod-affinitydxqrd -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.233.23.137:80/ ; done'
  I1215 12:53:22.259390 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.233.23.137:80/\n"
  I1215 12:53:22.259489 21 builder.go:147] stdout: "\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg\naffinity-clusterip-transition-8nlqg"
  I1215 12:53:22.259511 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259525 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259536 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259546 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259557 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259566 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259775 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259800 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259812 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259823 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259852 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259861 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259870 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259886 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259896 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.259932 21 service.go:242] Received response from host: affinity-clusterip-transition-8nlqg
  I1215 12:53:22.260154 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-2634, will wait for the garbage collector to delete the pods @ 12/15/24 12:53:22.28
  I1215 12:53:22.344615 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 9.707847ms
  I1215 12:53:22.445736 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.118636ms
  I1215 12:53:25.485591 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2634" for this suite. @ 12/15/24 12:53:25.491
• [10.173 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 12/15/24 12:53:25.502
  I1215 12:53:25.502362 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 12:53:25.503
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:53:25.53
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:53:25.534
  STEP: Setting up server cert @ 12/15/24 12:53:25.569
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 12:53:25.904
  STEP: Deploying the webhook pod @ 12/15/24 12:53:25.918
  STEP: Wait for the deployment to be ready @ 12/15/24 12:53:25.938
  I1215 12:53:25.953127 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I1215 12:53:27.965149 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 12, 53, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 53, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 12, 53, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 12, 53, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 12/15/24 12:53:29.97
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 12:53:29.988
  I1215 12:53:30.990150 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 12/15/24 12:53:30.997
  STEP: create a pod that should be denied by the webhook @ 12/15/24 12:53:31.017
  STEP: create a pod that causes the webhook to hang @ 12/15/24 12:53:31.032
  STEP: create a configmap that should be denied by the webhook @ 12/15/24 12:53:41.041
  STEP: create a configmap that should be admitted by the webhook @ 12/15/24 12:53:41.049
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/15/24 12:53:41.06
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 12/15/24 12:53:41.071
  STEP: create a namespace that bypass the webhook @ 12/15/24 12:53:41.077
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 12/15/24 12:53:41.097
  I1215 12:53:41.193980 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2920" for this suite. @ 12/15/24 12:53:41.199
  STEP: Destroying namespace "webhook-markers-8073" for this suite. @ 12/15/24 12:53:41.216
  STEP: Destroying namespace "exempted-namespace-1019" for this suite. @ 12/15/24 12:53:41.224
• [15.740 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 12/15/24 12:53:41.243
  I1215 12:53:41.243273 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 12:53:41.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:53:41.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:53:41.3
  STEP: creating the pod with failed condition @ 12/15/24 12:53:41.304
  STEP: updating the pod @ 12/15/24 12:55:41.319
  I1215 12:55:41.844663 21 pod_client.go:141] Successfully updated pod "var-expansion-5c5ab394-e6d1-49c8-8c77-3066ad81d7f3"
  STEP: waiting for pod running @ 12/15/24 12:55:41.844
  STEP: deleting the pod gracefully @ 12/15/24 12:55:43.853
  I1215 12:55:43.853762 21 delete.go:62] Deleting pod "var-expansion-5c5ab394-e6d1-49c8-8c77-3066ad81d7f3" in namespace "var-expansion-4862"
  I1215 12:55:43.873363 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-5c5ab394-e6d1-49c8-8c77-3066ad81d7f3" to be fully deleted
  I1215 12:56:15.971157 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4862" for this suite. @ 12/15/24 12:56:15.975
• [154.741 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 12/15/24 12:56:15.984
  I1215 12:56:15.984442 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 12:56:15.985
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:16.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:16.014
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 12/15/24 12:56:16.017
  STEP: Saw pod success @ 12/15/24 12:56:20.05
  I1215 12:56:20.054844 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-a54b7ee0-55b2-4bc8-88b7-7c06ee99aa90 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 12:56:20.073
  I1215 12:56:20.103655 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8643" for this suite. @ 12/15/24 12:56:20.107
• [4.131 seconds]
------------------------------
SS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 12/15/24 12:56:20.116
  I1215 12:56:20.116768 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename events @ 12/15/24 12:56:20.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:20.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:20.144
  STEP: creating a test event @ 12/15/24 12:56:20.147
  STEP: listing events in all namespaces @ 12/15/24 12:56:20.156
  STEP: listing events in test namespace @ 12/15/24 12:56:20.168
  STEP: listing events with field selection filtering on source @ 12/15/24 12:56:20.17
  STEP: listing events with field selection filtering on reportingController @ 12/15/24 12:56:20.173
  STEP: getting the test event @ 12/15/24 12:56:20.175
  STEP: patching the test event @ 12/15/24 12:56:20.178
  STEP: getting the test event @ 12/15/24 12:56:20.186
  STEP: updating the test event @ 12/15/24 12:56:20.193
  STEP: getting the test event @ 12/15/24 12:56:20.204
  STEP: deleting the test event @ 12/15/24 12:56:20.208
  STEP: listing events in all namespaces @ 12/15/24 12:56:20.219
  STEP: listing events in test namespace @ 12/15/24 12:56:20.232
  I1215 12:56:20.235588 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1471" for this suite. @ 12/15/24 12:56:20.24
• [0.136 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 12/15/24 12:56:20.253
  I1215 12:56:20.253282 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:56:20.254
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:20.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:20.286
  STEP: Creating configMap with name projected-configmap-test-volume-a0281054-3f50-43b3-bba2-18aefbe1405d @ 12/15/24 12:56:20.289
  STEP: Creating a pod to test consume configMaps @ 12/15/24 12:56:20.296
  STEP: Saw pod success @ 12/15/24 12:56:24.325
  I1215 12:56:24.328707 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-configmaps-eb1343e4-76e5-4375-a99f-b48b522669bc container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 12:56:24.334
  I1215 12:56:24.356441 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2213" for this suite. @ 12/15/24 12:56:24.36
• [4.117 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 12/15/24 12:56:24.37
  I1215 12:56:24.370111 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename field-validation @ 12/15/24 12:56:24.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:24.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:24.404
  I1215 12:56:24.407790 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  W1215 12:56:24.408605      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004d99e60 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W1215 12:56:31.963832      21 warnings.go:70] unknown field "alpha"
  W1215 12:56:31.963868      21 warnings.go:70] unknown field "beta"
  W1215 12:56:31.963872      21 warnings.go:70] unknown field "delta"
  W1215 12:56:31.963877      21 warnings.go:70] unknown field "epsilon"
  W1215 12:56:31.963881      21 warnings.go:70] unknown field "gamma"
  I1215 12:56:32.509017 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6729" for this suite. @ 12/15/24 12:56:32.512
• [8.152 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 12/15/24 12:56:32.522
  I1215 12:56:32.522888 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename events @ 12/15/24 12:56:32.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:32.55
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:32.552
  STEP: creating a test event @ 12/15/24 12:56:32.555
  STEP: listing all events in all namespaces @ 12/15/24 12:56:32.567
  STEP: patching the test event @ 12/15/24 12:56:32.579
  STEP: fetching the test event @ 12/15/24 12:56:32.588
  STEP: updating the test event @ 12/15/24 12:56:32.59
  STEP: getting the test event @ 12/15/24 12:56:32.601
  STEP: deleting the test event @ 12/15/24 12:56:32.604
  STEP: listing all events in all namespaces @ 12/15/24 12:56:32.611
  I1215 12:56:32.621533 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5811" for this suite. @ 12/15/24 12:56:32.625
• [0.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 12/15/24 12:56:32.632
  I1215 12:56:32.632950 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:56:32.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:32.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:32.66
  STEP: Creating a ResourceQuota @ 12/15/24 12:56:32.663
  STEP: Getting a ResourceQuota @ 12/15/24 12:56:32.669
  STEP: Listing all ResourceQuotas with LabelSelector @ 12/15/24 12:56:32.672
  STEP: Patching the ResourceQuota @ 12/15/24 12:56:32.678
  STEP: Deleting a Collection of ResourceQuotas @ 12/15/24 12:56:32.686
  STEP: Verifying the deleted ResourceQuota @ 12/15/24 12:56:32.699
  I1215 12:56:32.702271 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-1802" for this suite. @ 12/15/24 12:56:32.708
• [0.082 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 12/15/24 12:56:32.715
  I1215 12:56:32.715463 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-pred @ 12/15/24 12:56:32.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:32.749
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:32.753
  I1215 12:56:32.756203 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1215 12:56:32.764753 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I1215 12:56:32.769259 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-1 before test
  I1215 12:56:32.781962 21 predicates.go:887] mariadb-backup-cronjob-28904450-4lrpl from dataplatform started at 2024-12-15 12:50:00 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782015 21 predicates.go:889] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I1215 12:56:32.782030 21 predicates.go:887] vault-unsealer-28904450-pzbcj from dataplatform started at 2024-12-15 12:50:00 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782041 21 predicates.go:889] 	Container unsealer ready: false, restart count 0
  I1215 12:56:32.782049 21 predicates.go:887] cilium-n8zrz from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782059 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 12:56:32.782067 21 predicates.go:887] cilium-operator-64664858c8-nxfhd from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782075 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 12:56:32.782084 21 predicates.go:887] kube-apiserver-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782091 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 12:56:32.782100 21 predicates.go:887] kube-controller-manager-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782236 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 12:56:32.782245 21 predicates.go:887] kube-proxy-nwc8x from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782252 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 12:56:32.782261 21 predicates.go:887] kube-scheduler-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782268 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 12:56:32.782277 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-15 11:48:01 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.782284 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1215 12:56:32.782293 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-jlphr from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.782300 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:56:32.782308 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 12:56:32.782318 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-2 before test
  I1215 12:56:32.806067 21 predicates.go:887] keycloak-846b587bd-gf8fz from auth started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806101 21 predicates.go:889] 	Container keycloak ready: true, restart count 0
  I1215 12:56:32.806111 21 predicates.go:887] oauth2-proxy-admin-6c974cb88b-8cm2f from auth started at 2024-12-15 12:45:02 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806118 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 0
  I1215 12:56:32.806126 21 predicates.go:887] oauth2-redis-admin-2 from auth started at 2024-12-15 12:45:08 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806132 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:56:32.806139 21 predicates.go:887] oauth2-redis-admin-3 from auth started at 2024-12-15 11:36:50 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806145 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:56:32.806151 21 predicates.go:887] oauth2-redis-admin-5 from auth started at 2024-12-15 11:37:10 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806156 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:56:32.806167 21 predicates.go:887] cloud-service-api-57f54bfb54-d5ns6 from cmp started at 2024-12-15 12:45:06 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806172 21 predicates.go:889] 	Container cloud-service-api ready: true, restart count 0
  I1215 12:56:32.806178 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.806184 21 predicates.go:887] maestro-common-api-85ff5d9f5b-pbqbq from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806189 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.806198 21 predicates.go:889] 	Container maestro-common-api ready: true, restart count 0
  I1215 12:56:32.806205 21 predicates.go:887] maestro-host-app-5cd79d5b8c-hnj5b from cmp started at 2024-12-15 12:45:06 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806318 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.806324 21 predicates.go:889] 	Container maestro-host-app ready: true, restart count 0
  I1215 12:56:32.806332 21 predicates.go:887] notification-adapter-api-5cf9dbf5f6-ptnnd from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806337 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.806344 21 predicates.go:889] 	Container noti-api ready: true, restart count 0
  I1215 12:56:32.806351 21 predicates.go:887] mariadb-maxscale-f58d897f7-46j52 from dataplatform started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806358 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 12:56:32.806468 21 predicates.go:887] mariadb-sts-1 from dataplatform started at 2024-12-15 11:38:49 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806474 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 12:56:32.806482 21 predicates.go:887] my-cluster-entity-operator-5685c69c9c-w2rp4 from dataplatform started at 2024-12-15 11:43:40 +0000 UTC (3 container statuses recorded)
  I1215 12:56:32.806487 21 predicates.go:889] 	Container tls-sidecar ready: true, restart count 0
  I1215 12:56:32.806493 21 predicates.go:889] 	Container topic-operator ready: true, restart count 0
  I1215 12:56:32.806499 21 predicates.go:889] 	Container user-operator ready: true, restart count 0
  I1215 12:56:32.806510 21 predicates.go:887] my-cluster-kafka-0 from dataplatform started at 2024-12-15 12:45:10 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806516 21 predicates.go:889] 	Container kafka ready: true, restart count 0
  I1215 12:56:32.806522 21 predicates.go:887] my-cluster-kafka-1 from dataplatform started at 2024-12-15 11:41:34 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806527 21 predicates.go:889] 	Container kafka ready: true, restart count 2
  I1215 12:56:32.806534 21 predicates.go:887] my-cluster-zookeeper-0 from dataplatform started at 2024-12-15 11:41:45 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806540 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 12:56:32.806546 21 predicates.go:887] strimzi-cluster-operator-698dc7549d-tj5s6 from dataplatform started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806551 21 predicates.go:889] 	Container strimzi-cluster-operator ready: true, restart count 0
  I1215 12:56:32.806558 21 predicates.go:887] vault-1 from dataplatform started at 2024-12-15 11:34:41 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806563 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 12:56:32.806569 21 predicates.go:887] vault-2 from dataplatform started at 2024-12-15 12:45:13 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806574 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 12:56:32.806580 21 predicates.go:887] cilium-78qk5 from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806591 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 12:56:32.806598 21 predicates.go:887] coredns-776bb9db5d-6fcp7 from kube-system started at 2024-12-15 11:33:49 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806604 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 12:56:32.806609 21 predicates.go:887] kube-apiserver-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806614 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 12:56:32.806623 21 predicates.go:887] kube-controller-manager-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806629 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 12:56:32.806652 21 predicates.go:887] kube-proxy-zmqc8 from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806657 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 12:56:32.806664 21 predicates.go:887] kube-scheduler-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.806669 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 12:56:32.806676 21 predicates.go:887] sonobuoy-e2e-job-37381f2984c64bf4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806681 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1215 12:56:32.806687 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:56:32.806693 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-xhsgf from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806698 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:56:32.806704 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 12:56:32.806710 21 predicates.go:887] contrabass-api-567f74fcd-hpbfs from viola started at 2024-12-15 11:40:51 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806720 21 predicates.go:889] 	Container contrabass-api ready: true, restart count 0
  I1215 12:56:32.806726 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.806732 21 predicates.go:887] viola-api-5bb88dfd5c-v9pxd from viola started at 2024-12-15 11:41:06 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806737 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.806743 21 predicates.go:889] 	Container viola-api ready: true, restart count 0
  I1215 12:56:32.806749 21 predicates.go:887] viola-remote-app-79bd8cf4dc-khsxs from viola started at 2024-12-15 11:41:16 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.806754 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.806759 21 predicates.go:889] 	Container viola-remote-app ready: true, restart count 0
  I1215 12:56:32.806765 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-3 before test
  I1215 12:56:32.830284 21 predicates.go:887] keycloak-846b587bd-qr4xk from auth started at 2024-12-15 11:35:14 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830325 21 predicates.go:889] 	Container keycloak ready: true, restart count 2
  I1215 12:56:32.830336 21 predicates.go:887] mariadb-keycloak-0 from auth started at 2024-12-15 11:35:52 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830343 21 predicates.go:889] 	Container mariadb-keycloak ready: true, restart count 0
  I1215 12:56:32.830355 21 predicates.go:887] oauth2-proxy-admin-6c974cb88b-vk25g from auth started at 2024-12-15 12:45:06 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830361 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 0
  I1215 12:56:32.830389 21 predicates.go:887] oauth2-redis-admin-0 from auth started at 2024-12-15 11:36:30 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830395 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:56:32.830402 21 predicates.go:887] oauth2-redis-admin-1 from auth started at 2024-12-15 11:36:32 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830407 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:56:32.830414 21 predicates.go:887] oauth2-redis-admin-4 from auth started at 2024-12-15 12:45:11 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830419 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:56:32.830426 21 predicates.go:887] cloud-service-collector-6f4b74fdfb-mpdbx from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.830454 21 predicates.go:889] 	Container cloud-service-collector ready: true, restart count 0
  I1215 12:56:32.830463 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.830596 21 predicates.go:887] maestro-auth-gateway-6cbd44676b-rvrdl from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.830610 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.830616 21 predicates.go:889] 	Container maestro-auth-gateway ready: true, restart count 0
  I1215 12:56:32.830622 21 predicates.go:887] maestro-event-pusher-65b595dc6-v869s from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.830628 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.830634 21 predicates.go:889] 	Container maestro-event-pusher ready: true, restart count 1
  I1215 12:56:32.830640 21 predicates.go:887] maestro-iam-adapter-api-77f4d875b5-9vh4z from cmp started at 2024-12-15 12:45:06 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.830645 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.830651 21 predicates.go:889] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I1215 12:56:32.830671 21 predicates.go:887] maestro-remote-app-769bc9cff9-kgdd5 from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.830677 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.830692 21 predicates.go:889] 	Container maestro-remote-app ready: true, restart count 0
  I1215 12:56:32.830739 21 predicates.go:887] mariadb-maxscale-f58d897f7-bfh7f from dataplatform started at 2024-12-15 11:38:45 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830756 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 12:56:32.830762 21 predicates.go:887] mariadb-sts-0 from dataplatform started at 2024-12-15 12:45:08 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830768 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 12:56:32.830787 21 predicates.go:887] my-cluster-kafka-2 from dataplatform started at 2024-12-15 11:40:09 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830793 21 predicates.go:889] 	Container kafka ready: true, restart count 4
  I1215 12:56:32.830800 21 predicates.go:887] my-cluster-zookeeper-1 from dataplatform started at 2024-12-15 11:41:46 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830805 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 12:56:32.830811 21 predicates.go:887] my-cluster-zookeeper-2 from dataplatform started at 2024-12-15 12:45:08 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830817 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 12:56:32.830823 21 predicates.go:887] redis-0 from dataplatform started at 2024-12-15 12:45:07 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830849 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 12:56:32.830923 21 predicates.go:887] vault-0 from dataplatform started at 2024-12-15 11:36:43 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830941 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 12:56:32.830948 21 predicates.go:887] nfs-client-provisioner-5d85d7bdcf-7gdx4 from default started at 2024-12-15 11:34:15 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.830969 21 predicates.go:889] 	Container nfs-client-provisioner ready: true, restart count 0
  I1215 12:56:32.831004 21 predicates.go:887] nginx-pod from default started at 2024-12-15 10:52:29 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831009 21 predicates.go:889] 	Container nginx ready: true, restart count 0
  I1215 12:56:32.831016 21 predicates.go:887] ingress-nginx-controller-7d4db76476-8nsf6 from ingress-nginx started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831022 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I1215 12:56:32.831029 21 predicates.go:887] istio-gateway-67c8555b98-22b98 from istio-system started at 2024-12-15 11:34:03 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831036 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 12:56:32.831042 21 predicates.go:887] istiod-66c776b765-bdcx2 from istio-system started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831048 21 predicates.go:889] 	Container discovery ready: true, restart count 0
  I1215 12:56:32.831054 21 predicates.go:887] cilium-operator-64664858c8-rr65m from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831060 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 12:56:32.831066 21 predicates.go:887] cilium-zl6bh from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831071 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 12:56:32.831078 21 predicates.go:887] coredns-776bb9db5d-mbxjb from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831084 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 12:56:32.831090 21 predicates.go:887] dns-autoscaler-6ffb84bd6-hht9v from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831096 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I1215 12:56:32.831102 21 predicates.go:887] kube-apiserver-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831107 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 2
  I1215 12:56:32.831115 21 predicates.go:887] kube-controller-manager-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831120 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 12:56:32.831126 21 predicates.go:887] kube-proxy-mxh4s from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831131 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 12:56:32.831137 21 predicates.go:887] kube-scheduler-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 12:56:32.831143 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 12:56:32.831149 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-dhdt4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 12:56:32.831155 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 12:56:32.831160 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/15/24 12:56:32.831
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/15/24 12:56:34.856
  STEP: Trying to apply a random label on the found node. @ 12/15/24 12:56:34.875
  STEP: verifying the node has the label kubernetes.io/e2e-c7a0b0ac-7878-48b4-bffd-e0b0cbb44650 42 @ 12/15/24 12:56:34.891
  STEP: Trying to relaunch the pod, now with labels. @ 12/15/24 12:56:34.894
  STEP: removing the label kubernetes.io/e2e-c7a0b0ac-7878-48b4-bffd-e0b0cbb44650 off the node cncf-master-1 @ 12/15/24 12:56:36.921
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-c7a0b0ac-7878-48b4-bffd-e0b0cbb44650 @ 12/15/24 12:56:36.938
  I1215 12:56:36.942761 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-2588" for this suite. @ 12/15/24 12:56:36.954
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 12/15/24 12:56:36.97
  I1215 12:56:36.970938 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 12:56:36.971
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:36.993
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:36.996
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 12:56:36.998
  STEP: Saw pod success @ 12/15/24 12:56:41.024
  I1215 12:56:41.027988 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-1763abf6-85dd-448f-a2d3-95c6ba6a0f11 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 12:56:41.034
  I1215 12:56:41.055723 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9796" for this suite. @ 12/15/24 12:56:41.059
• [4.095 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 12/15/24 12:56:41.066
  I1215 12:56:41.066523 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 12:56:41.067
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:41.094
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:41.097
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7365 @ 12/15/24 12:56:41.1
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/15/24 12:56:41.118
  STEP: creating service externalsvc in namespace services-7365 @ 12/15/24 12:56:41.118
  STEP: creating replication controller externalsvc in namespace services-7365 @ 12/15/24 12:56:41.135
  I1215 12:56:41.150476      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-7365, replica count: 2
  I1215 12:56:44.201548      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 12/15/24 12:56:44.205
  I1215 12:56:44.224412 21 resource.go:361] Creating new exec pod
  I1215 12:56:46.242702 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7365 exec execpodm4qcm -- /bin/sh -x -c nslookup clusterip-service.services-7365.svc.cluster.local'
  I1215 12:56:46.438149 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-7365.svc.cluster.local\n"
  I1215 12:56:46.438242 21 builder.go:147] stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nclusterip-service.services-7365.svc.cluster.local\tcanonical name = externalsvc.services-7365.svc.cluster.local.\nName:\texternalsvc.services-7365.svc.cluster.local\nAddress: 10.233.16.114\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7365, will wait for the garbage collector to delete the pods @ 12/15/24 12:56:46.438
  I1215 12:56:46.501697 21 resources.go:139] Deleting ReplicationController externalsvc took: 8.650237ms
  I1215 12:56:46.601988 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.284384ms
  I1215 12:56:49.531333 21 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I1215 12:56:49.547481 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7365" for this suite. @ 12/15/24 12:56:49.554
• [8.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 12/15/24 12:56:49.571
  I1215 12:56:49.571306 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 12:56:49.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:49.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:49.599
  STEP: Creating a test headless service @ 12/15/24 12:56:49.602
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1663.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-1663.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 12/15/24 12:56:49.608
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-1663.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-1663.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 12/15/24 12:56:49.608
  STEP: creating a pod to probe DNS @ 12/15/24 12:56:49.608
  STEP: submitting the pod to kubernetes @ 12/15/24 12:56:49.608
  STEP: retrieving the pod @ 12/15/24 12:56:51.634
  STEP: looking for the results for each expected name from probers @ 12/15/24 12:56:51.637
  I1215 12:56:51.652973 21 dns_common.go:527] DNS probes using dns-1663/dns-test-0bf24651-4542-4113-ac21-85883e153bdd succeeded

  STEP: deleting the pod @ 12/15/24 12:56:51.653
  STEP: deleting the test headless service @ 12/15/24 12:56:51.677
  I1215 12:56:51.700715 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1663" for this suite. @ 12/15/24 12:56:51.712
• [2.149 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 12/15/24 12:56:51.72
  I1215 12:56:51.720623 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:56:51.721
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:56:51.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:56:51.745
  STEP: Counting existing ResourceQuota @ 12/15/24 12:56:51.747
  STEP: Creating a ResourceQuota @ 12/15/24 12:56:56.751
  STEP: Ensuring resource quota status is calculated @ 12/15/24 12:56:56.758
  STEP: Creating a Service @ 12/15/24 12:56:58.763
  STEP: Creating a NodePort Service @ 12/15/24 12:56:58.794
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 12/15/24 12:56:58.833
  STEP: Ensuring resource quota status captures service creation @ 12/15/24 12:56:58.865
  STEP: Deleting Services @ 12/15/24 12:57:00.872
  STEP: Ensuring resource quota status released usage @ 12/15/24 12:57:00.928
  I1215 12:57:02.934164 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5334" for this suite. @ 12/15/24 12:57:02.939
• [11.226 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 12/15/24 12:57:02.947
  I1215 12:57:02.947532 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-preemption @ 12/15/24 12:57:02.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:57:02.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:57:02.98
  I1215 12:57:03.009722 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I1215 12:58:03.017063 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 12/15/24 12:58:03.021
  I1215 12:58:03.021696 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-preemption-path @ 12/15/24 12:58:03.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:58:03.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:58:03.058
  STEP: Finding an available node @ 12/15/24 12:58:03.062
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 12/15/24 12:58:03.062
  STEP: Explicitly delete pod here to free the resource it takes. @ 12/15/24 12:58:05.087
  I1215 12:58:05.112104 21 preemption.go:583] found a healthy node: cncf-master-1
  I1215 12:58:11.216340 21 preemption.go:706] pods created so far: [1 1 1]
  I1215 12:58:11.216457 21 preemption.go:707] length of pods created so far: 3
  I1215 12:58:13.234631 21 preemption.go:724] pods created so far: [2 2 1]
  I1215 12:58:20.359355 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4341" for this suite. @ 12/15/24 12:58:20.364
  I1215 12:58:20.372321 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-25" for this suite. @ 12/15/24 12:58:20.376
• [77.440 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 12/15/24 12:58:20.387
  I1215 12:58:20.387413 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 12:58:20.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:58:20.411
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:58:20.414
  I1215 12:58:22.437203 21 delete.go:62] Deleting pod "var-expansion-705548ee-80b3-41ac-b4b4-ff99d0b68005" in namespace "var-expansion-2352"
  I1215 12:58:22.448127 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-705548ee-80b3-41ac-b4b4-ff99d0b68005" to be fully deleted
  I1215 12:58:24.464542 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2352" for this suite. @ 12/15/24 12:58:24.47
• [4.091 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 12/15/24 12:58:24.478
  I1215 12:58:24.478903 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 12:58:24.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:58:24.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:58:24.512
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 12:58:24.515
  STEP: Saw pod success @ 12/15/24 12:58:28.549
  I1215 12:58:28.552501 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-aae94e6a-b310-4dc2-8bee-861689668b4a container client-container: <nil>
  STEP: delete the pod @ 12/15/24 12:58:28.564
  I1215 12:58:28.592436 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3391" for this suite. @ 12/15/24 12:58:28.596
• [4.128 seconds]
------------------------------
S
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 12/15/24 12:58:28.606
  I1215 12:58:28.606620 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sysctl @ 12/15/24 12:58:28.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:58:28.635
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:58:28.638
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 12/15/24 12:58:28.641
  STEP: Watching for error events or started pod @ 12/15/24 12:58:28.65
  STEP: Waiting for pod completion @ 12/15/24 12:58:30.656
  STEP: Checking that the pod succeeded @ 12/15/24 12:58:32.668
  STEP: Getting logs from the pod @ 12/15/24 12:58:32.668
  STEP: Checking that the sysctl is actually updated @ 12/15/24 12:58:32.675
  I1215 12:58:32.675400 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-7265" for this suite. @ 12/15/24 12:58:32.679
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 12/15/24 12:58:32.69
  I1215 12:58:32.690591 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 12:58:32.691
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:58:32.719
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:58:32.722
  STEP: Creating a test externalName service @ 12/15/24 12:58:32.725
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3383.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3383.svc.cluster.local; sleep 1; done
   @ 12/15/24 12:58:32.731
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3383.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3383.svc.cluster.local; sleep 1; done
   @ 12/15/24 12:58:32.731
  STEP: creating a pod to probe DNS @ 12/15/24 12:58:32.731
  STEP: submitting the pod to kubernetes @ 12/15/24 12:58:32.731
  STEP: retrieving the pod @ 12/15/24 12:58:34.752
  STEP: looking for the results for each expected name from probers @ 12/15/24 12:58:34.755
  I1215 12:58:34.760983 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-3383.svc.cluster.local from pod  dns-3383/dns-test-6f67301b-b558-4b2c-b308-912eccedcca3 contains '' instead of 'foo.example.com.'
  I1215 12:58:34.766801 21 dns_common.go:489] Lookups using dns-3383/dns-test-6f67301b-b558-4b2c-b308-912eccedcca3 failed for: [wheezy_udp@dns-test-service-3.dns-3383.svc.cluster.local]

  I1215 12:58:34.773756 21 dns_common.go:495] Pod client logs for webserver: 
  I1215 12:58:34.779681 21 dns_common.go:495] Pod client logs for querier: 
  I1215 12:58:34.785485 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I1215 12:58:39.768117 21 dns_common.go:552] DNS probes using dns-test-6f67301b-b558-4b2c-b308-912eccedcca3 succeeded

  STEP: changing the externalName to bar.example.com @ 12/15/24 12:58:39.768
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3383.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-3383.svc.cluster.local; sleep 1; done
   @ 12/15/24 12:58:39.778
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3383.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-3383.svc.cluster.local; sleep 1; done
   @ 12/15/24 12:58:39.778
  STEP: creating a second pod to probe DNS @ 12/15/24 12:58:39.778
  STEP: submitting the pod to kubernetes @ 12/15/24 12:58:39.778
  STEP: retrieving the pod @ 12/15/24 12:58:41.799
  STEP: looking for the results for each expected name from probers @ 12/15/24 12:58:41.803
  I1215 12:58:41.808301 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-3383.svc.cluster.local from pod  dns-3383/dns-test-c26712b1-73dd-4cc9-bd8b-654aa71cc463 contains '' instead of 'bar.example.com.'
  I1215 12:58:41.812252 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-3383.svc.cluster.local from pod  dns-3383/dns-test-c26712b1-73dd-4cc9-bd8b-654aa71cc463 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I1215 12:58:41.812304 21 dns_common.go:489] Lookups using dns-3383/dns-test-c26712b1-73dd-4cc9-bd8b-654aa71cc463 failed for: [wheezy_udp@dns-test-service-3.dns-3383.svc.cluster.local jessie_udp@dns-test-service-3.dns-3383.svc.cluster.local]

  I1215 12:58:41.818245 21 dns_common.go:495] Pod client logs for webserver: 
  I1215 12:58:41.823216 21 dns_common.go:495] Pod client logs for querier: 
  I1215 12:58:41.828970 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I1215 12:58:46.813524 21 dns_common.go:552] DNS probes using dns-test-c26712b1-73dd-4cc9-bd8b-654aa71cc463 succeeded

  STEP: changing the service to type=ClusterIP @ 12/15/24 12:58:46.813
  W1215 12:58:46.843342      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3383.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-3383.svc.cluster.local; sleep 1; done
   @ 12/15/24 12:58:46.843
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-3383.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-3383.svc.cluster.local; sleep 1; done
   @ 12/15/24 12:58:46.843
  STEP: creating a third pod to probe DNS @ 12/15/24 12:58:46.843
  STEP: submitting the pod to kubernetes @ 12/15/24 12:58:46.846
  STEP: retrieving the pod @ 12/15/24 12:58:48.863
  STEP: looking for the results for each expected name from probers @ 12/15/24 12:58:48.867
  I1215 12:58:48.878610 21 dns_common.go:552] DNS probes using dns-test-c071a3ee-e5c5-4aea-b871-70d6f14c306a succeeded

  STEP: deleting the pod @ 12/15/24 12:58:48.878
  STEP: deleting the pod @ 12/15/24 12:58:48.902
  STEP: deleting the pod @ 12/15/24 12:58:48.94
  STEP: deleting the test externalName service @ 12/15/24 12:58:48.96
  I1215 12:58:49.008526 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3383" for this suite. @ 12/15/24 12:58:49.013
• [16.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 12/15/24 12:58:49.022
  I1215 12:58:49.022452 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename job @ 12/15/24 12:58:49.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:58:49.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:58:49.051
  STEP: Creating Indexed job @ 12/15/24 12:58:49.055
  STEP: Ensuring job reaches completions @ 12/15/24 12:58:49.066
  STEP: Ensuring pods with index for job exist @ 12/15/24 12:58:59.073
  I1215 12:58:59.078709 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-2333" for this suite. @ 12/15/24 12:58:59.085
• [10.072 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:965
  STEP: Creating a kubernetes client @ 12/15/24 12:58:59.095
  I1215 12:58:59.095501 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 12:58:59.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:58:59.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:58:59.126
  STEP: Creating service test in namespace statefulset-8727 @ 12/15/24 12:58:59.129
  I1215 12:58:59.158579 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I1215 12:59:09.164000 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 12/15/24 12:59:09.171
  W1215 12:59:09.182509      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I1215 12:59:09.197772 21 wait.go:40] Found 1 stateful pods, waiting for 2
  I1215 12:59:19.202327 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1215 12:59:19.202452 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 12/15/24 12:59:19.209
  STEP: Delete all of the StatefulSets @ 12/15/24 12:59:19.213
  STEP: Verify that StatefulSets have been deleted @ 12/15/24 12:59:19.221
  I1215 12:59:19.225892 21 statefulset.go:138] Deleting all statefulset in ns statefulset-8727
  I1215 12:59:19.250701 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8727" for this suite. @ 12/15/24 12:59:19.268
• [20.186 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 12/15/24 12:59:19.281
  I1215 12:59:19.281978 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-runtime @ 12/15/24 12:59:19.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:59:19.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:59:19.312
  STEP: create the container @ 12/15/24 12:59:19.319
  W1215 12:59:19.333459      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/15/24 12:59:19.333
  STEP: get the container status @ 12/15/24 12:59:22.351
  STEP: the container should be terminated @ 12/15/24 12:59:22.354
  STEP: the termination message should be set @ 12/15/24 12:59:22.354
  I1215 12:59:22.354960 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 12/15/24 12:59:22.355
  I1215 12:59:22.381546 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9926" for this suite. @ 12/15/24 12:59:22.39
• [3.116 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 12/15/24 12:59:22.399
  I1215 12:59:22.399248 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 12:59:22.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:59:22.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:59:22.428
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 12/15/24 12:59:22.435
  I1215 12:59:22.436086 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:59:30.038865 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 12:59:43.976612 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9155" for this suite. @ 12/15/24 12:59:43.985
• [21.595 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 12/15/24 12:59:43.995
  I1215 12:59:43.995026 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 12:59:43.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:59:44.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:59:44.024
  STEP: creating secret secrets-8315/secret-test-04e52fb1-51f1-4b0f-a138-a86411333b6c @ 12/15/24 12:59:44.027
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:59:44.032
  STEP: Saw pod success @ 12/15/24 12:59:48.056
  I1215 12:59:48.060150 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-4c4c9646-9cdf-4bb1-a09b-cb7bfc4eee1a container env-test: <nil>
  STEP: delete the pod @ 12/15/24 12:59:48.067
  I1215 12:59:48.090605 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8315" for this suite. @ 12/15/24 12:59:48.093
• [4.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 12/15/24 12:59:48.103
  I1215 12:59:48.103698 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 12:59:48.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:59:48.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:59:48.128
  STEP: Creating secret with name secret-test-e4006c1e-041c-462f-914d-340d445c239b @ 12/15/24 12:59:48.129
  STEP: Creating a pod to test consume secrets @ 12/15/24 12:59:48.136
  STEP: Saw pod success @ 12/15/24 12:59:52.164
  I1215 12:59:52.168716 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-97c0ab86-5c0b-48bc-ad4b-ec7f70faef3c container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 12:59:52.175
  I1215 12:59:52.195247 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4539" for this suite. @ 12/15/24 12:59:52.199
• [4.104 seconds]
------------------------------
SS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 12/15/24 12:59:52.207
  I1215 12:59:52.207647 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 12:59:52.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:59:52.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:59:52.233
  STEP: Creating a test headless service @ 12/15/24 12:59:52.236
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1364 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1364;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1364 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1364;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1364.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1364.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1364.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1364.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1364.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1364.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1364.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1364.svc;check="$$(dig +notcp +noall +answer +search 165.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.165_udp@PTR;check="$$(dig +tcp +noall +answer +search 165.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.165_tcp@PTR;sleep 1; done
   @ 12/15/24 12:59:52.264
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1364 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1364;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1364 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1364;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1364.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1364.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1364.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1364.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1364.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1364.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1364.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1364.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1364.svc;check="$$(dig +notcp +noall +answer +search 165.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.165_udp@PTR;check="$$(dig +tcp +noall +answer +search 165.29.233.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.233.29.165_tcp@PTR;sleep 1; done
   @ 12/15/24 12:59:52.264
  STEP: creating a pod to probe DNS @ 12/15/24 12:59:52.264
  STEP: submitting the pod to kubernetes @ 12/15/24 12:59:52.264
  STEP: retrieving the pod @ 12/15/24 12:59:54.292
  STEP: looking for the results for each expected name from probers @ 12/15/24 12:59:54.296
  I1215 12:59:54.300596 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.303817 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.307463 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1364 from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.310586 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1364 from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.313961 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.317078 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.319764 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.322871 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.336581 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.339350 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.341973 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1364 from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.344412 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1364 from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.347658 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.350799 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.353327 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.356452 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1364.svc from pod dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7: the server could not find the requested resource (get pods dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7)
  I1215 12:59:54.369278 21 dns_common.go:489] Lookups using dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1364 wheezy_tcp@dns-test-service.dns-1364 wheezy_udp@dns-test-service.dns-1364.svc wheezy_tcp@dns-test-service.dns-1364.svc wheezy_udp@_http._tcp.dns-test-service.dns-1364.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1364.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1364 jessie_tcp@dns-test-service.dns-1364 jessie_udp@dns-test-service.dns-1364.svc jessie_tcp@dns-test-service.dns-1364.svc jessie_udp@_http._tcp.dns-test-service.dns-1364.svc jessie_tcp@_http._tcp.dns-test-service.dns-1364.svc]

  I1215 12:59:54.375370 21 dns_common.go:495] Pod client logs for webserver: 
  I1215 12:59:54.380491 21 dns_common.go:495] Pod client logs for querier: 
  I1215 12:59:54.384969 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I1215 12:59:59.382437 21 dns_common.go:527] DNS probes using dns-1364/dns-test-c4fecb21-a6b7-48c2-96f5-881bf461c5d7 succeeded

  STEP: deleting the pod @ 12/15/24 12:59:59.382
  STEP: deleting the test service @ 12/15/24 12:59:59.416
  STEP: deleting the test headless service @ 12/15/24 12:59:59.484
  I1215 12:59:59.503616 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1364" for this suite. @ 12/15/24 12:59:59.507
• [7.323 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 12/15/24 12:59:59.53
  I1215 12:59:59.530920 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename custom-resource-definition @ 12/15/24 12:59:59.531
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:59:59.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:59:59.566
  STEP: fetching the /apis discovery document @ 12/15/24 12:59:59.569
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 12/15/24 12:59:59.57
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 12/15/24 12:59:59.57
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 12/15/24 12:59:59.57
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 12/15/24 12:59:59.572
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 12/15/24 12:59:59.572
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 12/15/24 12:59:59.574
  I1215 12:59:59.574810 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3868" for this suite. @ 12/15/24 12:59:59.578
• [0.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 12/15/24 12:59:59.593
  I1215 12:59:59.593104 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 12:59:59.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 12:59:59.62
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 12:59:59.632
  STEP: Creating a ResourceQuota with best effort scope @ 12/15/24 12:59:59.637
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/24 12:59:59.656
  STEP: Creating a ResourceQuota with not best effort scope @ 12/15/24 13:00:01.659
  STEP: Ensuring ResourceQuota status is calculated @ 12/15/24 13:00:01.67
  STEP: Creating a best-effort pod @ 12/15/24 13:00:03.678
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 12/15/24 13:00:03.709
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 12/15/24 13:00:05.716
  STEP: Deleting the pod @ 12/15/24 13:00:07.722
  STEP: Ensuring resource quota status released the pod usage @ 12/15/24 13:00:07.75
  STEP: Creating a not best-effort pod @ 12/15/24 13:00:09.761
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 12/15/24 13:00:09.783
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 12/15/24 13:00:11.791
  STEP: Deleting the pod @ 12/15/24 13:00:13.795
  STEP: Ensuring resource quota status released the pod usage @ 12/15/24 13:00:13.814
  I1215 13:00:15.824267 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5504" for this suite. @ 12/15/24 13:00:15.828
• [16.243 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 12/15/24 13:00:15.836
  I1215 13:00:15.836104 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 13:00:15.837
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:00:15.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:00:15.867
  STEP: Creating pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694 @ 12/15/24 13:00:15.869
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 13:00:17.889
  I1215 13:00:17.892905 21 container_probe.go:1749] Initial restart count of pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 is 0
  I1215 13:00:17.895928 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:19.901910 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:21.908344 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:23.914645 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:25.919683 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:27.924921 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:29.929965 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:31.953152 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:33.958879 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:35.963604 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:37.967996 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:39.973120 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:41.976911 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:43.981120 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:45.986952 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:47.991498 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:49.996425 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:52.001968 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:54.006700 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:56.011607 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:00:58.017616 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:00.021905 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:02.031650 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:04.042230 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:06.047385 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:08.052331 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:10.057369 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:12.062904 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:14.068445 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:16.074077 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:18.079289 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:20.084628 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:22.090076 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:24.098000 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:26.103499 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:28.109854 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:30.115316 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:32.121936 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:34.127528 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:36.133189 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:38.138479 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:40.144797 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:42.151485 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:44.158758 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:46.162722 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:48.166794 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:50.172364 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:52.179168 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:54.186489 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:56.193299 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:01:58.197891 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:00.203625 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:02.208148 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:04.214004 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:06.218963 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:08.224123 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:10.231337 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:12.236873 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:14.243811 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:16.248768 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:18.255655 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:20.261733 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:22.267113 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:24.272956 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:26.278647 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:28.285141 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:30.290551 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:32.297383 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:34.302906 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:36.307398 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:38.311371 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:40.316983 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:42.322922 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:44.329106 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:46.333411 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:48.339307 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:50.345092 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:52.349978 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:54.355519 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:56.361363 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:02:58.365547 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:00.371576 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:02.380040 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:04.385930 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:06.391819 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:08.397997 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:10.404018 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:12.407605 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:14.413663 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:16.418750 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:18.443239 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:20.449791 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:22.455384 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:24.461084 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:26.468809 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:28.473502 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:30.478449 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:32.484389 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:34.490777 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:36.496772 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:38.502642 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:40.510724 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:42.515233 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:44.520436 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:46.525759 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:48.531877 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:50.537035 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:52.543216 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:54.549539 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:56.554677 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:03:58.560364 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:00.565178 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:02.570933 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:04.576854 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:06.582428 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:08.591142 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:10.596363 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:12.601193 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:14.606620 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  I1215 13:04:16.612386 21 container_probe.go:1759] Get pod test-webserver-7569b7ec-30f7-48e5-b3d3-a4b20318b1b1 in namespace container-probe-5694
  STEP: deleting the pod @ 12/15/24 13:04:18.613
  I1215 13:04:18.635539 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5694" for this suite. @ 12/15/24 13:04:18.641
• [242.818 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 12/15/24 13:04:18.655
  I1215 13:04:18.655271 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/24 13:04:18.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:18.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:18.693
  I1215 13:04:20.734050 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9511" for this suite. @ 12/15/24 13:04:20.738
• [2.096 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 12/15/24 13:04:20.751
  I1215 13:04:20.751300 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:04:20.752
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:20.776
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:20.779
  STEP: Setting up server cert @ 12/15/24 13:04:20.815
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:04:21.147
  STEP: Deploying the webhook pod @ 12/15/24 13:04:21.159
  STEP: Wait for the deployment to be ready @ 12/15/24 13:04:21.182
  I1215 13:04:21.203864 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 13:04:23.216
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:04:23.232
  I1215 13:04:24.232847 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1215 13:04:24.240343 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 12/15/24 13:04:29.761
  STEP: Creating a custom resource that should be denied by the webhook @ 12/15/24 13:04:29.784
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 12/15/24 13:04:31.806
  STEP: Updating the custom resource with disallowed data should be denied @ 12/15/24 13:04:31.815
  STEP: Deleting the custom resource should be denied @ 12/15/24 13:04:31.825
  STEP: Remove the offending key and value from the custom resource data @ 12/15/24 13:04:31.831
  STEP: Deleting the updated custom resource should be successful @ 12/15/24 13:04:31.85
  I1215 13:04:32.439020 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4764" for this suite. @ 12/15/24 13:04:32.444
  STEP: Destroying namespace "webhook-markers-7383" for this suite. @ 12/15/24 13:04:32.452
• [11.712 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 12/15/24 13:04:32.463
  I1215 13:04:32.463332 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename podtemplate @ 12/15/24 13:04:32.464
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:32.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:32.491
  STEP: Create set of pod templates @ 12/15/24 13:04:32.495
  I1215 13:04:32.509691 21 podtemplates.go:143] created test-podtemplate-1
  I1215 13:04:32.516615 21 podtemplates.go:143] created test-podtemplate-2
  I1215 13:04:32.526595 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 12/15/24 13:04:32.526
  STEP: delete collection of pod templates @ 12/15/24 13:04:32.529
  I1215 13:04:32.529635 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 12/15/24 13:04:32.55
  I1215 13:04:32.550723 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I1215 13:04:32.553849 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-7161" for this suite. @ 12/15/24 13:04:32.557
• [0.101 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 12/15/24 13:04:32.564
  I1215 13:04:32.564969 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 13:04:32.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:32.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:32.595
  STEP: Creating pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203 @ 12/15/24 13:04:32.599
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 13:04:34.627
  I1215 13:04:34.630954 21 container_probe.go:1749] Initial restart count of pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 is 0
  I1215 13:04:34.633651 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:36.639224 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:38.644891 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:40.651439 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:42.658851 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:44.663926 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:46.670352 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:48.676745 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:50.682832 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:52.688474 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:54.694612 21 container_probe.go:1759] Get pod liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 in namespace container-probe-6203
  I1215 13:04:54.694769 21 container_probe.go:1763] Restart count of pod container-probe-6203/liveness-b55d81fe-f5b9-439c-9563-93d9bb44ee74 is now 1 (20.063762242s elapsed)
  STEP: deleting the pod @ 12/15/24 13:04:54.694
  I1215 13:04:54.717654 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6203" for this suite. @ 12/15/24 13:04:54.722
• [22.168 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 12/15/24 13:04:54.733
  I1215 13:04:54.733384 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 13:04:54.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:54.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:54.764
  I1215 13:04:54.821998 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1031" for this suite. @ 12/15/24 13:04:54.825
• [0.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 12/15/24 13:04:54.833
  I1215 13:04:54.833184 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:04:54.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:54.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:54.855
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 13:04:54.858
  STEP: Saw pod success @ 12/15/24 13:04:58.901
  I1215 13:04:58.905050 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-157a9501-a500-4a2a-aae6-21ab063c7dfa container client-container: <nil>
  STEP: delete the pod @ 12/15/24 13:04:58.92
  I1215 13:04:58.951409 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8257" for this suite. @ 12/15/24 13:04:58.955
• [4.133 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 12/15/24 13:04:58.966
  I1215 13:04:58.966188 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 13:04:58.967
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:58.984
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:58.987
  STEP: creating a collection of services @ 12/15/24 13:04:58.991
  I1215 13:04:58.991163 21 service.go:3608] Creating e2e-svc-a-56k7s
  I1215 13:04:59.005656 21 service.go:3608] Creating e2e-svc-b-xsxxd
  I1215 13:04:59.022044 21 service.go:3608] Creating e2e-svc-c-f8mhw
  STEP: deleting service collection @ 12/15/24 13:04:59.045
  I1215 13:04:59.087041 21 service.go:3643] Collection of services has been deleted
  I1215 13:04:59.087185 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1098" for this suite. @ 12/15/24 13:04:59.091
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 12/15/24 13:04:59.1
  I1215 13:04:59.100387 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 13:04:59.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:04:59.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:04:59.127
  STEP: Creating a pod to test substitution in volume subpath @ 12/15/24 13:04:59.131
  STEP: Saw pod success @ 12/15/24 13:05:03.159
  I1215 13:05:03.163176 21 output.go:196] Trying to get logs from node cncf-master-1 pod var-expansion-44cb028a-da86-47c9-9b1f-6066cc599f69 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 13:05:03.17
  I1215 13:05:03.195417 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7854" for this suite. @ 12/15/24 13:05:03.199
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 12/15/24 13:05:03.212
  I1215 13:05:03.212187 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename cronjob @ 12/15/24 13:05:03.213
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:05:03.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:05:03.248
  STEP: Creating a ForbidConcurrent cronjob @ 12/15/24 13:05:03.251
  STEP: Ensuring a job is scheduled @ 12/15/24 13:05:03.264
  STEP: Ensuring exactly one is scheduled @ 12/15/24 13:06:01.269
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 12/15/24 13:06:01.272
  STEP: Ensuring no more jobs are scheduled @ 12/15/24 13:06:01.275
  STEP: Removing cronjob @ 12/15/24 13:06:01.278
  I1215 13:06:01.287200 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1452" for this suite. @ 12/15/24 13:06:01.293
• [58.093 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 12/15/24 13:06:01.305
  I1215 13:06:01.305621 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replication-controller @ 12/15/24 13:06:01.306
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:01.338
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:01.342
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 12/15/24 13:06:01.344
  STEP: When a replication controller with a matching selector is created @ 12/15/24 13:06:03.367
  STEP: Then the orphan pod is adopted @ 12/15/24 13:06:03.379
  I1215 13:06:04.388137 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-7751" for this suite. @ 12/15/24 13:06:04.393
• [3.100 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 12/15/24 13:06:04.406
  I1215 13:06:04.406256 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 13:06:04.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:04.425
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:04.427
  I1215 13:06:04.431109 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-8427 version'
  I1215 13:06:04.511662 21 builder.go:146] stderr: ""
  I1215 13:06:04.511771 21 builder.go:147] stdout: "Client Version: v1.30.4\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.4\n"
  I1215 13:06:04.512617 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8427" for this suite. @ 12/15/24 13:06:04.518
• [0.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 12/15/24 13:06:04.533
  I1215 13:06:04.533500 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 13:06:04.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:04.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:04.572
  STEP: Creating secret with name secret-test-map-8c1af59b-e22c-4f1d-bff7-0c057d7c4676 @ 12/15/24 13:06:04.575
  STEP: Creating a pod to test consume secrets @ 12/15/24 13:06:04.582
  STEP: Saw pod success @ 12/15/24 13:06:08.611
  I1215 13:06:08.614797 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-secrets-1ba45d85-bad2-4c8a-86ae-b8428d17a7cc container secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 13:06:08.621
  I1215 13:06:08.643607 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-131" for this suite. @ 12/15/24 13:06:08.649
• [4.128 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 12/15/24 13:06:08.661
  I1215 13:06:08.661797 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 13:06:08.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:08.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:08.692
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/15/24 13:06:08.695
  STEP: Saw pod success @ 12/15/24 13:06:12.724
  I1215 13:06:12.727760 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-affc76b8-2391-4a19-b4a2-51097896f7c9 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 13:06:12.738
  I1215 13:06:12.773643 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2212" for this suite. @ 12/15/24 13:06:12.777
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 12/15/24 13:06:12.786
  I1215 13:06:12.786552 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename hostport @ 12/15/24 13:06:12.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:12.819
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:12.822
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 12/15/24 13:06:12.832
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.10.60.89 on the node which pod1 resides and expect scheduled @ 12/15/24 13:06:14.857
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.10.60.89 but use UDP protocol on the node which pod2 resides @ 12/15/24 13:06:16.877
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 12/15/24 13:06:22.923
  I1215 13:06:22.923515 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.10.60.89 http://127.0.0.1:54323/hostname] Namespace:hostport-5112 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:06:22.923645 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:06:22.925197 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:06:22.925445 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5112/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.10.60.89+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.10.60.89, port: 54323 @ 12/15/24 13:06:23.015
  I1215 13:06:23.015574 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.10.60.89:54323/hostname] Namespace:hostport-5112 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:06:23.015600 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:06:23.016187 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:06:23.016264 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5112/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.10.60.89%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.10.60.89, port: 54323 UDP @ 12/15/24 13:06:23.099
  I1215 13:06:23.099999 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.10.60.89 54323] Namespace:hostport-5112 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:06:23.100031 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:06:23.100952 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:06:23.101048 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/hostport-5112/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.10.60.89+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I1215 13:06:28.172348 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-5112" for this suite. @ 12/15/24 13:06:28.179
• [15.400 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 12/15/24 13:06:28.187
  I1215 13:06:28.187251 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 13:06:28.188
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:28.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:28.221
  STEP: starting the proxy server @ 12/15/24 13:06:28.227
  I1215 13:06:28.227636 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-303 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 12/15/24 13:06:28.296
  I1215 13:06:28.313144 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I1215 13:06:28.316023 21 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:33455

  I1215 13:06:28.316009 21 kubectl.go:2228] kubectl proxy stderr: W1215 13:06:28.294229    1402 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-303" for this suite. @ 12/15/24 13:06:28.317
• [0.139 seconds]
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 12/15/24 13:06:28.325
  I1215 13:06:28.325755 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/24 13:06:28.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:28.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:28.35
  STEP: Performing setup for networking test in namespace pod-network-test-4998 @ 12/15/24 13:06:28.353
  STEP: creating a selector @ 12/15/24 13:06:28.353
  STEP: Creating the service pods in kubernetes @ 12/15/24 13:06:28.353
  I1215 13:06:28.353746 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/15/24 13:06:50.496
  I1215 13:06:52.540292 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1215 13:06:52.540616 21 utils.go:472] Going to poll 10.0.0.202 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1215 13:06:52.543388 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.0.202 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4998 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:06:52.543500 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:06:52.544507 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:06:52.544644 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4998/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.0.202+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1215 13:06:53.611603 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I1215 13:06:53.611676 21 utils.go:472] Going to poll 10.0.1.28 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1215 13:06:53.616597 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.1.28 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4998 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:06:53.616670 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:06:53.617547 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:06:53.617643 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4998/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.1.28+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1215 13:06:54.689775 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I1215 13:06:54.689839 21 utils.go:472] Going to poll 10.0.2.33 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I1215 13:06:54.697869 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.0.2.33 8081 | grep -v '^\s*$'] Namespace:pod-network-test-4998 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:06:54.698077 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:06:54.699079 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:06:54.699252 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-4998/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.0.2.33+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I1215 13:06:55.766794 21 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I1215 13:06:55.767429 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4998" for this suite. @ 12/15/24 13:06:55.773
• [27.459 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 12/15/24 13:06:55.786
  I1215 13:06:55.786527 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 13:06:55.787
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:55.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:55.81
  I1215 13:06:55.814936 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: creating the pod @ 12/15/24 13:06:55.815
  STEP: submitting the pod to kubernetes @ 12/15/24 13:06:55.815
  I1215 13:06:57.860574 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-9854" for this suite. @ 12/15/24 13:06:57.865
• [2.087 seconds]
------------------------------
SS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 12/15/24 13:06:57.873
  I1215 13:06:57.873448 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename csi-storageclass @ 12/15/24 13:06:57.874
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:57.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:57.907
  STEP: Creating a StorageClass @ 12/15/24 13:06:57.91
  STEP: Get StorageClass "e2e-6h2vt" @ 12/15/24 13:06:57.917
  STEP: Patching the StorageClass "e2e-6h2vt" @ 12/15/24 13:06:57.919
  STEP: Delete StorageClass "e2e-6h2vt" @ 12/15/24 13:06:57.926
  STEP: Confirm deletion of StorageClass "e2e-6h2vt" @ 12/15/24 13:06:57.933
  STEP: Create a replacement StorageClass @ 12/15/24 13:06:57.936
  STEP: Updating StorageClass "e2e-v2-6hxsg" @ 12/15/24 13:06:57.942
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-6hxsg=updated" @ 12/15/24 13:06:57.95
  STEP: Deleting StorageClass "e2e-v2-6hxsg" via DeleteCollection @ 12/15/24 13:06:57.953
  STEP: Confirm deletion of StorageClass "e2e-v2-6hxsg" @ 12/15/24 13:06:57.961
  I1215 13:06:57.963959 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-5120" for this suite. @ 12/15/24 13:06:57.968
• [0.103 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 12/15/24 13:06:57.977
  I1215 13:06:57.977818 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:06:57.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:06:58.008
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:06:58.011
  STEP: Creating configMap with name projected-configmap-test-volume-map-a786c140-94c2-4d24-9b08-8d767f65f32c @ 12/15/24 13:06:58.014
  STEP: Creating a pod to test consume configMaps @ 12/15/24 13:06:58.024
  STEP: Saw pod success @ 12/15/24 13:07:02.051
  I1215 13:07:02.054898 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-configmaps-f5657e2c-73d2-403a-bb5d-33f6eefbbdfb container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 13:07:02.061
  I1215 13:07:02.084844 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6876" for this suite. @ 12/15/24 13:07:02.089
• [4.119 seconds]
------------------------------
SS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 12/15/24 13:07:02.097
  I1215 13:07:02.097625 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename csistoragecapacity @ 12/15/24 13:07:02.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:02.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:02.13
  STEP: getting /apis @ 12/15/24 13:07:02.134
  STEP: getting /apis/storage.k8s.io @ 12/15/24 13:07:02.14
  STEP: getting /apis/storage.k8s.io/v1 @ 12/15/24 13:07:02.141
  STEP: creating @ 12/15/24 13:07:02.142
  STEP: watching @ 12/15/24 13:07:02.167
  I1215 13:07:02.167279 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 12/15/24 13:07:02.175
  STEP: listing in namespace @ 12/15/24 13:07:02.18
  STEP: listing across namespaces @ 12/15/24 13:07:02.183
  STEP: patching @ 12/15/24 13:07:02.185
  STEP: updating @ 12/15/24 13:07:02.193
  I1215 13:07:02.198673 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I1215 13:07:02.198810 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 12/15/24 13:07:02.198
  STEP: deleting a collection @ 12/15/24 13:07:02.221
  I1215 13:07:02.245339 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-5519" for this suite. @ 12/15/24 13:07:02.249
• [0.167 seconds]
------------------------------
S
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 12/15/24 13:07:02.265
  I1215 13:07:02.265221 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 13:07:02.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:02.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:02.307
  I1215 13:07:02.310574 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I1215 13:07:02.347010 21 deployment.go:222] deployment "test-new-deployment" doesn't have the required revision set
  STEP: getting scale subresource @ 12/15/24 13:07:04.364
  STEP: updating a scale subresource @ 12/15/24 13:07:04.366
  STEP: verifying the deployment Spec.Replicas was modified @ 12/15/24 13:07:04.379
  STEP: Patch a scale subresource @ 12/15/24 13:07:04.382
  I1215 13:07:04.419474 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7456",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "90bd069e-5468-4140-b164-42c46573b116",
      ResourceVersion: (string) (len=7) "5412967",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869864822,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1215 13:07:04.442172 21 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7456",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2d00f9db-6490-45fd-996d-342d603122a7",
      ResourceVersion: (string) (len=7) "5412973",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869864822,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "4",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "5",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "90bd069e-5468-4140-b164-42c46573b116",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 30 62 64 30 36  39 65 2d 35 34 36 38 2d  |\"90bd069e-5468-|
              00000120  34 31 34 30 2d 62 31 36  34 2d 34 32 63 34 36 35  |4140-b164-42c465|
              00000130  37 33 62 31 31 36 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |73b116\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(4),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 13:07:04.457121 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-9ksr4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-9ksr4",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-7456",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4f623c67-69fa-4525-9106-5ca6683e84ed",
      ResourceVersion: (string) (len=7) "5412972",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869864824,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "2d00f9db-6490-45fd-996d-342d603122a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 64  30 30 66 39 64 62 2d 36  |d\":\"2d00f9db-6|
              00000090  34 39 30 2d 34 35 66 64  2d 39 39 36 64 2d 33 34  |490-45fd-996d-34|
              000000a0  32 64 36 30 33 31 32 32  61 37 5c 22 7d 22 3a 7b  |2d603122a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-r9xbd",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-r9xbd",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-2",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864824,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 13:07:04.459092 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-ggbs5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-ggbs5",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-7456",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9524242-abae-4bea-9ce8-7070717e4740",
      ResourceVersion: (string) (len=7) "5412952",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869864822,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "2d00f9db-6490-45fd-996d-342d603122a7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 64  30 30 66 39 64 62 2d 36  |d\":\"2d00f9db-6|
              00000090  34 39 30 2d 34 35 66 64  2d 39 39 36 64 2d 33 34  |490-45fd-996d-34|
              000000a0  32 64 36 30 33 31 32 32  61 37 5c 22 7d 22 3a 7b  |2d603122a7\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 32 31 36  5c 22 7d 22 3a 7b 22 2e  |.0.0.216\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2xpzf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2xpzf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864823,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869864822,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=10) "10.0.0.216",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.0.216"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869864822,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869864823,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=77) "containerd://685b5e52e15c9ff73c9fa98b7209ad61cbf6d19f4ac9cf4dd7d4261e015306ec",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 13:07:04.462487 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7456" for this suite. @ 12/15/24 13:07:04.485
• [2.253 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 12/15/24 13:07:04.518
  I1215 13:07:04.518978 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 13:07:04.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:04.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:04.566
  STEP: Creating the pod @ 12/15/24 13:07:04.572
  I1215 13:07:07.129500 21 pod_client.go:141] Successfully updated pod "labelsupdate31747f86-8dab-4df2-80c3-b2be923f8b3a"
  I1215 13:07:09.159323 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9880" for this suite. @ 12/15/24 13:07:09.163
• [4.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 12/15/24 13:07:09.172
  I1215 13:07:09.172349 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename sched-pred @ 12/15/24 13:07:09.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:09.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:09.207
  I1215 13:07:09.210618 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I1215 13:07:09.218436 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I1215 13:07:09.221513 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-1 before test
  I1215 13:07:09.240357 21 predicates.go:887] oauth2-proxy-admin-797dfb87d4-xd2lt from auth started at 2024-12-15 13:00:03 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.240517 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 0
  I1215 13:07:09.240575 21 predicates.go:887] redis-cluster-maintenance-cronjob-28904460-m6bl5 from auth started at 2024-12-15 13:00:00 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.240621 21 predicates.go:889] 	Container redis-cluster-check ready: false, restart count 0
  I1215 13:07:09.240697 21 predicates.go:887] mariadb-backup-cronjob-28904460-k7s5d from dataplatform started at 2024-12-15 13:00:00 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.240788 21 predicates.go:889] 	Container mariadb-backup-cronjob ready: false, restart count 0
  I1215 13:07:09.240841 21 predicates.go:887] vault-unsealer-28904460-fg29p from dataplatform started at 2024-12-15 13:00:00 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.240906 21 predicates.go:889] 	Container unsealer ready: false, restart count 0
  I1215 13:07:09.241108 21 predicates.go:887] test-new-deployment-77db57d8df-ggbs5 from deployment-7456 started at 2024-12-15 13:07:02 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.241163 21 predicates.go:889] 	Container httpd ready: true, restart count 0
  I1215 13:07:09.241212 21 predicates.go:887] test-new-deployment-77db57d8df-sgpql from deployment-7456 started at 2024-12-15 13:07:04 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.241257 21 predicates.go:889] 	Container httpd ready: false, restart count 0
  I1215 13:07:09.241331 21 predicates.go:887] labelsupdate31747f86-8dab-4df2-80c3-b2be923f8b3a from downward-api-9880 started at 2024-12-15 13:07:04 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.241428 21 predicates.go:889] 	Container client-container ready: true, restart count 0
  I1215 13:07:09.241566 21 predicates.go:887] cilium-n8zrz from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.241608 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 13:07:09.241688 21 predicates.go:887] cilium-operator-64664858c8-nxfhd from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.241731 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 13:07:09.241778 21 predicates.go:887] kube-apiserver-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.241832 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 13:07:09.241994 21 predicates.go:887] kube-controller-manager-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.242067 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 13:07:09.242119 21 predicates.go:887] kube-proxy-nwc8x from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.242164 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 13:07:09.242199 21 predicates.go:887] kube-scheduler-cncf-master-1 from kube-system started at 2024-12-15 10:57:22 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.242243 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 13:07:09.242281 21 predicates.go:887] pod-logs-websocket-bc80233a-e317-494c-8ed6-fbdda7255ef2 from pods-9854 started at 2024-12-15 13:06:55 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.242349 21 predicates.go:889] 	Container main ready: true, restart count 0
  I1215 13:07:09.242419 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-12-15 11:48:01 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.242560 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I1215 13:07:09.242607 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-jlphr from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.242639 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 13:07:09.242712 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 13:07:09.242793 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-2 before test
  I1215 13:07:09.263055 21 predicates.go:887] keycloak-846b587bd-gf8fz from auth started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263105 21 predicates.go:889] 	Container keycloak ready: true, restart count 0
  I1215 13:07:09.263115 21 predicates.go:887] oauth2-redis-admin-2 from auth started at 2024-12-15 12:45:08 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263122 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 13:07:09.263130 21 predicates.go:887] oauth2-redis-admin-3 from auth started at 2024-12-15 11:36:50 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263136 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 13:07:09.263145 21 predicates.go:887] oauth2-redis-admin-5 from auth started at 2024-12-15 11:37:10 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263150 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 13:07:09.263157 21 predicates.go:887] cloud-service-api-57f54bfb54-d5ns6 from cmp started at 2024-12-15 12:45:06 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263162 21 predicates.go:889] 	Container cloud-service-api ready: true, restart count 0
  I1215 13:07:09.263172 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.263178 21 predicates.go:887] maestro-common-api-85ff5d9f5b-pbqbq from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263185 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.263190 21 predicates.go:889] 	Container maestro-common-api ready: true, restart count 0
  I1215 13:07:09.263198 21 predicates.go:887] maestro-host-app-5cd79d5b8c-hnj5b from cmp started at 2024-12-15 12:45:06 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263203 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.263210 21 predicates.go:889] 	Container maestro-host-app ready: true, restart count 0
  I1215 13:07:09.263217 21 predicates.go:887] notification-adapter-api-5cf9dbf5f6-ptnnd from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263222 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.263228 21 predicates.go:889] 	Container noti-api ready: true, restart count 0
  I1215 13:07:09.263234 21 predicates.go:887] mariadb-maxscale-f58d897f7-46j52 from dataplatform started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263240 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 13:07:09.263248 21 predicates.go:887] mariadb-sts-1 from dataplatform started at 2024-12-15 11:38:49 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263253 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 13:07:09.263266 21 predicates.go:887] my-cluster-entity-operator-5685c69c9c-w2rp4 from dataplatform started at 2024-12-15 11:43:40 +0000 UTC (3 container statuses recorded)
  I1215 13:07:09.263271 21 predicates.go:889] 	Container tls-sidecar ready: true, restart count 0
  I1215 13:07:09.263276 21 predicates.go:889] 	Container topic-operator ready: true, restart count 0
  I1215 13:07:09.263281 21 predicates.go:889] 	Container user-operator ready: true, restart count 0
  I1215 13:07:09.263289 21 predicates.go:887] my-cluster-kafka-0 from dataplatform started at 2024-12-15 12:45:10 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263295 21 predicates.go:889] 	Container kafka ready: true, restart count 0
  I1215 13:07:09.263301 21 predicates.go:887] my-cluster-kafka-1 from dataplatform started at 2024-12-15 11:41:34 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263306 21 predicates.go:889] 	Container kafka ready: true, restart count 2
  I1215 13:07:09.263313 21 predicates.go:887] my-cluster-zookeeper-0 from dataplatform started at 2024-12-15 11:41:45 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263318 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 13:07:09.263324 21 predicates.go:887] strimzi-cluster-operator-698dc7549d-tj5s6 from dataplatform started at 2024-12-15 12:10:15 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263364 21 predicates.go:889] 	Container strimzi-cluster-operator ready: true, restart count 0
  I1215 13:07:09.263375 21 predicates.go:887] vault-1 from dataplatform started at 2024-12-15 11:34:41 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263383 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 13:07:09.263510 21 predicates.go:887] vault-2 from dataplatform started at 2024-12-15 12:45:13 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263522 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 13:07:09.263529 21 predicates.go:887] test-new-deployment-77db57d8df-9ksr4 from deployment-7456 started at 2024-12-15 13:07:04 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263535 21 predicates.go:889] 	Container httpd ready: false, restart count 0
  I1215 13:07:09.263541 21 predicates.go:887] cilium-78qk5 from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263547 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 13:07:09.263553 21 predicates.go:887] coredns-776bb9db5d-6fcp7 from kube-system started at 2024-12-15 11:33:49 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263563 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 13:07:09.263569 21 predicates.go:887] kube-apiserver-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263590 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 1
  I1215 13:07:09.263597 21 predicates.go:887] kube-controller-manager-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263602 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 13:07:09.263609 21 predicates.go:887] kube-proxy-zmqc8 from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263614 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 13:07:09.263620 21 predicates.go:887] kube-scheduler-cncf-master-2 from kube-system started at 2024-12-15 10:58:22 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.263625 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 13:07:09.263632 21 predicates.go:887] sonobuoy-e2e-job-37381f2984c64bf4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263637 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I1215 13:07:09.263642 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 13:07:09.263649 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-xhsgf from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263654 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 13:07:09.263659 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I1215 13:07:09.263759 21 predicates.go:887] contrabass-api-567f74fcd-hpbfs from viola started at 2024-12-15 11:40:51 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263766 21 predicates.go:889] 	Container contrabass-api ready: true, restart count 0
  I1215 13:07:09.263771 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.263778 21 predicates.go:887] viola-api-5bb88dfd5c-v9pxd from viola started at 2024-12-15 11:41:06 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263783 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.263788 21 predicates.go:889] 	Container viola-api ready: true, restart count 0
  I1215 13:07:09.263794 21 predicates.go:887] viola-remote-app-79bd8cf4dc-khsxs from viola started at 2024-12-15 11:41:16 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.263799 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.263805 21 predicates.go:889] 	Container viola-remote-app ready: true, restart count 0
  I1215 13:07:09.263823 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node cncf-master-3 before test
  I1215 13:07:09.283274 21 predicates.go:887] keycloak-846b587bd-qr4xk from auth started at 2024-12-15 11:35:14 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283336 21 predicates.go:889] 	Container keycloak ready: true, restart count 2
  I1215 13:07:09.283351 21 predicates.go:887] mariadb-keycloak-0 from auth started at 2024-12-15 11:35:52 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283361 21 predicates.go:889] 	Container mariadb-keycloak ready: true, restart count 0
  I1215 13:07:09.283371 21 predicates.go:887] oauth2-proxy-admin-797dfb87d4-9lz5z from auth started at 2024-12-15 13:00:04 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283377 21 predicates.go:889] 	Container oauth2-proxy-admin ready: true, restart count 0
  I1215 13:07:09.283384 21 predicates.go:887] oauth2-redis-admin-0 from auth started at 2024-12-15 11:36:30 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283390 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 13:07:09.283396 21 predicates.go:887] oauth2-redis-admin-1 from auth started at 2024-12-15 11:36:32 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283402 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 13:07:09.283409 21 predicates.go:887] oauth2-redis-admin-4 from auth started at 2024-12-15 12:45:11 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283415 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 13:07:09.283470 21 predicates.go:887] cloud-service-collector-6f4b74fdfb-mpdbx from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.283476 21 predicates.go:889] 	Container cloud-service-collector ready: true, restart count 0
  I1215 13:07:09.283486 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.283493 21 predicates.go:887] maestro-auth-gateway-6cbd44676b-rvrdl from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.283499 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.283504 21 predicates.go:889] 	Container maestro-auth-gateway ready: true, restart count 0
  I1215 13:07:09.283511 21 predicates.go:887] maestro-event-pusher-65b595dc6-v869s from cmp started at 2024-12-15 11:37:40 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.283536 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.283542 21 predicates.go:889] 	Container maestro-event-pusher ready: true, restart count 1
  I1215 13:07:09.283565 21 predicates.go:887] maestro-iam-adapter-api-77f4d875b5-9vh4z from cmp started at 2024-12-15 12:45:06 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.283571 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.283577 21 predicates.go:889] 	Container maestro-iam-adapter-api ready: true, restart count 0
  I1215 13:07:09.283608 21 predicates.go:887] maestro-remote-app-769bc9cff9-kgdd5 from cmp started at 2024-12-15 11:37:41 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.283614 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.283622 21 predicates.go:889] 	Container maestro-remote-app ready: true, restart count 0
  I1215 13:07:09.283629 21 predicates.go:887] mariadb-maxscale-f58d897f7-bfh7f from dataplatform started at 2024-12-15 11:38:45 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283636 21 predicates.go:889] 	Container maxscale ready: true, restart count 0
  I1215 13:07:09.283642 21 predicates.go:887] mariadb-sts-0 from dataplatform started at 2024-12-15 12:45:08 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283650 21 predicates.go:889] 	Container mariadb ready: true, restart count 0
  I1215 13:07:09.283656 21 predicates.go:887] my-cluster-kafka-2 from dataplatform started at 2024-12-15 11:40:09 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283695 21 predicates.go:889] 	Container kafka ready: true, restart count 4
  I1215 13:07:09.283705 21 predicates.go:887] my-cluster-zookeeper-1 from dataplatform started at 2024-12-15 11:41:46 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283713 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 13:07:09.283725 21 predicates.go:887] my-cluster-zookeeper-2 from dataplatform started at 2024-12-15 12:45:08 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283730 21 predicates.go:889] 	Container zookeeper ready: true, restart count 0
  I1215 13:07:09.283740 21 predicates.go:887] redis-0 from dataplatform started at 2024-12-15 12:45:07 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283748 21 predicates.go:889] 	Container redis ready: true, restart count 0
  I1215 13:07:09.283776 21 predicates.go:887] vault-0 from dataplatform started at 2024-12-15 11:36:43 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283782 21 predicates.go:889] 	Container vault ready: true, restart count 0
  I1215 13:07:09.283789 21 predicates.go:887] nfs-client-provisioner-5d85d7bdcf-7gdx4 from default started at 2024-12-15 11:34:15 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283794 21 predicates.go:889] 	Container nfs-client-provisioner ready: true, restart count 0
  I1215 13:07:09.283801 21 predicates.go:887] nginx-pod from default started at 2024-12-15 10:52:29 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283807 21 predicates.go:889] 	Container nginx ready: true, restart count 0
  I1215 13:07:09.283831 21 predicates.go:887] test-new-deployment-77db57d8df-pg97k from deployment-7456 started at 2024-12-15 13:07:04 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283842 21 predicates.go:889] 	Container httpd ready: false, restart count 0
  I1215 13:07:09.283851 21 predicates.go:887] ingress-nginx-controller-7d4db76476-8nsf6 from ingress-nginx started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283857 21 predicates.go:889] 	Container controller ready: true, restart count 0
  I1215 13:07:09.283868 21 predicates.go:887] istio-gateway-67c8555b98-22b98 from istio-system started at 2024-12-15 11:34:03 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283878 21 predicates.go:889] 	Container istio-proxy ready: true, restart count 0
  I1215 13:07:09.283888 21 predicates.go:887] istiod-66c776b765-bdcx2 from istio-system started at 2024-12-15 11:33:53 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283907 21 predicates.go:889] 	Container discovery ready: true, restart count 0
  I1215 13:07:09.283914 21 predicates.go:887] cilium-operator-64664858c8-rr65m from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283919 21 predicates.go:889] 	Container cilium-operator ready: true, restart count 0
  I1215 13:07:09.283945 21 predicates.go:887] cilium-zl6bh from kube-system started at 2024-12-15 10:50:47 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.283951 21 predicates.go:889] 	Container cilium-agent ready: true, restart count 0
  I1215 13:07:09.283998 21 predicates.go:887] coredns-776bb9db5d-mbxjb from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.284018 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I1215 13:07:09.284024 21 predicates.go:887] dns-autoscaler-6ffb84bd6-hht9v from kube-system started at 2024-12-15 11:33:44 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.284030 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I1215 13:07:09.284036 21 predicates.go:887] kube-apiserver-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.284041 21 predicates.go:889] 	Container kube-apiserver ready: true, restart count 2
  I1215 13:07:09.284047 21 predicates.go:887] kube-controller-manager-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.284056 21 predicates.go:889] 	Container kube-controller-manager ready: true, restart count 2
  I1215 13:07:09.284062 21 predicates.go:887] kube-proxy-mxh4s from kube-system started at 2024-12-15 10:55:19 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.284070 21 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I1215 13:07:09.284080 21 predicates.go:887] kube-scheduler-cncf-master-3 from kube-system started at 2024-12-15 11:12:29 +0000 UTC (1 container statuses recorded)
  I1215 13:07:09.284087 21 predicates.go:889] 	Container kube-scheduler ready: true, restart count 1
  I1215 13:07:09.284096 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-dhdt4 from sonobuoy started at 2024-12-15 11:48:02 +0000 UTC (2 container statuses recorded)
  I1215 13:07:09.284103 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I1215 13:07:09.284110 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node cncf-master-1 @ 12/15/24 13:07:09.325
  STEP: verifying the node has the label node cncf-master-2 @ 12/15/24 13:07:09.352
  STEP: verifying the node has the label node cncf-master-3 @ 12/15/24 13:07:09.376
  I1215 13:07:09.432938 21 predicates.go:374] Pod keycloak-846b587bd-gf8fz requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.432988 21 predicates.go:374] Pod keycloak-846b587bd-qr4xk requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.432998 21 predicates.go:374] Pod mariadb-keycloak-0 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433005 21 predicates.go:374] Pod oauth2-proxy-admin-797dfb87d4-9lz5z requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433017 21 predicates.go:374] Pod oauth2-proxy-admin-797dfb87d4-xd2lt requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433024 21 predicates.go:374] Pod oauth2-redis-admin-0 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433033 21 predicates.go:374] Pod oauth2-redis-admin-1 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433043 21 predicates.go:374] Pod oauth2-redis-admin-2 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433050 21 predicates.go:374] Pod oauth2-redis-admin-3 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433056 21 predicates.go:374] Pod oauth2-redis-admin-4 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433066 21 predicates.go:374] Pod oauth2-redis-admin-5 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433074 21 predicates.go:374] Pod cloud-service-api-57f54bfb54-d5ns6 requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.433085 21 predicates.go:374] Pod cloud-service-collector-6f4b74fdfb-mpdbx requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433092 21 predicates.go:374] Pod maestro-auth-gateway-6cbd44676b-rvrdl requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433104 21 predicates.go:374] Pod maestro-common-api-85ff5d9f5b-pbqbq requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.433113 21 predicates.go:374] Pod maestro-event-pusher-65b595dc6-v869s requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433121 21 predicates.go:374] Pod maestro-host-app-5cd79d5b8c-hnj5b requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.433128 21 predicates.go:374] Pod maestro-iam-adapter-api-77f4d875b5-9vh4z requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433137 21 predicates.go:374] Pod maestro-remote-app-769bc9cff9-kgdd5 requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433144 21 predicates.go:374] Pod notification-adapter-api-5cf9dbf5f6-ptnnd requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.433151 21 predicates.go:374] Pod mariadb-maxscale-f58d897f7-46j52 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433162 21 predicates.go:374] Pod mariadb-maxscale-f58d897f7-bfh7f requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433168 21 predicates.go:374] Pod mariadb-sts-0 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433175 21 predicates.go:374] Pod mariadb-sts-1 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433184 21 predicates.go:374] Pod my-cluster-entity-operator-5685c69c9c-w2rp4 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433192 21 predicates.go:374] Pod my-cluster-kafka-0 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433204 21 predicates.go:374] Pod my-cluster-kafka-1 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433243 21 predicates.go:374] Pod my-cluster-kafka-2 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433253 21 predicates.go:374] Pod my-cluster-zookeeper-0 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433296 21 predicates.go:374] Pod my-cluster-zookeeper-1 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433308 21 predicates.go:374] Pod my-cluster-zookeeper-2 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433330 21 predicates.go:374] Pod redis-0 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433422 21 predicates.go:374] Pod strimzi-cluster-operator-698dc7549d-tj5s6 requesting resource cpu=200m on Node cncf-master-2
  I1215 13:07:09.433436 21 predicates.go:374] Pod vault-0 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433443 21 predicates.go:374] Pod vault-1 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433453 21 predicates.go:374] Pod vault-2 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433492 21 predicates.go:374] Pod nfs-client-provisioner-5d85d7bdcf-7gdx4 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433510 21 predicates.go:374] Pod nginx-pod requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433520 21 predicates.go:374] Pod test-new-deployment-77db57d8df-9ksr4 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433583 21 predicates.go:374] Pod test-new-deployment-77db57d8df-ggbs5 requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433591 21 predicates.go:374] Pod test-new-deployment-77db57d8df-pg97k requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433631 21 predicates.go:374] Pod test-new-deployment-77db57d8df-sgpql requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433639 21 predicates.go:374] Pod labelsupdate31747f86-8dab-4df2-80c3-b2be923f8b3a requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433673 21 predicates.go:374] Pod ingress-nginx-controller-7d4db76476-8nsf6 requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433686 21 predicates.go:374] Pod istio-gateway-67c8555b98-22b98 requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433694 21 predicates.go:374] Pod istiod-66c776b765-bdcx2 requesting resource cpu=500m on Node cncf-master-3
  I1215 13:07:09.433743 21 predicates.go:374] Pod cilium-78qk5 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433751 21 predicates.go:374] Pod cilium-n8zrz requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433758 21 predicates.go:374] Pod cilium-operator-64664858c8-nxfhd requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433832 21 predicates.go:374] Pod cilium-operator-64664858c8-rr65m requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433840 21 predicates.go:374] Pod cilium-zl6bh requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433851 21 predicates.go:374] Pod coredns-776bb9db5d-6fcp7 requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.433862 21 predicates.go:374] Pod coredns-776bb9db5d-mbxjb requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433869 21 predicates.go:374] Pod dns-autoscaler-6ffb84bd6-hht9v requesting resource cpu=20m on Node cncf-master-3
  I1215 13:07:09.433876 21 predicates.go:374] Pod kube-apiserver-cncf-master-1 requesting resource cpu=250m on Node cncf-master-1
  I1215 13:07:09.433886 21 predicates.go:374] Pod kube-apiserver-cncf-master-2 requesting resource cpu=250m on Node cncf-master-2
  I1215 13:07:09.433893 21 predicates.go:374] Pod kube-apiserver-cncf-master-3 requesting resource cpu=250m on Node cncf-master-3
  I1215 13:07:09.433900 21 predicates.go:374] Pod kube-controller-manager-cncf-master-1 requesting resource cpu=200m on Node cncf-master-1
  I1215 13:07:09.433910 21 predicates.go:374] Pod kube-controller-manager-cncf-master-2 requesting resource cpu=200m on Node cncf-master-2
  I1215 13:07:09.433917 21 predicates.go:374] Pod kube-controller-manager-cncf-master-3 requesting resource cpu=200m on Node cncf-master-3
  I1215 13:07:09.433928 21 predicates.go:374] Pod kube-proxy-mxh4s requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.433934 21 predicates.go:374] Pod kube-proxy-nwc8x requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433941 21 predicates.go:374] Pod kube-proxy-zmqc8 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.433951 21 predicates.go:374] Pod kube-scheduler-cncf-master-1 requesting resource cpu=100m on Node cncf-master-1
  I1215 13:07:09.433961 21 predicates.go:374] Pod kube-scheduler-cncf-master-2 requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.433967 21 predicates.go:374] Pod kube-scheduler-cncf-master-3 requesting resource cpu=100m on Node cncf-master-3
  I1215 13:07:09.433976 21 predicates.go:374] Pod pod-logs-websocket-bc80233a-e317-494c-8ed6-fbdda7255ef2 requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433990 21 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.433997 21 predicates.go:374] Pod sonobuoy-e2e-job-37381f2984c64bf4 requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.434006 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-dhdt4 requesting resource cpu=0m on Node cncf-master-3
  I1215 13:07:09.434013 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-jlphr requesting resource cpu=0m on Node cncf-master-1
  I1215 13:07:09.434019 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-0d9a74592f7f433b-xhsgf requesting resource cpu=0m on Node cncf-master-2
  I1215 13:07:09.434029 21 predicates.go:374] Pod contrabass-api-567f74fcd-hpbfs requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.434040 21 predicates.go:374] Pod viola-api-5bb88dfd5c-v9pxd requesting resource cpu=100m on Node cncf-master-2
  I1215 13:07:09.434049 21 predicates.go:374] Pod viola-remote-app-79bd8cf4dc-khsxs requesting resource cpu=100m on Node cncf-master-2
  STEP: Starting Pods to consume most of the cluster CPU. @ 12/15/24 13:07:09.434
  I1215 13:07:09.434105 21 predicates.go:384] Creating a pod which consumes cpu=5075m on Node cncf-master-1
  I1215 13:07:09.454276 21 predicates.go:384] Creating a pod which consumes cpu=4375m on Node cncf-master-2
  I1215 13:07:09.463913 21 predicates.go:384] Creating a pod which consumes cpu=4151m on Node cncf-master-3
  STEP: Creating another pod that requires unavailable amount of CPU. @ 12/15/24 13:07:11.511
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-37b88d55-1e64-44ca-a590-89b5f1c03a99.18115b9591e6418b], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6023/filler-pod-37b88d55-1e64-44ca-a590-89b5f1c03a99 to cncf-master-2] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-37b88d55-1e64-44ca-a590-89b5f1c03a99.18115b95bfbbcbab], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-37b88d55-1e64-44ca-a590-89b5f1c03a99.18115b95c2f73d8f], Reason = [Created], Message = [Created container filler-pod-37b88d55-1e64-44ca-a590-89b5f1c03a99] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-37b88d55-1e64-44ca-a590-89b5f1c03a99.18115b95c7b84ef5], Reason = [Started], Message = [Started container filler-pod-37b88d55-1e64-44ca-a590-89b5f1c03a99] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c33efa54-972a-4a15-a918-e2e5afcd6ff1.18115b95916d6b7d], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6023/filler-pod-c33efa54-972a-4a15-a918-e2e5afcd6ff1 to cncf-master-1] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c33efa54-972a-4a15-a918-e2e5afcd6ff1.18115b95c062d51a], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c33efa54-972a-4a15-a918-e2e5afcd6ff1.18115b95c4d8d753], Reason = [Created], Message = [Created container filler-pod-c33efa54-972a-4a15-a918-e2e5afcd6ff1] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-c33efa54-972a-4a15-a918-e2e5afcd6ff1.18115b95ca513e1a], Reason = [Started], Message = [Started container filler-pod-c33efa54-972a-4a15-a918-e2e5afcd6ff1] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cffd7b00-74bb-4845-a758-89cfc448af7e.18115b9592f614d2], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6023/filler-pod-cffd7b00-74bb-4845-a758-89cfc448af7e to cncf-master-3] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cffd7b00-74bb-4845-a758-89cfc448af7e.18115b95c0a404b7], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cffd7b00-74bb-4845-a758-89cfc448af7e.18115b95c33d7956], Reason = [Created], Message = [Created container filler-pod-cffd7b00-74bb-4845-a758-89cfc448af7e] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-cffd7b00-74bb-4845-a758-89cfc448af7e.18115b95c9cd573e], Reason = [Started], Message = [Started container filler-pod-cffd7b00-74bb-4845-a758-89cfc448af7e] @ 12/15/24 13:07:11.515
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.18115b960c0b12dc], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 12/15/24 13:07:11.556
  STEP: removing the label node off the node cncf-master-1 @ 12/15/24 13:07:12.536
  STEP: verifying the node doesn't have the label node @ 12/15/24 13:07:12.552
  STEP: removing the label node off the node cncf-master-2 @ 12/15/24 13:07:12.556
  STEP: verifying the node doesn't have the label node @ 12/15/24 13:07:12.573
  STEP: removing the label node off the node cncf-master-3 @ 12/15/24 13:07:12.577
  STEP: verifying the node doesn't have the label node @ 12/15/24 13:07:12.594
  I1215 13:07:12.598530 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6023" for this suite. @ 12/15/24 13:07:12.609
• [3.453 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 12/15/24 13:07:12.625
  I1215 13:07:12.625149 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 13:07:12.626
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:12.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:12.655
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 12/15/24 13:07:12.658
  I1215 13:07:12.658983 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4732 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I1215 13:07:12.745504 21 builder.go:146] stderr: ""
  I1215 13:07:12.745567 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 12/15/24 13:07:12.745
  I1215 13:07:12.749767 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4732 delete pods e2e-test-httpd-pod'
  I1215 13:07:14.320445 21 builder.go:146] stderr: ""
  I1215 13:07:14.320509 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I1215 13:07:14.320737 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4732" for this suite. @ 12/15/24 13:07:14.326
• [1.713 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 12/15/24 13:07:14.338
  I1215 13:07:14.338307 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename proxy @ 12/15/24 13:07:14.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:14.362
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:14.365
  I1215 13:07:14.370318 21 proxy.go:293] Creating pod...
  I1215 13:07:16.386997 21 proxy.go:317] Creating service...
  I1215 13:07:16.399835 21 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/pods/agnhost/proxy/some/path/with/DELETE
  I1215 13:07:16.405091 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1215 13:07:16.405132 21 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/pods/agnhost/proxy/some/path/with/GET
  I1215 13:07:16.411421 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1215 13:07:16.411472 21 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/pods/agnhost/proxy/some/path/with/HEAD
  I1215 13:07:16.423677 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1215 13:07:16.423721 21 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/pods/agnhost/proxy/some/path/with/OPTIONS
  I1215 13:07:16.427126 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1215 13:07:16.427185 21 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/pods/agnhost/proxy/some/path/with/PATCH
  I1215 13:07:16.430485 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1215 13:07:16.430530 21 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/pods/agnhost/proxy/some/path/with/POST
  I1215 13:07:16.433511 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1215 13:07:16.433545 21 proxy.go:354] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/pods/agnhost/proxy/some/path/with/PUT
  I1215 13:07:16.436270 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1215 13:07:16.436316 21 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/services/test-service/proxy/some/path/with/DELETE
  I1215 13:07:16.440197 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1215 13:07:16.440226 21 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/services/test-service/proxy/some/path/with/GET
  I1215 13:07:16.443833 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I1215 13:07:16.443875 21 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/services/test-service/proxy/some/path/with/HEAD
  I1215 13:07:16.448882 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I1215 13:07:16.449020 21 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/services/test-service/proxy/some/path/with/OPTIONS
  I1215 13:07:16.454818 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1215 13:07:16.454868 21 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/services/test-service/proxy/some/path/with/PATCH
  I1215 13:07:16.459524 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1215 13:07:16.459573 21 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/services/test-service/proxy/some/path/with/POST
  I1215 13:07:16.468308 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1215 13:07:16.468370 21 proxy.go:365] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-7274/services/test-service/proxy/some/path/with/PUT
  I1215 13:07:16.473073 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1215 13:07:16.473204 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7274" for this suite. @ 12/15/24 13:07:16.477
• [2.148 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 12/15/24 13:07:16.486
  I1215 13:07:16.486948 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename daemonsets @ 12/15/24 13:07:16.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:16.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:16.514
  STEP: Creating simple DaemonSet "daemon-set" @ 12/15/24 13:07:16.549
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/24 13:07:16.576
  I1215 13:07:16.595510 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:07:16.595595 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 13:07:17.587243 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:07:17.587291 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 13:07:18.583833 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 13:07:18.583909 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 12/15/24 13:07:18.587
  I1215 13:07:18.628608 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 13:07:18.628667 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:07:19.634637 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 13:07:19.634679 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:07:20.630503 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 13:07:20.630568 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:07:21.633048 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I1215 13:07:21.634029 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:07:22.629184 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 13:07:22.629526 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/24 13:07:22.632
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1377, will wait for the garbage collector to delete the pods @ 12/15/24 13:07:22.632
  I1215 13:07:22.694391 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.943773ms
  I1215 13:07:22.795250 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.815973ms
  I1215 13:07:24.501252 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:07:24.501336 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1215 13:07:24.504903 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5413390"},"items":null}

  I1215 13:07:24.509918 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5413390"},"items":null}

  I1215 13:07:24.522263 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1377" for this suite. @ 12/15/24 13:07:24.532
• [8.053 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 12/15/24 13:07:24.54
  I1215 13:07:24.541041 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename gc @ 12/15/24 13:07:24.541
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:24.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:24.572
  STEP: create the rc1 @ 12/15/24 13:07:24.587
  STEP: create the rc2 @ 12/15/24 13:07:24.596
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 12/15/24 13:07:30.608
  STEP: delete the rc simpletest-rc-to-be-deleted @ 12/15/24 13:07:31.241
  STEP: wait for the rc to be deleted @ 12/15/24 13:07:31.252
  I1215 13:07:36.271508 21 garbage_collector.go:762] 100 pods remaining
  I1215 13:07:36.271564 21 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I1215 13:07:36.271576 21 garbage_collector.go:770] 
  I1215 13:07:41.272418 21 garbage_collector.go:762] 87 pods remaining
  I1215 13:07:41.272489 21 garbage_collector.go:769] 50 pods has nil DeletionTimestamp
  I1215 13:07:41.272500 21 garbage_collector.go:770] 
  STEP: Gathering metrics @ 12/15/24 13:07:46.271
  I1215 13:07:46.381272 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1215 13:07:46.381363 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27tc6" in namespace "gc-5909"
  I1215 13:07:46.407010 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2f57v" in namespace "gc-5909"
  I1215 13:07:46.429619 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2gcjf" in namespace "gc-5909"
  I1215 13:07:46.456349 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-456qs" in namespace "gc-5909"
  I1215 13:07:46.489273 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-48gg8" in namespace "gc-5909"
  I1215 13:07:46.513016 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4hcjq" in namespace "gc-5909"
  I1215 13:07:46.559768 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4kk2c" in namespace "gc-5909"
  I1215 13:07:46.603580 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4kp95" in namespace "gc-5909"
  I1215 13:07:46.653926 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5h4hb" in namespace "gc-5909"
  I1215 13:07:46.688786 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6d9cv" in namespace "gc-5909"
  I1215 13:07:46.732967 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6v8kl" in namespace "gc-5909"
  I1215 13:07:46.766138 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-772t7" in namespace "gc-5909"
  I1215 13:07:46.803823 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7bjhx" in namespace "gc-5909"
  I1215 13:07:46.842017 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7km4n" in namespace "gc-5909"
  I1215 13:07:46.884979 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8clh8" in namespace "gc-5909"
  I1215 13:07:46.906920 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8mzgt" in namespace "gc-5909"
  I1215 13:07:46.943439 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8vcz7" in namespace "gc-5909"
  I1215 13:07:46.982264 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ffj2" in namespace "gc-5909"
  I1215 13:07:47.018437 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9h8sl" in namespace "gc-5909"
  I1215 13:07:47.037423 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9hzfh" in namespace "gc-5909"
  I1215 13:07:47.074800 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9rrts" in namespace "gc-5909"
  I1215 13:07:47.111076 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b2fgc" in namespace "gc-5909"
  I1215 13:07:47.139312 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bngwf" in namespace "gc-5909"
  I1215 13:07:47.171859 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqf6k" in namespace "gc-5909"
  I1215 13:07:47.214031 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bqfmp" in namespace "gc-5909"
  I1215 13:07:47.255507 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bx4xr" in namespace "gc-5909"
  I1215 13:07:47.296075 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c2pxv" in namespace "gc-5909"
  I1215 13:07:47.323527 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c4dn6" in namespace "gc-5909"
  I1215 13:07:47.343306 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cq6g7" in namespace "gc-5909"
  I1215 13:07:47.399483 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dsnpc" in namespace "gc-5909"
  I1215 13:07:47.428841 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-f76sl" in namespace "gc-5909"
  I1215 13:07:47.486038 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ftt9d" in namespace "gc-5909"
  I1215 13:07:47.524446 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fvrk4" in namespace "gc-5909"
  I1215 13:07:47.566158 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-g46vp" in namespace "gc-5909"
  I1215 13:07:47.589778 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgcqp" in namespace "gc-5909"
  I1215 13:07:47.629911 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hgzlw" in namespace "gc-5909"
  I1215 13:07:47.693666 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hh5jd" in namespace "gc-5909"
  I1215 13:07:47.745269 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hl5q2" in namespace "gc-5909"
  I1215 13:07:47.773129 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hq9rt" in namespace "gc-5909"
  I1215 13:07:47.844573 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jv6mq" in namespace "gc-5909"
  I1215 13:07:47.885149 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jzfm5" in namespace "gc-5909"
  I1215 13:07:47.943802 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k2zj4" in namespace "gc-5909"
  I1215 13:07:47.988326 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kc84d" in namespace "gc-5909"
  I1215 13:07:48.069640 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kn8lz" in namespace "gc-5909"
  I1215 13:07:48.092988 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-kqbb5" in namespace "gc-5909"
  I1215 13:07:48.135187 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-lfrsx" in namespace "gc-5909"
  I1215 13:07:48.170248 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-mdd4s" in namespace "gc-5909"
  I1215 13:07:48.189434 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-mkdjk" in namespace "gc-5909"
  I1215 13:07:48.225718 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-mv8d8" in namespace "gc-5909"
  I1215 13:07:48.265228 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-n267q" in namespace "gc-5909"
  I1215 13:07:48.324257 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-5909" for this suite. @ 12/15/24 13:07:48.331
• [23.815 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 12/15/24 13:07:48.356
  I1215 13:07:48.356167 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename gc @ 12/15/24 13:07:48.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:48.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:48.395
  STEP: create the deployment @ 12/15/24 13:07:48.401
  W1215 13:07:48.418914      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/15/24 13:07:48.419
  STEP: delete the deployment @ 12/15/24 13:07:48.553
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 12/15/24 13:07:48.578
  STEP: Gathering metrics @ 12/15/24 13:07:49.092
  I1215 13:07:49.174966 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1215 13:07:49.175459 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8490" for this suite. @ 12/15/24 13:07:49.182
• [0.841 seconds]
------------------------------
SS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 12/15/24 13:07:49.197
  I1215 13:07:49.197233 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 13:07:49.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:49.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:49.242
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 12/15/24 13:07:49.245
  STEP: Saw pod success @ 12/15/24 13:07:53.286
  I1215 13:07:53.290679 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-986cbe2c-8e0d-4f17-8040-86b33aaeb614 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 13:07:53.296
  I1215 13:07:53.316256 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4893" for this suite. @ 12/15/24 13:07:53.32
• [4.131 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 12/15/24 13:07:53.328
  I1215 13:07:53.329010 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pv @ 12/15/24 13:07:53.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:53.367
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:53.371
  STEP: Creating initial PV and PVC @ 12/15/24 13:07:53.374
  I1215 13:07:53.374820 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-734" @ 12/15/24 13:07:53.394
  STEP: Listing PVCs in namespace "pv-734" @ 12/15/24 13:07:53.397
  STEP: Reading "pvc-s4qsc" Status @ 12/15/24 13:07:53.41
  STEP: Reading "pv-734-8pppw" Status @ 12/15/24 13:07:53.416
  STEP: Patching "pvc-s4qsc" Status @ 12/15/24 13:07:53.424
  STEP: Patching "pv-734-8pppw" Status @ 12/15/24 13:07:53.434
  STEP: Updating "pvc-s4qsc" Status @ 12/15/24 13:07:53.477
  STEP: Updating "pv-734-8pppw" Status @ 12/15/24 13:07:53.524
  I1215 13:07:53.541724 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I1215 13:07:53.541883 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-s4qsc"
  I1215 13:07:53.553624 21 pv.go:189] Deleting PersistentVolume "pv-734-8pppw"
  I1215 13:07:53.567889 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-734" for this suite. @ 12/15/24 13:07:53.575
• [0.269 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 12/15/24 13:07:53.598
  I1215 13:07:53.598501 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename subpath @ 12/15/24 13:07:53.599
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:07:53.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:07:53.638
  STEP: Setting up data @ 12/15/24 13:07:53.642
  STEP: Creating pod pod-subpath-test-secret-pf5b @ 12/15/24 13:07:53.657
  STEP: Creating a pod to test atomic-volume-subpath @ 12/15/24 13:07:53.657
  STEP: Saw pod success @ 12/15/24 13:08:17.75
  I1215 13:08:17.754310 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-subpath-test-secret-pf5b container test-container-subpath-secret-pf5b: <nil>
  STEP: delete the pod @ 12/15/24 13:08:17.764
  STEP: Deleting pod pod-subpath-test-secret-pf5b @ 12/15/24 13:08:17.788
  I1215 13:08:17.788362 21 delete.go:62] Deleting pod "pod-subpath-test-secret-pf5b" in namespace "subpath-3477"
  I1215 13:08:17.791491 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3477" for this suite. @ 12/15/24 13:08:17.795
• [24.207 seconds]
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 12/15/24 13:08:17.805
  I1215 13:08:17.805510 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replicaset @ 12/15/24 13:08:17.806
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:17.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:17.838
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 12/15/24 13:08:17.84
  I1215 13:08:17.852218 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1215 13:08:22.857503 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/24 13:08:22.857
  STEP: getting scale subresource @ 12/15/24 13:08:22.857
  STEP: updating a scale subresource @ 12/15/24 13:08:22.862
  STEP: verifying the replicaset Spec.Replicas was modified @ 12/15/24 13:08:22.872
  STEP: Patch a scale subresource @ 12/15/24 13:08:22.876
  I1215 13:08:22.901111 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7552" for this suite. @ 12/15/24 13:08:22.914
• [5.123 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 12/15/24 13:08:22.929
  I1215 13:08:22.929588 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename security-context-test @ 12/15/24 13:08:22.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:22.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:22.969
  I1215 13:08:29.012291 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-329" for this suite. @ 12/15/24 13:08:29.016
• [6.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 12/15/24 13:08:29.031
  I1215 13:08:29.031289 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename cronjob @ 12/15/24 13:08:29.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:29.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:29.069
  STEP: Creating a cronjob @ 12/15/24 13:08:29.072
  STEP: creating @ 12/15/24 13:08:29.072
  STEP: getting @ 12/15/24 13:08:29.084
  STEP: listing @ 12/15/24 13:08:29.087
  STEP: watching @ 12/15/24 13:08:29.089
  I1215 13:08:29.089936 21 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 12/15/24 13:08:29.091
  STEP: cluster-wide watching @ 12/15/24 13:08:29.094
  I1215 13:08:29.094765 21 cronjob.go:382] starting watch
  STEP: patching @ 12/15/24 13:08:29.095
  STEP: updating @ 12/15/24 13:08:29.106
  I1215 13:08:29.117867 21 cronjob.go:406] waiting for watch events with expected annotations
  I1215 13:08:29.117932 21 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 12/15/24 13:08:29.118
  STEP: updating /status @ 12/15/24 13:08:29.129
  STEP: get /status @ 12/15/24 13:08:29.138
  STEP: deleting @ 12/15/24 13:08:29.141
  STEP: deleting a collection @ 12/15/24 13:08:29.173
  I1215 13:08:29.193880 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-1308" for this suite. @ 12/15/24 13:08:29.197
• [0.174 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 12/15/24 13:08:29.205
  I1215 13:08:29.205291 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename gc @ 12/15/24 13:08:29.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:29.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:29.241
  STEP: create the deployment @ 12/15/24 13:08:29.244
  W1215 13:08:29.253458      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 12/15/24 13:08:29.253
  STEP: delete the deployment @ 12/15/24 13:08:29.759
  STEP: wait for all rs to be garbage collected @ 12/15/24 13:08:29.767
  STEP: expected 0 rs, got 1 rs @ 12/15/24 13:08:29.772
  STEP: expected 0 pods, got 2 pods @ 12/15/24 13:08:29.786
  STEP: Gathering metrics @ 12/15/24 13:08:30.276
  I1215 13:08:30.353919 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1215 13:08:30.354102 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2463" for this suite. @ 12/15/24 13:08:30.359
• [1.163 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 12/15/24 13:08:30.369
  I1215 13:08:30.369596 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 13:08:30.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:30.409
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:30.412
  STEP: creating service in namespace services-7085 @ 12/15/24 13:08:30.415
  STEP: creating service affinity-nodeport-transition in namespace services-7085 @ 12/15/24 13:08:30.415
  STEP: creating replication controller affinity-nodeport-transition in namespace services-7085 @ 12/15/24 13:08:30.44
  I1215 13:08:30.451427      21 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-7085, replica count: 3
  I1215 13:08:33.502396      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 13:08:33.514432 21 resource.go:361] Creating new exec pod
  I1215 13:08:36.540276 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7085 exec execpod-affinityqzt26 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I1215 13:08:36.729465 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I1215 13:08:36.729538 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:08:36.729828 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7085 exec execpod-affinityqzt26 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.35.102 80'
  I1215 13:08:36.885334 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.35.102 80\nConnection to 10.233.35.102 80 port [tcp/http] succeeded!\n"
  I1215 13:08:36.885517 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:08:36.885624 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7085 exec execpod-affinityqzt26 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.210 30990'
  I1215 13:08:37.029772 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.210 30990\nConnection to 172.10.60.210 30990 port [tcp/*] succeeded!\n"
  I1215 13:08:37.029838 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:08:37.029943 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7085 exec execpod-affinityqzt26 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.35 30990'
  I1215 13:08:37.179330 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.35 30990\nConnection to 172.10.60.35 30990 port [tcp/*] succeeded!\n"
  I1215 13:08:37.179393 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:08:37.191270 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7085 exec execpod-affinityqzt26 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.60.89:30990/ ; done'
  I1215 13:08:37.398092 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n"
  I1215 13:08:37.398256 21 builder.go:147] stdout: "\naffinity-nodeport-transition-jm875\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-q9q7g\naffinity-nodeport-transition-jm875\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-q9q7g\naffinity-nodeport-transition-jm875\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-q9q7g\naffinity-nodeport-transition-jm875\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-q9q7g\naffinity-nodeport-transition-jm875\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-q9q7g\naffinity-nodeport-transition-jm875"
  I1215 13:08:37.398333 21 service.go:242] Received response from host: affinity-nodeport-transition-jm875
  I1215 13:08:37.398353 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.398430 21 service.go:242] Received response from host: affinity-nodeport-transition-q9q7g
  I1215 13:08:37.398442 21 service.go:242] Received response from host: affinity-nodeport-transition-jm875
  I1215 13:08:37.398451 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.398459 21 service.go:242] Received response from host: affinity-nodeport-transition-q9q7g
  I1215 13:08:37.398473 21 service.go:242] Received response from host: affinity-nodeport-transition-jm875
  I1215 13:08:37.398522 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.398537 21 service.go:242] Received response from host: affinity-nodeport-transition-q9q7g
  I1215 13:08:37.398547 21 service.go:242] Received response from host: affinity-nodeport-transition-jm875
  I1215 13:08:37.398557 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.398600 21 service.go:242] Received response from host: affinity-nodeport-transition-q9q7g
  I1215 13:08:37.398614 21 service.go:242] Received response from host: affinity-nodeport-transition-jm875
  I1215 13:08:37.398624 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.398634 21 service.go:242] Received response from host: affinity-nodeport-transition-q9q7g
  I1215 13:08:37.398645 21 service.go:242] Received response from host: affinity-nodeport-transition-jm875
  I1215 13:08:37.414664 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7085 exec execpod-affinityqzt26 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.60.89:30990/ ; done'
  I1215 13:08:37.651424 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:30990/\n"
  I1215 13:08:37.651763 21 builder.go:147] stdout: "\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k\naffinity-nodeport-transition-r6x8k"
  I1215 13:08:37.651782 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651793 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651801 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651808 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651817 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651823 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651830 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651844 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651852 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651859 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651865 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651872 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651883 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651890 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651897 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.651904 21 service.go:242] Received response from host: affinity-nodeport-transition-r6x8k
  I1215 13:08:37.652000 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-7085, will wait for the garbage collector to delete the pods @ 12/15/24 13:08:37.675
  I1215 13:08:37.743726 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 14.729464ms
  I1215 13:08:37.844273 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.54564ms
  I1215 13:08:41.291164 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7085" for this suite. @ 12/15/24 13:08:41.297
• [10.942 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 12/15/24 13:08:41.312
  I1215 13:08:41.312175 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 13:08:41.313
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:41.344
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:41.346
  STEP: creating the pod @ 12/15/24 13:08:41.349
  STEP: submitting the pod to kubernetes @ 12/15/24 13:08:41.349
  W1215 13:08:41.362757      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 12/15/24 13:08:43.373
  STEP: updating the pod @ 12/15/24 13:08:43.377
  I1215 13:08:43.896886 21 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-5fdf96c5-e00f-482b-ad9c-9ca915f0fa35"
  I1215 13:08:47.910303 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3210" for this suite. @ 12/15/24 13:08:47.917
• [6.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 12/15/24 13:08:47.927
  I1215 13:08:47.927912 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename dns @ 12/15/24 13:08:47.928
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:47.955
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:47.958
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4076.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4076.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 12/15/24 13:08:47.96
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4076.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4076.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 12/15/24 13:08:47.96
  STEP: creating a pod to probe /etc/hosts @ 12/15/24 13:08:47.96
  STEP: submitting the pod to kubernetes @ 12/15/24 13:08:47.961
  STEP: retrieving the pod @ 12/15/24 13:08:49.99
  STEP: looking for the results for each expected name from probers @ 12/15/24 13:08:49.993
  I1215 13:08:50.008642 21 dns_common.go:527] DNS probes using dns-4076/dns-test-f3391478-3e54-4717-9d58-0abb7b392eab succeeded

  STEP: deleting the pod @ 12/15/24 13:08:50.008
  I1215 13:08:50.034756 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4076" for this suite. @ 12/15/24 13:08:50.039
• [2.122 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 12/15/24 13:08:50.05
  I1215 13:08:50.050124 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 13:08:50.051
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:08:50.077
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:08:50.08
  I1215 13:08:50.083238 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/15/24 13:08:57.647
  I1215 13:08:57.648443 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4452 --namespace=crd-publish-openapi-4452 create -f -'
  I1215 13:08:57.761950 21 builder.go:146] stderr: ""
  I1215 13:08:57.762020 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-326-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1215 13:08:57.762180 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4452 --namespace=crd-publish-openapi-4452 delete e2e-test-crd-publish-openapi-326-crds test-cr'
  I1215 13:08:57.856651 21 builder.go:146] stderr: ""
  I1215 13:08:57.856713 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-326-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I1215 13:08:57.856772 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4452 --namespace=crd-publish-openapi-4452 apply -f -'
  I1215 13:08:57.957637 21 builder.go:146] stderr: ""
  I1215 13:08:57.957721 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-326-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I1215 13:08:57.957787 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4452 --namespace=crd-publish-openapi-4452 delete e2e-test-crd-publish-openapi-326-crds test-cr'
  I1215 13:08:58.048648 21 builder.go:146] stderr: ""
  I1215 13:08:58.048707 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-326-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/15/24 13:08:58.048
  I1215 13:08:58.048868 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4452 explain e2e-test-crd-publish-openapi-326-crds'
  I1215 13:08:58.125022 21 builder.go:146] stderr: ""
  I1215 13:08:58.125130 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-326-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I1215 13:09:00.650103 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4452" for this suite. @ 12/15/24 13:09:00.659
• [10.621 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 12/15/24 13:09:00.672
  I1215 13:09:00.672555 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:09:00.673
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:00.704
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:00.707
  STEP: Setting up server cert @ 12/15/24 13:09:00.745
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:09:01.202
  STEP: Deploying the webhook pod @ 12/15/24 13:09:01.213
  STEP: Wait for the deployment to be ready @ 12/15/24 13:09:01.231
  I1215 13:09:01.240700 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 13:09:03.252
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:09:03.271
  I1215 13:09:04.272367 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I1215 13:09:04.280641 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-4160-crds.webhook.example.com via the AdmissionRegistration API @ 12/15/24 13:09:09.797
  STEP: Creating a custom resource that should be mutated by the webhook @ 12/15/24 13:09:09.818
  I1215 13:09:12.461337 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7783" for this suite. @ 12/15/24 13:09:12.465
  STEP: Destroying namespace "webhook-markers-565" for this suite. @ 12/15/24 13:09:12.474
• [11.812 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 12/15/24 13:09:12.485
  I1215 13:09:12.485328 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 13:09:12.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:12.508
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:12.51
  STEP: Creating configMap that has name configmap-test-emptyKey-6e9b1b92-20a9-44b1-94b6-f5cefe2d144a @ 12/15/24 13:09:12.512
  I1215 13:09:12.514403 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-689" for this suite. @ 12/15/24 13:09:12.518
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 12/15/24 13:09:12.527
  I1215 13:09:12.527169 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 13:09:12.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:12.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:12.556
  STEP: creating a ConfigMap @ 12/15/24 13:09:12.558
  STEP: fetching the ConfigMap @ 12/15/24 13:09:12.563
  STEP: patching the ConfigMap @ 12/15/24 13:09:12.565
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 12/15/24 13:09:12.572
  STEP: deleting the ConfigMap by collection with a label selector @ 12/15/24 13:09:12.578
  STEP: listing all ConfigMaps in test namespace @ 12/15/24 13:09:12.589
  I1215 13:09:12.592222 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6674" for this suite. @ 12/15/24 13:09:12.595
• [0.076 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 12/15/24 13:09:12.603
  I1215 13:09:12.603312 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pod-network-test @ 12/15/24 13:09:12.604
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:12.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:12.636
  STEP: Performing setup for networking test in namespace pod-network-test-9037 @ 12/15/24 13:09:12.639
  STEP: creating a selector @ 12/15/24 13:09:12.639
  STEP: Creating the service pods in kubernetes @ 12/15/24 13:09:12.639
  I1215 13:09:12.639143 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 12/15/24 13:09:34.767
  I1215 13:09:36.787505 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I1215 13:09:36.787589 21 networking.go:42] Breadth first check of 10.0.0.214 on host 172.10.60.89...
  I1215 13:09:36.791274 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.252:9080/dial?request=hostname&protocol=http&host=10.0.0.214&port=8083&tries=1'] Namespace:pod-network-test-9037 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:09:36.791313 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:09:36.792120 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:09:36.792197 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9037/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.252%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.0.214%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1215 13:09:36.860981 21 utils.go:331] Waiting for responses: map[]
  I1215 13:09:36.861049 21 utils.go:335] reached 10.0.0.214 after 0/1 tries
  I1215 13:09:36.861068 21 networking.go:42] Breadth first check of 10.0.1.207 on host 172.10.60.210...
  I1215 13:09:36.864688 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.252:9080/dial?request=hostname&protocol=http&host=10.0.1.207&port=8083&tries=1'] Namespace:pod-network-test-9037 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:09:36.864712 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:09:36.865175 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:09:36.865229 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9037/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.252%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.1.207%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1215 13:09:36.947397 21 utils.go:331] Waiting for responses: map[]
  I1215 13:09:36.947447 21 utils.go:335] reached 10.0.1.207 after 0/1 tries
  I1215 13:09:36.947512 21 networking.go:42] Breadth first check of 10.0.2.198 on host 172.10.60.35...
  I1215 13:09:36.951294 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.0.0.252:9080/dial?request=hostname&protocol=http&host=10.0.2.198&port=8083&tries=1'] Namespace:pod-network-test-9037 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:09:36.951325 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:09:36.951922 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:09:36.951977 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/pod-network-test-9037/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.0.0.252%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.0.2.198%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I1215 13:09:37.039866 21 utils.go:331] Waiting for responses: map[]
  I1215 13:09:37.039925 21 utils.go:335] reached 10.0.2.198 after 0/1 tries
  I1215 13:09:37.039934 21 networking.go:53] Going to retry 0 out of 3 pods....
  I1215 13:09:37.040073 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9037" for this suite. @ 12/15/24 13:09:37.045
• [24.454 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 12/15/24 13:09:37.057
  I1215 13:09:37.057901 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:09:37.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:37.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:37.096
  STEP: Creating projection with secret that has name projected-secret-test-9da01cb3-518e-4027-8a89-069703628d36 @ 12/15/24 13:09:37.098
  STEP: Creating a pod to test consume secrets @ 12/15/24 13:09:37.104
  STEP: Saw pod success @ 12/15/24 13:09:41.128
  I1215 13:09:41.131242 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-secrets-c1e41daf-36df-44e3-a405-63ee7cdeb044 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 12/15/24 13:09:41.142
  I1215 13:09:41.162740 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1940" for this suite. @ 12/15/24 13:09:41.166
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 12/15/24 13:09:41.176
  I1215 13:09:41.176617 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 13:09:41.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:41.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:41.206
  I1215 13:09:41.209527 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 12/15/24 13:09:48.743
  I1215 13:09:48.743371 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 create -f -'
  I1215 13:09:48.852971 21 builder.go:146] stderr: ""
  I1215 13:09:48.853073 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-485-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1215 13:09:48.853127 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 delete e2e-test-crd-publish-openapi-485-crds test-foo'
  I1215 13:09:48.936078 21 builder.go:146] stderr: ""
  I1215 13:09:48.936137 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-485-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I1215 13:09:48.936198 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 apply -f -'
  I1215 13:09:49.041267 21 builder.go:146] stderr: ""
  I1215 13:09:49.041326 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-485-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I1215 13:09:49.041386 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 delete e2e-test-crd-publish-openapi-485-crds test-foo'
  I1215 13:09:49.123990 21 builder.go:146] stderr: ""
  I1215 13:09:49.124081 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-485-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 12/15/24 13:09:49.124
  I1215 13:09:49.124407 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 create -f -'
  I1215 13:09:49.195706 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 12/15/24 13:09:49.195
  I1215 13:09:49.195888 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 create -f -'
  I1215 13:09:49.268125 21 builder.go:135] rc: 1
  I1215 13:09:49.268274 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 apply -f -'
  I1215 13:09:49.347677 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 12/15/24 13:09:49.347
  I1215 13:09:49.347837 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 create -f -'
  I1215 13:09:49.420088 21 builder.go:135] rc: 1
  I1215 13:09:49.420310 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 --namespace=crd-publish-openapi-8635 apply -f -'
  I1215 13:09:49.500179 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 12/15/24 13:09:49.5
  I1215 13:09:49.500567 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 explain e2e-test-crd-publish-openapi-485-crds'
  I1215 13:09:49.574456 21 builder.go:146] stderr: ""
  I1215 13:09:49.574559 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-485-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 12/15/24 13:09:49.574
  I1215 13:09:49.574976 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 explain e2e-test-crd-publish-openapi-485-crds.metadata'
  I1215 13:09:49.644060 21 builder.go:146] stderr: ""
  I1215 13:09:49.644218 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-485-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I1215 13:09:49.644611 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 explain e2e-test-crd-publish-openapi-485-crds.spec'
  I1215 13:09:49.713824 21 builder.go:146] stderr: ""
  I1215 13:09:49.713902 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-485-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I1215 13:09:49.714082 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 explain e2e-test-crd-publish-openapi-485-crds.spec.bars'
  I1215 13:09:49.786127 21 builder.go:146] stderr: ""
  I1215 13:09:49.786205 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-485-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 12/15/24 13:09:49.786
  I1215 13:09:49.786471 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-8635 explain e2e-test-crd-publish-openapi-485-crds.spec.bars2'
  I1215 13:09:49.853079 21 builder.go:135] rc: 1
  I1215 13:09:52.193305 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8635" for this suite. @ 12/15/24 13:09:52.206
• [11.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 12/15/24 13:09:52.218
  I1215 13:09:52.218969 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 13:09:52.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:52.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:52.261
  STEP: Creating a pod to test downward api env vars @ 12/15/24 13:09:52.264
  STEP: Saw pod success @ 12/15/24 13:09:56.292
  I1215 13:09:56.295832 21 output.go:196] Trying to get logs from node cncf-master-1 pod downward-api-1d2495cb-7d08-4a9e-8fe2-96ea546f31a5 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 13:09:56.302
  I1215 13:09:56.330751 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-364" for this suite. @ 12/15/24 13:09:56.335
• [4.124 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 12/15/24 13:09:56.343
  I1215 13:09:56.343380 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/24 13:09:56.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:56.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:56.375
  I1215 13:09:56.382248 21 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-500"
  I1215 13:09:56.390071 21 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-500"
  STEP: waiting for a new root ca configmap created @ 12/15/24 13:09:56.89
  I1215 13:09:56.895579 21 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-500"
  I1215 13:09:56.905124 21 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-500"
  STEP: waiting for the root ca configmap reconciled @ 12/15/24 13:09:57.406
  I1215 13:09:57.414209 21 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-500"
  I1215 13:09:57.414338 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-500" for this suite. @ 12/15/24 13:09:57.418
• [1.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 12/15/24 13:09:57.429
  I1215 13:09:57.429286 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename init-container @ 12/15/24 13:09:57.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:09:57.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:09:57.462
  STEP: creating the pod @ 12/15/24 13:09:57.465
  I1215 13:09:57.465548 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  I1215 13:10:01.337357 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-4836" for this suite. @ 12/15/24 13:10:01.342
• [3.925 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 12/15/24 13:10:01.354
  I1215 13:10:01.354760 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename discovery @ 12/15/24 13:10:01.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:01.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:01.382
  STEP: Setting up server cert @ 12/15/24 13:10:01.387
  STEP: Requesting APIResourceList from "/api/v1" @ 12/15/24 13:10:01.609
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 12/15/24 13:10:01.612
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 12/15/24 13:10:01.613
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 12/15/24 13:10:01.614
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 12/15/24 13:10:01.616
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 12/15/24 13:10:01.616
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 12/15/24 13:10:01.617
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 12/15/24 13:10:01.618
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 12/15/24 13:10:01.619
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 12/15/24 13:10:01.62
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 12/15/24 13:10:01.621
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 12/15/24 13:10:01.621
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 12/15/24 13:10:01.622
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 12/15/24 13:10:01.623
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 12/15/24 13:10:01.624
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 12/15/24 13:10:01.625
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 12/15/24 13:10:01.626
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 12/15/24 13:10:01.627
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 12/15/24 13:10:01.628
  I1215 13:10:01.629702 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7068" for this suite. @ 12/15/24 13:10:01.632
• [0.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 12/15/24 13:10:01.644
  I1215 13:10:01.644103 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 13:10:01.645
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:01.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:01.678
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 12/15/24 13:10:01.681
  I1215 13:10:01.682678 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 12/15/24 13:10:14.836
  I1215 13:10:14.836601 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:10:22.260049 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:10:36.021976 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6763" for this suite. @ 12/15/24 13:10:36.028
• [34.396 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 12/15/24 13:10:36.04
  I1215 13:10:36.040639 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:10:36.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:36.076
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:36.078
  STEP: Setting up server cert @ 12/15/24 13:10:36.118
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:10:36.385
  STEP: Deploying the webhook pod @ 12/15/24 13:10:36.399
  STEP: Wait for the deployment to be ready @ 12/15/24 13:10:36.422
  I1215 13:10:36.428997 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 13:10:38.44
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:10:38.456
  I1215 13:10:39.457891 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/15/24 13:10:39.464
  STEP: verifying the mutating webhook match conditions @ 12/15/24 13:10:39.478
  STEP: updating the mutating webhook match conditions @ 12/15/24 13:10:39.484
  STEP: verifying the mutating webhook match conditions @ 12/15/24 13:10:39.498
  I1215 13:10:39.582454 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-224" for this suite. @ 12/15/24 13:10:39.586
  STEP: Destroying namespace "webhook-markers-3860" for this suite. @ 12/15/24 13:10:39.599
• [3.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 12/15/24 13:10:39.619
  I1215 13:10:39.619866 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename daemonsets @ 12/15/24 13:10:39.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:39.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:39.651
  I1215 13:10:39.674058 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 12/15/24 13:10:39.699
  I1215 13:10:39.715823 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:10:39.715926 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 12/15/24 13:10:39.715
  I1215 13:10:39.745157 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:10:39.745230 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:10:40.746648 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:10:40.746708 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:10:41.747200 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1215 13:10:41.747275 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 12/15/24 13:10:41.751
  I1215 13:10:41.775926 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1215 13:10:41.776020 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I1215 13:10:42.774141 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:10:42.774194 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 12/15/24 13:10:42.774
  I1215 13:10:42.788627 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:10:42.788681 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:10:43.790919 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:10:43.790973 21 fixtures.go:130] Node cncf-master-3 is running 0 daemon pod, expected 1
  I1215 13:10:44.789682 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I1215 13:10:44.789790 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/24 13:10:44.796
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4742, will wait for the garbage collector to delete the pods @ 12/15/24 13:10:44.796
  I1215 13:10:44.857966 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 8.329661ms
  I1215 13:10:44.958435 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.469634ms
  I1215 13:10:46.668699 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:10:46.668767 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1215 13:10:46.672392 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5417506"},"items":null}

  I1215 13:10:46.675149 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5417506"},"items":null}

  I1215 13:10:46.703708 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4742" for this suite. @ 12/15/24 13:10:46.708
• [7.102 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 12/15/24 13:10:46.722
  I1215 13:10:46.722519 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 13:10:46.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:46.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:46.757
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 13:10:46.76
  STEP: Saw pod success @ 12/15/24 13:10:50.789
  I1215 13:10:50.792193 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-9d2537e4-2945-45de-8cee-8f0aec399c81 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 13:10:50.8
  I1215 13:10:50.829611 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7697" for this suite. @ 12/15/24 13:10:50.833
• [4.119 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 12/15/24 13:10:50.841
  I1215 13:10:50.841935 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/15/24 13:10:50.842
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:50.863
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:50.865
  STEP: creating @ 12/15/24 13:10:50.868
  STEP: getting @ 12/15/24 13:10:50.899
  STEP: listing in namespace @ 12/15/24 13:10:50.905
  STEP: patching @ 12/15/24 13:10:50.908
  STEP: deleting @ 12/15/24 13:10:50.929
  I1215 13:10:50.943771 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-9929" for this suite. @ 12/15/24 13:10:50.947
• [0.113 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 12/15/24 13:10:50.955
  I1215 13:10:50.955777 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/24 13:10:50.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:50.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:50.985
  STEP: reading a file in the container @ 12/15/24 13:10:53.016
  I1215 13:10:53.017336 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1145 pod-service-account-1bda69f8-d33b-4ffd-ac06-53eccb314840 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 12/15/24 13:10:53.155
  I1215 13:10:53.155981 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1145 pod-service-account-1bda69f8-d33b-4ffd-ac06-53eccb314840 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 12/15/24 13:10:53.291
  I1215 13:10:53.291903 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-1145 pod-service-account-1bda69f8-d33b-4ffd-ac06-53eccb314840 -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I1215 13:10:53.431038 21 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-1145"
  I1215 13:10:53.433339 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1145" for this suite. @ 12/15/24 13:10:53.436
• [2.489 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 12/15/24 13:10:53.445
  I1215 13:10:53.445449 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 13:10:53.446
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:53.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:53.476
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 13:10:53.479
  STEP: Saw pod success @ 12/15/24 13:10:57.508
  I1215 13:10:57.511970 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-ff028e5c-61bb-4c52-a3e0-207be37ffa7e container client-container: <nil>
  STEP: delete the pod @ 12/15/24 13:10:57.518
  I1215 13:10:57.545590 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8097" for this suite. @ 12/15/24 13:10:57.549
• [4.115 seconds]
------------------------------
SSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 12/15/24 13:10:57.56
  I1215 13:10:57.560492 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/24 13:10:57.561
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:10:57.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:10:57.607
  STEP: Creating a pod to test service account token:  @ 12/15/24 13:10:57.609
  STEP: Saw pod success @ 12/15/24 13:11:01.636
  I1215 13:11:01.639888 21 output.go:196] Trying to get logs from node cncf-master-1 pod test-pod-73ee6f38-8efa-446a-8aaa-a367f71bce97 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 13:11:01.646
  I1215 13:11:01.680837 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9275" for this suite. @ 12/15/24 13:11:01.685
• [4.134 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 12/15/24 13:11:01.694
  I1215 13:11:01.694954 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename chunking @ 12/15/24 13:11:01.696
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:11:01.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:11:01.724
  STEP: creating a large number of resources @ 12/15/24 13:11:01.727
  I1215 13:11:14.057830      21 request.go:697] Waited for 1.001867554s due to client-side throttling, not priority and fairness, request: POST:https://10.233.0.1:443/api/v1/namespaces/chunking-7833/podtemplates
  STEP: retrieving the first page @ 12/15/24 13:11:19.403
  I1215 13:11:19.451478 21 chunking.go:163] Retrieved 40/40 results with rv 5418209 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 12/15/24 13:11:19.451
  I1215 13:11:39.460403 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:11:59.458611 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:12:19.461175 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:12:39.459321 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:12:59.461443 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:13:19.461219 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:13:39.461842 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:13:59.460189 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:14:19.462357 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:14:39.459538 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:14:59.464989 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:15:19.459646 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:15:39.462021 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:15:59.458901 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:16:19.461555 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:16:39.460238 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:16:59.463287 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:17:19.457879 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxODIwOSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I1215 13:17:39.459218 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I1215 13:17:39.459313 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 12/15/24 13:17:39.459
  STEP: retrieving all remaining pages @ 12/15/24 13:17:39.464
  I1215 13:17:39.469101 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxOTk2NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I1215 13:17:39.474110 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxOTk2NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I1215 13:17:39.480402 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxOTk2NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I1215 13:17:39.485843 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxOTk2NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I1215 13:17:39.490499 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxOTk2NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I1215 13:17:39.495159 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxOTk2NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I1215 13:17:39.499406 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NTQxOTk2NSwic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I1215 13:17:39.504503 21 chunking.go:221] Retrieved 40/40 results with rv 5419965 and continue 
  I1215 13:17:39.505113 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7833" for this suite. @ 12/15/24 13:17:39.509
• [397.830 seconds]
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 12/15/24 13:17:39.526
  I1215 13:17:39.526532 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename cronjob @ 12/15/24 13:17:39.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:17:39.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:17:39.559
  STEP: Creating a suspended cronjob @ 12/15/24 13:17:39.562
  STEP: Ensuring no jobs are scheduled @ 12/15/24 13:17:39.57
  STEP: Ensuring no job exists by listing jobs explicitly @ 12/15/24 13:22:39.57
  STEP: Removing cronjob @ 12/15/24 13:22:39.575
  I1215 13:22:39.583491 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-8562" for this suite. @ 12/15/24 13:22:39.589
• [300.071 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 12/15/24 13:22:39.598
  I1215 13:22:39.598173 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 13:22:39.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:22:39.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:22:39.633
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 12/15/24 13:22:39.636
  STEP: Saw pod success @ 12/15/24 13:22:43.665
  I1215 13:22:43.669887 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-3b16844a-a839-4c57-ac69-3677d4cb561a container test-container: <nil>
  STEP: delete the pod @ 12/15/24 13:22:43.685
  I1215 13:22:43.707524 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2882" for this suite. @ 12/15/24 13:22:43.711
• [4.125 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 12/15/24 13:22:43.723
  I1215 13:22:43.723203 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/24 13:22:43.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:22:43.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:22:43.748
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/24 13:22:43.755
  STEP: create the pod with lifecycle hook @ 12/15/24 13:22:45.782
  STEP: delete the pod with lifecycle hook @ 12/15/24 13:22:47.802
  STEP: check prestop hook @ 12/15/24 13:22:49.819
  I1215 13:22:49.828489 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4168" for this suite. @ 12/15/24 13:22:49.834
• [6.125 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:644
  STEP: Creating a kubernetes client @ 12/15/24 13:22:49.848
  I1215 13:22:49.848885 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 13:22:49.849
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:22:49.882
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:22:49.885
  STEP: Creating service test in namespace statefulset-4137 @ 12/15/24 13:22:49.888
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 12/15/24 13:22:49.895
  STEP: Creating stateful set ss in namespace statefulset-4137 @ 12/15/24 13:22:49.899
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-4137 @ 12/15/24 13:22:49.911
  I1215 13:22:49.915156 21 wait.go:40] Found 0 stateful pods, waiting for 1
  I1215 13:22:59.920262 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 12/15/24 13:22:59.92
  I1215 13:22:59.924269 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 13:23:00.097031 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 13:23:00.097106 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 13:23:00.097122 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 13:23:00.101740 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I1215 13:23:10.118163 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1215 13:23:10.118293 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1215 13:23:10.139238 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 9.999999553s
  I1215 13:23:11.145545 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 8.996515111s
  I1215 13:23:12.150605 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 7.990601822s
  I1215 13:23:13.156882 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 6.985462097s
  I1215 13:23:14.163131 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 5.979227569s
  I1215 13:23:15.168808 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 4.972576694s
  I1215 13:23:16.173677 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 3.96702439s
  I1215 13:23:17.178490 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 2.962335497s
  I1215 13:23:18.182521 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 1.957668991s
  I1215 13:23:19.188027 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 1 for another 952.828979ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-4137 @ 12/15/24 13:23:20.189
  I1215 13:23:20.194133 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 13:23:20.339506 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1215 13:23:20.339574 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 13:23:20.339591 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 13:23:20.344572 21 wait.go:40] Found 1 stateful pods, waiting for 3
  I1215 13:23:30.350171 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I1215 13:23:30.350270 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I1215 13:23:30.350301 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 12/15/24 13:23:30.35
  STEP: Scale down will halt with unhealthy stateful pod @ 12/15/24 13:23:30.35
  I1215 13:23:30.359015 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 13:23:30.494641 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 13:23:30.494728 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 13:23:30.494748 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 13:23:30.494816 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 13:23:30.639229 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 13:23:30.639290 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 13:23:30.639303 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 13:23:30.639385 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I1215 13:23:30.794713 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I1215 13:23:30.794774 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I1215 13:23:30.794787 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I1215 13:23:30.794800 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I1215 13:23:30.798960 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  I1215 13:23:40.803700 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I1215 13:23:40.803771 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I1215 13:23:40.803782 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I1215 13:23:40.821636 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 9.999999662s
  I1215 13:23:41.827037 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 8.995659361s
  I1215 13:23:42.834950 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 7.990054308s
  I1215 13:23:43.841757 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 6.982312964s
  I1215 13:23:44.848435 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 5.97476512s
  I1215 13:23:45.853407 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 4.968850824s
  I1215 13:23:46.858209 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 3.963829463s
  I1215 13:23:47.863397 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 2.959021451s
  I1215 13:23:48.869683 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 1.953199344s
  I1215 13:23:49.875744 21 statefulset.go:2418] Verifying statefulset ss doesn't scale past 3 for another 947.578018ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-4137 @ 12/15/24 13:23:50.876
  I1215 13:23:50.881896 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 13:23:51.017678 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1215 13:23:51.017745 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 13:23:51.017762 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 13:23:51.017824 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 13:23:51.162185 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1215 13:23:51.162265 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 13:23:51.162279 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 13:23:51.162350 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=statefulset-4137 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I1215 13:23:51.298611 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I1215 13:23:51.298668 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I1215 13:23:51.298683 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I1215 13:23:51.298697 21 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 12/15/24 13:24:01.308
  I1215 13:24:01.308292 21 statefulset.go:138] Deleting all statefulset in ns statefulset-4137
  I1215 13:24:01.312498 21 rest.go:150] Scaling statefulset ss to 0
  I1215 13:24:01.318794 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 13:24:01.321632 21 rest.go:88] Deleting statefulset ss
  I1215 13:24:01.338742 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4137" for this suite. @ 12/15/24 13:24:01.343
• [71.505 seconds]
------------------------------
S
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 12/15/24 13:24:01.354
  I1215 13:24:01.354512 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename disruption @ 12/15/24 13:24:01.355
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:24:01.383
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:24:01.385
  STEP: Waiting for the pdb to be processed @ 12/15/24 13:24:01.398
  STEP: Updating PodDisruptionBudget status @ 12/15/24 13:24:03.404
  STEP: Waiting for all pods to be running @ 12/15/24 13:24:03.414
  I1215 13:24:03.418507 21 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 12/15/24 13:24:05.419
  STEP: Waiting for the pdb to be processed @ 12/15/24 13:24:05.432
  STEP: Patching PodDisruptionBudget status @ 12/15/24 13:24:05.445
  STEP: Waiting for the pdb to be processed @ 12/15/24 13:24:05.456
  I1215 13:24:05.459417 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2401" for this suite. @ 12/15/24 13:24:05.466
• [4.121 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 12/15/24 13:24:05.475
  I1215 13:24:05.475574 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 12/15/24 13:24:05.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:24:05.505
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:24:05.508
  STEP: create the container to handle the HTTPGet hook request. @ 12/15/24 13:24:05.519
  STEP: create the pod with lifecycle hook @ 12/15/24 13:24:07.549
  STEP: check poststart hook @ 12/15/24 13:24:09.574
  STEP: delete the pod with lifecycle hook @ 12/15/24 13:24:09.58
  I1215 13:24:13.605940 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5352" for this suite. @ 12/15/24 13:24:13.61
• [8.142 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 12/15/24 13:24:13.618
  I1215 13:24:13.618416 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-probe @ 12/15/24 13:24:13.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:24:13.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:24:13.656
  STEP: Creating pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456 @ 12/15/24 13:24:13.66
  STEP: checking the pod's current state and verifying that restartCount is present @ 12/15/24 13:24:15.683
  I1215 13:24:15.686737 21 container_probe.go:1749] Initial restart count of pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 is 0
  I1215 13:24:15.689759 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:17.697560 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:19.702999 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:21.708262 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:23.714550 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:25.719618 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:27.725086 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:29.730117 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:31.734822 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:33.740400 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:35.745691 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:37.752099 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:39.758083 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:41.763227 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:43.771119 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:45.775837 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:47.780351 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:49.786297 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:51.791087 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:53.796500 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:55.800708 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:57.806220 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:24:59.811747 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:01.816868 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:03.822810 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:05.827586 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:07.832335 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:09.838321 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:11.843507 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:13.848485 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:15.852702 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:17.857633 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:19.863555 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:21.869221 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:23.874092 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:25.880751 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:27.886904 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:29.893564 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:31.899743 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:33.905836 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:35.910852 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:37.916411 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:39.921759 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:41.927581 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:43.933525 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:45.938125 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:47.942936 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:49.948702 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:51.953939 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:53.959198 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:55.964364 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:57.970172 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:25:59.976207 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:01.981161 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:03.986436 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:05.991833 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:07.997363 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:10.002818 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:12.007577 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:14.013216 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:16.017088 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:18.022287 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:20.028556 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:22.033089 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:24.039259 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:26.043356 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:28.049331 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:30.054144 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:32.060020 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:34.066465 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:36.071597 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:38.075757 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:40.080724 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:42.087102 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:44.097005 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:46.102095 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:48.107880 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:50.112817 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:52.118251 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:54.122986 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:56.127486 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:26:58.131975 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:00.135901 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:02.142726 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:04.147693 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:06.152025 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:08.157134 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:10.163805 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:12.172194 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:14.178322 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:16.183227 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:18.188690 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:20.195362 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:22.201573 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:24.207065 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:26.212211 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:28.217485 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:30.223599 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:32.229457 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:34.235901 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:36.242797 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:38.247712 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:40.253320 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:42.259113 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:44.264438 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:46.270029 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:48.275419 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:50.281102 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:52.286731 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:54.292432 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:56.298183 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:27:58.302950 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:00.309313 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:02.315132 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:04.319841 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:06.325200 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:08.330054 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:10.336460 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:12.343069 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  I1215 13:28:14.349001 21 container_probe.go:1759] Get pod busybox-762357e6-c3be-4ee4-bab9-7bb51b37f925 in namespace container-probe-7456
  STEP: deleting the pod @ 12/15/24 13:28:16.349
  I1215 13:28:16.375654 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7456" for this suite. @ 12/15/24 13:28:16.382
• [242.775 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 12/15/24 13:28:16.398
  I1215 13:28:16.398733 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename daemonsets @ 12/15/24 13:28:16.4
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:28:16.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:28:16.427
  I1215 13:28:16.456182 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I1215 13:28:16.464296 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I1215 13:28:16.476809 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:28:16.477070 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 13:28:17.475428 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:28:17.475489 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 13:28:18.479141 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I1215 13:28:18.479370 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I1215 13:28:18.479457 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I1215 13:28:18.496623 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I1215 13:28:19.510834 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I1215 13:28:19.521237 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I1215 13:28:19.521478 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I1215 13:28:19.529575 21 daemon_set.go:1178] Wrong image for pod: daemon-set-gkn4w. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I1215 13:28:19.529809 21 daemon_set.go:1183] Pod daemon-set-gkn4w is not available
  I1215 13:28:21.527423 21 daemon_set.go:1183] Pod daemon-set-ddshz is not available
  STEP: Deleting DaemonSet "daemon-set" @ 12/15/24 13:28:21.543
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9137, will wait for the garbage collector to delete the pods @ 12/15/24 13:28:21.543
  I1215 13:28:21.604409 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.366513ms
  I1215 13:28:21.705419 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.951232ms
  I1215 13:28:23.110013 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I1215 13:28:23.110068 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I1215 13:28:23.113296 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5423861"},"items":null}

  I1215 13:28:23.116293 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5423861"},"items":null}

  I1215 13:28:23.133787 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9137" for this suite. @ 12/15/24 13:28:23.138
• [6.747 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 12/15/24 13:28:23.146
  I1215 13:28:23.146603 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 13:28:23.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:28:23.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:28:23.176
  STEP: creating service in namespace services-5135 @ 12/15/24 13:28:23.179
  STEP: creating service affinity-nodeport in namespace services-5135 @ 12/15/24 13:28:23.18
  STEP: creating replication controller affinity-nodeport in namespace services-5135 @ 12/15/24 13:28:23.2
  I1215 13:28:23.214793      21 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-5135, replica count: 3
  I1215 13:28:26.266152      21 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 13:28:26.278120 21 resource.go:361] Creating new exec pod
  I1215 13:28:29.308550 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5135 exec execpod-affinitywrwxr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I1215 13:28:29.469560 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I1215 13:28:29.469633 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:28:29.469782 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5135 exec execpod-affinitywrwxr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.45.207 80'
  I1215 13:28:29.606537 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.45.207 80\nConnection to 10.233.45.207 80 port [tcp/http] succeeded!\n"
  I1215 13:28:29.606739 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:28:29.606871 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5135 exec execpod-affinitywrwxr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.210 31399'
  I1215 13:28:29.744224 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.210 31399\nConnection to 172.10.60.210 31399 port [tcp/*] succeeded!\n"
  I1215 13:28:29.744297 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:28:29.744433 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5135 exec execpod-affinitywrwxr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.10.60.35 31399'
  I1215 13:28:29.874354 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.10.60.35 31399\nConnection to 172.10.60.35 31399 port [tcp/*] succeeded!\n"
  I1215 13:28:29.874438 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I1215 13:28:29.874538 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-5135 exec execpod-affinitywrwxr -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.10.60.89:31399/ ; done'
  I1215 13:28:30.064718 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.10.60.89:31399/\n"
  I1215 13:28:30.064914 21 builder.go:147] stdout: "\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc\naffinity-nodeport-pkhzc"
  I1215 13:28:30.064957 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.064975 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.064988 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065000 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065014 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065025 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065042 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065053 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065073 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065085 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065097 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065108 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065118 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065129 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065139 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065149 21 service.go:242] Received response from host: affinity-nodeport-pkhzc
  I1215 13:28:30.065343 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-5135, will wait for the garbage collector to delete the pods @ 12/15/24 13:28:30.091
  I1215 13:28:30.156118 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 10.593189ms
  I1215 13:28:30.256642 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 100.517809ms
  I1215 13:28:33.593202 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5135" for this suite. @ 12/15/24 13:28:33.597
• [10.460 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 12/15/24 13:28:33.606
  I1215 13:28:33.606726 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:28:33.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:28:33.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:28:33.642
  STEP: Setting up server cert @ 12/15/24 13:28:33.678
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:28:34.053
  STEP: Deploying the webhook pod @ 12/15/24 13:28:34.068
  STEP: Wait for the deployment to be ready @ 12/15/24 13:28:34.085
  I1215 13:28:34.098817 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 13:28:36.11
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:28:36.125
  I1215 13:28:37.125720 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 12/15/24 13:28:37.134
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/24 13:28:37.155
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 12/15/24 13:28:37.161
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/24 13:28:37.181
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 12/15/24 13:28:37.193
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 12/15/24 13:28:37.204
  I1215 13:28:37.265654 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1084" for this suite. @ 12/15/24 13:28:37.27
  STEP: Destroying namespace "webhook-markers-5693" for this suite. @ 12/15/24 13:28:37.281
• [3.690 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 12/15/24 13:28:37.297
  I1215 13:28:37.297376 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename field-validation @ 12/15/24 13:28:37.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:28:37.333
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:28:37.336
  I1215 13:28:37.338782 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:28:45.440825 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5374" for this suite. @ 12/15/24 13:28:45.445
• [8.157 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 12/15/24 13:28:45.454
  I1215 13:28:45.454687 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 13:28:45.456
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:28:45.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:28:45.485
  STEP: Counting existing ResourceQuota @ 12/15/24 13:28:45.487
  STEP: Creating a ResourceQuota @ 12/15/24 13:28:50.492
  STEP: Ensuring resource quota status is calculated @ 12/15/24 13:28:50.503
  STEP: Creating a ReplicationController @ 12/15/24 13:28:52.508
  STEP: Ensuring resource quota status captures replication controller creation @ 12/15/24 13:28:52.529
  STEP: Deleting a ReplicationController @ 12/15/24 13:28:54.534
  STEP: Ensuring resource quota status released usage @ 12/15/24 13:28:54.549
  I1215 13:28:56.554994 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9396" for this suite. @ 12/15/24 13:28:56.559
• [11.113 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 12/15/24 13:28:56.568
  I1215 13:28:56.568073 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 13:28:56.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:28:56.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:28:56.591
  STEP: Creating a pod to test substitution in container's args @ 12/15/24 13:28:56.594
  STEP: Saw pod success @ 12/15/24 13:29:00.622
  I1215 13:29:00.625744 21 output.go:196] Trying to get logs from node cncf-master-1 pod var-expansion-aea85e00-34d3-49d5-8188-1c9631b8bfc0 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 13:29:00.64
  I1215 13:29:00.668749 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9574" for this suite. @ 12/15/24 13:29:00.673
• [4.112 seconds]
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 12/15/24 13:29:00.68
  I1215 13:29:00.680330 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename conformance-tests @ 12/15/24 13:29:00.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:29:00.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:29:00.703
  STEP: Getting node addresses @ 12/15/24 13:29:00.705
  I1215 13:29:00.705428 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I1215 13:29:00.718110 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7914" for this suite. @ 12/15/24 13:29:00.721
• [0.051 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 12/15/24 13:29:00.731
  I1215 13:29:00.732051 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 13:29:00.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:29:00.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:29:00.765
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 12/15/24 13:29:00.767
  STEP: Saw pod success @ 12/15/24 13:29:04.803
  I1215 13:29:04.809457 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-d49d200b-4114-4880-bcc5-c0cb540a8530 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 13:29:04.816
  I1215 13:29:04.838519 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1256" for this suite. @ 12/15/24 13:29:04.846
• [4.123 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 12/15/24 13:29:04.856
  I1215 13:29:04.856155 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 13:29:04.857
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:29:04.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:29:04.883
  STEP: create deployment with httpd image @ 12/15/24 13:29:04.886
  I1215 13:29:04.886657 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4599 create -f -'
  I1215 13:29:05.003500 21 builder.go:146] stderr: ""
  I1215 13:29:05.003578 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 12/15/24 13:29:05.003
  I1215 13:29:05.003700 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4599 diff -f -'
  I1215 13:29:09.472409 21 builder.go:135] rc: 1
  I1215 13:29:09.472855 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-4599 delete -f -'
  I1215 13:29:09.575211 21 builder.go:146] stderr: ""
  I1215 13:29:09.575271 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I1215 13:29:09.575488 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-4599" for this suite. @ 12/15/24 13:29:09.58
• [4.738 seconds]
------------------------------
S
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 12/15/24 13:29:09.594
  I1215 13:29:09.594575 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 13:29:09.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:29:09.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:29:09.631
  STEP: Creating secret with name s-test-opt-del-e0cf9f1c-1151-4a6d-84c8-3f9efdc8a147 @ 12/15/24 13:29:09.637
  STEP: Creating secret with name s-test-opt-upd-2344462e-a6e6-462f-a292-18e2e7c1e604 @ 12/15/24 13:29:09.644
  STEP: Creating the pod @ 12/15/24 13:29:09.652
  STEP: Deleting secret s-test-opt-del-e0cf9f1c-1151-4a6d-84c8-3f9efdc8a147 @ 12/15/24 13:29:11.714
  STEP: Updating secret s-test-opt-upd-2344462e-a6e6-462f-a292-18e2e7c1e604 @ 12/15/24 13:29:11.72
  STEP: Creating secret with name s-test-opt-create-c6f100a5-4497-4b85-890f-a5de648c1b1d @ 12/15/24 13:29:11.728
  STEP: waiting to observe update in volume @ 12/15/24 13:29:11.733
  I1215 13:30:22.116923 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8065" for this suite. @ 12/15/24 13:30:22.122
• [72.535 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 12/15/24 13:30:22.13
  I1215 13:30:22.130703 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:30:22.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:22.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:22.164
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 13:30:22.167
  STEP: Saw pod success @ 12/15/24 13:30:26.196
  I1215 13:30:26.200106 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-b2390977-d63e-4310-86e9-a5a588dd7dc9 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 13:30:26.206
  I1215 13:30:26.237096 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7962" for this suite. @ 12/15/24 13:30:26.24
• [4.117 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 12/15/24 13:30:26.248
  I1215 13:30:26.248612 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename volumeattachment @ 12/15/24 13:30:26.249
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:26.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:26.275
  STEP: Create VolumeAttachment "va-e2e-njgf7" on node "cncf-master-3" @ 12/15/24 13:30:26.283
  STEP: Get VolumeAttachment "va-e2e-njgf7" on node "cncf-master-3" @ 12/15/24 13:30:26.292
  STEP: Patch VolumeAttachment "va-e2e-njgf7" on node "cncf-master-3" @ 12/15/24 13:30:26.295
  STEP: List VolumeAttachments with "va-e2e-njgf7=patched" label @ 12/15/24 13:30:26.301
  STEP: Delete VolumeAttachment "va-e2e-njgf7" on node "cncf-master-3" @ 12/15/24 13:30:26.307
  STEP: Confirm deletion of VolumeAttachment "va-e2e-njgf7" on node "cncf-master-3" @ 12/15/24 13:30:26.317
  STEP: Create VolumeAttachment "va-e2e-c5lsp" on node "cncf-master-1" @ 12/15/24 13:30:26.324
  STEP: Update the VolumeAttachment "va-e2e-c5lsp" on node "cncf-master-1" with label "va-e2e=updated" @ 12/15/24 13:30:26.33
  STEP: Create VolumeAttachment "va-e2e-gwpgn" on node "cncf-master-3" @ 12/15/24 13:30:26.343
  STEP: Update the VolumeAttachment "va-e2e-gwpgn" on node "cncf-master-3" with label "va-e2e=updated" @ 12/15/24 13:30:26.348
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/15/24 13:30:26.359
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 12/15/24 13:30:26.373
  I1215 13:30:26.377442 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-4291" for this suite. @ 12/15/24 13:30:26.383
• [0.147 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 12/15/24 13:30:26.396
  I1215 13:30:26.396330 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename lease-test @ 12/15/24 13:30:26.397
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:26.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:26.43
  I1215 13:30:26.501247 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-9124" for this suite. @ 12/15/24 13:30:26.504
• [0.124 seconds]
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 12/15/24 13:30:26.52
  I1215 13:30:26.520097 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename watch @ 12/15/24 13:30:26.521
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:26.54
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:26.544
  STEP: creating a watch on configmaps with a certain label @ 12/15/24 13:30:26.547
  STEP: creating a new configmap @ 12/15/24 13:30:26.548
  STEP: modifying the configmap once @ 12/15/24 13:30:26.554
  STEP: changing the label value of the configmap @ 12/15/24 13:30:26.565
  STEP: Expecting to observe a delete notification for the watched object @ 12/15/24 13:30:26.575
  I1215 13:30:26.575803 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2052  0da8e6ab-7f37-4424-a8c6-23017701b12d 5425017 0 2024-12-15 13:30:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-15 13:30:26 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:30:26.576050 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2052  0da8e6ab-7f37-4424-a8c6-23017701b12d 5425018 0 2024-12-15 13:30:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-15 13:30:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:30:26.576246 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2052  0da8e6ab-7f37-4424-a8c6-23017701b12d 5425019 0 2024-12-15 13:30:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-15 13:30:26 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 12/15/24 13:30:26.576
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 12/15/24 13:30:26.585
  STEP: changing the label value of the configmap back @ 12/15/24 13:30:36.585
  STEP: modifying the configmap a third time @ 12/15/24 13:30:36.598
  STEP: deleting the configmap @ 12/15/24 13:30:36.607
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 12/15/24 13:30:36.614
  I1215 13:30:36.614961 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2052  0da8e6ab-7f37-4424-a8c6-23017701b12d 5425108 0 2024-12-15 13:30:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-15 13:30:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:30:36.615074 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2052  0da8e6ab-7f37-4424-a8c6-23017701b12d 5425109 0 2024-12-15 13:30:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-15 13:30:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:30:36.615215 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-2052  0da8e6ab-7f37-4424-a8c6-23017701b12d 5425110 0 2024-12-15 13:30:26 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-12-15 13:30:36 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:30:36.615399 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2052" for this suite. @ 12/15/24 13:30:36.619
• [10.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 12/15/24 13:30:36.627
  I1215 13:30:36.627973 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename field-validation @ 12/15/24 13:30:36.628
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:36.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:36.655
  I1215 13:30:36.658336 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  W1215 13:30:44.219772      21 warnings.go:70] unknown field "alpha"
  W1215 13:30:44.219864      21 warnings.go:70] unknown field "beta"
  W1215 13:30:44.219869      21 warnings.go:70] unknown field "delta"
  W1215 13:30:44.219873      21 warnings.go:70] unknown field "epsilon"
  W1215 13:30:44.219879      21 warnings.go:70] unknown field "gamma"
  I1215 13:30:44.815157 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8100" for this suite. @ 12/15/24 13:30:44.818
• [8.199 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 12/15/24 13:30:44.828
  I1215 13:30:44.828131 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 13:30:44.829
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:44.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:44.854
  STEP: creating a Pod with a static label @ 12/15/24 13:30:44.867
  STEP: watching for Pod to be ready @ 12/15/24 13:30:44.877
  I1215 13:30:44.879539 21 pods.go:945] observed Pod pod-test in namespace pods-6996 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I1215 13:30:44.887279 21 pods.go:945] observed Pod pod-test in namespace pods-6996 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC  }]
  I1215 13:30:44.907364 21 pods.go:945] observed Pod pod-test in namespace pods-6996 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC  }]
  I1215 13:30:46.465050 21 pods.go:948] Found Pod pod-test in namespace pods-6996 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:46 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:46 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:46 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-12-15 13:30:44 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 12/15/24 13:30:46.468
  STEP: getting the Pod and ensuring that it's patched @ 12/15/24 13:30:46.479
  STEP: replacing the Pod's status Ready condition to False @ 12/15/24 13:30:46.492
  STEP: check the Pod again to ensure its Ready conditions are False @ 12/15/24 13:30:46.508
  STEP: deleting the Pod via a Collection with a LabelSelector @ 12/15/24 13:30:46.508
  STEP: watching for the Pod to be deleted @ 12/15/24 13:30:46.519
  I1215 13:30:46.522184 21 pods.go:1058] observed event type MODIFIED
  I1215 13:30:48.470723 21 pods.go:1058] observed event type MODIFIED
  I1215 13:30:48.680485 21 pods.go:1058] observed event type MODIFIED
  I1215 13:30:49.480007 21 pods.go:1058] observed event type MODIFIED
  I1215 13:30:49.498024 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6996" for this suite. @ 12/15/24 13:30:49.505
• [4.689 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 12/15/24 13:30:49.517
  I1215 13:30:49.517340 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 13:30:49.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:49.541
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:49.544
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-7330 @ 12/15/24 13:30:49.547
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 12/15/24 13:30:49.567
  STEP: creating service externalsvc in namespace services-7330 @ 12/15/24 13:30:49.568
  STEP: creating replication controller externalsvc in namespace services-7330 @ 12/15/24 13:30:49.587
  I1215 13:30:49.595248      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-7330, replica count: 2
  I1215 13:30:52.646585      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 12/15/24 13:30:52.651
  I1215 13:30:52.684010 21 resource.go:361] Creating new exec pod
  I1215 13:30:54.707005 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7330 exec execpodmmb5j -- /bin/sh -x -c nslookup nodeport-service.services-7330.svc.cluster.local'
  I1215 13:30:54.876752 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-7330.svc.cluster.local\n"
  I1215 13:30:54.876823 21 builder.go:147] stdout: "Server:\t\t10.233.0.3\nAddress:\t10.233.0.3#53\n\nnodeport-service.services-7330.svc.cluster.local\tcanonical name = externalsvc.services-7330.svc.cluster.local.\nName:\texternalsvc.services-7330.svc.cluster.local\nAddress: 10.233.49.44\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7330, will wait for the garbage collector to delete the pods @ 12/15/24 13:30:54.877
  I1215 13:30:54.946557 21 resources.go:139] Deleting ReplicationController externalsvc took: 13.721707ms
  I1215 13:30:55.047038 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.482659ms
  I1215 13:30:58.168920 21 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I1215 13:30:58.185220 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7330" for this suite. @ 12/15/24 13:30:58.189
• [8.686 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 12/15/24 13:30:58.203
  I1215 13:30:58.203703 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubelet-test @ 12/15/24 13:30:58.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:30:58.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:30:58.232
  I1215 13:31:00.263465 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-584" for this suite. @ 12/15/24 13:31:00.267
• [2.075 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 12/15/24 13:31:00.278
  I1215 13:31:00.278675 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:31:00.279
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:00.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:00.301
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 13:31:00.303
  STEP: Saw pod success @ 12/15/24 13:31:04.329
  I1215 13:31:04.332963 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-7f5b070e-6cf9-4b49-9509-0ecdf4d1c017 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 13:31:04.339
  I1215 13:31:04.363161 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3757" for this suite. @ 12/15/24 13:31:04.367
• [4.098 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 12/15/24 13:31:04.377
  I1215 13:31:04.377545 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/24 13:31:04.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:04.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:04.407
  STEP: Creating ServiceAccount "e2e-sa-h9756"  @ 12/15/24 13:31:04.409
  I1215 13:31:04.424776 21 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-h9756"  @ 12/15/24 13:31:04.424
  I1215 13:31:04.433154 21 service_accounts.go:839] AutomountServiceAccountToken: true
  I1215 13:31:04.433348 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1085" for this suite. @ 12/15/24 13:31:04.437
• [0.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 12/15/24 13:31:04.444
  I1215 13:31:04.444920 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename services @ 12/15/24 13:31:04.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:04.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:04.468
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-7559 @ 12/15/24 13:31:04.472
  STEP: changing the ExternalName service to type=ClusterIP @ 12/15/24 13:31:04.478
  STEP: creating replication controller externalname-service in namespace services-7559 @ 12/15/24 13:31:04.498
  I1215 13:31:04.511647      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-7559, replica count: 2
  I1215 13:31:07.562480      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I1215 13:31:07.562571 21 resource.go:361] Creating new exec pod
  I1215 13:31:10.579879 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7559 exec execpodjg955 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I1215 13:31:10.729116 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I1215 13:31:10.729217 21 builder.go:147] stdout: "externalname-service-gpfws"
  I1215 13:31:10.729412 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=services-7559 exec execpodjg955 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.233.40.14 80'
  I1215 13:31:10.863398 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.233.40.14 80\nConnection to 10.233.40.14 80 port [tcp/http] succeeded!\n"
  I1215 13:31:10.863460 21 builder.go:147] stdout: "externalname-service-vq2w8"
  I1215 13:31:10.863567 21 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I1215 13:31:10.888411 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7559" for this suite. @ 12/15/24 13:31:10.893
• [6.459 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 12/15/24 13:31:10.904
  I1215 13:31:10.904686 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:31:10.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:10.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:10.93
  STEP: Setting up server cert @ 12/15/24 13:31:10.96
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:31:11.204
  STEP: Deploying the webhook pod @ 12/15/24 13:31:11.224
  STEP: Wait for the deployment to be ready @ 12/15/24 13:31:11.24
  I1215 13:31:11.252641 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 13:31:13.264
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:31:13.281
  I1215 13:31:14.282163 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/15/24 13:31:14.289
  STEP: verifying the validating webhook match conditions @ 12/15/24 13:31:14.302
  STEP: updating the validating webhook match conditions @ 12/15/24 13:31:14.306
  STEP: verifying the validating webhook match conditions @ 12/15/24 13:31:14.318
  I1215 13:31:14.401830 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8948" for this suite. @ 12/15/24 13:31:14.406
  STEP: Destroying namespace "webhook-markers-8271" for this suite. @ 12/15/24 13:31:14.425
• [3.529 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 12/15/24 13:31:14.434
  I1215 13:31:14.434679 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/15/24 13:31:14.435
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:14.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:14.463
  STEP: creating a policy with variables @ 12/15/24 13:31:14.474
  STEP: waiting until the marker is denied @ 12/15/24 13:31:14.526
  STEP: testing a replicated Deployment to be allowed @ 12/15/24 13:31:15.434
  STEP: testing a non-replicated ReplicaSet not to be denied @ 12/15/24 13:31:15.457
  I1215 13:31:15.578405 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8386" for this suite. @ 12/15/24 13:31:15.584
• [1.158 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 12/15/24 13:31:15.592
  I1215 13:31:15.592888 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 13:31:15.593
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:15.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:15.631
  STEP: Creating configMap configmap-9686/configmap-test-4027da45-347e-4ba0-b887-ceba6faf56c0 @ 12/15/24 13:31:15.633
  STEP: Creating a pod to test consume configMaps @ 12/15/24 13:31:15.638
  STEP: Saw pod success @ 12/15/24 13:31:19.66
  I1215 13:31:19.671335 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-f8e8be6c-f12e-48c6-afe7-5e7cf9a2059e container env-test: <nil>
  STEP: delete the pod @ 12/15/24 13:31:19.679
  I1215 13:31:19.700506 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9686" for this suite. @ 12/15/24 13:31:19.705
• [4.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 12/15/24 13:31:19.716
  I1215 13:31:19.716785 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:31:19.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:19.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:19.743
  STEP: Setting up server cert @ 12/15/24 13:31:19.778
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:31:20.012
  STEP: Deploying the webhook pod @ 12/15/24 13:31:20.025
  STEP: Wait for the deployment to be ready @ 12/15/24 13:31:20.043
  I1215 13:31:20.051729 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 12/15/24 13:31:22.063
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:31:22.079
  I1215 13:31:23.080093 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 12/15/24 13:31:23.087
  I1215 13:31:23.143156 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2785" for this suite. @ 12/15/24 13:31:23.146
  STEP: Destroying namespace "webhook-markers-4158" for this suite. @ 12/15/24 13:31:23.159
• [3.456 seconds]
------------------------------
SSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 12/15/24 13:31:23.173
  I1215 13:31:23.173022 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename subjectreview @ 12/15/24 13:31:23.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:23.195
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:23.198
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-994" @ 12/15/24 13:31:23.201
  I1215 13:31:23.212237 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-994:e2e"
  I1215 13:31:23.212280 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-994"}
  I1215 13:31:23.212289 21 subjectreviews.go:71] saUID: "91d3f22e-3146-40a3-b1c2-5952aab843d0"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-994:e2e" @ 12/15/24 13:31:23.212
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-994:e2e" @ 12/15/24 13:31:23.212
  I1215 13:31:23.215157 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-994:e2e" api 'list' configmaps in "subjectreview-994" namespace @ 12/15/24 13:31:23.215
  I1215 13:31:23.216419 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-994:e2e" @ 12/15/24 13:31:23.216
  I1215 13:31:23.218218 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I1215 13:31:23.218247 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I1215 13:31:23.218413 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-994" for this suite. @ 12/15/24 13:31:23.222
• [0.058 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 12/15/24 13:31:23.232
  I1215 13:31:23.232261 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename pods @ 12/15/24 13:31:23.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:23.269
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:23.272
  STEP: creating the pod @ 12/15/24 13:31:23.276
  STEP: submitting the pod to kubernetes @ 12/15/24 13:31:23.277
  STEP: verifying the pod is in kubernetes @ 12/15/24 13:31:25.3
  STEP: updating the pod @ 12/15/24 13:31:25.303
  I1215 13:31:25.817186 21 pod_client.go:141] Successfully updated pod "pod-update-0aee5e11-fc8b-40a2-bcfb-a0f1a630c79f"
  STEP: verifying the updated pod is in kubernetes @ 12/15/24 13:31:25.82
  I1215 13:31:25.822963 21 pods.go:391] Pod update OK
  I1215 13:31:25.823141 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4081" for this suite. @ 12/15/24 13:31:25.836
• [2.611 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 12/15/24 13:31:25.845
  I1215 13:31:25.845241 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 13:31:25.846
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:25.875
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:25.877
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 12/15/24 13:31:25.881
  STEP: Saw pod success @ 12/15/24 13:31:29.908
  I1215 13:31:29.911989 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-b6073aaa-292f-42e8-8ad2-fa465f2165d0 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 13:31:29.918
  I1215 13:31:29.943174 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6040" for this suite. @ 12/15/24 13:31:29.947
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 12/15/24 13:31:29.955
  I1215 13:31:29.955730 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename runtimeclass @ 12/15/24 13:31:29.956
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:29.98
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:29.982
  I1215 13:31:32.024865 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5314" for this suite. @ 12/15/24 13:31:32.036
• [2.096 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 12/15/24 13:31:32.052
  I1215 13:31:32.052200 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 13:31:32.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:32.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:32.086
  I1215 13:31:32.090021 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I1215 13:31:32.101409 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I1215 13:31:37.108623 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 12/15/24 13:31:37.108
  I1215 13:31:37.108764 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I1215 13:31:37.118842 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I1215 13:31:37.132670 21 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I1215 13:31:39.142196 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I1215 13:31:39.145229 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I1215 13:31:39.154089 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "897281d4-3e50-43b9-8402-da6df8d23428",
      ResourceVersion: (string) (len=7) "5426250",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866297,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1215 13:31:39.161740 21 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "20a51f60-57ee-43c5-876b-93ee8d453f99",
      ResourceVersion: (string) (len=7) "5426238",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866297,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "897281d4-3e50-43b9-8402-da6df8d23428",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 39 37 32 38 31  64 34 2d 33 65 35 30 2d  |\"897281d4-3e50-|
              00000120  34 33 62 39 2d 38 34 30  32 2d 64 61 36 64 66 38  |43b9-8402-da6df8|
              00000130  64 32 33 34 32 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d23428\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 13:31:39.164239 21 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I1215 13:31:39.164604 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "aa825e1a-5d1d-49db-956f-1ebded388b75",
      ResourceVersion: (string) (len=7) "5426249",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866292,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "897281d4-3e50-43b9-8402-da6df8d23428",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866292,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 38 39 37 32 38 31 64  |"uid\":\"897281d|
              000000b0  34 2d 33 65 35 30 2d 34  33 62 39 2d 38 34 30 32  |4-3e50-43b9-8402|
              000000c0  2d 64 61 36 64 66 38 64  32 33 34 32 38 5c 22 7d  |-da6df8d23428\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 13:31:39.170896 21 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-k8dsj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-k8dsj",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-7960",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b3586d5e-3472-4098-9af7-aa19aef7e8a0",
      ResourceVersion: (string) (len=7) "5426237",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866297,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "20a51f60-57ee-43c5-876b-93ee8d453f99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 30  61 35 31 66 36 30 2d 35  |d\":\"20a51f60-5|
              00000090  37 65 65 2d 34 33 63 35  2d 38 37 36 62 2d 39 33  |7ee-43c5-876b-93|
              000000a0  65 65 38 64 34 35 33 66  39 39 5c 22 7d 22 3a 7b  |ee8d453f99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 30 2e 30 2e 32 34 33  5c 22 7d 22 3a 7b 22 2e  |.0.0.243\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-txkq2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-txkq2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866298,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) (len=10) "10.0.0.243",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.0.0.243"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866297,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63869866298,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=77) "containerd://c1bb36f4f5ef84438e299455c5306bd63f91055fd371832d95280b1b5a97abce",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 13:31:39.172114 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7960" for this suite. @ 12/15/24 13:31:39.176
• [7.136 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 12/15/24 13:31:39.189
  I1215 13:31:39.189308 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename namespaces @ 12/15/24 13:31:39.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:39.217
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:39.219
  STEP: Creating a test namespace @ 12/15/24 13:31:39.222
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:39.242
  STEP: Creating a pod in the namespace @ 12/15/24 13:31:39.244
  STEP: Waiting for the pod to have running status @ 12/15/24 13:31:39.252
  STEP: Deleting the namespace @ 12/15/24 13:31:41.26
  STEP: Waiting for the namespace to be removed. @ 12/15/24 13:31:41.27
  STEP: Recreating the namespace @ 12/15/24 13:31:52.275
  STEP: Verifying there are no pods in the namespace @ 12/15/24 13:31:52.302
  I1215 13:31:52.305572 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1650" for this suite. @ 12/15/24 13:31:52.309
  STEP: Destroying namespace "nsdeletetest-673" for this suite. @ 12/15/24 13:31:52.316
  I1215 13:31:52.319673 21 framework.go:370] Namespace nsdeletetest-673 was already deleted
  STEP: Destroying namespace "nsdeletetest-2876" for this suite. @ 12/15/24 13:31:52.319
• [13.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 12/15/24 13:31:52.328
  I1215 13:31:52.328336 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 13:31:52.329
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:52.353
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:52.356
  STEP: Creating projection with secret that has name secret-emptykey-test-297023ea-e6e2-4f29-8be7-8c8323d3c3b4 @ 12/15/24 13:31:52.359
  I1215 13:31:52.361115 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6702" for this suite. @ 12/15/24 13:31:52.365
• [0.048 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 12/15/24 13:31:52.376
  I1215 13:31:52.377053 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename aggregator @ 12/15/24 13:31:52.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:31:52.404
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:31:52.406
  I1215 13:31:52.409692 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Registering the sample API server. @ 12/15/24 13:31:52.41
  I1215 13:31:52.960090 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I1215 13:31:53.006647 21 deployment.go:222] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  I1215 13:31:55.065533 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:31:57.070427 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:31:59.072589 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:01.071239 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:03.072136 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:05.069834 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:07.097651 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:09.071333 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:11.073491 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:13.070619 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:15.072060 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:17.072019 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:19.071666 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.December, 15, 13, 31, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I1215 13:32:21.195581 21 aggregator.go:755] Waited 115.914415ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 12/15/24 13:32:21.242
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 12/15/24 13:32:21.245
  STEP: List APIServices @ 12/15/24 13:32:21.257
  I1215 13:32:21.263972 21 aggregator.go:556] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 12/15/24 13:32:21.264
  I1215 13:32:21.273907 21 aggregator.go:581] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 12/15/24 13:32:21.273
  I1215 13:32:21.286885 21 aggregator.go:607] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.December, 15, 13, 32, 21, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 12/15/24 13:32:21.286
  I1215 13:32:21.290253 21 aggregator.go:625] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-12-15 13:32:21 +0000 UTC Passed all checks passed}
  I1215 13:32:21.290293 21 aggregator.go:621] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1215 13:32:21.290306 21 aggregator.go:631] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 12/15/24 13:32:21.29
  I1215 13:32:21.308843 21 aggregator.go:647] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-600231588" @ 12/15/24 13:32:21.309
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 12/15/24 13:32:21.321
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 12/15/24 13:32:21.329
  STEP: Patch APIService Status @ 12/15/24 13:32:21.333
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 12/15/24 13:32:21.342
  I1215 13:32:21.347055 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-12-15 13:32:21 +0000 UTC Passed all checks passed}
  I1215 13:32:21.347102 21 aggregator.go:725] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I1215 13:32:21.347127 21 aggregator.go:721] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I1215 13:32:21.347148 21 aggregator.go:731] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 12/15/24 13:32:21.347
  STEP: Confirm that the generated APIService has been deleted @ 12/15/24 13:32:21.359
  I1215 13:32:21.359573 21 aggregator.go:792] Requesting list of APIServices to confirm quantity
  I1215 13:32:21.364502 21 aggregator.go:802] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I1215 13:32:21.364537 21 aggregator.go:744] APIService v1alpha1.wardle.example.com has been deleted.
  I1215 13:32:21.967809 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9658" for this suite. @ 12/15/24 13:32:21.971
• [29.602 seconds]
------------------------------
S
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 12/15/24 13:32:21.979
  I1215 13:32:21.979789 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename controllerrevisions @ 12/15/24 13:32:21.98
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:32:21.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:32:22.003
  STEP: Creating DaemonSet "e2e-xqpdw-daemon-set" @ 12/15/24 13:32:22.032
  STEP: Check that daemon pods launch on every node of the cluster. @ 12/15/24 13:32:22.039
  I1215 13:32:22.050480 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xqpdw-daemon-set: 0
  I1215 13:32:22.050536 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 13:32:23.048795 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xqpdw-daemon-set: 0
  I1215 13:32:23.048854 21 fixtures.go:130] Node cncf-master-1 is running 0 daemon pod, expected 1
  I1215 13:32:24.048235 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xqpdw-daemon-set: 3
  I1215 13:32:24.048287 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-xqpdw-daemon-set
  STEP: Confirm DaemonSet "e2e-xqpdw-daemon-set" successfully created with "daemonset-name=e2e-xqpdw-daemon-set" label @ 12/15/24 13:32:24.051
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-xqpdw-daemon-set" @ 12/15/24 13:32:24.058
  I1215 13:32:24.062175 21 controller_revision.go:162] Located ControllerRevision: "e2e-xqpdw-daemon-set-75d74d5c59"
  STEP: Patching ControllerRevision "e2e-xqpdw-daemon-set-75d74d5c59" @ 12/15/24 13:32:24.064
  I1215 13:32:24.073565 21 controller_revision.go:173] e2e-xqpdw-daemon-set-75d74d5c59 has been patched
  STEP: Create a new ControllerRevision @ 12/15/24 13:32:24.073
  I1215 13:32:24.081835 21 controller_revision.go:191] Created ControllerRevision: e2e-xqpdw-daemon-set-7b749b88cc
  STEP: Confirm that there are two ControllerRevisions @ 12/15/24 13:32:24.081
  I1215 13:32:24.081938 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1215 13:32:24.084554 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-xqpdw-daemon-set-75d74d5c59" @ 12/15/24 13:32:24.084
  STEP: Confirm that there is only one ControllerRevision @ 12/15/24 13:32:24.096
  I1215 13:32:24.096346 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1215 13:32:24.099066 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-xqpdw-daemon-set-7b749b88cc" @ 12/15/24 13:32:24.101
  I1215 13:32:24.112155 21 controller_revision.go:220] e2e-xqpdw-daemon-set-7b749b88cc has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 12/15/24 13:32:24.112
  W1215 13:32:24.122975      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 12/15/24 13:32:24.123
  I1215 13:32:24.123261 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1215 13:32:25.124163 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1215 13:32:25.128993 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-xqpdw-daemon-set-7b749b88cc=updated" @ 12/15/24 13:32:25.129
  STEP: Confirm that there is only one ControllerRevision @ 12/15/24 13:32:25.139
  I1215 13:32:25.139487 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I1215 13:32:25.143332 21 controller_revision.go:265] Found 1 ControllerRevisions
  I1215 13:32:25.151841 21 controller_revision.go:246] ControllerRevision "e2e-xqpdw-daemon-set-6588558bd8" has revision 3
  STEP: Deleting DaemonSet "e2e-xqpdw-daemon-set" @ 12/15/24 13:32:25.156
  STEP: deleting DaemonSet.extensions e2e-xqpdw-daemon-set in namespace controllerrevisions-9876, will wait for the garbage collector to delete the pods @ 12/15/24 13:32:25.156
  I1215 13:32:25.220811 21 resources.go:139] Deleting DaemonSet.extensions e2e-xqpdw-daemon-set took: 10.480721ms
  I1215 13:32:25.321041 21 resources.go:163] Terminating DaemonSet.extensions e2e-xqpdw-daemon-set pods took: 100.223879ms
  I1215 13:32:27.423543 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-xqpdw-daemon-set: 0
  I1215 13:32:27.423764 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-xqpdw-daemon-set
  I1215 13:32:27.427024 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5426725"},"items":null}

  I1215 13:32:27.429674 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5426725"},"items":null}

  I1215 13:32:27.442451 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-9876" for this suite. @ 12/15/24 13:32:27.446
• [5.474 seconds]
------------------------------
SS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 12/15/24 13:32:27.453
  I1215 13:32:27.453487 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 13:32:27.455
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:32:27.48
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:32:27.482
  STEP: Creating a pod to test downward api env vars @ 12/15/24 13:32:27.486
  STEP: Saw pod success @ 12/15/24 13:32:31.512
  I1215 13:32:31.515739 21 output.go:196] Trying to get logs from node cncf-master-1 pod downward-api-fe95ca8d-db1b-473a-b2ed-a2c3e79cf190 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 13:32:31.523
  I1215 13:32:31.549955 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7059" for this suite. @ 12/15/24 13:32:31.555
• [4.110 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 12/15/24 13:32:31.563
  I1215 13:32:31.563775 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename aggregateddiscovery @ 12/15/24 13:32:31.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:32:31.592
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:32:31.595
  I1215 13:32:31.604390 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:32:39.688147 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-1083" for this suite. @ 12/15/24 13:32:39.694
• [8.139 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 12/15/24 13:32:39.703
  I1215 13:32:39.703392 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 13:32:39.704
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:32:39.728
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:32:39.732
  STEP: set up a multi version CRD @ 12/15/24 13:32:39.735
  I1215 13:32:39.736214 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: mark a version not serverd @ 12/15/24 13:32:49.76
  STEP: check the unserved version gets removed @ 12/15/24 13:32:49.785
  STEP: check the other version is not changed @ 12/15/24 13:32:51.575
  I1215 13:32:55.694954 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6189" for this suite. @ 12/15/24 13:32:55.702
• [16.010 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 12/15/24 13:32:55.713
  I1215 13:32:55.713656 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename namespaces @ 12/15/24 13:32:55.714
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:32:55.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:32:55.741
  STEP: Creating a test namespace @ 12/15/24 13:32:55.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:32:55.763
  STEP: Creating a service in the namespace @ 12/15/24 13:32:55.765
  STEP: Deleting the namespace @ 12/15/24 13:32:55.778
  STEP: Waiting for the namespace to be removed. @ 12/15/24 13:32:55.791
  STEP: Recreating the namespace @ 12/15/24 13:33:01.796
  STEP: Verifying there is no service in the namespace @ 12/15/24 13:33:01.821
  I1215 13:33:01.828492 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8974" for this suite. @ 12/15/24 13:33:01.832
  STEP: Destroying namespace "nsdeletetest-598" for this suite. @ 12/15/24 13:33:01.84
  I1215 13:33:01.842978 21 framework.go:370] Namespace nsdeletetest-598 was already deleted
  STEP: Destroying namespace "nsdeletetest-9904" for this suite. @ 12/15/24 13:33:01.843
• [6.137 seconds]
------------------------------
SSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 12/15/24 13:33:01.85
  I1215 13:33:01.850898 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename endpointslice @ 12/15/24 13:33:01.852
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:01.873
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:01.876
  I1215 13:33:03.937636 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-1960" for this suite. @ 12/15/24 13:33:03.941
• [2.098 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 12/15/24 13:33:03.948
  I1215 13:33:03.948974 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 13:33:03.95
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:03.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:03.98
  STEP: validating api versions @ 12/15/24 13:33:03.983
  I1215 13:33:03.983227 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-9600 api-versions'
  I1215 13:33:04.077219 21 builder.go:146] stderr: ""
  I1215 13:33:04.077298 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncilium.io/v2\ncilium.io/v2alpha1\ncoordination.k8s.io/v1\ncore.strimzi.io/v1beta2\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nextensions.istio.io/v1alpha1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nkafka.strimzi.io/v1alpha1\nkafka.strimzi.io/v1beta1\nkafka.strimzi.io/v1beta2\nnetworking.istio.io/v1\nnetworking.istio.io/v1alpha3\nnetworking.istio.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nsecurity.istio.io/v1\nsecurity.istio.io/v1beta1\nstorage.k8s.io/v1\ntelemetry.istio.io/v1\ntelemetry.istio.io/v1alpha1\nv1\n"
  I1215 13:33:04.077675 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9600" for this suite. @ 12/15/24 13:33:04.082
• [0.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 12/15/24 13:33:04.091
  I1215 13:33:04.091217 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:33:04.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:04.11
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:04.112
  STEP: Setting up server cert @ 12/15/24 13:33:04.15
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:33:04.553
  STEP: Deploying the webhook pod @ 12/15/24 13:33:04.566
  STEP: Wait for the deployment to be ready @ 12/15/24 13:33:04.585
  I1215 13:33:04.599426 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 12/15/24 13:33:06.615
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:33:06.633
  I1215 13:33:07.634546 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 12/15/24 13:33:07.642
  STEP: create a pod that should be updated by the webhook @ 12/15/24 13:33:07.66
  I1215 13:33:07.750463 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5845" for this suite. @ 12/15/24 13:33:07.756
  STEP: Destroying namespace "webhook-markers-5493" for this suite. @ 12/15/24 13:33:07.767
• [3.691 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:796
  STEP: Creating a kubernetes client @ 12/15/24 13:33:07.782
  I1215 13:33:07.782559 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename statefulset @ 12/15/24 13:33:07.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:07.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:07.813
  STEP: Creating service test in namespace statefulset-872 @ 12/15/24 13:33:07.816
  STEP: Looking for a node to schedule stateful set and pod @ 12/15/24 13:33:07.829
  STEP: Creating pod with conflicting port in namespace statefulset-872 @ 12/15/24 13:33:07.834
  STEP: Waiting until pod test-pod will start running in namespace statefulset-872 @ 12/15/24 13:33:07.847
  STEP: Creating statefulset with conflicting port in namespace statefulset-872 @ 12/15/24 13:33:09.857
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-872 @ 12/15/24 13:33:09.866
  I1215 13:33:09.902250 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-872, name: ss-0, uid: f05599e0-d539-494e-9409-bfe5c7c0f5d4, status phase: Pending. Waiting for statefulset controller to delete.
  I1215 13:33:09.925122 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-872, name: ss-0, uid: f05599e0-d539-494e-9409-bfe5c7c0f5d4, status phase: Failed. Waiting for statefulset controller to delete.
  I1215 13:33:09.942005 21 statefulset.go:869] Observed stateful pod in namespace: statefulset-872, name: ss-0, uid: f05599e0-d539-494e-9409-bfe5c7c0f5d4, status phase: Failed. Waiting for statefulset controller to delete.
  I1215 13:33:09.947660 21 statefulset.go:863] Observed delete event for stateful pod ss-0 in namespace statefulset-872
  STEP: Removing pod with conflicting port in namespace statefulset-872 @ 12/15/24 13:33:09.947
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-872 and will be in running state @ 12/15/24 13:33:09.966
  I1215 13:33:11.981452 21 statefulset.go:138] Deleting all statefulset in ns statefulset-872
  I1215 13:33:11.985536 21 rest.go:150] Scaling statefulset ss to 0
  I1215 13:33:22.002104 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I1215 13:33:22.005607 21 rest.go:88] Deleting statefulset ss
  I1215 13:33:22.021219 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-872" for this suite. @ 12/15/24 13:33:22.027
• [14.252 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 12/15/24 13:33:22.035
  I1215 13:33:22.035108 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename watch @ 12/15/24 13:33:22.036
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:22.065
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:22.067
  STEP: getting a starting resourceVersion @ 12/15/24 13:33:22.07
  STEP: starting a background goroutine to produce watch events @ 12/15/24 13:33:22.073
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 12/15/24 13:33:22.073
  I1215 13:33:24.844814 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3491" for this suite. @ 12/15/24 13:33:24.894
• [2.910 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 12/15/24 13:33:24.945
  I1215 13:33:24.945627 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename validating-admission-policy @ 12/15/24 13:33:24.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:24.977
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:24.981
  STEP: getting /apis @ 12/15/24 13:33:25
  STEP: getting /apis/admissionregistration.k8s.io @ 12/15/24 13:33:25.005
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 12/15/24 13:33:25.006
  STEP: creating @ 12/15/24 13:33:25.007
  STEP: getting @ 12/15/24 13:33:25.038
  STEP: listing @ 12/15/24 13:33:25.041
  STEP: watching @ 12/15/24 13:33:25.045
  I1215 13:33:25.046020 21 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 12/15/24 13:33:25.047
  STEP: updating @ 12/15/24 13:33:25.063
  I1215 13:33:25.073119 21 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  I1215 13:33:25.073191 21 validatingadmissionpolicy.go:568] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 12/15/24 13:33:25.073
  STEP: patching /status @ 12/15/24 13:33:25.076
  STEP: updating /status @ 12/15/24 13:33:25.095
  STEP: deleting @ 12/15/24 13:33:25.11
  STEP: deleting a collection @ 12/15/24 13:33:25.13
  I1215 13:33:25.150842 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8324" for this suite. @ 12/15/24 13:33:25.154
• [0.220 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 12/15/24 13:33:25.165
  I1215 13:33:25.165574 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 13:33:25.166
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:25.186
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:25.188
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 12/15/24 13:33:25.191
  I1215 13:33:25.191823 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:33:32.590135 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:33:46.073716 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6204" for this suite. @ 12/15/24 13:33:46.081
• [20.930 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 12/15/24 13:33:46.095
  I1215 13:33:46.095726 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:33:46.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:46.12
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:46.123
  STEP: Creating configMap with name projected-configmap-test-volume-map-bd8319ed-9e2e-4e7e-a03b-9a3674da5c2f @ 12/15/24 13:33:46.126
  STEP: Creating a pod to test consume configMaps @ 12/15/24 13:33:46.132
  STEP: Saw pod success @ 12/15/24 13:33:50.159
  I1215 13:33:50.163770 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-projected-configmaps-c7d3d16d-a052-4a15-81f6-7890b7b9b8f6 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 13:33:50.175
  I1215 13:33:50.195379 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8930" for this suite. @ 12/15/24 13:33:50.198
• [4.111 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 12/15/24 13:33:50.207
  I1215 13:33:50.207467 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename replication-controller @ 12/15/24 13:33:50.208
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:50.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:50.233
  STEP: creating a ReplicationController @ 12/15/24 13:33:50.239
  STEP: waiting for RC to be added @ 12/15/24 13:33:50.247
  STEP: waiting for available Replicas @ 12/15/24 13:33:50.247
  STEP: patching ReplicationController @ 12/15/24 13:33:52.063
  STEP: waiting for RC to be modified @ 12/15/24 13:33:52.08
  STEP: patching ReplicationController status @ 12/15/24 13:33:52.08
  STEP: waiting for RC to be modified @ 12/15/24 13:33:52.087
  STEP: waiting for available Replicas @ 12/15/24 13:33:52.087
  STEP: fetching ReplicationController status @ 12/15/24 13:33:52.097
  STEP: patching ReplicationController scale @ 12/15/24 13:33:52.101
  STEP: waiting for RC to be modified @ 12/15/24 13:33:52.109
  STEP: waiting for ReplicationController's scale to be the max amount @ 12/15/24 13:33:52.109
  STEP: fetching ReplicationController; ensuring that it's patched @ 12/15/24 13:33:53.761
  STEP: updating ReplicationController status @ 12/15/24 13:33:53.764
  STEP: waiting for RC to be modified @ 12/15/24 13:33:53.774
  STEP: listing all ReplicationControllers @ 12/15/24 13:33:53.774
  STEP: checking that ReplicationController has expected values @ 12/15/24 13:33:53.781
  STEP: deleting ReplicationControllers by collection @ 12/15/24 13:33:53.781
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 12/15/24 13:33:53.793
  I1215 13:33:53.868303 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E1215 13:33:53.868747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-5473" for this suite. @ 12/15/24 13:33:53.872
• [3.677 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 12/15/24 13:33:53.884
  I1215 13:33:53.884783 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename watch @ 12/15/24 13:33:53.885
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:33:53.91
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:33:53.913
  STEP: creating a watch on configmaps with label A @ 12/15/24 13:33:53.916
  STEP: creating a watch on configmaps with label B @ 12/15/24 13:33:53.917
  STEP: creating a watch on configmaps with label A or B @ 12/15/24 13:33:53.918
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 12/15/24 13:33:53.92
  I1215 13:33:53.925747 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427689 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:33:53.925982 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427689 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 12/15/24 13:33:53.926
  I1215 13:33:53.936209 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427690 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:33:53.936407 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427690 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 12/15/24 13:33:53.936
  I1215 13:33:53.945693 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427691 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:33:53.945787 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427691 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 12/15/24 13:33:53.945
  I1215 13:33:53.952071 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427692 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:33:53.952343 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-3882  ce25be32-f081-4671-90c3-e802af5d1497 5427692 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 12/15/24 13:33:53.952
  I1215 13:33:53.963115 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3882  22abb9ce-286c-4796-8263-db98ee50f958 5427693 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:33:53.963289 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3882  22abb9ce-286c-4796-8263-db98ee50f958 5427693 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1215 13:33:54.869622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:33:55.870347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:33:56.870952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:33:57.871821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:33:58.872310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:33:59.872784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:00.873510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:01.874143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:02.874457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:03.874577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 12/15/24 13:34:03.963
  I1215 13:34:03.973921 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3882  22abb9ce-286c-4796-8263-db98ee50f958 5427772 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:34:03.974013 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-3882  22abb9ce-286c-4796-8263-db98ee50f958 5427772 0 2024-12-15 13:33:53 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-12-15 13:33:53 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  E1215 13:34:04.875215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:05.875842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:06.876188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:07.876522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:08.876830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:09.877461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:10.877538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:11.878247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:12.878547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:13.879460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:34:13.975030 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-3882" for this suite. @ 12/15/24 13:34:13.998
• [20.124 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 12/15/24 13:34:14.009
  I1215 13:34:14.009819 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 13:34:14.01
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:34:14.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:34:14.081
  STEP: Creating a pod to test downward api env vars @ 12/15/24 13:34:14.085
  E1215 13:34:14.879950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:15.880777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:16.880908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:17.881379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/24 13:34:18.116
  I1215 13:34:18.120011 21 output.go:196] Trying to get logs from node cncf-master-1 pod downward-api-313763ef-2bcc-4f1f-aeaa-0bc5f891dab2 container dapi-container: <nil>
  STEP: delete the pod @ 12/15/24 13:34:18.128
  I1215 13:34:18.156012 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7479" for this suite. @ 12/15/24 13:34:18.159
• [4.160 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 12/15/24 13:34:18.173
  I1215 13:34:18.173669 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/15/24 13:34:18.174
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:34:18.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:34:18.2
  STEP: creating a target pod @ 12/15/24 13:34:18.202
  E1215 13:34:18.882183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:19.882802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/15/24 13:34:20.223
  E1215 13:34:20.883180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:21.883447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/15/24 13:34:22.241
  I1215 13:34:22.241468 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1309 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:34:22.241519 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:34:22.242603 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:34:22.242692 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-1309/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1215 13:34:22.308776 21 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 12/15/24 13:34:22.316
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 12/15/24 13:34:22.321
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 12/15/24 13:34:22.338
  I1215 13:34:22.342555 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1309" for this suite. @ 12/15/24 13:34:22.352
• [4.186 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 12/15/24 13:34:22.36
  I1215 13:34:22.360197 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename var-expansion @ 12/15/24 13:34:22.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:34:22.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:34:22.389
  STEP: creating the pod @ 12/15/24 13:34:22.392
  STEP: waiting for pod running @ 12/15/24 13:34:22.405
  E1215 13:34:22.884465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:23.885055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 12/15/24 13:34:24.415
  I1215 13:34:24.419187 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-978 PodName:var-expansion-453248d6-de6b-4646-81ae-440a2ec0530c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:34:24.419331 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:34:24.420021 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:34:24.420144 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-978/pods/var-expansion-453248d6-de6b-4646-81ae-440a2ec0530c/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 12/15/24 13:34:24.48
  I1215 13:34:24.484369 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-978 PodName:var-expansion-453248d6-de6b-4646-81ae-440a2ec0530c ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:34:24.484417 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:34:24.485041 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:34:24.485106 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/var-expansion-978/pods/var-expansion-453248d6-de6b-4646-81ae-440a2ec0530c/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 12/15/24 13:34:24.544
  E1215 13:34:24.885496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:34:25.065924 21 pod_client.go:141] Successfully updated pod "var-expansion-453248d6-de6b-4646-81ae-440a2ec0530c"
  STEP: waiting for annotated pod running @ 12/15/24 13:34:25.066
  STEP: deleting the pod gracefully @ 12/15/24 13:34:25.069
  I1215 13:34:25.069441 21 delete.go:62] Deleting pod "var-expansion-453248d6-de6b-4646-81ae-440a2ec0530c" in namespace "var-expansion-978"
  I1215 13:34:25.086332 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-453248d6-de6b-4646-81ae-440a2ec0530c" to be fully deleted
  E1215 13:34:25.885957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:26.886383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:27.886545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:28.886612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:29.887709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:30.888568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:31.889593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:32.890526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:33.890885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:34.891553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:35.892507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:36.892851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:37.893809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:38.894210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:39.894420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:40.895120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:41.895711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:42.896608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:43.896668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:44.897383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:45.898067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:46.898390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:47.898613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:48.899738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:49.900149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:50.900558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:51.900907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:52.901536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:53.901696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:54.901807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:55.902318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:56.902601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:57.903712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:34:58.904399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:34:59.180400 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-978" for this suite. @ 12/15/24 13:34:59.185
• [36.835 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 12/15/24 13:34:59.196
  I1215 13:34:59.196373 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 13:34:59.197
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:34:59.228
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:34:59.231
  STEP: creating the pod @ 12/15/24 13:34:59.233
  I1215 13:34:59.234151 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 create -f -'
  I1215 13:34:59.378640 21 builder.go:146] stderr: ""
  I1215 13:34:59.378698 21 builder.go:147] stdout: "pod/pause created\n"
  E1215 13:34:59.904258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:00.904931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 12/15/24 13:35:01.389
  I1215 13:35:01.390084 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 label pods pause testing-label=testing-label-value'
  I1215 13:35:01.477675 21 builder.go:146] stderr: ""
  I1215 13:35:01.477733 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 12/15/24 13:35:01.477
  I1215 13:35:01.477962 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 get pod pause -L testing-label'
  I1215 13:35:01.573399 21 builder.go:146] stderr: ""
  I1215 13:35:01.573477 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 12/15/24 13:35:01.574
  I1215 13:35:01.574689 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 label pods pause testing-label-'
  I1215 13:35:01.692876 21 builder.go:146] stderr: ""
  I1215 13:35:01.692968 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 12/15/24 13:35:01.692
  I1215 13:35:01.693106 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 get pod pause -L testing-label'
  I1215 13:35:01.764167 21 builder.go:146] stderr: ""
  I1215 13:35:01.764246 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    \n"
  STEP: using delete to clean up resources @ 12/15/24 13:35:01.764
  I1215 13:35:01.764491 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 delete --grace-period=0 --force -f -'
  I1215 13:35:01.852153 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I1215 13:35:01.852225 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I1215 13:35:01.852561 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 get rc,svc -l name=pause --no-headers'
  E1215 13:35:01.905481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:35:01.939870 21 builder.go:146] stderr: "No resources found in kubectl-1242 namespace.\n"
  I1215 13:35:01.939929 21 builder.go:147] stdout: ""
  I1215 13:35:01.939997 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-1242 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I1215 13:35:02.008245 21 builder.go:146] stderr: ""
  I1215 13:35:02.008323 21 builder.go:147] stdout: ""
  I1215 13:35:02.008458 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1242" for this suite. @ 12/15/24 13:35:02.014
• [2.830 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 12/15/24 13:35:02.026
  I1215 13:35:02.026532 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 13:35:02.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:02.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:02.065
  STEP: Creating configMap with name configmap-test-volume-map-b97021b3-ecaa-4bcd-964d-c91ee65f682b @ 12/15/24 13:35:02.067
  STEP: Creating a pod to test consume configMaps @ 12/15/24 13:35:02.077
  E1215 13:35:02.906014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:03.906318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:04.906627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:05.907418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/24 13:35:06.117
  I1215 13:35:06.120730 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-9a16e975-687b-43c5-b753-4d4f187da039 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 13:35:06.127
  I1215 13:35:06.156078 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9473" for this suite. @ 12/15/24 13:35:06.16
• [4.146 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 12/15/24 13:35:06.173
  I1215 13:35:06.173027 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename secrets @ 12/15/24 13:35:06.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:06.199
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:06.202
  STEP: creating a secret @ 12/15/24 13:35:06.205
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 12/15/24 13:35:06.211
  STEP: patching the secret @ 12/15/24 13:35:06.222
  STEP: deleting the secret using a LabelSelector @ 12/15/24 13:35:06.232
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 12/15/24 13:35:06.243
  I1215 13:35:06.254930 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4408" for this suite. @ 12/15/24 13:35:06.259
• [0.094 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 12/15/24 13:35:06.267
  I1215 13:35:06.267898 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:35:06.269
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:06.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:06.293
  STEP: Setting up server cert @ 12/15/24 13:35:06.326
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:35:06.695
  STEP: Deploying the webhook pod @ 12/15/24 13:35:06.72
  STEP: Wait for the deployment to be ready @ 12/15/24 13:35:06.735
  I1215 13:35:06.753204 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E1215 13:35:06.908286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:07.908739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/24 13:35:08.766
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:35:08.782
  E1215 13:35:08.911602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:35:09.782491 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 12/15/24 13:35:09.79
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/24 13:35:09.79
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 12/15/24 13:35:09.813
  E1215 13:35:09.912548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 12/15/24 13:35:10.826
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/24 13:35:10.826
  E1215 13:35:10.913188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is longer than webhook latency @ 12/15/24 13:35:11.869
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/24 13:35:11.869
  E1215 13:35:11.913395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:12.913665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:13.913978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:14.914523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:15.915112      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 12/15/24 13:35:16.912
  STEP: Registering slow webhook via the AdmissionRegistration API @ 12/15/24 13:35:16.912
  E1215 13:35:16.916121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:17.916993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:18.917344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:19.917467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:20.918064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:21.918343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:35:22.029359 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8825" for this suite. @ 12/15/24 13:35:22.039
  STEP: Destroying namespace "webhook-markers-8516" for this suite. @ 12/15/24 13:35:22.05
• [15.790 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 12/15/24 13:35:22.059
  I1215 13:35:22.059145 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename csiinlinevolumes @ 12/15/24 13:35:22.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:22.084
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:22.089
  STEP: Creating two CSIDrivers @ 12/15/24 13:35:22.092
  STEP: Getting "inline-driver-af5ce091-e659-4cbc-91ae-38fec60b77ec" & "inline-driver-eae9b62d-35df-4f5a-803c-f682b6592057" @ 12/15/24 13:35:22.142
  STEP: Patching the CSIDriver "inline-driver-eae9b62d-35df-4f5a-803c-f682b6592057" @ 12/15/24 13:35:22.152
  STEP: Updating the CSIDriver "inline-driver-eae9b62d-35df-4f5a-803c-f682b6592057" @ 12/15/24 13:35:22.16
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-156" @ 12/15/24 13:35:22.173
  STEP: Deleting CSIDriver "inline-driver-af5ce091-e659-4cbc-91ae-38fec60b77ec" @ 12/15/24 13:35:22.176
  STEP: Confirm deletion of CSIDriver "inline-driver-af5ce091-e659-4cbc-91ae-38fec60b77ec" @ 12/15/24 13:35:22.183
  STEP: Deleting CSIDriver "inline-driver-eae9b62d-35df-4f5a-803c-f682b6592057" via DeleteCollection @ 12/15/24 13:35:22.189
  STEP: Confirm deletion of CSIDriver "inline-driver-eae9b62d-35df-4f5a-803c-f682b6592057" @ 12/15/24 13:35:22.198
  I1215 13:35:22.201049 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-156" for this suite. @ 12/15/24 13:35:22.205
• [0.154 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 12/15/24 13:35:22.215
  I1215 13:35:22.215428 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename crd-publish-openapi @ 12/15/24 13:35:22.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:22.241
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:22.244
  I1215 13:35:22.247653 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  E1215 13:35:22.919468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:23.920515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:24.921505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:25.921785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:26.922606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:27.922795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:28.925275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 12/15/24 13:35:29.868
  I1215 13:35:29.869102 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4642 --namespace=crd-publish-openapi-4642 create -f -'
  E1215 13:35:29.925582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:35:29.995290 21 builder.go:146] stderr: ""
  I1215 13:35:29.995508 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1406-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1215 13:35:29.995813 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4642 --namespace=crd-publish-openapi-4642 delete e2e-test-crd-publish-openapi-1406-crds test-cr'
  I1215 13:35:30.103898 21 builder.go:146] stderr: ""
  I1215 13:35:30.104015 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1406-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I1215 13:35:30.104094 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4642 --namespace=crd-publish-openapi-4642 apply -f -'
  I1215 13:35:30.208458 21 builder.go:146] stderr: ""
  I1215 13:35:30.208548 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1406-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I1215 13:35:30.208606 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4642 --namespace=crd-publish-openapi-4642 delete e2e-test-crd-publish-openapi-1406-crds test-cr'
  I1215 13:35:30.279906 21 builder.go:146] stderr: ""
  I1215 13:35:30.279995 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1406-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 12/15/24 13:35:30.28
  I1215 13:35:30.280151 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=crd-publish-openapi-4642 explain e2e-test-crd-publish-openapi-1406-crds'
  I1215 13:35:30.353299 21 builder.go:146] stderr: ""
  I1215 13:35:30.353395 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-1406-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E1215 13:35:30.926498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:31.926494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:35:32.847039 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4642" for this suite. @ 12/15/24 13:35:32.855
• [10.650 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 12/15/24 13:35:32.865
  I1215 13:35:32.865030 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename watch @ 12/15/24 13:35:32.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:32.895
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:32.898
  STEP: creating a watch on configmaps @ 12/15/24 13:35:32.9
  STEP: creating a new configmap @ 12/15/24 13:35:32.901
  STEP: modifying the configmap once @ 12/15/24 13:35:32.907
  STEP: closing the watch once it receives two notifications @ 12/15/24 13:35:32.916
  I1215 13:35:32.916360 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9363  8fb9cf9c-15a9-413d-aceb-ac62d206ff68 5428467 0 2024-12-15 13:35:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-15 13:35:32 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:35:32.916676 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9363  8fb9cf9c-15a9-413d-aceb-ac62d206ff68 5428468 0 2024-12-15 13:35:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-15 13:35:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 12/15/24 13:35:32.916
  E1215 13:35:32.926793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 12/15/24 13:35:32.927
  STEP: deleting the configmap @ 12/15/24 13:35:32.929
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 12/15/24 13:35:32.935
  I1215 13:35:32.935737 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9363  8fb9cf9c-15a9-413d-aceb-ac62d206ff68 5428469 0 2024-12-15 13:35:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-15 13:35:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:35:32.935872 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-9363  8fb9cf9c-15a9-413d-aceb-ac62d206ff68 5428470 0 2024-12-15 13:35:32 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-12-15 13:35:32 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I1215 13:35:32.935979 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9363" for this suite. @ 12/15/24 13:35:32.94
• [0.083 seconds]
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 12/15/24 13:35:32.948
  I1215 13:35:32.948046 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename namespaces @ 12/15/24 13:35:32.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:32.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:32.974
  STEP: Read namespace status @ 12/15/24 13:35:32.976
  I1215 13:35:32.979346 21 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 12/15/24 13:35:32.979
  I1215 13:35:32.993864 21 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 12/15/24 13:35:32.994
  I1215 13:35:33.005087 21 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I1215 13:35:33.005402 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-3432" for this suite. @ 12/15/24 13:35:33.009
• [0.071 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 12/15/24 13:35:33.019
  I1215 13:35:33.019843 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename container-runtime @ 12/15/24 13:35:33.02
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:33.046
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:33.049
  STEP: create the container @ 12/15/24 13:35:33.051
  W1215 13:35:33.067335      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 12/15/24 13:35:33.067
  E1215 13:35:33.927705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:34.928429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:35.928948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 12/15/24 13:35:36.087
  STEP: the container should be terminated @ 12/15/24 13:35:36.09
  STEP: the termination message should be set @ 12/15/24 13:35:36.09
  I1215 13:35:36.090459 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 12/15/24 13:35:36.09
  I1215 13:35:36.108486 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2783" for this suite. @ 12/15/24 13:35:36.112
• [3.101 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 12/15/24 13:35:36.121
  I1215 13:35:36.121782 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename emptydir @ 12/15/24 13:35:36.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:36.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:36.149
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 12/15/24 13:35:36.151
  E1215 13:35:36.929664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:37.929962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:38.930738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:39.931656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/24 13:35:40.172
  I1215 13:35:40.175305 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-a8e8546a-19f5-42b9-aace-225dc8900422 container test-container: <nil>
  STEP: delete the pod @ 12/15/24 13:35:40.187
  I1215 13:35:40.208599 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-7284" for this suite. @ 12/15/24 13:35:40.212
• [4.097 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 12/15/24 13:35:40.219
  I1215 13:35:40.219434 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename resourcequota @ 12/15/24 13:35:40.22
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:40.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:40.251
  STEP: Counting existing ResourceQuota @ 12/15/24 13:35:40.253
  E1215 13:35:40.931994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:41.932904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:42.933711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:43.934633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:44.935037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 12/15/24 13:35:45.257
  STEP: Ensuring resource quota status is calculated @ 12/15/24 13:35:45.264
  E1215 13:35:45.935134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:46.935411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 12/15/24 13:35:47.27
  STEP: Ensuring ResourceQuota status captures the pod usage @ 12/15/24 13:35:47.293
  E1215 13:35:47.935768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:48.936284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 12/15/24 13:35:49.299
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 12/15/24 13:35:49.302
  STEP: Ensuring a pod cannot update its resource requirements @ 12/15/24 13:35:49.304
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 12/15/24 13:35:49.309
  E1215 13:35:49.936956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:50.938083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 12/15/24 13:35:51.315
  STEP: Ensuring resource quota status released the pod usage @ 12/15/24 13:35:51.348
  E1215 13:35:51.938350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:52.938835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:35:53.353821 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8796" for this suite. @ 12/15/24 13:35:53.357
• [13.150 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 12/15/24 13:35:53.37
  I1215 13:35:53.370719 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 12/15/24 13:35:53.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:53.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:53.398
  STEP: creating a target pod @ 12/15/24 13:35:53.4
  E1215 13:35:53.939836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:54.940694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 12/15/24 13:35:55.422
  E1215 13:35:55.941506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:56.941918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 12/15/24 13:35:57.451
  I1215 13:35:57.451115 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-7672 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I1215 13:35:57.451139 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  I1215 13:35:57.451713 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I1215 13:35:57.451771 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.233.0.1:443/api/v1/namespaces/ephemeral-containers-test-7672/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I1215 13:35:57.545413 21 exec_util.go:106] Exec stderr: ""
  I1215 13:35:57.552469 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-7672" for this suite. @ 12/15/24 13:35:57.557
• [4.201 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 12/15/24 13:35:57.571
  I1215 13:35:57.571649 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename svcaccounts @ 12/15/24 13:35:57.572
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:57.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:57.598
  STEP: creating a ServiceAccount @ 12/15/24 13:35:57.601
  STEP: watching for the ServiceAccount to be added @ 12/15/24 13:35:57.612
  STEP: patching the ServiceAccount @ 12/15/24 13:35:57.613
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 12/15/24 13:35:57.626
  STEP: deleting the ServiceAccount @ 12/15/24 13:35:57.63
  I1215 13:35:57.652191 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7685" for this suite. @ 12/15/24 13:35:57.657
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 12/15/24 13:35:57.668
  I1215 13:35:57.668849 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename ingress @ 12/15/24 13:35:57.669
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:57.692
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:57.695
  STEP: getting /apis @ 12/15/24 13:35:57.697
  STEP: getting /apis/networking.k8s.io @ 12/15/24 13:35:57.702
  STEP: getting /apis/networking.k8s.iov1 @ 12/15/24 13:35:57.702
  STEP: creating @ 12/15/24 13:35:57.703
  STEP: getting @ 12/15/24 13:35:57.729
  STEP: listing @ 12/15/24 13:35:57.734
  STEP: watching @ 12/15/24 13:35:57.737
  I1215 13:35:57.737666 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 12/15/24 13:35:57.738
  STEP: cluster-wide watching @ 12/15/24 13:35:57.741
  I1215 13:35:57.741183 21 ingress.go:198] starting watch
  STEP: patching @ 12/15/24 13:35:57.742
  STEP: updating @ 12/15/24 13:35:57.754
  I1215 13:35:57.772019 21 ingress.go:221] waiting for watch events with expected annotations
  I1215 13:35:57.772082 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 12/15/24 13:35:57.772
  STEP: updating /status @ 12/15/24 13:35:57.778
  STEP: get /status @ 12/15/24 13:35:57.795
  STEP: deleting @ 12/15/24 13:35:57.798
  STEP: deleting a collection @ 12/15/24 13:35:57.844
  I1215 13:35:57.888010 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-6028" for this suite. @ 12/15/24 13:35:57.891
• [0.230 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 12/15/24 13:35:57.898
  I1215 13:35:57.898973 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename gc @ 12/15/24 13:35:57.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:35:57.926
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:35:57.929
  STEP: create the rc @ 12/15/24 13:35:57.931
  W1215 13:35:57.937690      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E1215 13:35:57.942856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:58.943760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:35:59.944798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:00.945641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:01.946089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 12/15/24 13:36:02.943
  E1215 13:36:02.947135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for all pods to be garbage collected @ 12/15/24 13:36:02.95
  E1215 13:36:03.948287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:04.948786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:05.949065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:06.949947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:07.950147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 12/15/24 13:36:07.957
  I1215 13:36:08.054419 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I1215 13:36:08.054568 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7995" for this suite. @ 12/15/24 13:36:08.06
• [10.169 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 12/15/24 13:36:08.067
  I1215 13:36:08.067868 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename webhook @ 12/15/24 13:36:08.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:36:08.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:36:08.102
  STEP: Setting up server cert @ 12/15/24 13:36:08.13
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 12/15/24 13:36:08.491
  STEP: Deploying the webhook pod @ 12/15/24 13:36:08.505
  STEP: Wait for the deployment to be ready @ 12/15/24 13:36:08.525
  I1215 13:36:08.532205 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E1215 13:36:08.951029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:09.951710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 12/15/24 13:36:10.545
  STEP: Verifying the service has paired with the endpoint @ 12/15/24 13:36:10.561
  E1215 13:36:10.951970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:36:11.563008 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 12/15/24 13:36:11.569
  I1215 13:36:11.626297 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7492" for this suite. @ 12/15/24 13:36:11.63
  STEP: Destroying namespace "webhook-markers-2521" for this suite. @ 12/15/24 13:36:11.648
• [3.592 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 12/15/24 13:36:11.66
  I1215 13:36:11.660285 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename proxy @ 12/15/24 13:36:11.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:36:11.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:36:11.69
  I1215 13:36:11.693119 21 proxy.go:387] Creating pod...
  E1215 13:36:11.952166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:12.952659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:36:13.709958 21 proxy.go:411] Creating service...
  I1215 13:36:13.737433 21 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/pods/agnhost/proxy?method=DELETE
  I1215 13:36:13.741509 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1215 13:36:13.741651 21 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/pods/agnhost/proxy?method=OPTIONS
  I1215 13:36:13.745893 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1215 13:36:13.746014 21 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/pods/agnhost/proxy?method=PATCH
  I1215 13:36:13.749321 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1215 13:36:13.749381 21 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/pods/agnhost/proxy?method=POST
  I1215 13:36:13.752384 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1215 13:36:13.752427 21 proxy.go:448] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/pods/agnhost/proxy?method=PUT
  I1215 13:36:13.754779 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1215 13:36:13.754805 21 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/services/e2e-proxy-test-service/proxy?method=DELETE
  I1215 13:36:13.758890 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I1215 13:36:13.758921 21 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I1215 13:36:13.764064 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I1215 13:36:13.764174 21 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/services/e2e-proxy-test-service/proxy?method=PATCH
  I1215 13:36:13.776014 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I1215 13:36:13.776135 21 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/services/e2e-proxy-test-service/proxy?method=POST
  I1215 13:36:13.780278 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I1215 13:36:13.780369 21 proxy.go:459] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/services/e2e-proxy-test-service/proxy?method=PUT
  I1215 13:36:13.784787 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I1215 13:36:13.784882 21 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/pods/agnhost/proxy?method=GET
  I1215 13:36:13.787203 21 proxy.go:487] http.Client request:GET StatusCode:301
  I1215 13:36:13.787270 21 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/services/e2e-proxy-test-service/proxy?method=GET
  I1215 13:36:13.790939 21 proxy.go:487] http.Client request:GET StatusCode:301
  I1215 13:36:13.791027 21 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/pods/agnhost/proxy?method=HEAD
  I1215 13:36:13.793634 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1215 13:36:13.793861 21 proxy.go:479] Starting http.Client for https://10.233.0.1:443/api/v1/namespaces/proxy-1239/services/e2e-proxy-test-service/proxy?method=HEAD
  I1215 13:36:13.797828 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I1215 13:36:13.797967 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-1239" for this suite. @ 12/15/24 13:36:13.801
• [2.152 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 12/15/24 13:36:13.813
  I1215 13:36:13.813337 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename containers @ 12/15/24 13:36:13.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:36:13.842
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:36:13.845
  STEP: Creating a pod to test override command @ 12/15/24 13:36:13.848
  E1215 13:36:13.952880      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:14.953166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:15.953666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:16.953978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/24 13:36:17.899
  I1215 13:36:17.903258 21 output.go:196] Trying to get logs from node cncf-master-1 pod client-containers-baad6a3b-f14f-4546-a2db-d708d0dcedbf container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 13:36:17.909
  I1215 13:36:17.926866 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-3056" for this suite. @ 12/15/24 13:36:17.931
• [4.126 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 12/15/24 13:36:17.939
  I1215 13:36:17.939696 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:36:17.94
  E1215 13:36:17.954231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:36:17.975
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:36:17.977
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-a6dbe170-399b-498b-8c73-7704c1a7c152 @ 12/15/24 13:36:17.984
  STEP: Creating the pod @ 12/15/24 13:36:17.99
  E1215 13:36:18.954642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:19.955494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-a6dbe170-399b-498b-8c73-7704c1a7c152 @ 12/15/24 13:36:20.028
  STEP: waiting to observe update in volume @ 12/15/24 13:36:20.036
  E1215 13:36:20.955886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:21.956159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:22.957275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:23.957583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:24.958566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:25.958914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:26.959363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:27.960317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:28.960562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:29.960834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:30.960901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:31.962013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:32.963038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:33.963646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:34.964164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:35.964432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:36.964537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:37.965452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:38.965590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:39.966253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:40.966494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:41.967051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:42.967521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:43.967800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:44.967811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:45.968270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:46.969309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:47.969657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:48.969882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:49.970643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:50.970811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:51.971677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:52.972287      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:53.972575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:54.972765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:55.973363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:56.974544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:57.974759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:58.974995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:36:59.975835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:00.976167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:01.976618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:02.976700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:03.977544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:04.977989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:05.978517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:06.979313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:07.980408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:08.980936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:09.981054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:10.982114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:11.982892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:12.983145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:13.983936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:14.984481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:15.985198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:16.985456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:17.985848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:18.986550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:19.986734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:20.989109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:21.989567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:22.990658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:23.991417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:24.991655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:25.992416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:26.992963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:27.993230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:28.993778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:29.994583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:30.994526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:31.994561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:32.994582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:33.995099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:37:34.406701 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7158" for this suite. @ 12/15/24 13:37:34.412
• [76.481 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 12/15/24 13:37:34.422
  I1215 13:37:34.422236 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename kubectl @ 12/15/24 13:37:34.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:37:34.464
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:37:34.466
  STEP: creating Agnhost RC @ 12/15/24 13:37:34.47
  I1215 13:37:34.470660 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-6123 create -f -'
  I1215 13:37:34.620013 21 builder.go:146] stderr: ""
  I1215 13:37:34.620100 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 12/15/24 13:37:34.62
  E1215 13:37:34.995823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:37:35.633823 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 13:37:35.633888 21 framework.go:733] Found 0 / 1
  E1215 13:37:35.996024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:37:36.626974 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 13:37:36.627026 21 framework.go:733] Found 1 / 1
  I1215 13:37:36.627051 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 12/15/24 13:37:36.627
  I1215 13:37:36.630768 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 13:37:36.630799 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1215 13:37:36.630845 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-754321789 --namespace=kubectl-6123 patch pod agnhost-primary-p47rq -p {"metadata":{"annotations":{"x":"y"}}}'
  I1215 13:37:36.717958 21 builder.go:146] stderr: ""
  I1215 13:37:36.718012 21 builder.go:147] stdout: "pod/agnhost-primary-p47rq patched\n"
  STEP: checking annotations @ 12/15/24 13:37:36.718
  I1215 13:37:36.721374 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I1215 13:37:36.721468 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I1215 13:37:36.721612 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6123" for this suite. @ 12/15/24 13:37:36.725
• [2.313 seconds]
------------------------------
SS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 12/15/24 13:37:36.734
  I1215 13:37:36.734765 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename downward-api @ 12/15/24 13:37:36.735
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:37:36.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:37:36.767
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 13:37:36.77
  E1215 13:37:36.996889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:37.997269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:38.998319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:39.998746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/24 13:37:40.797
  I1215 13:37:40.800319 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-ff6c81df-5225-4e17-9bf5-8bb90193c550 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 13:37:40.809
  I1215 13:37:40.833193 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2981" for this suite. @ 12/15/24 13:37:40.838
• [4.111 seconds]
------------------------------
SSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 12/15/24 13:37:40.846
  I1215 13:37:40.846078 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename deployment @ 12/15/24 13:37:40.847
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:37:40.877
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:37:40.88
  I1215 13:37:40.883613 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I1215 13:37:40.896217 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I1215 13:37:40.902689 21 deployment.go:222] new replicaset for deployment "test-recreate-deployment" is yet to be created
  E1215 13:37:40.999139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:41.999470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:37:42.910958 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I1215 13:37:42.914388 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I1215 13:37:42.928096 21 deployment.go:313] Updating deployment test-recreate-deployment
  I1215 13:37:42.928171 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  E1215 13:37:42.999941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I1215 13:37:43.092488 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0627d6e4-0a39-4f02-aa30-bdd365c3abee",
      ResourceVersion: (string) (len=7) "5429652",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866660,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866660,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I1215 13:37:43.112548 21 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b39c4cf-622c-4d1d-97d3-c00d2005d3e6",
      ResourceVersion: (string) (len=7) "5429651",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866662,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0627d6e4-0a39-4f02-aa30-bdd365c3abee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 36 32 37 64 36  65 34 2d 30 61 33 39 2d  |\"0627d6e4-0a39-|
              00000120  34 66 30 32 2d 61 61 33  30 2d 62 64 64 33 36 35  |4f02-aa30-bdd365|
              00000130  63 33 61 62 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c3abee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 13:37:43.113177 21 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I1215 13:37:43.113488 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "459e0b42-a88d-4629-9cd6-44429431f64e",
      ResourceVersion: (string) (len=7) "5429639",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866660,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "0627d6e4-0a39-4f02-aa30-bdd365c3abee",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 30 36 32 37 64 36  65 34 2d 30 61 33 39 2d  |\"0627d6e4-0a39-|
              00000120  34 66 30 32 2d 61 61 33  30 2d 62 64 64 33 36 35  |4f02-aa30-bdd365|
              00000130  63 33 61 62 65 65 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |c3abee\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866662,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I1215 13:37:43.118294 21 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-cqfrx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-cqfrx",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-1948",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5abfcba5-785a-4b80-8926-2377484ec906",
      ResourceVersion: (string) (len=7) "5429649",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "6b39c4cf-622c-4d1d-97d3-c00d2005d3e6",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  33 39 63 34 63 66 2d 36  |d\":\"6b39c4cf-6|
              00000090  32 32 63 2d 34 64 31 64  2d 39 37 64 33 2d 63 30  |22c-4d1d-97d3-c0|
              000000a0  30 64 32 30 30 35 64 33  65 36 5c 22 7d 22 3a 7b  |0d2005d3e6\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bsfqv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bsfqv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=13) "cncf-master-1",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63869866663,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.10.60.89",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.10.60.89"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63869866663,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I1215 13:37:43.119989 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1948" for this suite. @ 12/15/24 13:37:43.124
• [2.286 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 12/15/24 13:37:43.132
  I1215 13:37:43.132739 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename projected @ 12/15/24 13:37:43.133
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:37:43.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:37:43.164
  STEP: Creating a pod to test downward API volume plugin @ 12/15/24 13:37:43.167
  E1215 13:37:44.000847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:45.001557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:46.001594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:47.001902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/24 13:37:47.208
  I1215 13:37:47.211271 21 output.go:196] Trying to get logs from node cncf-master-1 pod downwardapi-volume-72cca312-2592-46ea-a88d-59181fc60444 container client-container: <nil>
  STEP: delete the pod @ 12/15/24 13:37:47.217
  I1215 13:37:47.243617 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5464" for this suite. @ 12/15/24 13:37:47.247
• [4.124 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 12/15/24 13:37:47.257
  I1215 13:37:47.257647 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-754321789
  STEP: Building a namespace api object, basename configmap @ 12/15/24 13:37:47.258
  STEP: Waiting for a default service account to be provisioned in namespace @ 12/15/24 13:37:47.284
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 12/15/24 13:37:47.287
  STEP: Creating configMap with name configmap-test-volume-map-036117da-ffed-4796-9461-05c0ac30f96d @ 12/15/24 13:37:47.29
  STEP: Creating a pod to test consume configMaps @ 12/15/24 13:37:47.298
  E1215 13:37:48.002198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:49.002716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:50.003385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E1215 13:37:51.003702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 12/15/24 13:37:51.323
  I1215 13:37:51.325746 21 output.go:196] Trying to get logs from node cncf-master-1 pod pod-configmaps-4b89be29-f595-4ebf-9b92-bb03264cacf9 container agnhost-container: <nil>
  STEP: delete the pod @ 12/15/24 13:37:51.331
  I1215 13:37:51.366193 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7661" for this suite. @ 12/15/24 13:37:51.371
• [4.122 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I1215 13:37:51.401407 21 suites.go:34] Running AfterSuite actions on node 1
  I1215 13:37:51.401469 21 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.065 seconds]
------------------------------

Ran 402 of 7199 Specs in 6585.601 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6797 Skipped
PASS

Ginkgo ran 1 suite in 1h49m47.788985679s
Test Suite Passed
