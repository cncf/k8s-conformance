  I0617 06:51:37.569737      19 e2e.go:109] Starting e2e run "0f895fec-2dd6-4d97-9be2-9e4c7f72c132" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1718607096 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0617 06:51:37.943281 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 06:51:37.944845 19 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0617 06:51:37.989055 19 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0617 06:51:37.996671 19 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'calico-node' (0 seconds elapsed)
  I0617 06:51:37.996768 19 e2e.go:153] 4 / 4 pods ready in namespace 'kube-system' in daemonset 'kube-proxy' (0 seconds elapsed)
  I0617 06:51:37.996821 19 e2e.go:245] e2e test version: v1.30.2
  I0617 06:51:37.998154 19 e2e.go:254] kube-apiserver version: v1.30.2
  I0617 06:51:37.998331 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 06:51:38.002968 19 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.060 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 06/17/24 06:51:38.219
  I0617 06:51:38.220009 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename job @ 06/17/24 06:51:38.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:51:38.236
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:51:38.239
  STEP: Creating a job @ 06/17/24 06:51:38.242
  STEP: Ensuring active pods == parallelism @ 06/17/24 06:51:38.247
  STEP: delete a job @ 06/17/24 06:51:40.253
  STEP: deleting Job.batch foo in namespace job-7492, will wait for the garbage collector to delete the pods @ 06/17/24 06:51:40.253
  I0617 06:51:40.312566 19 resources.go:139] Deleting Job.batch foo took: 5.81347ms
  I0617 06:51:40.413226 19 resources.go:163] Terminating Job.batch foo pods took: 100.599864ms
  STEP: Ensuring job was deleted @ 06/17/24 06:51:42.914
  I0617 06:51:42.919069 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7492" for this suite. @ 06/17/24 06:51:42.923
• [4.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 06/17/24 06:51:42.929
  I0617 06:51:42.929627 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename taint-single-pod @ 06/17/24 06:51:42.931
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:51:42.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:51:42.946
  I0617 06:51:42.949488 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0617 06:52:42.950462 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0617 06:52:42.954372 19 taints.go:150] Starting informer...
  STEP: Starting pod... @ 06/17/24 06:52:42.954
  I0617 06:52:43.170932 19 taints.go:300] Pod is running on ck-130-worker-1.novalocal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/17/24 06:52:43.171
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/17/24 06:52:43.187
  STEP: Waiting short time to make sure Pod is queued for deletion @ 06/17/24 06:52:43.193
  I0617 06:52:43.194142 19 taints.go:319] Pod wasn't evicted. Proceeding
  I0617 06:52:43.194418 19 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/17/24 06:52:43.208
  STEP: Waiting some time to make sure that toleration time passed. @ 06/17/24 06:52:43.223
  I0617 06:53:58.224325 19 taints.go:335] Pod wasn't evicted. Test successful
  I0617 06:53:58.229213 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-100" for this suite. @ 06/17/24 06:53:58.235
• [135.313 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 06/17/24 06:53:58.242
  I0617 06:53:58.242677 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename namespaces @ 06/17/24 06:53:58.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:53:58.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:53:58.268
  STEP: Updating Namespace "namespaces-9631" @ 06/17/24 06:53:58.271
  I0617 06:53:58.279936 19 namespace.go:389] Namespace "namespaces-9631" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"0f895fec-2dd6-4d97-9be2-9e4c7f72c132", "kubernetes.io/metadata.name":"namespaces-9631", "namespaces-9631":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0617 06:53:58.280084 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-9631" for this suite. @ 06/17/24 06:53:58.284
• [0.047 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 06/17/24 06:53:58.289
  I0617 06:53:58.289822 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 06:53:58.29
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:53:58.306
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:53:58.309
  STEP: Creating projection with secret that has name projected-secret-test-32130c5b-9c16-441c-a525-fd593af78bf3 @ 06/17/24 06:53:58.313
  STEP: Creating a pod to test consume secrets @ 06/17/24 06:53:58.317
  STEP: Saw pod success @ 06/17/24 06:54:02.339
  I0617 06:54:02.343221 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-secrets-9738af4a-5495-4818-aa94-8b916282ebad container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 06:54:02.363
  I0617 06:54:02.374337 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6832" for this suite. @ 06/17/24 06:54:02.378
• [4.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 06/17/24 06:54:02.383
  I0617 06:54:02.383088 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename csistoragecapacity @ 06/17/24 06:54:02.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:54:02.395
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:54:02.398
  STEP: getting /apis @ 06/17/24 06:54:02.402
  STEP: getting /apis/storage.k8s.io @ 06/17/24 06:54:02.407
  STEP: getting /apis/storage.k8s.io/v1 @ 06/17/24 06:54:02.408
  STEP: creating @ 06/17/24 06:54:02.41
  STEP: watching @ 06/17/24 06:54:02.423
  I0617 06:54:02.423145 19 csistoragecapacity.go:143] starting watch
  STEP: getting @ 06/17/24 06:54:02.429
  STEP: listing in namespace @ 06/17/24 06:54:02.431
  STEP: listing across namespaces @ 06/17/24 06:54:02.433
  STEP: patching @ 06/17/24 06:54:02.435
  STEP: updating @ 06/17/24 06:54:02.44
  I0617 06:54:02.443857 19 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0617 06:54:02.443982 19 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 06/17/24 06:54:02.444
  STEP: deleting a collection @ 06/17/24 06:54:02.451
  I0617 06:54:02.469443 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-3756" for this suite. @ 06/17/24 06:54:02.473
• [0.097 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 06/17/24 06:54:02.48
  I0617 06:54:02.480559 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 06:54:02.481
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:54:02.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:54:02.495
  I0617 06:54:04.515213 19 delete.go:62] Deleting pod "var-expansion-7e8bd7ac-87b2-422f-9392-b38a3067260c" in namespace "var-expansion-9084"
  I0617 06:54:04.521303 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-7e8bd7ac-87b2-422f-9392-b38a3067260c" to be fully deleted
  I0617 06:54:08.532682 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-9084" for this suite. @ 06/17/24 06:54:08.536
• [6.061 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 06/17/24 06:54:08.541
  I0617 06:54:08.541892 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename podtemplate @ 06/17/24 06:54:08.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:54:08.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:54:08.556
  STEP: Create set of pod templates @ 06/17/24 06:54:08.559
  I0617 06:54:08.563474 19 podtemplates.go:143] created test-podtemplate-1
  I0617 06:54:08.567773 19 podtemplates.go:143] created test-podtemplate-2
  I0617 06:54:08.571755 19 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 06/17/24 06:54:08.571
  STEP: delete collection of pod templates @ 06/17/24 06:54:08.574
  I0617 06:54:08.574198 19 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 06/17/24 06:54:08.584
  I0617 06:54:08.585006 19 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0617 06:54:08.587243 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9490" for this suite. @ 06/17/24 06:54:08.592
• [0.054 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 06/17/24 06:54:08.596
  I0617 06:54:08.597018 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename events @ 06/17/24 06:54:08.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:54:08.61
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:54:08.614
  STEP: Create set of events @ 06/17/24 06:54:08.617
  STEP: get a list of Events with a label in the current namespace @ 06/17/24 06:54:08.631
  STEP: delete a list of events @ 06/17/24 06:54:08.633
  I0617 06:54:08.633828 19 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/17/24 06:54:08.646
  I0617 06:54:08.649016 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-5236" for this suite. @ 06/17/24 06:54:08.653
• [0.060 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 06/17/24 06:54:08.657
  I0617 06:54:08.657387 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 06:54:08.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:54:08.667
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:54:08.67
  STEP: Creating configMap with name projected-configmap-test-volume-map-712e455d-2cef-47fc-9fe2-5d47726c9a69 @ 06/17/24 06:54:08.673
  STEP: Creating a pod to test consume configMaps @ 06/17/24 06:54:08.677
  STEP: Saw pod success @ 06/17/24 06:54:12.696
  I0617 06:54:12.700025 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-configmaps-2faec4f7-0cca-48f7-a8fc-32a2ff4f37e9 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 06:54:12.707
  I0617 06:54:12.720789 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7195" for this suite. @ 06/17/24 06:54:12.726
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 06/17/24 06:54:12.733
  I0617 06:54:12.733055 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 06:54:12.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:54:12.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:54:12.751
  STEP: Creating pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843 @ 06/17/24 06:54:12.755
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 06:54:14.773
  I0617 06:54:14.778517 19 container_probe.go:1749] Initial restart count of pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd is 0
  I0617 06:54:14.783026 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:16.786469 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:18.790875 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:20.796364 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:22.801248 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:24.806480 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:26.811444 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:28.816121 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:30.820955 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:32.826704 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:34.831841 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:36.837070 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:38.842115 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:40.847397 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:42.852706 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:44.862316 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:46.868868 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:48.874269 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:50.878014 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:52.882367 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:54.887827 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:56.892577 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:54:58.896714 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:00.900916 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:02.905390 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:04.910808 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:06.915567 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:08.919524 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:10.924358 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:12.929090 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:14.934358 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:16.939973 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:18.944168 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:20.948864 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:22.952940 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:24.957705 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:26.963441 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:28.968268 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:30.971866 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:32.978838 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:34.983824 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:36.989374 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:38.999884 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:41.004643 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:43.008840 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:45.013978 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:47.019539 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:49.024077 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:51.028106 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:53.034471 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:55.038127 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:57.042774 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:55:59.047332 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:01.051358 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:03.057975 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:05.062866 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:07.068734 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:09.074585 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:11.078980 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:13.084442 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:15.093392 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:17.098301 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:19.102317 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:21.108451 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:23.115576 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:25.121449 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:27.126561 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:29.131740 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:31.138105 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:33.143682 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:35.149509 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:37.154132 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:39.159250 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:41.165157 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:43.171822 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:45.178495 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:47.186540 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:49.191877 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:51.197326 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:53.201634 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:55.206442 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:57.211166 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:56:59.216619 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:01.222720 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:03.227053 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:05.232257 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:07.237707 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:09.243892 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:11.248129 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:13.252332 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:15.257829 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:17.262536 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:19.267378 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:21.272387 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:23.278632 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:25.283360 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:27.288600 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:29.293788 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:31.298751 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:33.304904 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:35.312588 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:37.317514 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:39.323747 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:41.329498 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:43.335915 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:45.341423 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:47.345713 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:49.350825 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:51.356069 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:53.361064 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:55.366760 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:57.371635 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:57:59.376915 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:58:01.382282 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:58:03.387331 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:58:05.392307 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:58:07.397130 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:58:09.403247 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:58:11.409037 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  I0617 06:58:13.413464 19 container_probe.go:1759] Get pod liveness-bf536134-b4ee-478f-a3b1-29907ff1cacd in namespace container-probe-3843
  STEP: deleting the pod @ 06/17/24 06:58:15.414
  I0617 06:58:15.431648 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3843" for this suite. @ 06/17/24 06:58:15.437
• [242.712 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 06/17/24 06:58:15.445
  I0617 06:58:15.445795 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 06:58:15.448
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:58:15.465
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:58:15.468
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 06:58:15.472
  STEP: Saw pod success @ 06/17/24 06:58:17.492
  I0617 06:58:17.495803 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-a6d99f35-2c9b-43c0-88c3-e04c99b44cfe container client-container: <nil>
  STEP: delete the pod @ 06/17/24 06:58:17.512
  I0617 06:58:17.528030 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6393" for this suite. @ 06/17/24 06:58:17.532
• [2.095 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 06/17/24 06:58:17.54
  I0617 06:58:17.540421 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 06:58:17.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:58:17.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:58:17.559
  STEP: Setting up server cert @ 06/17/24 06:58:17.582
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 06:58:18.334
  STEP: Deploying the webhook pod @ 06/17/24 06:58:18.342
  STEP: Wait for the deployment to be ready @ 06/17/24 06:58:18.352
  I0617 06:58:18.361969 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 06:58:20.37
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 06:58:20.408
  I0617 06:58:21.408573 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/17/24 06:58:21.415
  STEP: create a pod that should be denied by the webhook @ 06/17/24 06:58:21.437
  STEP: create a pod that causes the webhook to hang @ 06/17/24 06:58:21.455
  STEP: create a configmap that should be denied by the webhook @ 06/17/24 06:58:31.462
  STEP: create a configmap that should be admitted by the webhook @ 06/17/24 06:58:31.489
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/17/24 06:58:31.5
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 06/17/24 06:58:31.509
  STEP: create a namespace that bypass the webhook @ 06/17/24 06:58:31.518
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 06/17/24 06:58:31.527
  I0617 06:58:31.580013 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8558" for this suite. @ 06/17/24 06:58:31.584
  STEP: Destroying namespace "webhook-markers-6488" for this suite. @ 06/17/24 06:58:31.601
  STEP: Destroying namespace "exempted-namespace-6761" for this suite. @ 06/17/24 06:58:31.608
• [14.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 06/17/24 06:58:31.614
  I0617 06:58:31.614453 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename field-validation @ 06/17/24 06:58:31.616
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:58:31.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:58:31.63
  STEP: apply creating a deployment @ 06/17/24 06:58:31.633
  I0617 06:58:31.644046 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5864" for this suite. @ 06/17/24 06:58:31.647
• [0.038 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 06/17/24 06:58:31.653
  I0617 06:58:31.653136 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 06:58:31.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:58:31.666
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:58:31.67
  STEP: Creating configMap with name cm-test-opt-del-4d62c246-d91b-478a-8d01-448f49a88f88 @ 06/17/24 06:58:31.678
  STEP: Creating configMap with name cm-test-opt-upd-ec49ee17-446f-4291-a31f-ae96d152c0a4 @ 06/17/24 06:58:31.683
  STEP: Creating the pod @ 06/17/24 06:58:31.688
  STEP: Deleting configmap cm-test-opt-del-4d62c246-d91b-478a-8d01-448f49a88f88 @ 06/17/24 06:58:33.726
  STEP: Updating configmap cm-test-opt-upd-ec49ee17-446f-4291-a31f-ae96d152c0a4 @ 06/17/24 06:58:33.731
  STEP: Creating configMap with name cm-test-opt-create-bf2f34e8-6c85-4669-9e24-fed8176834ff @ 06/17/24 06:58:33.734
  STEP: waiting to observe update in volume @ 06/17/24 06:58:33.738
  I0617 06:58:35.759842 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5655" for this suite. @ 06/17/24 06:58:35.765
• [4.117 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 06/17/24 06:58:35.771
  I0617 06:58:35.771530 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 06:58:35.772
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:58:35.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:58:35.783
  STEP: Creating a test headless service @ 06/17/24 06:58:35.787
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3199.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3199.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-3199.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-3199.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 221.87.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.87.221_udp@PTR;check="$$(dig +tcp +noall +answer +search 221.87.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.87.221_tcp@PTR;sleep 1; done
   @ 06/17/24 06:58:35.803
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-3199.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-3199.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-3199.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-3199.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-3199.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 221.87.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.87.221_udp@PTR;check="$$(dig +tcp +noall +answer +search 221.87.108.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.108.87.221_tcp@PTR;sleep 1; done
   @ 06/17/24 06:58:35.803
  STEP: creating a pod to probe DNS @ 06/17/24 06:58:35.803
  STEP: submitting the pod to kubernetes @ 06/17/24 06:58:35.803
  STEP: retrieving the pod @ 06/17/24 06:58:37.821
  STEP: looking for the results for each expected name from probers @ 06/17/24 06:58:37.823
  I0617 06:58:37.827671 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.830168 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.832415 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.835573 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.854621 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.858169 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.861243 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.865095 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:37.877160 19 dns_common.go:489] Lookups using dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e failed for: [wheezy_udp@dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_udp@dns-test-service.dns-3199.svc.cluster.local jessie_tcp@dns-test-service.dns-3199.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local]

  I0617 06:58:37.895104 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 06:58:37.901217 19 dns_common.go:495] Pod client logs for querier: 
  I0617 06:58:37.906027 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 06:58:42.829268 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.832928 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.836416 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.839527 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.854037 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.857118 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.860203 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.863557 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:42.875381 19 dns_common.go:489] Lookups using dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e failed for: [wheezy_udp@dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_udp@dns-test-service.dns-3199.svc.cluster.local jessie_tcp@dns-test-service.dns-3199.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local]

  I0617 06:58:42.880365 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 06:58:42.884738 19 dns_common.go:495] Pod client logs for querier: 
  I0617 06:58:42.888837 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 06:58:47.833925 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.837983 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.841276 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.844480 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.861733 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.866538 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.870951 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.877120 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:47.907949 19 dns_common.go:489] Lookups using dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e failed for: [wheezy_udp@dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_udp@dns-test-service.dns-3199.svc.cluster.local jessie_tcp@dns-test-service.dns-3199.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local]

  I0617 06:58:47.919237 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 06:58:47.929369 19 dns_common.go:495] Pod client logs for querier: 
  I0617 06:58:47.938897 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 06:58:52.829634 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.833636 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.837011 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.840314 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.856555 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.860629 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.863992 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.867747 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:52.880738 19 dns_common.go:489] Lookups using dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e failed for: [wheezy_udp@dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_udp@dns-test-service.dns-3199.svc.cluster.local jessie_tcp@dns-test-service.dns-3199.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local]

  I0617 06:58:52.886155 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 06:58:52.891199 19 dns_common.go:495] Pod client logs for querier: 
  I0617 06:58:52.896058 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 06:58:57.828373 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.831421 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.834350 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.836915 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.849142 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.851847 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.855566 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.858723 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:58:57.869639 19 dns_common.go:489] Lookups using dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e failed for: [wheezy_udp@dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_udp@dns-test-service.dns-3199.svc.cluster.local jessie_tcp@dns-test-service.dns-3199.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local]

  I0617 06:58:57.874583 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 06:58:57.878839 19 dns_common.go:495] Pod client logs for querier: 
  I0617 06:58:57.883663 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 06:59:02.828813 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.831967 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.834437 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.837153 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.848916 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.851468 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.853845 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.856343 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local from pod dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e: the server could not find the requested resource (get pods dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e)
  I0617 06:59:02.868119 19 dns_common.go:489] Lookups using dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e failed for: [wheezy_udp@dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@dns-test-service.dns-3199.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_udp@dns-test-service.dns-3199.svc.cluster.local jessie_tcp@dns-test-service.dns-3199.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-3199.svc.cluster.local]

  I0617 06:59:02.874592 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 06:59:02.880604 19 dns_common.go:495] Pod client logs for querier: 
  I0617 06:59:02.885730 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 06:59:07.877005 19 dns_common.go:527] DNS probes using dns-3199/dns-test-c1dd8c4f-6f88-4968-abe9-0b7d8e1fb35e succeeded

  STEP: deleting the pod @ 06/17/24 06:59:07.877
  STEP: deleting the test service @ 06/17/24 06:59:07.89
  STEP: deleting the test headless service @ 06/17/24 06:59:07.919
  I0617 06:59:07.932002 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-3199" for this suite. @ 06/17/24 06:59:07.937
• [32.174 seconds]
------------------------------
S
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 06/17/24 06:59:07.945
  I0617 06:59:07.945953 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename proxy @ 06/17/24 06:59:07.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:07.961
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:07.964
  I0617 06:59:07.967199 19 proxy.go:293] Creating pod...
  I0617 06:59:09.981961 19 proxy.go:317] Creating service...
  I0617 06:59:09.990816 19 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/pods/agnhost/proxy/some/path/with/DELETE
  I0617 06:59:10.005203 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0617 06:59:10.005258 19 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/pods/agnhost/proxy/some/path/with/GET
  I0617 06:59:10.008460 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0617 06:59:10.008616 19 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/pods/agnhost/proxy/some/path/with/HEAD
  I0617 06:59:10.012404 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0617 06:59:10.012442 19 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/pods/agnhost/proxy/some/path/with/OPTIONS
  I0617 06:59:10.015323 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0617 06:59:10.015480 19 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/pods/agnhost/proxy/some/path/with/PATCH
  I0617 06:59:10.019519 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0617 06:59:10.019719 19 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/pods/agnhost/proxy/some/path/with/POST
  I0617 06:59:10.024208 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0617 06:59:10.024246 19 proxy.go:354] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/pods/agnhost/proxy/some/path/with/PUT
  I0617 06:59:10.027515 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0617 06:59:10.027564 19 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/services/test-service/proxy/some/path/with/DELETE
  I0617 06:59:10.031829 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0617 06:59:10.031877 19 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/services/test-service/proxy/some/path/with/GET
  I0617 06:59:10.035548 19 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0617 06:59:10.035585 19 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/services/test-service/proxy/some/path/with/HEAD
  I0617 06:59:10.038910 19 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0617 06:59:10.038952 19 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/services/test-service/proxy/some/path/with/OPTIONS
  I0617 06:59:10.043132 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0617 06:59:10.043188 19 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/services/test-service/proxy/some/path/with/PATCH
  I0617 06:59:10.047002 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0617 06:59:10.047048 19 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/services/test-service/proxy/some/path/with/POST
  I0617 06:59:10.050742 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0617 06:59:10.050772 19 proxy.go:365] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-4408/services/test-service/proxy/some/path/with/PUT
  I0617 06:59:10.054012 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0617 06:59:10.056461 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-4408" for this suite. @ 06/17/24 06:59:10.06
• [2.121 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 06/17/24 06:59:10.067
  I0617 06:59:10.067701 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 06:59:10.069
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:10.082
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:10.086
  I0617 06:59:10.131076 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1329" for this suite. @ 06/17/24 06:59:10.136
• [0.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 06/17/24 06:59:10.142
  I0617 06:59:10.142548 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replicaset @ 06/17/24 06:59:10.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:10.154
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:10.157
  STEP: Create a Replicaset @ 06/17/24 06:59:10.167
  STEP: Verify that the required pods have come up. @ 06/17/24 06:59:10.173
  I0617 06:59:10.175838 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0617 06:59:15.181699 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/17/24 06:59:15.182
  STEP: Getting /status @ 06/17/24 06:59:15.182
  I0617 06:59:15.191413 19 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 06/17/24 06:59:15.191
  I0617 06:59:15.204404 19 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 06/17/24 06:59:15.204
  I0617 06:59:15.208126 19 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0617 06:59:15.208494 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0617 06:59:15.208801 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0617 06:59:15.208989 19 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0617 06:59:15.209779 19 replica_set.go:682] Found replicaset test-rs in namespace replicaset-1497 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0617 06:59:15.210066 19 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 06/17/24 06:59:15.21
  I0617 06:59:15.210412 19 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0617 06:59:15.221800 19 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 06/17/24 06:59:15.221
  I0617 06:59:15.226612 19 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0617 06:59:15.227111 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0617 06:59:15.227450 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0617 06:59:15.227638 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0617 06:59:15.227725 19 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-1497 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0617 06:59:15.228338 19 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0617 06:59:15.228431 19 replica_set.go:718] Found replicaset test-rs in namespace replicaset-1497 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0617 06:59:15.228463 19 replica_set.go:729] Replicaset test-rs has a patched status
  I0617 06:59:15.228618 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1497" for this suite. @ 06/17/24 06:59:15.235
• [5.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 06/17/24 06:59:15.242
  I0617 06:59:15.242594 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 06:59:15.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:15.259
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:15.263
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/17/24 06:59:15.268
  STEP: Saw pod success @ 06/17/24 06:59:17.285
  I0617 06:59:17.288642 19 output.go:196] Trying to get logs from node ck-130-worker-2.novalocal pod pod-33a812b5-b7e3-48fc-a82d-167b50d1ecb9 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 06:59:17.294
  I0617 06:59:17.308817 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8939" for this suite. @ 06/17/24 06:59:17.313
• [2.075 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 06/17/24 06:59:17.318
  I0617 06:59:17.318414 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename subpath @ 06/17/24 06:59:17.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:17.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:17.333
  STEP: Setting up data @ 06/17/24 06:59:17.336
  STEP: Creating pod pod-subpath-test-configmap-rc4j @ 06/17/24 06:59:17.343
  STEP: Creating a pod to test atomic-volume-subpath @ 06/17/24 06:59:17.343
  STEP: Saw pod success @ 06/17/24 06:59:41.412
  I0617 06:59:41.415761 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-subpath-test-configmap-rc4j container test-container-subpath-configmap-rc4j: <nil>
  STEP: delete the pod @ 06/17/24 06:59:41.423
  STEP: Deleting pod pod-subpath-test-configmap-rc4j @ 06/17/24 06:59:41.434
  I0617 06:59:41.434690 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-rc4j" in namespace "subpath-5409"
  I0617 06:59:41.436951 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5409" for this suite. @ 06/17/24 06:59:41.442
• [24.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 06/17/24 06:59:41.448
  I0617 06:59:41.448826 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 06:59:41.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:41.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:41.468
  STEP: Creating configMap configmap-2582/configmap-test-d19a97de-f3a7-47c1-a831-4d0f50c3bbf6 @ 06/17/24 06:59:41.472
  STEP: Creating a pod to test consume configMaps @ 06/17/24 06:59:41.478
  STEP: Saw pod success @ 06/17/24 06:59:45.497
  I0617 06:59:45.500691 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-d26e2568-97c8-4a21-b8f6-59126480bbc6 container env-test: <nil>
  STEP: delete the pod @ 06/17/24 06:59:45.507
  I0617 06:59:45.520946 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2582" for this suite. @ 06/17/24 06:59:45.526
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 06/17/24 06:59:45.533
  I0617 06:59:45.533318 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename watch @ 06/17/24 06:59:45.534
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:45.549
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:45.553
  STEP: creating a watch on configmaps with a certain label @ 06/17/24 06:59:45.557
  STEP: creating a new configmap @ 06/17/24 06:59:45.559
  STEP: modifying the configmap once @ 06/17/24 06:59:45.564
  STEP: changing the label value of the configmap @ 06/17/24 06:59:45.571
  STEP: Expecting to observe a delete notification for the watched object @ 06/17/24 06:59:45.577
  I0617 06:59:45.577640 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4724  eda57801-b4a7-48b3-89dd-89bf04e2b3f4 6009 0 2024-06-17 06:59:45 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-17 06:59:45 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 06:59:45.577799 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4724  eda57801-b4a7-48b3-89dd-89bf04e2b3f4 6010 0 2024-06-17 06:59:45 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-17 06:59:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 06:59:45.578028 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4724  eda57801-b4a7-48b3-89dd-89bf04e2b3f4 6011 0 2024-06-17 06:59:45 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-17 06:59:45 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 06/17/24 06:59:45.578
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 06/17/24 06:59:45.585
  STEP: changing the label value of the configmap back @ 06/17/24 06:59:55.587
  STEP: modifying the configmap a third time @ 06/17/24 06:59:55.597
  STEP: deleting the configmap @ 06/17/24 06:59:55.606
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 06/17/24 06:59:55.612
  I0617 06:59:55.612550 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4724  eda57801-b4a7-48b3-89dd-89bf04e2b3f4 6048 0 2024-06-17 06:59:45 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-17 06:59:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 06:59:55.613050 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4724  eda57801-b4a7-48b3-89dd-89bf04e2b3f4 6049 0 2024-06-17 06:59:45 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-17 06:59:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 06:59:55.613492 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-4724  eda57801-b4a7-48b3-89dd-89bf04e2b3f4 6050 0 2024-06-17 06:59:45 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-06-17 06:59:55 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 06:59:55.614243 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4724" for this suite. @ 06/17/24 06:59:55.621
• [10.093 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 06/17/24 06:59:55.627
  I0617 06:59:55.627145 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 06:59:55.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:55.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:55.647
  STEP: Creating projection with secret that has name projected-secret-test-map-65624368-af17-40a3-b54b-2eceba776875 @ 06/17/24 06:59:55.65
  STEP: Creating a pod to test consume secrets @ 06/17/24 06:59:55.655
  STEP: Saw pod success @ 06/17/24 06:59:57.67
  I0617 06:59:57.673840 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-secrets-2e47a8e5-2e5b-4128-aeb9-bd5a15c24b58 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 06:59:57.68
  I0617 06:59:57.692678 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5531" for this suite. @ 06/17/24 06:59:57.697
• [2.077 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 06/17/24 06:59:57.704
  I0617 06:59:57.704028 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 06:59:57.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:57.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:57.72
  STEP: Creating configMap with name configmap-test-volume-map-1f5405bd-d60b-468a-b741-1e8bdfa8121e @ 06/17/24 06:59:57.723
  STEP: Creating a pod to test consume configMaps @ 06/17/24 06:59:57.727
  STEP: Saw pod success @ 06/17/24 06:59:59.742
  I0617 06:59:59.747365 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-dd6b4fd3-c32c-4ef8-af49-30b056a94cbd container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 06:59:59.753
  I0617 06:59:59.766241 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-541" for this suite. @ 06/17/24 06:59:59.771
• [2.074 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 06/17/24 06:59:59.778
  I0617 06:59:59.778653 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 06:59:59.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 06:59:59.791
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 06:59:59.794
  STEP: Creating secret with name secret-test-map-566c3321-f9b6-4856-94ed-91e6e0a045a6 @ 06/17/24 06:59:59.797
  STEP: Creating a pod to test consume secrets @ 06/17/24 06:59:59.8
  STEP: Saw pod success @ 06/17/24 07:00:01.813
  I0617 07:00:01.816641 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-5c84823a-db8a-4f56-90b6-9cf2258b6da4 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 07:00:01.822
  I0617 07:00:01.838494 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6726" for this suite. @ 06/17/24 07:00:01.844
• [2.071 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 06/17/24 07:00:01.85
  I0617 07:00:01.850829 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename watch @ 06/17/24 07:00:01.853
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:01.874
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:01.878
  STEP: creating a watch on configmaps with label A @ 06/17/24 07:00:01.906
  STEP: creating a watch on configmaps with label B @ 06/17/24 07:00:01.908
  STEP: creating a watch on configmaps with label A or B @ 06/17/24 07:00:01.91
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 06/17/24 07:00:01.911
  I0617 07:00:01.915745 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6138 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:00:01.916064 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6138 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 06/17/24 07:00:01.916
  I0617 07:00:01.924629 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6139 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:00:01.924895 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6139 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 06/17/24 07:00:01.925
  I0617 07:00:01.933168 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6140 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:00:01.933768 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6140 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 06/17/24 07:00:01.933
  I0617 07:00:01.938785 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6141 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:00:01.938962 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-9472  9b4f0d3c-6dc0-4273-8444-956297992a9e 6141 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 06/17/24 07:00:01.939
  I0617 07:00:01.943426 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9472  36316d96-159a-47f4-bd27-5f4f87de6f8b 6142 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:00:01.943798 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9472  36316d96-159a-47f4-bd27-5f4f87de6f8b 6142 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 06/17/24 07:00:11.947
  I0617 07:00:11.955755 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9472  36316d96-159a-47f4-bd27-5f4f87de6f8b 6186 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:00:11.955833 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-9472  36316d96-159a-47f4-bd27-5f4f87de6f8b 6186 0 2024-06-17 07:00:01 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-06-17 07:00:01 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:00:21.959669 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-9472" for this suite. @ 06/17/24 07:00:21.965
• [20.122 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 06/17/24 07:00:21.972
  I0617 07:00:21.972477 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:00:21.973
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:21.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:21.992
  STEP: Setting up server cert @ 06/17/24 07:00:22.013
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:00:22.445
  STEP: Deploying the webhook pod @ 06/17/24 07:00:22.455
  STEP: Wait for the deployment to be ready @ 06/17/24 07:00:22.464
  I0617 07:00:22.472915 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:00:24.482
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:00:24.496
  I0617 07:00:25.496610 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 06/17/24 07:00:25.502
  I0617 07:00:25.565126 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5471" for this suite. @ 06/17/24 07:00:25.569
  STEP: Destroying namespace "webhook-markers-2803" for this suite. @ 06/17/24 07:00:25.574
• [3.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 06/17/24 07:00:25.589
  I0617 07:00:25.589741 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 07:00:25.591
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:25.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:25.606
  STEP: Creating secret with name secret-test-1ee86ddd-8763-4fb9-aff1-54ad69551197 @ 06/17/24 07:00:25.61
  STEP: Creating a pod to test consume secrets @ 06/17/24 07:00:25.613
  STEP: Saw pod success @ 06/17/24 07:00:29.631
  I0617 07:00:29.634651 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-b04972f9-7aae-45f2-9138-b2277b9f5e78 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 07:00:29.64
  I0617 07:00:29.661588 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1072" for this suite. @ 06/17/24 07:00:29.665
• [4.081 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 06/17/24 07:00:29.671
  I0617 07:00:29.671208 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:00:29.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:29.689
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:29.693
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-9210 @ 06/17/24 07:00:29.697
  STEP: changing the ExternalName service to type=NodePort @ 06/17/24 07:00:29.702
  STEP: creating replication controller externalname-service in namespace services-9210 @ 06/17/24 07:00:29.721
  I0617 07:00:29.729650      19 runners.go:198] Created replication controller with name: externalname-service, namespace: services-9210, replica count: 2
  I0617 07:00:32.781152      19 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:00:32.781231 19 resource.go:361] Creating new exec pod
  I0617 07:00:35.803101 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9210 exec execpodg6qhr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0617 07:00:35.950437 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0617 07:00:35.950498 19 builder.go:147] stdout: ""
  I0617 07:00:36.803930 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9210 exec execpodg6qhr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0617 07:00:36.923486 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0617 07:00:36.923539 19 builder.go:147] stdout: "externalname-service-2xvxl"
  I0617 07:00:36.923694 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9210 exec execpodg6qhr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.164.212 80'
  I0617 07:00:37.044949 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.164.212 80\nConnection to 10.108.164.212 80 port [tcp/http] succeeded!\n"
  I0617 07:00:37.045013 19 builder.go:147] stdout: "externalname-service-2xvxl"
  I0617 07:00:37.045125 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9210 exec execpodg6qhr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 31620'
  I0617 07:00:37.169752 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 31620\nConnection to 192.168.190.169 31620 port [tcp/*] succeeded!\n"
  I0617 07:00:37.169823 19 builder.go:147] stdout: "externalname-service-j7w7m"
  I0617 07:00:37.169984 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9210 exec execpodg6qhr -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.166 31620'
  I0617 07:00:37.301461 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.166 31620\nConnection to 192.168.190.166 31620 port [tcp/*] succeeded!\n"
  I0617 07:00:37.301512 19 builder.go:147] stdout: "externalname-service-j7w7m"
  I0617 07:00:37.301597 19 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0617 07:00:37.326646 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9210" for this suite. @ 06/17/24 07:00:37.331
• [7.665 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 06/17/24 07:00:37.335
  I0617 07:00:37.336011 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:00:37.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:37.37
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:37.373
  STEP: Counting existing ResourceQuota @ 06/17/24 07:00:37.375
  STEP: Creating a ResourceQuota @ 06/17/24 07:00:42.379
  STEP: Ensuring resource quota status is calculated @ 06/17/24 07:00:42.384
  I0617 07:00:44.390505 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2687" for this suite. @ 06/17/24 07:00:44.394
• [7.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 06/17/24 07:00:44.404
  I0617 07:00:44.404191 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:00:44.406
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:44.418
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:44.421
  STEP: Setting up server cert @ 06/17/24 07:00:44.442
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:00:44.835
  STEP: Deploying the webhook pod @ 06/17/24 07:00:44.84
  STEP: Wait for the deployment to be ready @ 06/17/24 07:00:44.854
  I0617 07:00:44.863858 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:00:46.877
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:00:46.894
  I0617 07:00:47.895263 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 06/17/24 07:00:47.903
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 06/17/24 07:00:47.904
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 06/17/24 07:00:47.904
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 06/17/24 07:00:47.904
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 06/17/24 07:00:47.905
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/17/24 07:00:47.905
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 06/17/24 07:00:47.906
  I0617 07:00:47.959774 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8636" for this suite. @ 06/17/24 07:00:47.964
  STEP: Destroying namespace "webhook-markers-1609" for this suite. @ 06/17/24 07:00:47.971
• [3.577 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 06/17/24 07:00:47.981
  I0617 07:00:47.981489 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename server-version @ 06/17/24 07:00:47.983
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:47.995
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:47.999
  STEP: Request ServerVersion @ 06/17/24 07:00:48.003
  STEP: Confirm major version @ 06/17/24 07:00:48.005
  I0617 07:00:48.005634 19 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 06/17/24 07:00:48.005
  I0617 07:00:48.006003 19 server_version.go:58] cleanMinorVersion: 30
  I0617 07:00:48.006485 19 server_version.go:62] Minor version: 30
  I0617 07:00:48.007044 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-4201" for this suite. @ 06/17/24 07:00:48.012
• [0.040 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 06/17/24 07:00:48.022
  I0617 07:00:48.022456 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:00:48.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:48.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:48.038
  STEP: validating api versions @ 06/17/24 07:00:48.04
  I0617 07:00:48.040979 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3157 api-versions'
  I0617 07:00:48.134347 19 builder.go:146] stderr: ""
  I0617 07:00:48.134447 19 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncertificates.k8s.io/v1\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nv1\n"
  I0617 07:00:48.134596 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3157" for this suite. @ 06/17/24 07:00:48.139
• [0.125 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 06/17/24 07:00:48.146
  I0617 07:00:48.146491 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:00:48.148
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:48.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:48.163
  STEP: starting the proxy server @ 06/17/24 07:00:48.166
  I0617 07:00:48.166728 19 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-452 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 06/17/24 07:00:48.222
  I0617 07:00:48.232632 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  I0617 07:00:48.234628 19 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:44419

  I0617 07:00:48.234654 19 kubectl.go:2228] kubectl proxy stderr: W0617 07:00:48.221477      86 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  STEP: Destroying namespace "kubectl-452" for this suite. @ 06/17/24 07:00:48.237
• [0.095 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 06/17/24 07:00:48.241
  I0617 07:00:48.241565 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 07:00:48.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:00:48.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:00:48.256
  STEP: Creating pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264 @ 06/17/24 07:00:48.26
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 07:00:50.274
  I0617 07:00:50.277758 19 container_probe.go:1749] Initial restart count of pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda is 0
  I0617 07:00:50.280297 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:00:52.286407 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:00:54.291993 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:00:56.298213 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:00:58.302324 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:00.306567 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:02.311147 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:04.316798 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:06.322839 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:08.326904 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:10.331874 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:12.336789 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:14.341694 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:16.345974 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:18.350588 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:20.355598 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:22.361380 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:24.366849 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:26.372749 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:28.378362 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:30.383801 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:32.388658 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:34.394017 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:36.400018 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:38.405097 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:40.410551 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:42.414905 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:44.420815 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:46.425528 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:48.430264 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:50.434487 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:52.439550 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:54.444908 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:56.450612 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:01:58.454495 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:00.459965 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:02.464689 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:04.469703 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:06.475197 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:08.479290 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:10.485236 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:12.489923 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:14.496385 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:16.503021 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:18.507313 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:20.512133 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:22.516465 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:24.520518 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:26.527293 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:28.532032 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:30.537559 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:32.543622 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:34.549494 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:36.555370 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:38.562691 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:40.567861 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:42.572711 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:44.578143 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:46.584149 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:48.588430 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:50.594099 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:52.598925 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:54.603422 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:56.609349 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:02:58.614421 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:00.619098 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:02.624944 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:04.629732 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:06.635386 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:08.640314 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:10.646618 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:12.651139 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:14.656997 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:16.663099 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:18.669120 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:20.674825 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:22.679665 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:24.684677 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:26.690231 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:28.695205 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:30.700540 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:32.705878 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:34.711444 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:36.718511 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:38.723753 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:40.729091 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:42.733448 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:44.738705 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:46.743611 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:48.748328 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:50.752915 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:52.757734 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:54.765074 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:56.769931 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:03:58.776403 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:00.781395 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:02.784342 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:04.790563 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:06.795272 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:08.800050 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:10.804821 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:12.809235 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:14.814845 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:16.819258 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:18.824123 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:20.829288 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:22.834592 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:24.839116 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:26.844016 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:28.849467 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:30.855603 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:32.860438 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:34.866939 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:36.872251 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:38.878831 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:40.883998 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:42.888197 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:44.894622 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:46.900112 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  I0617 07:04:48.904729 19 container_probe.go:1759] Get pod test-grpc-27d5b8c5-e49b-4414-b434-222386015eda in namespace container-probe-8264
  STEP: deleting the pod @ 06/17/24 07:04:50.906
  I0617 07:04:50.920713 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8264" for this suite. @ 06/17/24 07:04:50.926
• [242.689 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 06/17/24 07:04:50.931
  I0617 07:04:50.931601 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:04:50.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:04:50.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:04:50.968
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 06/17/24 07:04:50.971
  I0617 07:04:50.973362 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 06/17/24 07:04:56.922
  I0617 07:04:56.923535 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:04:58.343613 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:05:03.933996 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7428" for this suite. @ 06/17/24 07:05:03.944
• [13.020 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 06/17/24 07:05:03.952
  I0617 07:05:03.952547 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:05:03.955
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:03.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:03.972
  STEP: creating all guestbook components @ 06/17/24 07:05:03.975
  I0617 07:05:03.975782 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0617 07:05:03.976140 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 create -f -'
  I0617 07:05:04.244187 19 builder.go:146] stderr: ""
  I0617 07:05:04.244249 19 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0617 07:05:04.244320 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0617 07:05:04.244442 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 create -f -'
  I0617 07:05:04.461273 19 builder.go:146] stderr: ""
  I0617 07:05:04.461332 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0617 07:05:04.461442 19 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0617 07:05:04.461556 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 create -f -'
  I0617 07:05:04.651202 19 builder.go:146] stderr: ""
  I0617 07:05:04.651269 19 builder.go:147] stdout: "service/frontend created\n"
  I0617 07:05:04.651452 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0617 07:05:04.651717 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 create -f -'
  I0617 07:05:04.762709 19 builder.go:146] stderr: ""
  I0617 07:05:04.762754 19 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0617 07:05:04.762833 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0617 07:05:04.763128 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 create -f -'
  I0617 07:05:04.894137 19 builder.go:146] stderr: ""
  I0617 07:05:04.894209 19 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0617 07:05:04.894296 19 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0617 07:05:04.894730 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 create -f -'
  I0617 07:05:05.013165 19 builder.go:146] stderr: ""
  I0617 07:05:05.013250 19 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 06/17/24 07:05:05.013
  I0617 07:05:05.013344 19 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I0617 07:05:10.065322 19 kubectl.go:2275] Waiting for frontend to serve content.
  I0617 07:05:10.079667 19 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0617 07:05:10.093957 19 kubectl.go:2285] Verifying that added entry can be retrieved.
  STEP: using delete to clean up resources @ 06/17/24 07:05:10.102
  I0617 07:05:10.102649 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 delete --grace-period=0 --force -f -'
  I0617 07:05:10.215034 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:05:10.215089 19 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 06/17/24 07:05:10.215
  I0617 07:05:10.215233 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 delete --grace-period=0 --force -f -'
  I0617 07:05:10.302988 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:05:10.303045 19 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/17/24 07:05:10.303
  I0617 07:05:10.303193 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 delete --grace-period=0 --force -f -'
  I0617 07:05:10.399879 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:05:10.399943 19 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/17/24 07:05:10.4
  I0617 07:05:10.400650 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 delete --grace-period=0 --force -f -'
  I0617 07:05:10.489031 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:05:10.489086 19 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 06/17/24 07:05:10.489
  I0617 07:05:10.489281 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 delete --grace-period=0 --force -f -'
  I0617 07:05:10.594664 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:05:10.594773 19 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 06/17/24 07:05:10.594
  I0617 07:05:10.595047 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6533 delete --grace-period=0 --force -f -'
  I0617 07:05:10.698611 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:05:10.698677 19 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0617 07:05:10.698851 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6533" for this suite. @ 06/17/24 07:05:10.703
• [6.759 seconds]
------------------------------
SSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 06/17/24 07:05:10.711
  I0617 07:05:10.711737 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:05:10.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:10.739
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:10.743
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/17/24 07:05:10.746
  I0617 07:05:10.746535 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-1321 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0617 07:05:10.823025 19 builder.go:146] stderr: ""
  I0617 07:05:10.823086 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/17/24 07:05:10.823
  I0617 07:05:10.826739 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-1321 delete pods e2e-test-httpd-pod'
  I0617 07:05:12.314613 19 builder.go:146] stderr: ""
  I0617 07:05:12.314670 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0617 07:05:12.314797 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1321" for this suite. @ 06/17/24 07:05:12.319
• [1.613 seconds]
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 06/17/24 07:05:12.325
  I0617 07:05:12.325276 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:05:12.331
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:12.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:12.345
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:05:12.348
  STEP: Saw pod success @ 06/17/24 07:05:16.37
  I0617 07:05:16.377991 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-bfd02c9b-2a04-45fd-a100-f952ee9147c7 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:05:16.393
  I0617 07:05:16.407262 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5007" for this suite. @ 06/17/24 07:05:16.412
• [4.093 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 06/17/24 07:05:16.419
  I0617 07:05:16.419146 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:05:16.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:16.437
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:16.44
  STEP: creating service multi-endpoint-test in namespace services-2773 @ 06/17/24 07:05:16.444
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2773 to expose endpoints map[] @ 06/17/24 07:05:16.454
  I0617 07:05:16.458039 19 service.go:4226] Failed go get Endpoints object: endpoints "multi-endpoint-test" not found
  I0617 07:05:17.464909 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2773 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-2773 @ 06/17/24 07:05:17.464
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2773 to expose endpoints map[pod1:[100]] @ 06/17/24 07:05:19.482
  I0617 07:05:19.490890 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2773 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-2773 @ 06/17/24 07:05:19.49
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2773 to expose endpoints map[pod1:[100] pod2:[101]] @ 06/17/24 07:05:21.508
  I0617 07:05:21.520502 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2773 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 06/17/24 07:05:21.52
  I0617 07:05:21.520620 19 resource.go:361] Creating new exec pod
  I0617 07:05:24.533685 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-2773 exec execpodj6cs2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0617 07:05:24.642036 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 80\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0617 07:05:24.642318 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:05:24.642519 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-2773 exec execpodj6cs2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.78.240 80'
  I0617 07:05:24.768959 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.78.240 80\nConnection to 10.102.78.240 80 port [tcp/http] succeeded!\n"
  I0617 07:05:24.769013 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:05:24.769201 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-2773 exec execpodj6cs2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0617 07:05:24.880618 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0617 07:05:24.880681 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:05:24.880818 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-2773 exec execpodj6cs2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.78.240 81'
  I0617 07:05:24.988907 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.78.240 81\nConnection to 10.102.78.240 81 port [tcp/*] succeeded!\n"
  I0617 07:05:24.988960 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-2773 @ 06/17/24 07:05:24.989
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2773 to expose endpoints map[pod2:[101]] @ 06/17/24 07:05:25.002
  I0617 07:05:25.012484 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2773 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-2773 @ 06/17/24 07:05:25.012
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-2773 to expose endpoints map[] @ 06/17/24 07:05:25.023
  I0617 07:05:26.042282 19 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-2773 exposes endpoints map[]
  I0617 07:05:26.056772 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2773" for this suite. @ 06/17/24 07:05:26.061
• [9.647 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 06/17/24 07:05:26.068
  I0617 07:05:26.068383 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename podtemplate @ 06/17/24 07:05:26.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:26.08
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:26.083
  STEP: Create a pod template @ 06/17/24 07:05:26.086
  STEP: Replace a pod template @ 06/17/24 07:05:26.09
  I0617 07:05:26.096240 19 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0617 07:05:26.096380 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-9763" for this suite. @ 06/17/24 07:05:26.099
• [0.037 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 06/17/24 07:05:26.105
  I0617 07:05:26.105329 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:05:26.107
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:26.119
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:26.125
  STEP: Creating configMap with name cm-test-opt-del-3def94a7-9c03-463f-ab3c-10c77254de15 @ 06/17/24 07:05:26.134
  STEP: Creating configMap with name cm-test-opt-upd-122feb73-7b1f-40f4-8528-c852737e201f @ 06/17/24 07:05:26.138
  STEP: Creating the pod @ 06/17/24 07:05:26.141
  STEP: Deleting configmap cm-test-opt-del-3def94a7-9c03-463f-ab3c-10c77254de15 @ 06/17/24 07:05:28.177
  STEP: Updating configmap cm-test-opt-upd-122feb73-7b1f-40f4-8528-c852737e201f @ 06/17/24 07:05:28.182
  STEP: Creating configMap with name cm-test-opt-create-4b48ee07-2813-4734-8163-a0923372620f @ 06/17/24 07:05:28.187
  STEP: waiting to observe update in volume @ 06/17/24 07:05:28.19
  I0617 07:05:30.211863 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3039" for this suite. @ 06/17/24 07:05:30.216
• [4.118 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 06/17/24 07:05:30.224
  I0617 07:05:30.224434 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename lease-test @ 06/17/24 07:05:30.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:30.24
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:30.243
  I0617 07:05:30.297956 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-376" for this suite. @ 06/17/24 07:05:30.303
• [0.084 seconds]
------------------------------
SS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 06/17/24 07:05:30.308
  I0617 07:05:30.308685 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename runtimeclass @ 06/17/24 07:05:30.31
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:30.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:30.332
  STEP: Deleting RuntimeClass runtimeclass-9491-delete-me @ 06/17/24 07:05:30.338
  STEP: Waiting for the RuntimeClass to disappear @ 06/17/24 07:05:30.342
  I0617 07:05:30.350721 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9491" for this suite. @ 06/17/24 07:05:30.355
• [0.052 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 06/17/24 07:05:30.36
  I0617 07:05:30.360952 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename job @ 06/17/24 07:05:30.363
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:30.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:30.376
  STEP: Creating a job @ 06/17/24 07:05:30.379
  STEP: Ensuring job reaches completions @ 06/17/24 07:05:30.386
  I0617 07:05:40.391584 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3521" for this suite. @ 06/17/24 07:05:40.395
• [10.039 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 06/17/24 07:05:40.399
  I0617 07:05:40.399903 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:05:40.404
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:40.419
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:40.424
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/17/24 07:05:40.427
  I0617 07:05:40.428141 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-2764 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0617 07:05:40.543812 19 builder.go:146] stderr: ""
  I0617 07:05:40.544039 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 06/17/24 07:05:40.544
  STEP: verifying the pod e2e-test-httpd-pod was created @ 06/17/24 07:05:45.598
  I0617 07:05:45.598821 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-2764 get pod e2e-test-httpd-pod -o json'
  I0617 07:05:45.689450 19 builder.go:146] stderr: ""
  I0617 07:05:45.690049 19 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"6ba594569a9fbf94bcc2c4196f2e0c29673e6aef4687dda50f638924849da6cf\",\n            \"cni.projectcalico.org/podIP\": \"172.16.228.159/32\",\n            \"cni.projectcalico.org/podIPs\": \"172.16.228.159/32\"\n        },\n        \"creationTimestamp\": \"2024-06-17T07:05:40Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-2764\",\n        \"resourceVersion\": \"7684\",\n        \"uid\": \"a03f6ae9-61b7-4a8a-9c22-7891a1caffc7\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-q5k2j\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ck-130-worker-1.novalocal\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-q5k2j\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-17T07:05:41Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-17T07:05:40Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-17T07:05:41Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-17T07:05:41Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-06-17T07:05:40Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"cri-o://a7655d9745fb952e54f9a245666fee08219af46addccdc08e88a0be81afc80e1\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-06-17T07:05:41Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"192.168.190.169\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"192.168.190.169\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"172.16.228.159\",\n        \"podIPs\": [\n            {\n                \"ip\": \"172.16.228.159\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-06-17T07:05:40Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 06/17/24 07:05:45.69
  I0617 07:05:45.690501 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-2764 replace -f -'
  I0617 07:05:45.859141 19 builder.go:146] stderr: ""
  I0617 07:05:45.859243 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 06/17/24 07:05:45.859
  I0617 07:05:45.864877 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-2764 delete pods e2e-test-httpd-pod'
  I0617 07:05:47.446292 19 builder.go:146] stderr: ""
  I0617 07:05:47.446391 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0617 07:05:47.446751 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2764" for this suite. @ 06/17/24 07:05:47.452
• [7.060 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 06/17/24 07:05:47.46
  I0617 07:05:47.460745 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 07:05:47.462
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:47.479
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:47.483
  STEP: Creating configMap with name configmap-test-volume-a6176354-b916-4517-8f21-1ff0e96fcf3d @ 06/17/24 07:05:47.486
  STEP: Creating a pod to test consume configMaps @ 06/17/24 07:05:47.491
  STEP: Saw pod success @ 06/17/24 07:05:51.515
  I0617 07:05:51.526702 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-baec4191-2203-4e34-bf3d-58d911c0cf68 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 07:05:51.548
  I0617 07:05:51.587096 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4156" for this suite. @ 06/17/24 07:05:51.591
• [4.136 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 06/17/24 07:05:51.597
  I0617 07:05:51.597150 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-webhook @ 06/17/24 07:05:51.598
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:51.611
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:51.614
  STEP: Setting up server cert @ 06/17/24 07:05:51.619
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/17/24 07:05:52.219
  STEP: Deploying the custom resource conversion webhook pod @ 06/17/24 07:05:52.227
  STEP: Wait for the deployment to be ready @ 06/17/24 07:05:52.238
  I0617 07:05:52.246975 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:05:54.264
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:05:54.289
  I0617 07:05:55.289976 19 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0617 07:05:55.300847 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Creating a v1 custom resource @ 06/17/24 07:05:57.883
  STEP: v2 custom resource should be converted @ 06/17/24 07:05:57.889
  I0617 07:05:58.445376 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4118" for this suite. @ 06/17/24 07:05:58.45
• [6.863 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 06/17/24 07:05:58.463
  I0617 07:05:58.463946 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename events @ 06/17/24 07:05:58.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:58.481
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:58.485
  STEP: Create set of events @ 06/17/24 07:05:58.491
  I0617 07:05:58.495842 19 core_events.go:198] created test-event-1
  I0617 07:05:58.499478 19 core_events.go:198] created test-event-2
  I0617 07:05:58.502653 19 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 06/17/24 07:05:58.502
  STEP: delete collection of events @ 06/17/24 07:05:58.505
  I0617 07:05:58.505304 19 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 06/17/24 07:05:58.517
  I0617 07:05:58.517300 19 core_events.go:230] requesting list of events to confirm quantity
  I0617 07:05:58.520552 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-4680" for this suite. @ 06/17/24 07:05:58.524
• [0.064 seconds]
------------------------------
SSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 06/17/24 07:05:58.529
  I0617 07:05:58.529736 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replication-controller @ 06/17/24 07:05:58.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:05:58.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:05:58.547
  STEP: Given a ReplicationController is created @ 06/17/24 07:05:58.55
  STEP: When the matched label of one of its pods change @ 06/17/24 07:05:58.56
  I0617 07:05:58.563307 19 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  I0617 07:06:03.567455 19 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/17/24 07:06:03.578
  I0617 07:06:04.586631 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5309" for this suite. @ 06/17/24 07:06:04.59
• [6.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 06/17/24 07:06:04.597
  I0617 07:06:04.597518 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svcaccounts @ 06/17/24 07:06:04.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:06:04.612
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:06:04.615
  STEP: reading a file in the container @ 06/17/24 07:06:06.637
  I0617 07:06:06.637884 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9357 pod-service-account-9e1293ae-9cbb-4bc8-92c8-90f938f4a21a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 06/17/24 07:06:06.784
  I0617 07:06:06.784648 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9357 pod-service-account-9e1293ae-9cbb-4bc8-92c8-90f938f4a21a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  STEP: reading a file in the container @ 06/17/24 07:06:06.916
  I0617 07:06:06.916358 19 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-9357 pod-service-account-9e1293ae-9cbb-4bc8-92c8-90f938f4a21a -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0617 07:06:07.041520 19 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-9357"
  I0617 07:06:07.044584 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-9357" for this suite. @ 06/17/24 07:06:07.048
• [2.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 06/17/24 07:06:07.056
  I0617 07:06:07.056208 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 07:06:07.058
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:06:07.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:06:07.073
  STEP: Creating configMap configmap-3627/configmap-test-d66daedc-daa2-4c4a-8499-2abdab3ffabf @ 06/17/24 07:06:07.076
  STEP: Creating a pod to test consume configMaps @ 06/17/24 07:06:07.08
  STEP: Saw pod success @ 06/17/24 07:06:11.101
  I0617 07:06:11.104612 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-07110b2a-f9b6-4cc3-8b16-c8864766cc82 container env-test: <nil>
  STEP: delete the pod @ 06/17/24 07:06:11.111
  I0617 07:06:11.124890 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3627" for this suite. @ 06/17/24 07:06:11.128
• [4.078 seconds]
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 06/17/24 07:06:11.134
  I0617 07:06:11.134663 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 07:06:11.136
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:06:11.146
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:06:11.151
  I0617 07:06:11.160457 19 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0617 07:06:16.168059 19 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/17/24 07:06:16.168
  I0617 07:06:16.168784 19 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 06/17/24 07:06:16.177
  I0617 07:06:16.189723 19 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6169",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "15ff31bc-b52c-4c52-a3a2-d3bcd4cfdb07",
      ResourceVersion: (string) (len=4) "8056",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854204776,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0617 07:06:16.194579 19 deployment.go:41] New ReplicaSet of Deployment "test-cleanup-deployment" is nil.
  I0617 07:06:16.194745 19 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0617 07:06:16.195337 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6169",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "75217500-d565-43e5-8ef9-bd86a24f8da7",
      ResourceVersion: (string) (len=4) "8057",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854204771,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "15ff31bc-b52c-4c52-a3a2-d3bcd4cfdb07",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204772,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204776,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 31 35 66 66 33 31 62  |"uid\":\"15ff31b|
              00000040  63 2d 62 35 32 63 2d 34  63 35 32 2d 61 33 61 32  |c-b52c-4c52-a3a2|
              00000050  2d 64 33 62 63 64 34 63  66 64 62 30 37 5c 22 7d  |-d3bcd4cfdb07\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:06:16.214856 19 deployment.go:67] Pod "test-cleanup-controller-j4bmz" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-j4bmz",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=15) "deployment-6169",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6f07c1f2-376b-4f41-9e00-64ee5cd92d77",
      ResourceVersion: (string) (len=4) "8042",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854204771,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f42b24221a257ea535858117bb56586c9832c247758cb1517d9d76ceffe7038a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.165/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.165/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "75217500-d565-43e5-8ef9-bd86a24f8da7",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  37 35 32 31 37 35 30 30  |uid\":\"75217500|
              00000080  2d 64 35 36 35 2d 34 33  65 35 2d 38 65 66 39 2d  |-d565-43e5-8ef9-|
              00000090  62 64 38 36 61 32 34 66  38 64 61 37 5c 22 7d 22  |bd86a24f8da7\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204772,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 36 35 5c 22 7d 22  |2.16.228.165\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5dht9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5dht9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204772,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204772,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204772,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854204771,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.165",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.165"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854204771,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854204771,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://c5d5f8682fdf755cf60000235aea5793dc1a01595263f4377977f612ba66b134",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:06:16.227086 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6169" for this suite. @ 06/17/24 07:06:16.238
• [5.110 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 06/17/24 07:06:16.245
  I0617 07:06:16.245353 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 07:06:16.247
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:06:16.257
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:06:16.259
  STEP: Creating pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196 @ 06/17/24 07:06:16.263
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 07:06:18.281
  I0617 07:06:18.284350 19 container_probe.go:1749] Initial restart count of pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 is 0
  I0617 07:06:18.287344 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:20.294617 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:22.299597 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:24.307750 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:26.313313 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:28.318418 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:30.323744 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:32.329209 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:34.334353 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:36.341888 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:38.348739 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:40.353990 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:42.358494 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:44.363019 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:46.369272 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:48.374965 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:50.380621 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:52.386495 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:54.390658 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:56.396485 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:06:58.401341 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:00.406481 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:02.411596 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:04.417000 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:06.423619 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:08.428130 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:10.433392 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:12.437895 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:14.442897 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:16.449751 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:18.454562 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:20.460571 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:22.466427 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:24.471861 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:26.477415 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:28.482487 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:30.487848 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:32.493224 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:34.498031 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:36.503300 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:38.508566 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:40.516604 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:42.521819 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:44.527794 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:46.535080 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:48.539957 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:50.545438 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:52.549856 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:54.554360 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:56.559685 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:07:58.563849 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:00.569306 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:02.573296 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:04.577894 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:06.583165 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:08.588367 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:10.592348 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:12.597504 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:14.603308 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:16.607816 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:18.612885 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:20.618350 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:22.626122 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:24.630944 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:26.636557 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:28.641258 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:30.646681 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:32.651765 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:34.657648 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:36.663119 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:38.667908 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:40.672774 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:42.677515 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:44.681951 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:46.686214 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:48.690990 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:50.697038 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:52.701637 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:54.707093 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:56.712251 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:08:58.717276 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:00.723248 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:02.729412 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:04.735352 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:06.741556 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:08.745888 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:10.750845 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:12.757079 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:14.761951 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:16.767259 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:18.771984 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:20.776781 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:22.783280 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:24.788079 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:26.792973 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:28.798303 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:30.803238 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:32.807630 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:34.812309 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:36.817752 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:38.823438 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:40.828197 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:42.832569 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:44.838325 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:46.843162 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:48.848099 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:50.852379 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:52.857718 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:54.861729 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:56.866922 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:09:58.871425 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:00.876587 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:02.880472 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:04.885272 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:06.891953 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:08.896984 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:10.901460 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:12.905084 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:14.912722 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  I0617 07:10:16.920081 19 container_probe.go:1759] Get pod busybox-fbc8f6e0-571b-4a78-8b94-d7c45dad5d24 in namespace container-probe-9196
  STEP: deleting the pod @ 06/17/24 07:10:18.921
  I0617 07:10:18.937749 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9196" for this suite. @ 06/17/24 07:10:18.943
• [242.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 06/17/24 07:10:18.95
  I0617 07:10:18.950370 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:10:18.952
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:10:18.964
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:10:18.968
  STEP: creating a replication controller @ 06/17/24 07:10:18.972
  I0617 07:10:18.973004 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 create -f -'
  I0617 07:10:19.138294 19 builder.go:146] stderr: ""
  I0617 07:10:19.138390 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/17/24 07:10:19.138
  I0617 07:10:19.138728 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0617 07:10:19.234157 19 builder.go:146] stderr: ""
  I0617 07:10:19.234245 19 builder.go:147] stdout: "update-demo-nautilus-75br8 update-demo-nautilus-mplmw "
  I0617 07:10:19.234348 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods update-demo-nautilus-75br8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:10:19.327031 19 builder.go:146] stderr: ""
  I0617 07:10:19.327078 19 builder.go:147] stdout: ""
  I0617 07:10:19.327098 19 kubectl.go:2501] update-demo-nautilus-75br8 is created but not running
  I0617 07:10:24.328617 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0617 07:10:24.424375 19 builder.go:146] stderr: ""
  I0617 07:10:24.424601 19 builder.go:147] stdout: "update-demo-nautilus-75br8 update-demo-nautilus-mplmw "
  I0617 07:10:24.424697 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods update-demo-nautilus-75br8 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:10:24.493977 19 builder.go:146] stderr: ""
  I0617 07:10:24.494124 19 builder.go:147] stdout: "true"
  I0617 07:10:24.494234 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods update-demo-nautilus-75br8 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0617 07:10:24.572788 19 builder.go:146] stderr: ""
  I0617 07:10:24.572837 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0617 07:10:24.572854 19 kubectl.go:2392] validating pod update-demo-nautilus-75br8
  I0617 07:10:24.579250 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0617 07:10:24.579477 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0617 07:10:24.579498 19 kubectl.go:2519] update-demo-nautilus-75br8 is verified up and running
  I0617 07:10:24.579625 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods update-demo-nautilus-mplmw -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:10:24.655068 19 builder.go:146] stderr: ""
  I0617 07:10:24.655114 19 builder.go:147] stdout: "true"
  I0617 07:10:24.655209 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods update-demo-nautilus-mplmw -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0617 07:10:24.749539 19 builder.go:146] stderr: ""
  I0617 07:10:24.749597 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0617 07:10:24.749613 19 kubectl.go:2392] validating pod update-demo-nautilus-mplmw
  I0617 07:10:24.754702 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0617 07:10:24.754803 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0617 07:10:24.754828 19 kubectl.go:2519] update-demo-nautilus-mplmw is verified up and running
  STEP: using delete to clean up resources @ 06/17/24 07:10:24.754
  I0617 07:10:24.755104 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 delete --grace-period=0 --force -f -'
  I0617 07:10:24.845714 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:10:24.845811 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0617 07:10:24.845894 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get rc,svc -l name=update-demo --no-headers'
  I0617 07:10:24.950725 19 builder.go:146] stderr: "No resources found in kubectl-7931 namespace.\n"
  I0617 07:10:24.950818 19 builder.go:147] stdout: ""
  I0617 07:10:24.950930 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-7931 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0617 07:10:25.042736 19 builder.go:146] stderr: ""
  I0617 07:10:25.042792 19 builder.go:147] stdout: ""
  I0617 07:10:25.042919 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7931" for this suite. @ 06/17/24 07:10:25.047
• [6.102 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 06/17/24 07:10:25.053
  I0617 07:10:25.053414 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:10:25.054
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:10:25.066
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:10:25.071
  STEP: Creating Pod @ 06/17/24 07:10:25.074
  STEP: Reading file content from the nginx-container @ 06/17/24 07:10:27.089
  I0617 07:10:27.089490 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-3760 PodName:pod-sharedvolume-5d5aafa6-1851-426e-bf87-0d5c69e7ad4d ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:10:27.089529 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:10:27.090133 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:10:27.090232 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/emptydir-3760/pods/pod-sharedvolume-5d5aafa6-1851-426e-bf87-0d5c69e7ad4d/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0617 07:10:27.136405 19 exec_util.go:106] Exec stderr: ""
  I0617 07:10:27.136576 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3760" for this suite. @ 06/17/24 07:10:27.142
• [2.095 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 06/17/24 07:10:27.149
  I0617 07:10:27.149230 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:10:27.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:10:27.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:10:27.165
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/17/24 07:10:27.17
  STEP: Saw pod success @ 06/17/24 07:10:31.191
  I0617 07:10:31.195049 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-6659a56d-3b98-4330-9f27-e2cb321bf2a0 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:10:31.215
  I0617 07:10:31.229528 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9701" for this suite. @ 06/17/24 07:10:31.234
• [4.092 seconds]
------------------------------
SSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 06/17/24 07:10:31.241
  I0617 07:10:31.241077 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename cronjob @ 06/17/24 07:10:31.242
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:10:31.256
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:10:31.261
  STEP: Creating a suspended cronjob @ 06/17/24 07:10:31.265
  STEP: Ensuring no jobs are scheduled @ 06/17/24 07:10:31.271
  STEP: Ensuring no job exists by listing jobs explicitly @ 06/17/24 07:15:31.273
  STEP: Removing cronjob @ 06/17/24 07:15:31.277
  I0617 07:15:31.283060 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-95" for this suite. @ 06/17/24 07:15:31.294
• [300.060 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 06/17/24 07:15:31.301
  I0617 07:15:31.301437 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:15:31.304
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:15:31.316
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:15:31.32
  STEP: Create a pod @ 06/17/24 07:15:31.324
  STEP: patching /status @ 06/17/24 07:15:33.346
  I0617 07:15:33.354534 19 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0617 07:15:33.354696 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8285" for this suite. @ 06/17/24 07:15:33.36
• [2.064 seconds]
------------------------------
SS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 06/17/24 07:15:33.365
  I0617 07:15:33.365456 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:15:33.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:15:33.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:15:33.381
  STEP: creating service in namespace services-3861 @ 06/17/24 07:15:33.384
  STEP: creating service affinity-clusterip-transition in namespace services-3861 @ 06/17/24 07:15:33.384
  STEP: creating replication controller affinity-clusterip-transition in namespace services-3861 @ 06/17/24 07:15:33.395
  I0617 07:15:33.402527      19 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-3861, replica count: 3
  I0617 07:15:36.453421      19 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:15:36.460907 19 resource.go:361] Creating new exec pod
  I0617 07:15:39.476997 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3861 exec execpod-affinity7mzb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0617 07:15:39.642735 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip-transition 80\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0617 07:15:39.642808 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:15:39.642949 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3861 exec execpod-affinity7mzb2 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.99.0.141 80'
  I0617 07:15:39.743412 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.99.0.141 80\nConnection to 10.99.0.141 80 port [tcp/http] succeeded!\n"
  I0617 07:15:39.743481 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:15:39.755075 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3861 exec execpod-affinity7mzb2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.0.141:80/ ; done'
  I0617 07:15:39.979878 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n"
  I0617 07:15:39.979998 19 builder.go:147] stdout: "\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-fw24h\naffinity-clusterip-transition-fw24h\naffinity-clusterip-transition-fw24h\naffinity-clusterip-transition-bzgzr\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-bzgzr\naffinity-clusterip-transition-bzgzr\naffinity-clusterip-transition-fw24h\naffinity-clusterip-transition-fw24h\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-fw24h\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-bzgzr\naffinity-clusterip-transition-fw24h"
  I0617 07:15:39.980032 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:39.980076 19 service.go:242] Received response from host: affinity-clusterip-transition-fw24h
  I0617 07:15:39.980111 19 service.go:242] Received response from host: affinity-clusterip-transition-fw24h
  I0617 07:15:39.980133 19 service.go:242] Received response from host: affinity-clusterip-transition-fw24h
  I0617 07:15:39.980152 19 service.go:242] Received response from host: affinity-clusterip-transition-bzgzr
  I0617 07:15:39.980170 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:39.980214 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:39.980230 19 service.go:242] Received response from host: affinity-clusterip-transition-bzgzr
  I0617 07:15:39.980252 19 service.go:242] Received response from host: affinity-clusterip-transition-bzgzr
  I0617 07:15:39.980264 19 service.go:242] Received response from host: affinity-clusterip-transition-fw24h
  I0617 07:15:39.980272 19 service.go:242] Received response from host: affinity-clusterip-transition-fw24h
  I0617 07:15:39.980291 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:39.980300 19 service.go:242] Received response from host: affinity-clusterip-transition-fw24h
  I0617 07:15:39.980320 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:39.980349 19 service.go:242] Received response from host: affinity-clusterip-transition-bzgzr
  I0617 07:15:39.980362 19 service.go:242] Received response from host: affinity-clusterip-transition-fw24h
  I0617 07:15:39.989109 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3861 exec execpod-affinity7mzb2 -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.99.0.141:80/ ; done'
  I0617 07:15:40.169379 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.99.0.141:80/\n"
  I0617 07:15:40.169482 19 builder.go:147] stdout: "\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw\naffinity-clusterip-transition-r68rw"
  I0617 07:15:40.169523 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169543 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169552 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169565 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169576 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169616 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169626 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169635 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169645 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169654 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169663 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169672 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169681 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169690 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169705 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169715 19 service.go:242] Received response from host: affinity-clusterip-transition-r68rw
  I0617 07:15:40.169965 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-3861, will wait for the garbage collector to delete the pods @ 06/17/24 07:15:40.182
  I0617 07:15:40.246301 19 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 7.603117ms
  I0617 07:15:40.347455 19 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.152766ms
  I0617 07:15:43.596812 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3861" for this suite. @ 06/17/24 07:15:43.601
• [10.246 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 06/17/24 07:15:43.611
  I0617 07:15:43.611940 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:15:43.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:15:43.629
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:15:43.633
  STEP: Creating a ResourceQuota with best effort scope @ 06/17/24 07:15:43.636
  STEP: Ensuring ResourceQuota status is calculated @ 06/17/24 07:15:43.64
  STEP: Creating a ResourceQuota with not best effort scope @ 06/17/24 07:15:45.648
  STEP: Ensuring ResourceQuota status is calculated @ 06/17/24 07:15:45.654
  STEP: Creating a best-effort pod @ 06/17/24 07:15:47.66
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 06/17/24 07:15:47.673
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 06/17/24 07:15:49.679
  STEP: Deleting the pod @ 06/17/24 07:15:51.683
  STEP: Ensuring resource quota status released the pod usage @ 06/17/24 07:15:51.692
  STEP: Creating a not best-effort pod @ 06/17/24 07:15:53.697
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 06/17/24 07:15:53.708
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 06/17/24 07:15:55.713
  STEP: Deleting the pod @ 06/17/24 07:15:57.718
  STEP: Ensuring resource quota status released the pod usage @ 06/17/24 07:15:57.728
  I0617 07:15:59.733085 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8731" for this suite. @ 06/17/24 07:15:59.739
• [16.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 06/17/24 07:15:59.746
  I0617 07:15:59.746063 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:15:59.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:15:59.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:15:59.767
  STEP: set up a multi version CRD @ 06/17/24 07:15:59.772
  I0617 07:15:59.774024 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: mark a version not serverd @ 06/17/24 07:16:03.362
  STEP: check the unserved version gets removed @ 06/17/24 07:16:03.38
  STEP: check the other version is not changed @ 06/17/24 07:16:04.364
  I0617 07:16:07.267486 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1551" for this suite. @ 06/17/24 07:16:07.276
• [7.536 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 06/17/24 07:16:07.281
  I0617 07:16:07.281995 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:16:07.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:16:07.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:16:07.297
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:16:07.301
  STEP: Saw pod success @ 06/17/24 07:16:11.32
  I0617 07:16:11.323386 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-a2a13619-2f12-4323-b207-0ba67f4883c7 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:16:11.339
  I0617 07:16:11.353793 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1471" for this suite. @ 06/17/24 07:16:11.358
• [4.081 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 06/17/24 07:16:11.363
  I0617 07:16:11.363042 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:16:11.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:16:11.376
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:16:11.379
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 06/17/24 07:16:11.382
  STEP: Saw pod success @ 06/17/24 07:16:15.398
  I0617 07:16:15.402428 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-e85d3224-b125-47e1-964f-dc36cea7bafe container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:16:15.408
  I0617 07:16:15.423699 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5311" for this suite. @ 06/17/24 07:16:15.428
• [4.075 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 06/17/24 07:16:15.438
  I0617 07:16:15.438077 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:16:15.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:16:15.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:16:15.46
  STEP: Creating resourceQuota "e2e-rq-status-sq4gx" @ 06/17/24 07:16:15.467
  I0617 07:16:15.476890 19 resource_quota.go:1051] Resource quota "e2e-rq-status-sq4gx" reports spec: hard cpu limit of 500m
  I0617 07:16:15.476957 19 resource_quota.go:1053] Resource quota "e2e-rq-status-sq4gx" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-sq4gx" /status @ 06/17/24 07:16:15.477
  STEP: Confirm /status for "e2e-rq-status-sq4gx" resourceQuota via watch @ 06/17/24 07:16:15.485
  I0617 07:16:15.487529 19 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-sq4gx" in namespace "resourcequota-6573" with hard status: v1.ResourceList(nil)
  I0617 07:16:15.487720 19 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-sq4gx" in namespace "resourcequota-6573" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0617 07:16:15.487761 19 resource_quota.go:1090] ResourceQuota "e2e-rq-status-sq4gx" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 06/17/24 07:16:15.491
  I0617 07:16:15.496835 19 resource_quota.go:1101] Resource quota "e2e-rq-status-sq4gx" reports spec: hard cpu limit of 1
  I0617 07:16:15.496887 19 resource_quota.go:1102] Resource quota "e2e-rq-status-sq4gx" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-sq4gx" /status @ 06/17/24 07:16:15.496
  STEP: Confirm /status for "e2e-rq-status-sq4gx" resourceQuota via watch @ 06/17/24 07:16:15.503
  I0617 07:16:15.505131 19 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-sq4gx" in namespace "resourcequota-6573" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0617 07:16:15.505207 19 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-sq4gx" in namespace "resourcequota-6573" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0617 07:16:15.505239 19 resource_quota.go:1134] ResourceQuota "e2e-rq-status-sq4gx" /status was patched
  STEP: Get "e2e-rq-status-sq4gx" /status @ 06/17/24 07:16:15.505
  I0617 07:16:15.509123 19 resource_quota.go:1145] Resourcequota "e2e-rq-status-sq4gx" reports status: hard cpu of 1
  I0617 07:16:15.509165 19 resource_quota.go:1147] Resourcequota "e2e-rq-status-sq4gx" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-sq4gx" /status before checking Spec is unchanged @ 06/17/24 07:16:15.512
  I0617 07:16:15.517335 19 resource_quota.go:1167] Resourcequota "e2e-rq-status-sq4gx" reports status: hard cpu of 2
  I0617 07:16:15.517408 19 resource_quota.go:1169] Resourcequota "e2e-rq-status-sq4gx" reports status: hard memory of 2Gi
  I0617 07:16:15.519516 19 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-sq4gx" in namespace "resourcequota-6573" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0617 07:16:15.523426 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac20d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2138), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2168), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:20.523630 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00519dcf8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00519dd58), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00519dda0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:25.524448 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00519def0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00519df20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000930078), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:30.526116 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac22d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2300), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2348), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:35.525470 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000930600), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0009306c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0009307e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:40.527455 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875368), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048753e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:45.527163 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac24b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac24f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2528), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:50.525969 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac26a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac26d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:16:55.525758 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875608), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875650), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875698), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:00.524792 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2828), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2870), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac28a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:05.524162 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac29a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac29f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2a20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:10.526772 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2b88), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2bb8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2be8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:15.526608 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2d38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2d68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:20.523960 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000930b58), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000930c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000930d08), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:25.525840 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875950), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875980), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0048759e0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:30.524103 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875c20), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875c68), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:35.526021 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000931338), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0009313c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000931530), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:40.525260 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000931a10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000931aa0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000931c20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:45.525812 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875e30), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875e90), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004875ec0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:50.525550 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef2090), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef2120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef21c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:17:55.524585 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2f18), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2f60), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ac2f90), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:18:00.523950 19 resource_quota.go:1212] ResourceQuota "e2e-rq-status-sq4gx" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-sq4gx", GenerateName:"", Namespace:"resourcequota-6573", SelfLink:"", UID:"801184db-d8e0-4322-a816-cdbb14e59063", ResourceVersion:"9523", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-sq4gx"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef23c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef2468), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 7, 16, 15, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000ef24b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  I0617 07:18:05.524148 19 resource_quota.go:1209] ResourceQuota "e2e-rq-status-sq4gx" Spec was unchanged and /status reset
  I0617 07:18:05.524435 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6573" for this suite. @ 06/17/24 07:18:05.529
• [110.113 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 06/17/24 07:18:05.551
  I0617 07:18:05.551738 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:18:05.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:05.581
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:05.585
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 06/17/24 07:18:05.589
  STEP: Saw pod success @ 06/17/24 07:18:09.621
  I0617 07:18:09.624016 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-02e53daf-01a4-44b6-8d5c-cb12c3e42ad9 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:18:09.64
  I0617 07:18:09.656829 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1410" for this suite. @ 06/17/24 07:18:09.663
• [4.119 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 06/17/24 07:18:09.671
  I0617 07:18:09.671324 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replicaset @ 06/17/24 07:18:09.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:09.688
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:09.691
  STEP: Create a ReplicaSet @ 06/17/24 07:18:09.694
  STEP: Verify that the required pods have come up @ 06/17/24 07:18:09.698
  I0617 07:18:09.701695 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  I0617 07:18:14.709606 19 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 06/17/24 07:18:14.709
  I0617 07:18:14.713703 19 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 06/17/24 07:18:14.713
  STEP: DeleteCollection of the ReplicaSets @ 06/17/24 07:18:14.717
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 06/17/24 07:18:14.724
  I0617 07:18:14.728162 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-7270" for this suite. @ 06/17/24 07:18:14.733
• [5.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 06/17/24 07:18:14.744
  I0617 07:18:14.744260 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:18:14.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:14.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:14.771
  STEP: create deployment with httpd image @ 06/17/24 07:18:14.777
  I0617 07:18:14.778242 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6768 create -f -'
  I0617 07:18:14.935713 19 builder.go:146] stderr: ""
  I0617 07:18:14.935848 19 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 06/17/24 07:18:14.935
  I0617 07:18:14.936154 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6768 diff -f -'
  I0617 07:18:15.116487 19 builder.go:135] rc: 1
  I0617 07:18:15.116714 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-6768 delete -f -'
  I0617 07:18:15.190695 19 builder.go:146] stderr: ""
  I0617 07:18:15.190773 19 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0617 07:18:15.191043 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6768" for this suite. @ 06/17/24 07:18:15.195
• [0.456 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 06/17/24 07:18:15.201
  I0617 07:18:15.201327 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename events @ 06/17/24 07:18:15.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:15.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:15.218
  STEP: creating a test event @ 06/17/24 07:18:15.222
  STEP: listing events in all namespaces @ 06/17/24 07:18:15.227
  STEP: listing events in test namespace @ 06/17/24 07:18:15.234
  STEP: listing events with field selection filtering on source @ 06/17/24 07:18:15.237
  STEP: listing events with field selection filtering on reportingController @ 06/17/24 07:18:15.239
  STEP: getting the test event @ 06/17/24 07:18:15.241
  STEP: patching the test event @ 06/17/24 07:18:15.243
  STEP: getting the test event @ 06/17/24 07:18:15.251
  STEP: updating the test event @ 06/17/24 07:18:15.254
  STEP: getting the test event @ 06/17/24 07:18:15.258
  STEP: deleting the test event @ 06/17/24 07:18:15.26
  STEP: listing events in all namespaces @ 06/17/24 07:18:15.264
  STEP: listing events in test namespace @ 06/17/24 07:18:15.27
  I0617 07:18:15.273010 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-1184" for this suite. @ 06/17/24 07:18:15.282
• [0.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 06/17/24 07:18:15.289
  I0617 07:18:15.289799 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svcaccounts @ 06/17/24 07:18:15.291
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:15.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:15.306
  I0617 07:18:15.323165 19 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0617 07:18:15.323367 19 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0617 07:18:15.326842 19 service_accounts.go:253] created pod pod-service-account-mountsa
  I0617 07:18:15.326880 19 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0617 07:18:15.332605 19 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0617 07:18:15.332640 19 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  I0617 07:18:15.340068 19 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0617 07:18:15.340318 19 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0617 07:18:15.352637 19 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0617 07:18:15.352700 19 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0617 07:18:15.363193 19 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0617 07:18:15.363244 19 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0617 07:18:15.373093 19 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0617 07:18:15.373132 19 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0617 07:18:15.384310 19 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0617 07:18:15.384401 19 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0617 07:18:15.394634 19 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0617 07:18:15.394690 19 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0617 07:18:15.394827 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-1814" for this suite. @ 06/17/24 07:18:15.409
• [0.131 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 06/17/24 07:18:15.42
  I0617 07:18:15.420633 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:18:15.421
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:15.438
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:15.442
  STEP: Starting the proxy @ 06/17/24 07:18:15.446
  I0617 07:18:15.447765 19 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-2356 proxy --unix-socket=/tmp/kubectl-proxy-unix3955829170/test'
  STEP: retrieving proxy /api/ output @ 06/17/24 07:18:15.509
  I0617 07:18:15.513992 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-2356" for this suite. @ 06/17/24 07:18:15.519
• [0.103 seconds]
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 06/17/24 07:18:15.524
  I0617 07:18:15.524058 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename gc @ 06/17/24 07:18:15.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:15.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:15.541
  STEP: create the rc @ 06/17/24 07:18:15.548
  W0617 07:18:15.554758      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/17/24 07:18:21.563
  STEP: wait for the rc to be deleted @ 06/17/24 07:18:21.568
  I0617 07:18:22.615615 19 garbage_collector.go:670] 80 pods remaining
  I0617 07:18:22.615697 19 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0617 07:18:22.615714 19 garbage_collector.go:678] 
  I0617 07:18:23.599417 19 garbage_collector.go:670] 71 pods remaining
  I0617 07:18:23.599470 19 garbage_collector.go:677] 70 pods has nil DeletionTimestamp
  I0617 07:18:23.599482 19 garbage_collector.go:678] 
  I0617 07:18:24.585147 19 garbage_collector.go:670] 60 pods remaining
  I0617 07:18:24.585309 19 garbage_collector.go:677] 60 pods has nil DeletionTimestamp
  I0617 07:18:24.585327 19 garbage_collector.go:678] 
  I0617 07:18:25.586399 19 garbage_collector.go:670] 40 pods remaining
  I0617 07:18:25.586446 19 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0617 07:18:25.586457 19 garbage_collector.go:678] 
  I0617 07:18:26.603406 19 garbage_collector.go:670] 31 pods remaining
  I0617 07:18:26.603477 19 garbage_collector.go:677] 30 pods has nil DeletionTimestamp
  I0617 07:18:26.603493 19 garbage_collector.go:678] 
  I0617 07:18:27.578325 19 garbage_collector.go:670] 20 pods remaining
  I0617 07:18:27.578383 19 garbage_collector.go:677] 20 pods has nil DeletionTimestamp
  I0617 07:18:27.578394 19 garbage_collector.go:678] 
  STEP: Gathering metrics @ 06/17/24 07:18:28.58
  I0617 07:18:28.735723 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0617 07:18:28.737801 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6066" for this suite. @ 06/17/24 07:18:28.746
• [13.237 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 06/17/24 07:18:28.762
  I0617 07:18:28.762197 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-runtime @ 06/17/24 07:18:28.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:28.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:28.793
  STEP: create the container @ 06/17/24 07:18:28.798
  W0617 07:18:28.818291      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/17/24 07:18:28.818
  STEP: get the container status @ 06/17/24 07:18:31.839
  STEP: the container should be terminated @ 06/17/24 07:18:31.842
  STEP: the termination message should be set @ 06/17/24 07:18:31.843
  I0617 07:18:31.843308 19 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 06/17/24 07:18:31.843
  I0617 07:18:31.857676 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4660" for this suite. @ 06/17/24 07:18:31.861
• [3.106 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 06/17/24 07:18:31.868
  I0617 07:18:31.868547 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:18:31.87
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:31.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:31.886
  STEP: Creating a ResourceQuota @ 06/17/24 07:18:31.889
  STEP: Getting a ResourceQuota @ 06/17/24 07:18:31.894
  STEP: Updating a ResourceQuota @ 06/17/24 07:18:31.898
  STEP: Verifying a ResourceQuota was modified @ 06/17/24 07:18:31.902
  STEP: Deleting a ResourceQuota @ 06/17/24 07:18:31.904
  STEP: Verifying the deleted ResourceQuota @ 06/17/24 07:18:31.91
  I0617 07:18:31.913785 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3759" for this suite. @ 06/17/24 07:18:31.918
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 06/17/24 07:18:31.925
  I0617 07:18:31.925675 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replicaset @ 06/17/24 07:18:31.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:31.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:31.948
  I0617 07:18:31.963935 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0617 07:18:36.970503 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/17/24 07:18:36.97
  STEP: Scaling up "test-rs" replicaset @ 06/17/24 07:18:36.97
  I0617 07:18:36.979915 19 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 06/17/24 07:18:36.979
  I0617 07:18:36.990847 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6763 with ReadyReplicas 1, AvailableReplicas 1
  I0617 07:18:37.005476 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6763 with ReadyReplicas 1, AvailableReplicas 1
  I0617 07:18:37.020742 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6763 with ReadyReplicas 1, AvailableReplicas 1
  I0617 07:18:37.027718 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6763 with ReadyReplicas 1, AvailableReplicas 1
  I0617 07:18:38.436900 19 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-6763 with ReadyReplicas 2, AvailableReplicas 2
  I0617 07:18:38.618594 19 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-6763 with ReadyReplicas 3 found true
  I0617 07:18:38.618762 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6763" for this suite. @ 06/17/24 07:18:38.625
• [6.705 seconds]
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 06/17/24 07:18:38.631
  I0617 07:18:38.631494 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svcaccounts @ 06/17/24 07:18:38.634
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:38.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:38.65
  I0617 07:18:38.655456 19 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-4365"
  I0617 07:18:38.658829 19 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-4365"
  STEP: waiting for a new root ca configmap created @ 06/17/24 07:18:39.159
  I0617 07:18:39.163966 19 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-4365"
  I0617 07:18:39.169857 19 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-4365"
  STEP: waiting for the root ca configmap reconciled @ 06/17/24 07:18:39.67
  I0617 07:18:39.673520 19 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-4365"
  I0617 07:18:39.673624 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4365" for this suite. @ 06/17/24 07:18:39.678
• [1.051 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 06/17/24 07:18:39.682
  I0617 07:18:39.682801 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename runtimeclass @ 06/17/24 07:18:39.684
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:39.695
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:39.698
  I0617 07:18:41.729136 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7503" for this suite. @ 06/17/24 07:18:41.734
• [2.058 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 06/17/24 07:18:41.741
  I0617 07:18:41.741305 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:18:41.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:41.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:41.762
  STEP: creating a Pod with a static label @ 06/17/24 07:18:41.776
  STEP: watching for Pod to be ready @ 06/17/24 07:18:41.783
  I0617 07:18:41.785389 19 pods.go:945] observed Pod pod-test in namespace pods-201 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0617 07:18:41.788094 19 pods.go:945] observed Pod pod-test in namespace pods-201 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  }]
  I0617 07:18:41.799504 19 pods.go:945] observed Pod pod-test in namespace pods-201 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  }]
  I0617 07:18:42.307447 19 pods.go:945] observed Pod pod-test in namespace pods-201 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  }]
  I0617 07:18:42.913513 19 pods.go:948] Found Pod pod-test in namespace pods-201 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:42 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:42 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:42 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:18:41 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 06/17/24 07:18:42.916
  STEP: getting the Pod and ensuring that it's patched @ 06/17/24 07:18:42.925
  STEP: replacing the Pod's status Ready condition to False @ 06/17/24 07:18:42.927
  STEP: check the Pod again to ensure its Ready conditions are False @ 06/17/24 07:18:42.94
  STEP: deleting the Pod via a Collection with a LabelSelector @ 06/17/24 07:18:42.94
  STEP: watching for the Pod to be deleted @ 06/17/24 07:18:42.947
  I0617 07:18:42.950098 19 pods.go:1058] observed event type MODIFIED
  I0617 07:18:44.925099 19 pods.go:1058] observed event type MODIFIED
  I0617 07:18:45.086065 19 pods.go:1058] observed event type MODIFIED
  I0617 07:18:45.222719 19 pods.go:1058] observed event type MODIFIED
  I0617 07:18:45.928255 19 pods.go:1058] observed event type MODIFIED
  I0617 07:18:45.937901 19 pods.go:1058] observed event type MODIFIED
  I0617 07:18:45.944053 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-201" for this suite. @ 06/17/24 07:18:45.948
• [4.212 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 06/17/24 07:18:45.955
  I0617 07:18:45.955463 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 07:18:45.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:45.971
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:45.976
  STEP: Creating projection with secret that has name secret-emptykey-test-4731d6ce-ab90-4e30-83ff-158f1a2843a4 @ 06/17/24 07:18:45.979
  I0617 07:18:45.982063 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5214" for this suite. @ 06/17/24 07:18:45.986
• [0.035 seconds]
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 06/17/24 07:18:45.991
  I0617 07:18:45.991512 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename gc @ 06/17/24 07:18:45.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:46.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:46.007
  STEP: create the deployment @ 06/17/24 07:18:46.01
  W0617 07:18:46.017363      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/17/24 07:18:46.017
  STEP: delete the deployment @ 06/17/24 07:18:46.524
  STEP: wait for all rs to be garbage collected @ 06/17/24 07:18:46.53
  STEP: expected 0 pods, got 2 pods @ 06/17/24 07:18:46.544
  STEP: Gathering metrics @ 06/17/24 07:18:47.038
  I0617 07:18:47.138158 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0617 07:18:47.138357 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6530" for this suite. @ 06/17/24 07:18:47.142
• [1.157 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 06/17/24 07:18:47.148
  I0617 07:18:47.148452 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/17/24 07:18:47.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:47.161
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:47.164
  I0617 07:18:47.171723 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7448" for this suite. @ 06/17/24 07:18:47.176
• [0.032 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 06/17/24 07:18:47.183
  I0617 07:18:47.183783 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:18:47.185
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:47.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:47.198
  STEP: Creating secret with name projected-secret-test-cfca65b7-de81-46fa-a4e3-73f6b228c9a1 @ 06/17/24 07:18:47.201
  STEP: Creating a pod to test consume secrets @ 06/17/24 07:18:47.207
  STEP: Saw pod success @ 06/17/24 07:18:49.219
  I0617 07:18:49.223385 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-secrets-f1f14123-2c41-4bdd-ac78-20805e39480f container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 07:18:49.229
  I0617 07:18:49.241394 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6616" for this suite. @ 06/17/24 07:18:49.245
• [2.066 seconds]
------------------------------
S
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 06/17/24 07:18:49.25
  I0617 07:18:49.250143 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename security-context @ 06/17/24 07:18:49.252
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:49.264
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:49.267
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/17/24 07:18:49.272
  STEP: Saw pod success @ 06/17/24 07:18:51.286
  I0617 07:18:51.288672 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod security-context-9db47106-9815-4ab7-a9fc-85dfe5dd579e container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:18:51.294
  I0617 07:18:51.307898 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-8177" for this suite. @ 06/17/24 07:18:51.312
• [2.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 06/17/24 07:18:51.318
  I0617 07:18:51.318268 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename certificates @ 06/17/24 07:18:51.321
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:51.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:51.338
  STEP: getting /apis @ 06/17/24 07:18:51.806
  STEP: getting /apis/certificates.k8s.io @ 06/17/24 07:18:51.812
  STEP: getting /apis/certificates.k8s.io/v1 @ 06/17/24 07:18:51.813
  STEP: creating @ 06/17/24 07:18:51.814
  STEP: getting @ 06/17/24 07:18:51.829
  STEP: listing @ 06/17/24 07:18:51.832
  STEP: watching @ 06/17/24 07:18:51.834
  I0617 07:18:51.834454 19 certificates.go:316] starting watch
  STEP: patching @ 06/17/24 07:18:51.835
  STEP: updating @ 06/17/24 07:18:51.843
  I0617 07:18:51.848132 19 certificates.go:332] waiting for watch events with expected annotations
  I0617 07:18:51.848227 19 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 06/17/24 07:18:51.848
  STEP: patching /approval @ 06/17/24 07:18:51.851
  STEP: updating /approval @ 06/17/24 07:18:51.857
  STEP: getting /status @ 06/17/24 07:18:51.867
  STEP: patching /status @ 06/17/24 07:18:51.87
  STEP: updating /status @ 06/17/24 07:18:51.877
  STEP: deleting @ 06/17/24 07:18:51.884
  STEP: deleting a collection @ 06/17/24 07:18:51.894
  I0617 07:18:51.904782 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-9939" for this suite. @ 06/17/24 07:18:51.909
• [0.597 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 06/17/24 07:18:51.915
  I0617 07:18:51.915562 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:18:51.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:18:51.929
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:18:51.933
  STEP: Discovering how many secrets are in namespace by default @ 06/17/24 07:18:51.937
  STEP: Counting existing ResourceQuota @ 06/17/24 07:18:56.941
  STEP: Creating a ResourceQuota @ 06/17/24 07:19:01.948
  STEP: Ensuring resource quota status is calculated @ 06/17/24 07:19:01.953
  STEP: Creating a Secret @ 06/17/24 07:19:03.958
  STEP: Ensuring resource quota status captures secret creation @ 06/17/24 07:19:03.969
  STEP: Deleting a secret @ 06/17/24 07:19:05.973
  STEP: Ensuring resource quota status released usage @ 06/17/24 07:19:05.978
  I0617 07:19:07.984779 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5370" for this suite. @ 06/17/24 07:19:07.989
• [16.079 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 06/17/24 07:19:07.996
  I0617 07:19:07.996329 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubelet-test @ 06/17/24 07:19:07.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:19:08.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:19:08.017
  I0617 07:19:10.045402 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5938" for this suite. @ 06/17/24 07:19:10.049
• [2.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 06/17/24 07:19:10.055
  I0617 07:19:10.056003 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename daemonsets @ 06/17/24 07:19:10.057
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:19:10.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:19:10.074
  I0617 07:19:10.091891 19 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/17/24 07:19:10.097
  I0617 07:19:10.102213 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:10.105557 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:19:10.105594 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:19:11.102838 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:11.106933 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0617 07:19:11.106974 19 fixtures.go:130] Node ck-130-worker-2.novalocal is running 0 daemon pod, expected 1
  I0617 07:19:12.103982 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:12.108593 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 07:19:12.108680 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 06/17/24 07:19:12.125
  STEP: Check that daemon pods images are updated. @ 06/17/24 07:19:12.149
  I0617 07:19:12.153969 19 daemon_set.go:1178] Wrong image for pod: daemon-set-4fpd5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:12.154062 19 daemon_set.go:1178] Wrong image for pod: daemon-set-89zbr. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:12.154087 19 daemon_set.go:1178] Wrong image for pod: daemon-set-jpsld. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:12.160215 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:13.153814 19 daemon_set.go:1178] Wrong image for pod: daemon-set-4fpd5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:13.153875 19 daemon_set.go:1178] Wrong image for pod: daemon-set-jpsld. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:13.158435 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:14.154936 19 daemon_set.go:1178] Wrong image for pod: daemon-set-4fpd5. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:14.155225 19 daemon_set.go:1183] Pod daemon-set-972kf is not available
  I0617 07:19:14.155307 19 daemon_set.go:1178] Wrong image for pod: daemon-set-jpsld. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:14.160044 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:15.154437 19 daemon_set.go:1183] Pod daemon-set-h7zfh is not available
  I0617 07:19:15.154496 19 daemon_set.go:1178] Wrong image for pod: daemon-set-jpsld. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0617 07:19:15.159840 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:16.159522 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:17.155555 19 daemon_set.go:1183] Pod daemon-set-wclxl is not available
  I0617 07:19:17.162994 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Check that daemon pods are still running on every node of the cluster. @ 06/17/24 07:19:17.163
  I0617 07:19:17.167416 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:17.171080 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0617 07:19:17.171115 19 fixtures.go:130] Node ck-130-worker-2.novalocal is running 0 daemon pod, expected 1
  I0617 07:19:18.169693 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:19:18.173808 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 07:19:18.173864 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/17/24 07:19:18.19
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-4779, will wait for the garbage collector to delete the pods @ 06/17/24 07:19:18.19
  I0617 07:19:18.249064 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.777849ms
  I0617 07:19:18.350550 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.476949ms
  I0617 07:19:20.655130 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:19:20.655222 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0617 07:19:20.657902 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"13063"},"items":null}

  I0617 07:19:20.659869 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"13063"},"items":null}

  I0617 07:19:20.671386 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-4779" for this suite. @ 06/17/24 07:19:20.675
• [10.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 06/17/24 07:19:20.684
  I0617 07:19:20.684516 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:19:20.687
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:19:20.701
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:19:20.705
  I0617 07:19:20.710358 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 06/17/24 07:19:22.153
  I0617 07:19:22.153860 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 create -f -'
  I0617 07:19:22.297849 19 builder.go:146] stderr: ""
  I0617 07:19:22.297923 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4549-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0617 07:19:22.298001 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 delete e2e-test-crd-publish-openapi-4549-crds test-foo'
  I0617 07:19:22.395940 19 builder.go:146] stderr: ""
  I0617 07:19:22.396025 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4549-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0617 07:19:22.396127 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 apply -f -'
  I0617 07:19:22.510165 19 builder.go:146] stderr: ""
  I0617 07:19:22.510261 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4549-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0617 07:19:22.510357 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 delete e2e-test-crd-publish-openapi-4549-crds test-foo'
  I0617 07:19:22.611063 19 builder.go:146] stderr: ""
  I0617 07:19:22.611162 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4549-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 06/17/24 07:19:22.611
  I0617 07:19:22.611368 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 create -f -'
  I0617 07:19:22.691979 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 06/17/24 07:19:22.692
  I0617 07:19:22.692229 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 create -f -'
  I0617 07:19:22.778980 19 builder.go:135] rc: 1
  I0617 07:19:22.779107 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 apply -f -'
  I0617 07:19:22.864517 19 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 06/17/24 07:19:22.864
  I0617 07:19:22.864945 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 create -f -'
  I0617 07:19:22.958517 19 builder.go:135] rc: 1
  I0617 07:19:22.958809 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 --namespace=crd-publish-openapi-1350 apply -f -'
  I0617 07:19:23.051032 19 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 06/17/24 07:19:23.052
  I0617 07:19:23.052606 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 explain e2e-test-crd-publish-openapi-4549-crds'
  I0617 07:19:23.137970 19 builder.go:146] stderr: ""
  I0617 07:19:23.138079 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4549-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 06/17/24 07:19:23.138
  I0617 07:19:23.138905 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 explain e2e-test-crd-publish-openapi-4549-crds.metadata'
  I0617 07:19:23.214068 19 builder.go:146] stderr: ""
  I0617 07:19:23.214603 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4549-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0617 07:19:23.215146 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 explain e2e-test-crd-publish-openapi-4549-crds.spec'
  I0617 07:19:23.288028 19 builder.go:146] stderr: ""
  I0617 07:19:23.288103 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4549-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0617 07:19:23.288695 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 explain e2e-test-crd-publish-openapi-4549-crds.spec.bars'
  I0617 07:19:23.370216 19 builder.go:146] stderr: ""
  I0617 07:19:23.370290 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-4549-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 06/17/24 07:19:23.371
  I0617 07:19:23.371293 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-1350 explain e2e-test-crd-publish-openapi-4549-crds.spec.bars2'
  I0617 07:19:23.453810 19 builder.go:135] rc: 1
  I0617 07:19:24.962414 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1350" for this suite. @ 06/17/24 07:19:24.97
• [4.292 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 06/17/24 07:19:24.976
  I0617 07:19:24.976189 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:19:24.978
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:19:24.99
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:19:24.994
  STEP: Setting up server cert @ 06/17/24 07:19:25.012
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:19:25.565
  STEP: Deploying the webhook pod @ 06/17/24 07:19:25.573
  STEP: Wait for the deployment to be ready @ 06/17/24 07:19:25.583
  I0617 07:19:25.588535 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:19:27.598
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:19:27.611
  I0617 07:19:28.612368 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 06/17/24 07:19:28.618
  STEP: Creating a custom resource definition that should be denied by the webhook @ 06/17/24 07:19:28.634
  I0617 07:19:28.634969 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:19:28.687616 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4992" for this suite. @ 06/17/24 07:19:28.691
  STEP: Destroying namespace "webhook-markers-8540" for this suite. @ 06/17/24 07:19:28.697
• [3.727 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 06/17/24 07:19:28.703
  I0617 07:19:28.703730 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:19:28.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:19:28.718
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:19:28.723
  STEP: creating a replication controller @ 06/17/24 07:19:28.726
  I0617 07:19:28.727376 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 create -f -'
  I0617 07:19:28.911813 19 builder.go:146] stderr: ""
  I0617 07:19:28.911882 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/17/24 07:19:28.912
  I0617 07:19:28.912517 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0617 07:19:28.997186 19 builder.go:146] stderr: ""
  I0617 07:19:28.997250 19 builder.go:147] stdout: "update-demo-nautilus-j4snv update-demo-nautilus-sl8br "
  I0617 07:19:28.997447 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-j4snv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:19:29.065263 19 builder.go:146] stderr: ""
  I0617 07:19:29.065310 19 builder.go:147] stdout: ""
  I0617 07:19:29.065331 19 kubectl.go:2501] update-demo-nautilus-j4snv is created but not running
  I0617 07:19:34.066016 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0617 07:19:34.176757 19 builder.go:146] stderr: ""
  I0617 07:19:34.176810 19 builder.go:147] stdout: "update-demo-nautilus-j4snv update-demo-nautilus-sl8br "
  I0617 07:19:34.176897 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-j4snv -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:19:34.289124 19 builder.go:146] stderr: ""
  I0617 07:19:34.289190 19 builder.go:147] stdout: "true"
  I0617 07:19:34.289290 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-j4snv -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0617 07:19:34.375968 19 builder.go:146] stderr: ""
  I0617 07:19:34.376036 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0617 07:19:34.376061 19 kubectl.go:2392] validating pod update-demo-nautilus-j4snv
  I0617 07:19:34.380700 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0617 07:19:34.380781 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0617 07:19:34.380809 19 kubectl.go:2519] update-demo-nautilus-j4snv is verified up and running
  I0617 07:19:34.380879 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-sl8br -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:19:34.456213 19 builder.go:146] stderr: ""
  I0617 07:19:34.456260 19 builder.go:147] stdout: "true"
  I0617 07:19:34.456325 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-sl8br -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0617 07:19:34.537248 19 builder.go:146] stderr: ""
  I0617 07:19:34.537316 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0617 07:19:34.537344 19 kubectl.go:2392] validating pod update-demo-nautilus-sl8br
  I0617 07:19:34.545402 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0617 07:19:34.545464 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0617 07:19:34.545480 19 kubectl.go:2519] update-demo-nautilus-sl8br is verified up and running
  STEP: scaling down the replication controller @ 06/17/24 07:19:34.545
  I0617 07:19:34.547816 19 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0617 07:19:34.547946 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  I0617 07:19:35.644659 19 builder.go:146] stderr: ""
  I0617 07:19:35.644711 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/17/24 07:19:35.644
  I0617 07:19:35.644847 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0617 07:19:35.737426 19 builder.go:146] stderr: ""
  I0617 07:19:35.737497 19 builder.go:147] stdout: "update-demo-nautilus-sl8br "
  I0617 07:19:35.737579 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-sl8br -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:19:35.837813 19 builder.go:146] stderr: ""
  I0617 07:19:35.837862 19 builder.go:147] stdout: "true"
  I0617 07:19:35.837932 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-sl8br -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0617 07:19:35.906406 19 builder.go:146] stderr: ""
  I0617 07:19:35.906455 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0617 07:19:35.906472 19 kubectl.go:2392] validating pod update-demo-nautilus-sl8br
  I0617 07:19:35.911552 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0617 07:19:35.911652 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0617 07:19:35.911682 19 kubectl.go:2519] update-demo-nautilus-sl8br is verified up and running
  STEP: scaling up the replication controller @ 06/17/24 07:19:35.911
  I0617 07:19:35.914303 19 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0617 07:19:35.914364 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  I0617 07:19:37.006560 19 builder.go:146] stderr: ""
  I0617 07:19:37.006651 19 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 06/17/24 07:19:37.006
  I0617 07:19:37.006860 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0617 07:19:37.093079 19 builder.go:146] stderr: ""
  I0617 07:19:37.093151 19 builder.go:147] stdout: "update-demo-nautilus-np8w4 update-demo-nautilus-sl8br "
  I0617 07:19:37.093295 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-np8w4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:19:37.173449 19 builder.go:146] stderr: ""
  I0617 07:19:37.173500 19 builder.go:147] stdout: "true"
  I0617 07:19:37.173554 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-np8w4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0617 07:19:37.244124 19 builder.go:146] stderr: ""
  I0617 07:19:37.244188 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0617 07:19:37.244207 19 kubectl.go:2392] validating pod update-demo-nautilus-np8w4
  I0617 07:19:37.248832 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0617 07:19:37.248932 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0617 07:19:37.248969 19 kubectl.go:2519] update-demo-nautilus-np8w4 is verified up and running
  I0617 07:19:37.249067 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-sl8br -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0617 07:19:37.319294 19 builder.go:146] stderr: ""
  I0617 07:19:37.319354 19 builder.go:147] stdout: "true"
  I0617 07:19:37.319442 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods update-demo-nautilus-sl8br -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0617 07:19:37.402252 19 builder.go:146] stderr: ""
  I0617 07:19:37.402321 19 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0617 07:19:37.402341 19 kubectl.go:2392] validating pod update-demo-nautilus-sl8br
  I0617 07:19:37.405793 19 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0617 07:19:37.405850 19 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0617 07:19:37.405863 19 kubectl.go:2519] update-demo-nautilus-sl8br is verified up and running
  STEP: using delete to clean up resources @ 06/17/24 07:19:37.405
  I0617 07:19:37.405957 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 delete --grace-period=0 --force -f -'
  I0617 07:19:37.485543 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:19:37.485609 19 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0617 07:19:37.485690 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get rc,svc -l name=update-demo --no-headers'
  I0617 07:19:37.592276 19 builder.go:146] stderr: "No resources found in kubectl-8455 namespace.\n"
  I0617 07:19:37.592341 19 builder.go:147] stdout: ""
  I0617 07:19:37.592430 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8455 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0617 07:19:37.683168 19 builder.go:146] stderr: ""
  I0617 07:19:37.683311 19 builder.go:147] stdout: ""
  I0617 07:19:37.683460 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8455" for this suite. @ 06/17/24 07:19:37.687
• [8.990 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 06/17/24 07:19:37.693
  I0617 07:19:37.693917 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename subpath @ 06/17/24 07:19:37.695
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:19:37.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:19:37.709
  STEP: Setting up data @ 06/17/24 07:19:37.712
  STEP: Creating pod pod-subpath-test-configmap-vnql @ 06/17/24 07:19:37.719
  STEP: Creating a pod to test atomic-volume-subpath @ 06/17/24 07:19:37.719
  STEP: Saw pod success @ 06/17/24 07:20:01.789
  I0617 07:20:01.791670 19 output.go:196] Trying to get logs from node ck-130-worker-2.novalocal pod pod-subpath-test-configmap-vnql container test-container-subpath-configmap-vnql: <nil>
  STEP: delete the pod @ 06/17/24 07:20:01.814
  STEP: Deleting pod pod-subpath-test-configmap-vnql @ 06/17/24 07:20:01.842
  I0617 07:20:01.842511 19 delete.go:62] Deleting pod "pod-subpath-test-configmap-vnql" in namespace "subpath-3926"
  I0617 07:20:01.845019 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3926" for this suite. @ 06/17/24 07:20:01.849
• [24.162 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 06/17/24 07:20:01.856
  I0617 07:20:01.856699 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 07:20:01.858
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:01.872
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:01.875
  STEP: Creating configMap with name configmap-test-upd-750ccb32-b2d7-4801-b0ed-98ba3eb19131 @ 06/17/24 07:20:01.882
  STEP: Creating the pod @ 06/17/24 07:20:01.893
  STEP: Updating configmap configmap-test-upd-750ccb32-b2d7-4801-b0ed-98ba3eb19131 @ 06/17/24 07:20:03.92
  STEP: waiting to observe update in volume @ 06/17/24 07:20:03.925
  I0617 07:20:05.941688 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1473" for this suite. @ 06/17/24 07:20:05.947
• [4.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 06/17/24 07:20:05.953
  I0617 07:20:05.953591 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:20:05.954
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:05.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:05.973
  STEP: Setting up server cert @ 06/17/24 07:20:05.995
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:20:06.775
  STEP: Deploying the webhook pod @ 06/17/24 07:20:06.783
  STEP: Wait for the deployment to be ready @ 06/17/24 07:20:06.796
  I0617 07:20:06.804921 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:20:08.819
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:20:08.835
  I0617 07:20:09.835963 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/17/24 07:20:09.9
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/17/24 07:20:09.942
  STEP: Deleting the collection of validation webhooks @ 06/17/24 07:20:09.966
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/17/24 07:20:10
  I0617 07:20:10.045527 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-661" for this suite. @ 06/17/24 07:20:10.049
  STEP: Destroying namespace "webhook-markers-3461" for this suite. @ 06/17/24 07:20:10.053
• [4.107 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 06/17/24 07:20:10.061
  I0617 07:20:10.061146 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename field-validation @ 06/17/24 07:20:10.062
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:10.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:10.078
  I0617 07:20:10.081959 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:20:13.173576 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-4514" for this suite. @ 06/17/24 07:20:13.177
• [3.121 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 06/17/24 07:20:13.182
  I0617 07:20:13.182234 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:20:13.183
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:13.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:13.196
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/17/24 07:20:13.198
  I0617 07:20:13.198945 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3582 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0617 07:20:13.299009 19 builder.go:146] stderr: ""
  I0617 07:20:13.299071 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 06/17/24 07:20:13.299
  I0617 07:20:13.299231 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3582 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  I0617 07:20:13.382712 19 builder.go:146] stderr: ""
  I0617 07:20:13.382770 19 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 06/17/24 07:20:13.382
  I0617 07:20:13.386046 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3582 delete pods e2e-test-httpd-pod'
  I0617 07:20:15.219953 19 builder.go:146] stderr: ""
  I0617 07:20:15.220116 19 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0617 07:20:15.221433 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3582" for this suite. @ 06/17/24 07:20:15.226
• [2.051 seconds]
------------------------------
SSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 06/17/24 07:20:15.234
  I0617 07:20:15.234159 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sysctl @ 06/17/24 07:20:15.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:15.25
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:15.253
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 06/17/24 07:20:15.256
  STEP: Watching for error events or started pod @ 06/17/24 07:20:15.262
  STEP: Waiting for pod completion @ 06/17/24 07:20:17.268
  STEP: Checking that the pod succeeded @ 06/17/24 07:20:19.28
  STEP: Getting logs from the pod @ 06/17/24 07:20:19.28
  STEP: Checking that the sysctl is actually updated @ 06/17/24 07:20:19.286
  I0617 07:20:19.286417 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-9278" for this suite. @ 06/17/24 07:20:19.291
• [4.062 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 06/17/24 07:20:19.298
  I0617 07:20:19.298925 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 07:20:19.3
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:19.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:19.315
  STEP: Creating a pod to test substitution in container's command @ 06/17/24 07:20:19.318
  STEP: Saw pod success @ 06/17/24 07:20:23.344
  I0617 07:20:23.347578 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod var-expansion-d07157ca-83d9-4d31-bb5e-46af5f5feee3 container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 07:20:23.353
  I0617 07:20:23.371629 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2217" for this suite. @ 06/17/24 07:20:23.376
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 06/17/24 07:20:23.382
  I0617 07:20:23.382978 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:20:23.384
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:23.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:23.399
  STEP: Counting existing ResourceQuota @ 06/17/24 07:20:23.405
  STEP: Creating a ResourceQuota @ 06/17/24 07:20:28.409
  STEP: Ensuring resource quota status is calculated @ 06/17/24 07:20:28.415
  STEP: Creating a ReplicationController @ 06/17/24 07:20:30.419
  STEP: Ensuring resource quota status captures replication controller creation @ 06/17/24 07:20:30.432
  STEP: Deleting a ReplicationController @ 06/17/24 07:20:32.436
  STEP: Ensuring resource quota status released usage @ 06/17/24 07:20:32.441
  I0617 07:20:34.446455 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4002" for this suite. @ 06/17/24 07:20:34.451
• [11.073 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 06/17/24 07:20:34.456
  I0617 07:20:34.456488 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/17/24 07:20:34.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:34.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:34.483
  STEP: getting /apis @ 06/17/24 07:20:34.492
  STEP: getting /apis/admissionregistration.k8s.io @ 06/17/24 07:20:34.497
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 06/17/24 07:20:34.499
  STEP: creating @ 06/17/24 07:20:34.5
  STEP: getting @ 06/17/24 07:20:34.522
  STEP: listing @ 06/17/24 07:20:34.527
  STEP: watching @ 06/17/24 07:20:34.533
  I0617 07:20:34.533219 19 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 06/17/24 07:20:34.535
  STEP: updating @ 06/17/24 07:20:34.542
  I0617 07:20:34.549359 19 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 06/17/24 07:20:34.549
  STEP: patching /status @ 06/17/24 07:20:34.552
  STEP: updating /status @ 06/17/24 07:20:34.558
  STEP: deleting @ 06/17/24 07:20:34.598
  STEP: deleting a collection @ 06/17/24 07:20:34.611
  I0617 07:20:34.623164 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6046" for this suite. @ 06/17/24 07:20:34.626
• [0.176 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 06/17/24 07:20:34.634
  I0617 07:20:34.634956 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svc-latency @ 06/17/24 07:20:34.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:34.651
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:34.654
  I0617 07:20:34.657903 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-6071 @ 06/17/24 07:20:34.659
  I0617 07:20:34.665394      19 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-6071, replica count: 1
  I0617 07:20:35.717338      19 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:20:36.718211      19 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:20:36.834023 19 service_latency.go:356] Created: latency-svc-kr77r
  I0617 07:20:36.840222 19 service_latency.go:363] Got endpoints: latency-svc-kr77r [21.271743ms]
  I0617 07:20:36.858723 19 service_latency.go:356] Created: latency-svc-ntrjv
  I0617 07:20:36.869901 19 service_latency.go:356] Created: latency-svc-7fpcs
  I0617 07:20:36.872484 19 service_latency.go:363] Got endpoints: latency-svc-ntrjv [31.815119ms]
  I0617 07:20:36.881296 19 service_latency.go:363] Got endpoints: latency-svc-7fpcs [40.752566ms]
  I0617 07:20:36.884949 19 service_latency.go:356] Created: latency-svc-mslkj
  I0617 07:20:36.893832 19 service_latency.go:363] Got endpoints: latency-svc-mslkj [53.223485ms]
  I0617 07:20:36.897032 19 service_latency.go:356] Created: latency-svc-vscgg
  I0617 07:20:36.901800 19 service_latency.go:363] Got endpoints: latency-svc-vscgg [61.055714ms]
  I0617 07:20:36.912567 19 service_latency.go:356] Created: latency-svc-7x2cj
  I0617 07:20:36.920656 19 service_latency.go:363] Got endpoints: latency-svc-7x2cj [79.88152ms]
  I0617 07:20:36.922569 19 service_latency.go:356] Created: latency-svc-bczwx
  I0617 07:20:36.928358 19 service_latency.go:363] Got endpoints: latency-svc-bczwx [87.566572ms]
  I0617 07:20:36.942387 19 service_latency.go:356] Created: latency-svc-flz4l
  I0617 07:20:36.943505 19 service_latency.go:356] Created: latency-svc-wjjgw
  I0617 07:20:36.962019 19 service_latency.go:363] Got endpoints: latency-svc-flz4l [121.152601ms]
  I0617 07:20:36.962075 19 service_latency.go:363] Got endpoints: latency-svc-wjjgw [33.658578ms]
  I0617 07:20:36.966004 19 service_latency.go:356] Created: latency-svc-ctm7r
  I0617 07:20:36.974688 19 service_latency.go:363] Got endpoints: latency-svc-ctm7r [133.827908ms]
  I0617 07:20:36.976860 19 service_latency.go:356] Created: latency-svc-25qjk
  I0617 07:20:36.983257 19 service_latency.go:363] Got endpoints: latency-svc-25qjk [142.280636ms]
  I0617 07:20:36.992114 19 service_latency.go:356] Created: latency-svc-njpqg
  I0617 07:20:36.998388 19 service_latency.go:363] Got endpoints: latency-svc-njpqg [157.304225ms]
  I0617 07:20:37.114606 19 service_latency.go:356] Created: latency-svc-f4c8d
  I0617 07:20:37.114606 19 service_latency.go:356] Created: latency-svc-n6g4w
  I0617 07:20:37.114676 19 service_latency.go:356] Created: latency-svc-28fhk
  I0617 07:20:37.114715 19 service_latency.go:356] Created: latency-svc-rnq8x
  I0617 07:20:37.115763 19 service_latency.go:356] Created: latency-svc-dcmxt
  I0617 07:20:37.126727 19 service_latency.go:363] Got endpoints: latency-svc-28fhk [128.255406ms]
  I0617 07:20:37.128629 19 service_latency.go:356] Created: latency-svc-b7rv7
  I0617 07:20:37.128865 19 service_latency.go:356] Created: latency-svc-sqmts
  I0617 07:20:37.130754 19 service_latency.go:356] Created: latency-svc-76l44
  I0617 07:20:37.134986 19 service_latency.go:356] Created: latency-svc-kt2gg
  I0617 07:20:37.135215 19 service_latency.go:356] Created: latency-svc-66wrd
  I0617 07:20:37.135263 19 service_latency.go:356] Created: latency-svc-f7f5d
  I0617 07:20:37.135993 19 service_latency.go:363] Got endpoints: latency-svc-dcmxt [294.871522ms]
  I0617 07:20:37.136090 19 service_latency.go:356] Created: latency-svc-5dwls
  I0617 07:20:37.136601 19 service_latency.go:356] Created: latency-svc-48fwz
  I0617 07:20:37.136942 19 service_latency.go:356] Created: latency-svc-5djl8
  I0617 07:20:37.137233 19 service_latency.go:356] Created: latency-svc-d5wkv
  I0617 07:20:37.138600 19 service_latency.go:363] Got endpoints: latency-svc-f4c8d [297.365915ms]
  I0617 07:20:37.139090 19 service_latency.go:363] Got endpoints: latency-svc-sqmts [298.018866ms]
  I0617 07:20:37.138702 19 service_latency.go:363] Got endpoints: latency-svc-rnq8x [236.820328ms]
  I0617 07:20:37.138838 19 service_latency.go:363] Got endpoints: latency-svc-n6g4w [176.715135ms]
  I0617 07:20:37.144731 19 service_latency.go:363] Got endpoints: latency-svc-d5wkv [304.220822ms]
  I0617 07:20:37.146318 19 service_latency.go:363] Got endpoints: latency-svc-66wrd [264.967095ms]
  I0617 07:20:37.146535 19 service_latency.go:363] Got endpoints: latency-svc-kt2gg [225.816244ms]
  I0617 07:20:37.151512 19 service_latency.go:363] Got endpoints: latency-svc-f7f5d [189.422163ms]
  I0617 07:20:37.151752 19 service_latency.go:363] Got endpoints: latency-svc-48fwz [310.842503ms]
  I0617 07:20:37.154074 19 service_latency.go:356] Created: latency-svc-xnbw9
  I0617 07:20:37.159302 19 service_latency.go:363] Got endpoints: latency-svc-5djl8 [175.96529ms]
  I0617 07:20:37.159304 19 service_latency.go:363] Got endpoints: latency-svc-76l44 [265.3983ms]
  I0617 07:20:37.160102 19 service_latency.go:363] Got endpoints: latency-svc-5dwls [287.562071ms]
  I0617 07:20:37.160649 19 service_latency.go:363] Got endpoints: latency-svc-b7rv7 [185.87238ms]
  I0617 07:20:37.161013 19 service_latency.go:363] Got endpoints: latency-svc-xnbw9 [34.18364ms]
  I0617 07:20:37.177334 19 service_latency.go:356] Created: latency-svc-ljqgm
  I0617 07:20:37.183770 19 service_latency.go:363] Got endpoints: latency-svc-ljqgm [47.70797ms]
  I0617 07:20:37.187159 19 service_latency.go:356] Created: latency-svc-67n5b
  I0617 07:20:37.195607 19 service_latency.go:363] Got endpoints: latency-svc-67n5b [56.237655ms]
  I0617 07:20:37.200906 19 service_latency.go:356] Created: latency-svc-dt8fb
  I0617 07:20:37.204912 19 service_latency.go:363] Got endpoints: latency-svc-dt8fb [64.975064ms]
  I0617 07:20:37.223573 19 service_latency.go:356] Created: latency-svc-xj2kk
  I0617 07:20:37.232720 19 service_latency.go:363] Got endpoints: latency-svc-xj2kk [93.154657ms]
  I0617 07:20:37.240162 19 service_latency.go:356] Created: latency-svc-9p5xm
  I0617 07:20:37.245409 19 service_latency.go:363] Got endpoints: latency-svc-9p5xm [106.447618ms]
  I0617 07:20:37.248943 19 service_latency.go:356] Created: latency-svc-qklt7
  I0617 07:20:37.256036 19 service_latency.go:363] Got endpoints: latency-svc-qklt7 [111.243513ms]
  I0617 07:20:37.269733 19 service_latency.go:356] Created: latency-svc-4tkkt
  I0617 07:20:37.276049 19 service_latency.go:363] Got endpoints: latency-svc-4tkkt [129.564298ms]
  I0617 07:20:37.286247 19 service_latency.go:356] Created: latency-svc-l2dbm
  I0617 07:20:37.291722 19 service_latency.go:363] Got endpoints: latency-svc-l2dbm [145.129416ms]
  I0617 07:20:37.299288 19 service_latency.go:356] Created: latency-svc-ksr2v
  I0617 07:20:37.302810 19 service_latency.go:363] Got endpoints: latency-svc-ksr2v [151.227838ms]
  I0617 07:20:37.305509 19 service_latency.go:356] Created: latency-svc-mnhgt
  I0617 07:20:37.312496 19 service_latency.go:363] Got endpoints: latency-svc-mnhgt [159.517962ms]
  I0617 07:20:37.314710 19 service_latency.go:356] Created: latency-svc-zjzds
  I0617 07:20:37.323683 19 service_latency.go:363] Got endpoints: latency-svc-zjzds [164.301889ms]
  I0617 07:20:37.330276 19 service_latency.go:356] Created: latency-svc-vdnwm
  I0617 07:20:37.335752 19 service_latency.go:363] Got endpoints: latency-svc-vdnwm [176.255448ms]
  I0617 07:20:37.340864 19 service_latency.go:356] Created: latency-svc-phcg4
  I0617 07:20:37.350891 19 service_latency.go:356] Created: latency-svc-4v6x4
  I0617 07:20:37.359864 19 service_latency.go:356] Created: latency-svc-8ksmd
  I0617 07:20:37.367442 19 service_latency.go:356] Created: latency-svc-jjhr6
  I0617 07:20:37.376746 19 service_latency.go:356] Created: latency-svc-4z7rc
  I0617 07:20:37.395568 19 service_latency.go:356] Created: latency-svc-vn8c4
  I0617 07:20:37.395648 19 service_latency.go:363] Got endpoints: latency-svc-phcg4 [235.485256ms]
  I0617 07:20:37.399932 19 service_latency.go:356] Created: latency-svc-hrb7v
  I0617 07:20:37.408087 19 service_latency.go:356] Created: latency-svc-8sdsn
  I0617 07:20:37.413314 19 service_latency.go:356] Created: latency-svc-ns28x
  I0617 07:20:37.423632 19 service_latency.go:356] Created: latency-svc-6fcqc
  I0617 07:20:37.431131 19 service_latency.go:356] Created: latency-svc-nm2dm
  I0617 07:20:37.435167 19 service_latency.go:363] Got endpoints: latency-svc-4v6x4 [274.461659ms]
  I0617 07:20:37.443931 19 service_latency.go:356] Created: latency-svc-hwfr9
  I0617 07:20:37.457535 19 service_latency.go:356] Created: latency-svc-lbhn9
  I0617 07:20:37.472315 19 service_latency.go:356] Created: latency-svc-s66bg
  I0617 07:20:37.477312 19 service_latency.go:356] Created: latency-svc-qr8vv
  I0617 07:20:37.486867 19 service_latency.go:363] Got endpoints: latency-svc-8ksmd [325.498857ms]
  I0617 07:20:37.487093 19 service_latency.go:356] Created: latency-svc-pggq4
  I0617 07:20:37.507671 19 service_latency.go:356] Created: latency-svc-mcswt
  I0617 07:20:37.515644 19 service_latency.go:356] Created: latency-svc-cd7cm
  I0617 07:20:37.538076 19 service_latency.go:363] Got endpoints: latency-svc-jjhr6 [354.196292ms]
  I0617 07:20:37.551325 19 service_latency.go:356] Created: latency-svc-gfzks
  I0617 07:20:37.586851 19 service_latency.go:363] Got endpoints: latency-svc-4z7rc [391.144788ms]
  I0617 07:20:37.599449 19 service_latency.go:356] Created: latency-svc-kxttw
  I0617 07:20:37.636827 19 service_latency.go:363] Got endpoints: latency-svc-vn8c4 [431.755909ms]
  I0617 07:20:37.658651 19 service_latency.go:356] Created: latency-svc-lb9d5
  I0617 07:20:37.698350 19 service_latency.go:363] Got endpoints: latency-svc-hrb7v [465.407982ms]
  I0617 07:20:37.721879 19 service_latency.go:356] Created: latency-svc-rnzqn
  I0617 07:20:37.736557 19 service_latency.go:363] Got endpoints: latency-svc-8sdsn [490.926295ms]
  I0617 07:20:37.751862 19 service_latency.go:356] Created: latency-svc-gd6km
  I0617 07:20:37.786914 19 service_latency.go:363] Got endpoints: latency-svc-ns28x [530.752707ms]
  I0617 07:20:37.797970 19 service_latency.go:356] Created: latency-svc-9x5jz
  I0617 07:20:37.836155 19 service_latency.go:363] Got endpoints: latency-svc-6fcqc [560.010513ms]
  I0617 07:20:37.850316 19 service_latency.go:356] Created: latency-svc-lvrvz
  I0617 07:20:37.887355 19 service_latency.go:363] Got endpoints: latency-svc-nm2dm [595.498398ms]
  I0617 07:20:37.901585 19 service_latency.go:356] Created: latency-svc-c42nv
  I0617 07:20:37.938780 19 service_latency.go:363] Got endpoints: latency-svc-hwfr9 [635.894855ms]
  I0617 07:20:37.954868 19 service_latency.go:356] Created: latency-svc-qlcz2
  I0617 07:20:37.986162 19 service_latency.go:363] Got endpoints: latency-svc-lbhn9 [673.602125ms]
  I0617 07:20:38.000029 19 service_latency.go:356] Created: latency-svc-fdzwd
  I0617 07:20:38.037469 19 service_latency.go:363] Got endpoints: latency-svc-s66bg [713.700703ms]
  I0617 07:20:38.048687 19 service_latency.go:356] Created: latency-svc-v2pvl
  I0617 07:20:38.087676 19 service_latency.go:363] Got endpoints: latency-svc-qr8vv [751.84841ms]
  I0617 07:20:38.098222 19 service_latency.go:356] Created: latency-svc-c284n
  I0617 07:20:38.139731 19 service_latency.go:363] Got endpoints: latency-svc-pggq4 [744.039253ms]
  I0617 07:20:38.157875 19 service_latency.go:356] Created: latency-svc-cn25p
  I0617 07:20:38.187505 19 service_latency.go:363] Got endpoints: latency-svc-mcswt [752.258995ms]
  I0617 07:20:38.201048 19 service_latency.go:356] Created: latency-svc-lln5d
  I0617 07:20:38.235551 19 service_latency.go:363] Got endpoints: latency-svc-cd7cm [748.57524ms]
  I0617 07:20:38.252579 19 service_latency.go:356] Created: latency-svc-s6nb4
  I0617 07:20:38.286560 19 service_latency.go:363] Got endpoints: latency-svc-gfzks [748.396135ms]
  I0617 07:20:38.299313 19 service_latency.go:356] Created: latency-svc-xqxmz
  I0617 07:20:38.336428 19 service_latency.go:363] Got endpoints: latency-svc-kxttw [749.51617ms]
  I0617 07:20:38.351667 19 service_latency.go:356] Created: latency-svc-lbjrj
  I0617 07:20:38.389412 19 service_latency.go:363] Got endpoints: latency-svc-lb9d5 [752.394597ms]
  I0617 07:20:38.401480 19 service_latency.go:356] Created: latency-svc-4pdh9
  I0617 07:20:38.436233 19 service_latency.go:363] Got endpoints: latency-svc-rnzqn [737.806018ms]
  I0617 07:20:38.447854 19 service_latency.go:356] Created: latency-svc-fddv5
  I0617 07:20:38.488336 19 service_latency.go:363] Got endpoints: latency-svc-gd6km [751.057645ms]
  I0617 07:20:38.499923 19 service_latency.go:356] Created: latency-svc-dm9pq
  I0617 07:20:38.537261 19 service_latency.go:363] Got endpoints: latency-svc-9x5jz [750.229239ms]
  I0617 07:20:38.552081 19 service_latency.go:356] Created: latency-svc-hdn2w
  I0617 07:20:38.587228 19 service_latency.go:363] Got endpoints: latency-svc-lvrvz [750.433406ms]
  I0617 07:20:38.600602 19 service_latency.go:356] Created: latency-svc-hx46s
  I0617 07:20:38.638334 19 service_latency.go:363] Got endpoints: latency-svc-c42nv [750.508782ms]
  I0617 07:20:38.651734 19 service_latency.go:356] Created: latency-svc-hmshc
  I0617 07:20:38.687868 19 service_latency.go:363] Got endpoints: latency-svc-qlcz2 [749.004699ms]
  I0617 07:20:38.700268 19 service_latency.go:356] Created: latency-svc-fptbx
  I0617 07:20:38.737801 19 service_latency.go:363] Got endpoints: latency-svc-fdzwd [751.523573ms]
  I0617 07:20:38.753133 19 service_latency.go:356] Created: latency-svc-vk4bt
  I0617 07:20:38.787238 19 service_latency.go:363] Got endpoints: latency-svc-v2pvl [749.684476ms]
  I0617 07:20:38.801069 19 service_latency.go:356] Created: latency-svc-wsn9p
  I0617 07:20:38.837875 19 service_latency.go:363] Got endpoints: latency-svc-c284n [750.106541ms]
  I0617 07:20:38.853124 19 service_latency.go:356] Created: latency-svc-jzsdl
  I0617 07:20:38.885747 19 service_latency.go:363] Got endpoints: latency-svc-cn25p [745.880531ms]
  I0617 07:20:38.898647 19 service_latency.go:356] Created: latency-svc-sqkwf
  I0617 07:20:38.936935 19 service_latency.go:363] Got endpoints: latency-svc-lln5d [749.287141ms]
  I0617 07:20:38.949612 19 service_latency.go:356] Created: latency-svc-jqltl
  I0617 07:20:38.987689 19 service_latency.go:363] Got endpoints: latency-svc-s6nb4 [752.030315ms]
  I0617 07:20:38.999345 19 service_latency.go:356] Created: latency-svc-fg7dd
  I0617 07:20:39.036545 19 service_latency.go:363] Got endpoints: latency-svc-xqxmz [749.894984ms]
  I0617 07:20:39.047714 19 service_latency.go:356] Created: latency-svc-h5ltq
  I0617 07:20:39.090604 19 service_latency.go:363] Got endpoints: latency-svc-lbjrj [754.09594ms]
  I0617 07:20:39.103157 19 service_latency.go:356] Created: latency-svc-7pg2h
  I0617 07:20:39.136386 19 service_latency.go:363] Got endpoints: latency-svc-4pdh9 [746.825736ms]
  I0617 07:20:39.150757 19 service_latency.go:356] Created: latency-svc-9mscb
  I0617 07:20:39.188302 19 service_latency.go:363] Got endpoints: latency-svc-fddv5 [751.996119ms]
  I0617 07:20:39.204114 19 service_latency.go:356] Created: latency-svc-4hgt6
  I0617 07:20:39.236299 19 service_latency.go:363] Got endpoints: latency-svc-dm9pq [747.856667ms]
  I0617 07:20:39.249365 19 service_latency.go:356] Created: latency-svc-2zw6q
  I0617 07:20:39.287658 19 service_latency.go:363] Got endpoints: latency-svc-hdn2w [750.299756ms]
  I0617 07:20:39.305271 19 service_latency.go:356] Created: latency-svc-zdzfp
  I0617 07:20:39.336409 19 service_latency.go:363] Got endpoints: latency-svc-hx46s [749.099202ms]
  I0617 07:20:39.351618 19 service_latency.go:356] Created: latency-svc-n7rh7
  I0617 07:20:39.387897 19 service_latency.go:363] Got endpoints: latency-svc-hmshc [749.240367ms]
  I0617 07:20:39.398924 19 service_latency.go:356] Created: latency-svc-gjdzp
  I0617 07:20:39.438642 19 service_latency.go:363] Got endpoints: latency-svc-fptbx [750.524687ms]
  I0617 07:20:39.450501 19 service_latency.go:356] Created: latency-svc-2mbm9
  I0617 07:20:39.485628 19 service_latency.go:363] Got endpoints: latency-svc-vk4bt [747.40655ms]
  I0617 07:20:39.498589 19 service_latency.go:356] Created: latency-svc-4z7tt
  I0617 07:20:39.537489 19 service_latency.go:363] Got endpoints: latency-svc-wsn9p [749.693218ms]
  I0617 07:20:39.548616 19 service_latency.go:356] Created: latency-svc-2wfjd
  I0617 07:20:39.585141 19 service_latency.go:363] Got endpoints: latency-svc-jzsdl [747.112319ms]
  I0617 07:20:39.596506 19 service_latency.go:356] Created: latency-svc-gtxvm
  I0617 07:20:39.638541 19 service_latency.go:363] Got endpoints: latency-svc-sqkwf [752.705334ms]
  I0617 07:20:39.651043 19 service_latency.go:356] Created: latency-svc-f2w82
  I0617 07:20:39.688300 19 service_latency.go:363] Got endpoints: latency-svc-jqltl [751.135106ms]
  I0617 07:20:39.699654 19 service_latency.go:356] Created: latency-svc-tjk8m
  I0617 07:20:39.739987 19 service_latency.go:363] Got endpoints: latency-svc-fg7dd [752.099551ms]
  I0617 07:20:39.754475 19 service_latency.go:356] Created: latency-svc-8jc8v
  I0617 07:20:39.787368 19 service_latency.go:363] Got endpoints: latency-svc-h5ltq [750.735842ms]
  I0617 07:20:39.801285 19 service_latency.go:356] Created: latency-svc-lmx7q
  I0617 07:20:39.836273 19 service_latency.go:363] Got endpoints: latency-svc-7pg2h [745.605036ms]
  I0617 07:20:39.852540 19 service_latency.go:356] Created: latency-svc-7vkx7
  I0617 07:20:39.886101 19 service_latency.go:363] Got endpoints: latency-svc-9mscb [749.59191ms]
  I0617 07:20:39.899099 19 service_latency.go:356] Created: latency-svc-gsps5
  I0617 07:20:39.935643 19 service_latency.go:363] Got endpoints: latency-svc-4hgt6 [747.25388ms]
  I0617 07:20:39.948630 19 service_latency.go:356] Created: latency-svc-znncl
  I0617 07:20:39.987227 19 service_latency.go:363] Got endpoints: latency-svc-2zw6q [750.841124ms]
  I0617 07:20:39.997888 19 service_latency.go:356] Created: latency-svc-6wt75
  I0617 07:20:40.037862 19 service_latency.go:363] Got endpoints: latency-svc-zdzfp [750.108096ms]
  I0617 07:20:40.048108 19 service_latency.go:356] Created: latency-svc-5w7vx
  I0617 07:20:40.086155 19 service_latency.go:363] Got endpoints: latency-svc-n7rh7 [749.645899ms]
  I0617 07:20:40.096810 19 service_latency.go:356] Created: latency-svc-xmsfj
  I0617 07:20:40.135838 19 service_latency.go:363] Got endpoints: latency-svc-gjdzp [747.87475ms]
  I0617 07:20:40.148086 19 service_latency.go:356] Created: latency-svc-kfdlb
  I0617 07:20:40.186567 19 service_latency.go:363] Got endpoints: latency-svc-2mbm9 [747.822204ms]
  I0617 07:20:40.199009 19 service_latency.go:356] Created: latency-svc-jq6l2
  I0617 07:20:40.237248 19 service_latency.go:363] Got endpoints: latency-svc-4z7tt [751.255398ms]
  I0617 07:20:40.255802 19 service_latency.go:356] Created: latency-svc-kjdfs
  I0617 07:20:40.286151 19 service_latency.go:363] Got endpoints: latency-svc-2wfjd [748.458115ms]
  I0617 07:20:40.297082 19 service_latency.go:356] Created: latency-svc-q8z5z
  I0617 07:20:40.336315 19 service_latency.go:363] Got endpoints: latency-svc-gtxvm [751.060821ms]
  I0617 07:20:40.350864 19 service_latency.go:356] Created: latency-svc-q9fvx
  I0617 07:20:40.386549 19 service_latency.go:363] Got endpoints: latency-svc-f2w82 [747.946654ms]
  I0617 07:20:40.397452 19 service_latency.go:356] Created: latency-svc-mcjwn
  I0617 07:20:40.435757 19 service_latency.go:363] Got endpoints: latency-svc-tjk8m [747.076257ms]
  I0617 07:20:40.447755 19 service_latency.go:356] Created: latency-svc-tg4p9
  I0617 07:20:40.486326 19 service_latency.go:363] Got endpoints: latency-svc-8jc8v [745.729847ms]
  I0617 07:20:40.497935 19 service_latency.go:356] Created: latency-svc-zqv4b
  I0617 07:20:40.535525 19 service_latency.go:363] Got endpoints: latency-svc-lmx7q [748.074675ms]
  I0617 07:20:40.547914 19 service_latency.go:356] Created: latency-svc-gxb97
  I0617 07:20:40.586762 19 service_latency.go:363] Got endpoints: latency-svc-7vkx7 [750.406478ms]
  I0617 07:20:40.598304 19 service_latency.go:356] Created: latency-svc-n8rfq
  I0617 07:20:40.635830 19 service_latency.go:363] Got endpoints: latency-svc-gsps5 [749.55862ms]
  I0617 07:20:40.650681 19 service_latency.go:356] Created: latency-svc-d88ld
  I0617 07:20:40.686161 19 service_latency.go:363] Got endpoints: latency-svc-znncl [750.421383ms]
  I0617 07:20:40.703854 19 service_latency.go:356] Created: latency-svc-q8wt7
  I0617 07:20:40.736242 19 service_latency.go:363] Got endpoints: latency-svc-6wt75 [748.923107ms]
  I0617 07:20:40.748636 19 service_latency.go:356] Created: latency-svc-5dkg7
  I0617 07:20:40.788475 19 service_latency.go:363] Got endpoints: latency-svc-5w7vx [750.544026ms]
  I0617 07:20:40.801950 19 service_latency.go:356] Created: latency-svc-vnsmm
  I0617 07:20:40.837859 19 service_latency.go:363] Got endpoints: latency-svc-xmsfj [751.480777ms]
  I0617 07:20:40.853542 19 service_latency.go:356] Created: latency-svc-sxcmt
  I0617 07:20:40.886060 19 service_latency.go:363] Got endpoints: latency-svc-kfdlb [750.125404ms]
  I0617 07:20:40.898709 19 service_latency.go:356] Created: latency-svc-22wb4
  I0617 07:20:40.936357 19 service_latency.go:363] Got endpoints: latency-svc-jq6l2 [749.662322ms]
  I0617 07:20:40.949950 19 service_latency.go:356] Created: latency-svc-2wlpr
  I0617 07:20:40.986877 19 service_latency.go:363] Got endpoints: latency-svc-kjdfs [749.548745ms]
  I0617 07:20:41.000302 19 service_latency.go:356] Created: latency-svc-l6wbs
  I0617 07:20:41.036275 19 service_latency.go:363] Got endpoints: latency-svc-q8z5z [750.012556ms]
  I0617 07:20:41.063023 19 service_latency.go:356] Created: latency-svc-48gf2
  I0617 07:20:41.094412 19 service_latency.go:363] Got endpoints: latency-svc-q9fvx [757.619919ms]
  I0617 07:20:41.111317 19 service_latency.go:356] Created: latency-svc-hz9q2
  I0617 07:20:41.137247 19 service_latency.go:363] Got endpoints: latency-svc-mcjwn [750.614118ms]
  I0617 07:20:41.151572 19 service_latency.go:356] Created: latency-svc-n4k78
  I0617 07:20:41.187242 19 service_latency.go:363] Got endpoints: latency-svc-tg4p9 [751.420516ms]
  I0617 07:20:41.202701 19 service_latency.go:356] Created: latency-svc-cbfqj
  I0617 07:20:41.236752 19 service_latency.go:363] Got endpoints: latency-svc-zqv4b [750.341698ms]
  I0617 07:20:41.249974 19 service_latency.go:356] Created: latency-svc-kk2lz
  I0617 07:20:41.286113 19 service_latency.go:363] Got endpoints: latency-svc-gxb97 [750.498249ms]
  I0617 07:20:41.297196 19 service_latency.go:356] Created: latency-svc-l587l
  I0617 07:20:41.336812 19 service_latency.go:363] Got endpoints: latency-svc-n8rfq [749.976275ms]
  I0617 07:20:41.350724 19 service_latency.go:356] Created: latency-svc-rng7m
  I0617 07:20:41.386818 19 service_latency.go:363] Got endpoints: latency-svc-d88ld [750.865041ms]
  I0617 07:20:41.401691 19 service_latency.go:356] Created: latency-svc-75tvh
  I0617 07:20:41.436864 19 service_latency.go:363] Got endpoints: latency-svc-q8wt7 [750.590873ms]
  I0617 07:20:41.448196 19 service_latency.go:356] Created: latency-svc-2kxxp
  I0617 07:20:41.486444 19 service_latency.go:363] Got endpoints: latency-svc-5dkg7 [750.123865ms]
  I0617 07:20:41.498226 19 service_latency.go:356] Created: latency-svc-rzdgj
  I0617 07:20:41.538160 19 service_latency.go:363] Got endpoints: latency-svc-vnsmm [749.569689ms]
  I0617 07:20:41.552401 19 service_latency.go:356] Created: latency-svc-87slj
  I0617 07:20:41.587215 19 service_latency.go:363] Got endpoints: latency-svc-sxcmt [749.265924ms]
  I0617 07:20:41.600750 19 service_latency.go:356] Created: latency-svc-swm64
  I0617 07:20:41.636657 19 service_latency.go:363] Got endpoints: latency-svc-22wb4 [750.511896ms]
  I0617 07:20:41.647760 19 service_latency.go:356] Created: latency-svc-d5bpg
  I0617 07:20:41.685583 19 service_latency.go:363] Got endpoints: latency-svc-2wlpr [749.105448ms]
  I0617 07:20:41.696976 19 service_latency.go:356] Created: latency-svc-7cxhn
  I0617 07:20:41.736271 19 service_latency.go:363] Got endpoints: latency-svc-l6wbs [749.234721ms]
  I0617 07:20:41.746802 19 service_latency.go:356] Created: latency-svc-wgf6j
  I0617 07:20:41.785789 19 service_latency.go:363] Got endpoints: latency-svc-48gf2 [749.416541ms]
  I0617 07:20:41.797442 19 service_latency.go:356] Created: latency-svc-86dqg
  I0617 07:20:41.835268 19 service_latency.go:363] Got endpoints: latency-svc-hz9q2 [740.758339ms]
  I0617 07:20:41.848144 19 service_latency.go:356] Created: latency-svc-gddlq
  I0617 07:20:41.885515 19 service_latency.go:363] Got endpoints: latency-svc-n4k78 [748.184404ms]
  I0617 07:20:41.895315 19 service_latency.go:356] Created: latency-svc-xc9hk
  I0617 07:20:41.936096 19 service_latency.go:363] Got endpoints: latency-svc-cbfqj [748.767251ms]
  I0617 07:20:41.946094 19 service_latency.go:356] Created: latency-svc-2lmm6
  I0617 07:20:41.986908 19 service_latency.go:363] Got endpoints: latency-svc-kk2lz [750.081026ms]
  I0617 07:20:41.997017 19 service_latency.go:356] Created: latency-svc-zxwrd
  I0617 07:20:42.042338 19 service_latency.go:363] Got endpoints: latency-svc-l587l [755.140829ms]
  I0617 07:20:42.054434 19 service_latency.go:356] Created: latency-svc-mhtvg
  I0617 07:20:42.085783 19 service_latency.go:363] Got endpoints: latency-svc-rng7m [748.687615ms]
  I0617 07:20:42.095551 19 service_latency.go:356] Created: latency-svc-rs76g
  I0617 07:20:42.139012 19 service_latency.go:363] Got endpoints: latency-svc-75tvh [752.100144ms]
  I0617 07:20:42.150748 19 service_latency.go:356] Created: latency-svc-hcgbb
  I0617 07:20:42.187070 19 service_latency.go:363] Got endpoints: latency-svc-2kxxp [750.128406ms]
  I0617 07:20:42.197952 19 service_latency.go:356] Created: latency-svc-74gnd
  I0617 07:20:42.236763 19 service_latency.go:363] Got endpoints: latency-svc-rzdgj [750.230175ms]
  I0617 07:20:42.251358 19 service_latency.go:356] Created: latency-svc-wwc4m
  I0617 07:20:42.286106 19 service_latency.go:363] Got endpoints: latency-svc-87slj [747.840967ms]
  I0617 07:20:42.296395 19 service_latency.go:356] Created: latency-svc-hlct4
  I0617 07:20:42.336741 19 service_latency.go:363] Got endpoints: latency-svc-swm64 [749.405724ms]
  I0617 07:20:42.348676 19 service_latency.go:356] Created: latency-svc-l57dz
  I0617 07:20:42.385931 19 service_latency.go:363] Got endpoints: latency-svc-d5bpg [749.184995ms]
  I0617 07:20:42.396925 19 service_latency.go:356] Created: latency-svc-286p5
  I0617 07:20:42.435433 19 service_latency.go:363] Got endpoints: latency-svc-7cxhn [749.763225ms]
  I0617 07:20:42.449620 19 service_latency.go:356] Created: latency-svc-7b995
  I0617 07:20:42.486760 19 service_latency.go:363] Got endpoints: latency-svc-wgf6j [750.394867ms]
  I0617 07:20:42.499216 19 service_latency.go:356] Created: latency-svc-sxj9h
  I0617 07:20:42.536092 19 service_latency.go:363] Got endpoints: latency-svc-86dqg [750.223357ms]
  I0617 07:20:42.547724 19 service_latency.go:356] Created: latency-svc-n4bjb
  I0617 07:20:42.586443 19 service_latency.go:363] Got endpoints: latency-svc-gddlq [751.097219ms]
  I0617 07:20:42.598429 19 service_latency.go:356] Created: latency-svc-tspvp
  I0617 07:20:42.637907 19 service_latency.go:363] Got endpoints: latency-svc-xc9hk [752.323636ms]
  I0617 07:20:42.656150 19 service_latency.go:356] Created: latency-svc-hkpbx
  I0617 07:20:42.687817 19 service_latency.go:363] Got endpoints: latency-svc-2lmm6 [751.647757ms]
  I0617 07:20:42.699569 19 service_latency.go:356] Created: latency-svc-zwqwk
  I0617 07:20:42.736771 19 service_latency.go:363] Got endpoints: latency-svc-zxwrd [749.786159ms]
  I0617 07:20:42.747733 19 service_latency.go:356] Created: latency-svc-mmwdz
  I0617 07:20:42.787020 19 service_latency.go:363] Got endpoints: latency-svc-mhtvg [744.575853ms]
  I0617 07:20:42.799076 19 service_latency.go:356] Created: latency-svc-zbl4p
  I0617 07:20:42.835522 19 service_latency.go:363] Got endpoints: latency-svc-rs76g [749.658719ms]
  I0617 07:20:42.852534 19 service_latency.go:356] Created: latency-svc-4pt6b
  I0617 07:20:42.886150 19 service_latency.go:363] Got endpoints: latency-svc-hcgbb [747.072197ms]
  I0617 07:20:42.899139 19 service_latency.go:356] Created: latency-svc-mz6j5
  I0617 07:20:42.947326 19 service_latency.go:363] Got endpoints: latency-svc-74gnd [760.157055ms]
  I0617 07:20:42.957874 19 service_latency.go:356] Created: latency-svc-mqrzf
  I0617 07:20:42.985743 19 service_latency.go:363] Got endpoints: latency-svc-wwc4m [748.862285ms]
  I0617 07:20:42.999611 19 service_latency.go:356] Created: latency-svc-292jq
  I0617 07:20:43.036241 19 service_latency.go:363] Got endpoints: latency-svc-hlct4 [750.066374ms]
  I0617 07:20:43.050054 19 service_latency.go:356] Created: latency-svc-8wcfl
  I0617 07:20:43.085902 19 service_latency.go:363] Got endpoints: latency-svc-l57dz [749.106414ms]
  I0617 07:20:43.095421 19 service_latency.go:356] Created: latency-svc-5wgd8
  I0617 07:20:43.138634 19 service_latency.go:363] Got endpoints: latency-svc-286p5 [752.64002ms]
  I0617 07:20:43.148801 19 service_latency.go:356] Created: latency-svc-vk6sb
  I0617 07:20:43.190200 19 service_latency.go:363] Got endpoints: latency-svc-7b995 [754.695537ms]
  I0617 07:20:43.202049 19 service_latency.go:356] Created: latency-svc-xcwb8
  I0617 07:20:43.236586 19 service_latency.go:363] Got endpoints: latency-svc-sxj9h [749.259099ms]
  I0617 07:20:43.248430 19 service_latency.go:356] Created: latency-svc-6ghxj
  I0617 07:20:43.285774 19 service_latency.go:363] Got endpoints: latency-svc-n4bjb [749.604332ms]
  I0617 07:20:43.300898 19 service_latency.go:356] Created: latency-svc-44bn8
  I0617 07:20:43.336897 19 service_latency.go:363] Got endpoints: latency-svc-tspvp [750.363274ms]
  I0617 07:20:43.347543 19 service_latency.go:356] Created: latency-svc-c59tj
  I0617 07:20:43.386941 19 service_latency.go:363] Got endpoints: latency-svc-hkpbx [748.936893ms]
  I0617 07:20:43.400545 19 service_latency.go:356] Created: latency-svc-knxvm
  I0617 07:20:43.436433 19 service_latency.go:363] Got endpoints: latency-svc-zwqwk [748.540419ms]
  I0617 07:20:43.447086 19 service_latency.go:356] Created: latency-svc-2882g
  I0617 07:20:43.486772 19 service_latency.go:363] Got endpoints: latency-svc-mmwdz [749.886162ms]
  I0617 07:20:43.498767 19 service_latency.go:356] Created: latency-svc-7cnw2
  I0617 07:20:43.539349 19 service_latency.go:363] Got endpoints: latency-svc-zbl4p [752.241688ms]
  I0617 07:20:43.551657 19 service_latency.go:356] Created: latency-svc-ccmcs
  I0617 07:20:43.586330 19 service_latency.go:363] Got endpoints: latency-svc-4pt6b [750.724624ms]
  I0617 07:20:43.599157 19 service_latency.go:356] Created: latency-svc-5b76z
  I0617 07:20:43.638408 19 service_latency.go:363] Got endpoints: latency-svc-mz6j5 [752.150583ms]
  I0617 07:20:43.650312 19 service_latency.go:356] Created: latency-svc-m2jmw
  I0617 07:20:43.690471 19 service_latency.go:363] Got endpoints: latency-svc-mqrzf [743.083269ms]
  I0617 07:20:43.712039 19 service_latency.go:356] Created: latency-svc-chlmd
  I0617 07:20:43.740615 19 service_latency.go:363] Got endpoints: latency-svc-292jq [754.795337ms]
  I0617 07:20:43.751805 19 service_latency.go:356] Created: latency-svc-km4lb
  I0617 07:20:43.786634 19 service_latency.go:363] Got endpoints: latency-svc-8wcfl [750.313726ms]
  I0617 07:20:43.804891 19 service_latency.go:356] Created: latency-svc-sjbmv
  I0617 07:20:43.836263 19 service_latency.go:363] Got endpoints: latency-svc-5wgd8 [750.30285ms]
  I0617 07:20:43.853529 19 service_latency.go:356] Created: latency-svc-xzrpf
  I0617 07:20:43.888620 19 service_latency.go:363] Got endpoints: latency-svc-vk6sb [749.921857ms]
  I0617 07:20:43.901817 19 service_latency.go:356] Created: latency-svc-z7mw8
  I0617 07:20:43.936853 19 service_latency.go:363] Got endpoints: latency-svc-xcwb8 [746.5735ms]
  I0617 07:20:43.954781 19 service_latency.go:356] Created: latency-svc-g5p4w
  I0617 07:20:43.987415 19 service_latency.go:363] Got endpoints: latency-svc-6ghxj [750.349409ms]
  I0617 07:20:43.998020 19 service_latency.go:356] Created: latency-svc-7lx7j
  I0617 07:20:44.036350 19 service_latency.go:363] Got endpoints: latency-svc-44bn8 [750.456065ms]
  I0617 07:20:44.047343 19 service_latency.go:356] Created: latency-svc-mxrwj
  I0617 07:20:44.086826 19 service_latency.go:363] Got endpoints: latency-svc-c59tj [749.679049ms]
  I0617 07:20:44.097876 19 service_latency.go:356] Created: latency-svc-7tj5j
  I0617 07:20:44.136647 19 service_latency.go:363] Got endpoints: latency-svc-knxvm [749.619221ms]
  I0617 07:20:44.150138 19 service_latency.go:356] Created: latency-svc-zgrps
  I0617 07:20:44.187454 19 service_latency.go:363] Got endpoints: latency-svc-2882g [750.960112ms]
  I0617 07:20:44.198706 19 service_latency.go:356] Created: latency-svc-hm7hg
  I0617 07:20:44.248236 19 service_latency.go:363] Got endpoints: latency-svc-7cnw2 [761.220513ms]
  I0617 07:20:44.263823 19 service_latency.go:356] Created: latency-svc-qhvpq
  I0617 07:20:44.286682 19 service_latency.go:363] Got endpoints: latency-svc-ccmcs [746.919751ms]
  I0617 07:20:44.308595 19 service_latency.go:356] Created: latency-svc-zwplz
  I0617 07:20:44.337187 19 service_latency.go:363] Got endpoints: latency-svc-5b76z [750.710026ms]
  I0617 07:20:44.350098 19 service_latency.go:356] Created: latency-svc-mktnr
  I0617 07:20:44.385659 19 service_latency.go:363] Got endpoints: latency-svc-m2jmw [747.092741ms]
  I0617 07:20:44.396147 19 service_latency.go:356] Created: latency-svc-x9tzx
  I0617 07:20:44.436702 19 service_latency.go:363] Got endpoints: latency-svc-chlmd [746.142121ms]
  I0617 07:20:44.456058 19 service_latency.go:356] Created: latency-svc-jbrtz
  I0617 07:20:44.487875 19 service_latency.go:363] Got endpoints: latency-svc-km4lb [747.200627ms]
  I0617 07:20:44.499690 19 service_latency.go:356] Created: latency-svc-g4kfn
  I0617 07:20:44.537061 19 service_latency.go:363] Got endpoints: latency-svc-sjbmv [750.362196ms]
  I0617 07:20:44.552295 19 service_latency.go:356] Created: latency-svc-s8jmn
  I0617 07:20:44.586362 19 service_latency.go:363] Got endpoints: latency-svc-xzrpf [750.017788ms]
  I0617 07:20:44.597911 19 service_latency.go:356] Created: latency-svc-vlgts
  I0617 07:20:44.635803 19 service_latency.go:363] Got endpoints: latency-svc-z7mw8 [747.085797ms]
  I0617 07:20:44.652053 19 service_latency.go:356] Created: latency-svc-q6w8l
  I0617 07:20:44.686134 19 service_latency.go:363] Got endpoints: latency-svc-g5p4w [749.206059ms]
  I0617 07:20:44.736057 19 service_latency.go:363] Got endpoints: latency-svc-7lx7j [748.570541ms]
  I0617 07:20:44.785658 19 service_latency.go:363] Got endpoints: latency-svc-mxrwj [749.232793ms]
  I0617 07:20:44.838329 19 service_latency.go:363] Got endpoints: latency-svc-7tj5j [751.439632ms]
  I0617 07:20:44.898668 19 service_latency.go:363] Got endpoints: latency-svc-zgrps [761.917866ms]
  I0617 07:20:44.939679 19 service_latency.go:363] Got endpoints: latency-svc-hm7hg [752.156471ms]
  I0617 07:20:44.985311 19 service_latency.go:363] Got endpoints: latency-svc-qhvpq [736.991377ms]
  I0617 07:20:45.036586 19 service_latency.go:363] Got endpoints: latency-svc-zwplz [749.82973ms]
  I0617 07:20:45.087070 19 service_latency.go:363] Got endpoints: latency-svc-mktnr [749.764446ms]
  I0617 07:20:45.138784 19 service_latency.go:363] Got endpoints: latency-svc-x9tzx [753.018364ms]
  I0617 07:20:45.188280 19 service_latency.go:363] Got endpoints: latency-svc-jbrtz [751.493862ms]
  I0617 07:20:45.238257 19 service_latency.go:363] Got endpoints: latency-svc-g4kfn [750.297857ms]
  I0617 07:20:45.288089 19 service_latency.go:363] Got endpoints: latency-svc-s8jmn [750.937129ms]
  I0617 07:20:45.337382 19 service_latency.go:363] Got endpoints: latency-svc-vlgts [750.872119ms]
  I0617 07:20:45.387323 19 service_latency.go:363] Got endpoints: latency-svc-q6w8l [751.209661ms]
  I0617 07:20:45.387686 19 service_latency.go:114] Latencies: [31.815119ms 33.658578ms 34.18364ms 40.752566ms 47.70797ms 53.223485ms 56.237655ms 61.055714ms 64.975064ms 79.88152ms 87.566572ms 93.154657ms 106.447618ms 111.243513ms 121.152601ms 128.255406ms 129.564298ms 133.827908ms 142.280636ms 145.129416ms 151.227838ms 157.304225ms 159.517962ms 164.301889ms 175.96529ms 176.255448ms 176.715135ms 185.87238ms 189.422163ms 225.816244ms 235.485256ms 236.820328ms 264.967095ms 265.3983ms 274.461659ms 287.562071ms 294.871522ms 297.365915ms 298.018866ms 304.220822ms 310.842503ms 325.498857ms 354.196292ms 391.144788ms 431.755909ms 465.407982ms 490.926295ms 530.752707ms 560.010513ms 595.498398ms 635.894855ms 673.602125ms 713.700703ms 736.991377ms 737.806018ms 740.758339ms 743.083269ms 744.039253ms 744.575853ms 745.605036ms 745.729847ms 745.880531ms 746.142121ms 746.5735ms 746.825736ms 746.919751ms 747.072197ms 747.076257ms 747.085797ms 747.092741ms 747.112319ms 747.200627ms 747.25388ms 747.40655ms 747.822204ms 747.840967ms 747.856667ms 747.87475ms 747.946654ms 748.074675ms 748.184404ms 748.396135ms 748.458115ms 748.540419ms 748.570541ms 748.57524ms 748.687615ms 748.767251ms 748.862285ms 748.923107ms 748.936893ms 749.004699ms 749.099202ms 749.105448ms 749.106414ms 749.184995ms 749.206059ms 749.232793ms 749.234721ms 749.240367ms 749.259099ms 749.265924ms 749.287141ms 749.405724ms 749.416541ms 749.51617ms 749.548745ms 749.55862ms 749.569689ms 749.59191ms 749.604332ms 749.619221ms 749.645899ms 749.658719ms 749.662322ms 749.679049ms 749.684476ms 749.693218ms 749.763225ms 749.764446ms 749.786159ms 749.82973ms 749.886162ms 749.894984ms 749.921857ms 749.976275ms 750.012556ms 750.017788ms 750.066374ms 750.081026ms 750.106541ms 750.108096ms 750.123865ms 750.125404ms 750.128406ms 750.223357ms 750.229239ms 750.230175ms 750.297857ms 750.299756ms 750.30285ms 750.313726ms 750.341698ms 750.349409ms 750.362196ms 750.363274ms 750.394867ms 750.406478ms 750.421383ms 750.433406ms 750.456065ms 750.498249ms 750.508782ms 750.511896ms 750.524687ms 750.544026ms 750.590873ms 750.614118ms 750.710026ms 750.724624ms 750.735842ms 750.841124ms 750.865041ms 750.872119ms 750.937129ms 750.960112ms 751.057645ms 751.060821ms 751.097219ms 751.135106ms 751.209661ms 751.255398ms 751.420516ms 751.439632ms 751.480777ms 751.493862ms 751.523573ms 751.647757ms 751.84841ms 751.996119ms 752.030315ms 752.099551ms 752.100144ms 752.150583ms 752.156471ms 752.241688ms 752.258995ms 752.323636ms 752.394597ms 752.64002ms 752.705334ms 753.018364ms 754.09594ms 754.695537ms 754.795337ms 755.140829ms 757.619919ms 760.157055ms 761.220513ms 761.917866ms]
  I0617 07:20:45.387713 19 service_latency.go:118] 50 %ile: 749.259099ms
  I0617 07:20:45.387734 19 service_latency.go:119] 90 %ile: 752.030315ms
  I0617 07:20:45.387744 19 service_latency.go:120] 99 %ile: 761.220513ms
  I0617 07:20:45.387812 19 service_latency.go:121] Total sample count: 200
  I0617 07:20:45.388014 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-6071" for this suite. @ 06/17/24 07:20:45.395
• [10.768 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 06/17/24 07:20:45.404
  I0617 07:20:45.404317 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:20:45.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:45.422
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:45.426
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:20:45.431
  STEP: Saw pod success @ 06/17/24 07:20:49.456
  I0617 07:20:49.458671 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-b804677d-cdda-4861-b3c6-ad6073df4739 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:20:49.463
  I0617 07:20:49.475196 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4245" for this suite. @ 06/17/24 07:20:49.479
• [4.082 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 06/17/24 07:20:49.485
  I0617 07:20:49.485921 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename cronjob @ 06/17/24 07:20:49.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:20:49.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:20:49.5
  STEP: Creating a ForbidConcurrent cronjob @ 06/17/24 07:20:49.503
  STEP: Ensuring a job is scheduled @ 06/17/24 07:20:49.509
  STEP: Ensuring exactly one is scheduled @ 06/17/24 07:21:01.515
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/17/24 07:21:01.519
  STEP: Ensuring no more jobs are scheduled @ 06/17/24 07:21:01.523
  STEP: Removing cronjob @ 06/17/24 07:21:01.526
  I0617 07:21:01.532223 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7650" for this suite. @ 06/17/24 07:21:01.536
• [12.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 06/17/24 07:21:01.548
  I0617 07:21:01.548158 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:21:01.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:01.567
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:01.57
  STEP: creating the pod @ 06/17/24 07:21:01.574
  I0617 07:21:01.575047 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 create -f -'
  I0617 07:21:01.759392 19 builder.go:146] stderr: ""
  I0617 07:21:01.759464 19 builder.go:147] stdout: "pod/pause created\n"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 06/17/24 07:21:03.766
  I0617 07:21:03.766581 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 label pods pause testing-label=testing-label-value'
  I0617 07:21:03.870936 19 builder.go:146] stderr: ""
  I0617 07:21:03.871017 19 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 06/17/24 07:21:03.871
  I0617 07:21:03.871214 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 get pod pause -L testing-label'
  I0617 07:21:03.974795 19 builder.go:146] stderr: ""
  I0617 07:21:03.974885 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          2s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 06/17/24 07:21:03.974
  I0617 07:21:03.975110 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 label pods pause testing-label-'
  I0617 07:21:04.055065 19 builder.go:146] stderr: ""
  I0617 07:21:04.055126 19 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 06/17/24 07:21:04.055
  I0617 07:21:04.055254 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 get pod pause -L testing-label'
  I0617 07:21:04.158214 19 builder.go:146] stderr: ""
  I0617 07:21:04.158262 19 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          3s    \n"
  STEP: using delete to clean up resources @ 06/17/24 07:21:04.158
  I0617 07:21:04.158492 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 delete --grace-period=0 --force -f -'
  I0617 07:21:04.292965 19 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0617 07:21:04.293062 19 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0617 07:21:04.293222 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 get rc,svc -l name=pause --no-headers'
  I0617 07:21:04.384398 19 builder.go:146] stderr: "No resources found in kubectl-3294 namespace.\n"
  I0617 07:21:04.384459 19 builder.go:147] stdout: ""
  I0617 07:21:04.384567 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-3294 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0617 07:21:04.463620 19 builder.go:146] stderr: ""
  I0617 07:21:04.463677 19 builder.go:147] stdout: ""
  I0617 07:21:04.463796 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3294" for this suite. @ 06/17/24 07:21:04.468
• [2.926 seconds]
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 06/17/24 07:21:04.474
  I0617 07:21:04.474392 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:21:04.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:04.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:04.494
  STEP: Creating a pod to test downward api env vars @ 06/17/24 07:21:04.498
  STEP: Saw pod success @ 06/17/24 07:21:08.521
  I0617 07:21:08.525403 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downward-api-3c0210e1-538d-4f29-8aa0-5728ea5d567a container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 07:21:08.536
  I0617 07:21:08.551304 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4164" for this suite. @ 06/17/24 07:21:08.555
• [4.088 seconds]
------------------------------
S
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 06/17/24 07:21:08.561
  I0617 07:21:08.561661 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:21:08.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:08.582
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:08.585
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:21:08.588
  STEP: Saw pod success @ 06/17/24 07:21:10.603
  I0617 07:21:10.606261 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-4dc68b1b-a997-47c1-b0af-a50e5c7fd153 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:21:10.612
  I0617 07:21:10.624567 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9846" for this suite. @ 06/17/24 07:21:10.628
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 06/17/24 07:21:10.634
  I0617 07:21:10.634244 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sysctl @ 06/17/24 07:21:10.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:10.647
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:10.65
  STEP: Creating a pod with one valid and two invalid sysctls @ 06/17/24 07:21:10.653
  I0617 07:21:10.658162 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-656" for this suite. @ 06/17/24 07:21:10.662
• [0.033 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 06/17/24 07:21:10.67
  I0617 07:21:10.670680 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename subpath @ 06/17/24 07:21:10.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:10.682
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:10.685
  STEP: Setting up data @ 06/17/24 07:21:10.688
  STEP: Creating pod pod-subpath-test-downwardapi-d26q @ 06/17/24 07:21:10.695
  STEP: Creating a pod to test atomic-volume-subpath @ 06/17/24 07:21:10.695
  STEP: Saw pod success @ 06/17/24 07:21:32.76
  I0617 07:21:32.763457 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-subpath-test-downwardapi-d26q container test-container-subpath-downwardapi-d26q: <nil>
  STEP: delete the pod @ 06/17/24 07:21:32.773
  STEP: Deleting pod pod-subpath-test-downwardapi-d26q @ 06/17/24 07:21:32.784
  I0617 07:21:32.784954 19 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-d26q" in namespace "subpath-3637"
  I0617 07:21:32.787408 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-3637" for this suite. @ 06/17/24 07:21:32.791
• [22.127 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 06/17/24 07:21:32.797
  I0617 07:21:32.797942 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-webhook @ 06/17/24 07:21:32.799
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:32.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:32.813
  STEP: Setting up server cert @ 06/17/24 07:21:32.817
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 06/17/24 07:21:33.099
  STEP: Deploying the custom resource conversion webhook pod @ 06/17/24 07:21:33.109
  STEP: Wait for the deployment to be ready @ 06/17/24 07:21:33.121
  I0617 07:21:33.137978 19 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:21:35.149
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:21:35.164
  I0617 07:21:36.164674 19 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0617 07:21:36.174305 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Creating a v1 custom resource @ 06/17/24 07:21:38.76
  STEP: Create a v2 custom resource @ 06/17/24 07:21:38.78
  STEP: List CRs in v1 @ 06/17/24 07:21:38.823
  STEP: List CRs in v2 @ 06/17/24 07:21:38.828
  I0617 07:21:39.389070 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-1512" for this suite. @ 06/17/24 07:21:39.395
• [6.609 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 06/17/24 07:21:39.408
  I0617 07:21:39.409023 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubelet-test @ 06/17/24 07:21:39.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:39.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:39.428
  STEP: Waiting for pod completion @ 06/17/24 07:21:39.441
  I0617 07:21:43.461416 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-4035" for this suite. @ 06/17/24 07:21:43.466
• [4.064 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 06/17/24 07:21:43.472
  I0617 07:21:43.472881 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:21:43.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:43.486
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:43.489
  STEP: set up a multi version CRD @ 06/17/24 07:21:43.493
  I0617 07:21:43.494075 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: rename a version @ 06/17/24 07:21:47.28
  STEP: check the new version name is served @ 06/17/24 07:21:47.296
  STEP: check the old version name is removed @ 06/17/24 07:21:48.275
  STEP: check the other version is not changed @ 06/17/24 07:21:49.036
  I0617 07:21:51.932702 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2771" for this suite. @ 06/17/24 07:21:51.941
• [8.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 06/17/24 07:21:51.946
  I0617 07:21:51.946877 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 07:21:51.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:51.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:51.963
  I0617 07:21:51.967339 19 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0617 07:21:51.973983 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0617 07:21:56.978447 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/17/24 07:21:56.978
  I0617 07:21:56.978645 19 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0617 07:21:56.984156 19 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0617 07:21:56.990334 19 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  I0617 07:21:58.998814 19 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0617 07:21:59.001497 19 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0617 07:21:59.007878 19 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9c5dbe26-4cac-4181-bcee-62b35f821cc0",
      ResourceVersion: (string) (len=5) "16042",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854205716,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0617 07:21:59.023306 19 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "963173ae-67f5-4108-b721-b0bdd0bb3559",
      ResourceVersion: (string) (len=5) "16032",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854205716,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9c5dbe26-4cac-4181-bcee-62b35f821cc0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205716,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 39 63 35 64 62 65  32 36 2d 34 63 61 63 2d  |\"9c5dbe26-4cac-|
              00000120  34 31 38 31 2d 62 63 65  65 2d 36 32 62 33 35 66  |4181-bcee-62b35f|
              00000130  38 32 31 63 63 30 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |821cc0\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:21:59.028797 19 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0617 07:21:59.029101 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "23c28b8d-79ae-49a7-8d74-64e37a05d94c",
      ResourceVersion: (string) (len=5) "16041",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854205711,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "9c5dbe26-4cac-4181-bcee-62b35f821cc0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205711,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 39 63 35 64 62 65 32  |"uid\":\"9c5dbe2|
              000000b0  36 2d 34 63 61 63 2d 34  31 38 31 2d 62 63 65 65  |6-4cac-4181-bcee|
              000000c0  2d 36 32 62 33 35 66 38  32 31 63 63 30 5c 22 7d  |-62b35f821cc0\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:21:59.034112 19 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-62gpj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-62gpj",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-6796",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "85d21fbf-670e-4abd-b19c-d81a19f0984c",
      ResourceVersion: (string) (len=5) "16031",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854205717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.175/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.175/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "154a70c17c86a89d1adb29575e15bc68260c6a2f7cce761ceba84682da8e8b3e"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "963173ae-67f5-4108-b721-b0bdd0bb3559",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 36  33 31 37 33 61 65 2d 36  |d\":\"963173ae-6|
              00000090  37 66 35 2d 34 31 30 38  2d 62 37 32 31 2d 62 30  |7f5-4108-b721-b0|
              000000a0  62 64 64 30 62 62 33 35  35 39 5c 22 7d 22 3a 7b  |bdd0bb3559\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 37 35 5c 22 7d 22  |2.16.228.175\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-npnvv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-npnvv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205718,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854205717,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.175",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.175"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854205717,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854205717,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://0b62c02661ecc65ab0e4d224b1e1dead402a5ee376ef176b8e0fa21f5e0e974c",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:21:59.036468 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6796" for this suite. @ 06/17/24 07:21:59.04
• [7.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 06/17/24 07:21:59.046
  I0617 07:21:59.046634 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename field-validation @ 06/17/24 07:21:59.048
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:59.061
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:59.064
  STEP: apply creating a deployment @ 06/17/24 07:21:59.067
  I0617 07:21:59.080671 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2370" for this suite. @ 06/17/24 07:21:59.088
• [0.047 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 06/17/24 07:21:59.094
  I0617 07:21:59.094911 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 07:21:59.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:21:59.112
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:21:59.115
  STEP: Creating a pod to test substitution in volume subpath @ 06/17/24 07:21:59.118
  STEP: Saw pod success @ 06/17/24 07:22:03.137
  I0617 07:22:03.141412 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod var-expansion-fcd70e61-9758-4be9-9fd5-1db15595e839 container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 07:22:03.147
  I0617 07:22:03.161751 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-41" for this suite. @ 06/17/24 07:22:03.166
• [4.075 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 06/17/24 07:22:03.17
  I0617 07:22:03.170430 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:22:03.171
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:03.183
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:03.187
  STEP: creating the pod @ 06/17/24 07:22:03.19
  STEP: submitting the pod to kubernetes @ 06/17/24 07:22:03.19
  STEP: verifying the pod is in kubernetes @ 06/17/24 07:22:05.207
  STEP: updating the pod @ 06/17/24 07:22:05.211
  I0617 07:22:05.726084 19 pod_client.go:141] Successfully updated pod "pod-update-480a25d4-7bcb-4886-bb95-5a34819247d0"
  STEP: verifying the updated pod is in kubernetes @ 06/17/24 07:22:05.729
  I0617 07:22:05.731813 19 pods.go:391] Pod update OK
  I0617 07:22:05.731946 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8243" for this suite. @ 06/17/24 07:22:05.736
• [2.572 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 06/17/24 07:22:05.742
  I0617 07:22:05.742462 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:22:05.743
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:05.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:05.756
  STEP: creating service nodeport-test with type=NodePort in namespace services-9477 @ 06/17/24 07:22:05.76
  STEP: creating replication controller nodeport-test in namespace services-9477 @ 06/17/24 07:22:05.777
  I0617 07:22:05.785724      19 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-9477, replica count: 2
  I0617 07:22:08.837801      19 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:22:08.837884 19 resource.go:361] Creating new exec pod
  I0617 07:22:11.857465 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0617 07:22:12.035855 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0617 07:22:12.035920 19 builder.go:147] stdout: "nodeport-test-8tx78"
  I0617 07:22:12.036034 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.20.102 80'
  I0617 07:22:12.159087 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.20.102 80\nConnection to 10.108.20.102 80 port [tcp/http] succeeded!\n"
  I0617 07:22:12.159155 19 builder.go:147] stdout: ""
  I0617 07:22:13.036865 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.20.102 80'
  I0617 07:22:13.162167 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.20.102 80\nConnection to 10.108.20.102 80 port [tcp/http] succeeded!\n"
  I0617 07:22:13.162272 19 builder.go:147] stdout: ""
  I0617 07:22:14.036208 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.108.20.102 80'
  I0617 07:22:14.156076 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.108.20.102 80\nConnection to 10.108.20.102 80 port [tcp/http] succeeded!\n"
  I0617 07:22:14.156155 19 builder.go:147] stdout: "nodeport-test-nl52p"
  I0617 07:22:14.156328 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.166 31162'
  I0617 07:22:14.295399 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.166 31162\nConnection to 192.168.190.166 31162 port [tcp/*] succeeded!\n"
  I0617 07:22:14.295534 19 builder.go:147] stdout: "nodeport-test-nl52p"
  I0617 07:22:14.295717 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 31162'
  I0617 07:22:14.415458 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 31162\nConnection to 192.168.190.167 31162 port [tcp/*] succeeded!\n"
  I0617 07:22:14.415577 19 builder.go:147] stdout: ""
  I0617 07:22:15.296167 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 31162'
  I0617 07:22:15.443413 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 31162\nConnection to 192.168.190.167 31162 port [tcp/*] succeeded!\n"
  I0617 07:22:15.443500 19 builder.go:147] stdout: ""
  I0617 07:22:16.295922 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 31162'
  I0617 07:22:16.452269 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 31162\nConnection to 192.168.190.167 31162 port [tcp/*] succeeded!\n"
  I0617 07:22:16.452339 19 builder.go:147] stdout: ""
  I0617 07:22:17.296075 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-9477 exec execpod8nbdk -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 31162'
  I0617 07:22:17.443361 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 31162\nConnection to 192.168.190.167 31162 port [tcp/*] succeeded!\n"
  I0617 07:22:17.443453 19 builder.go:147] stdout: "nodeport-test-nl52p"
  I0617 07:22:17.444689 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9477" for this suite. @ 06/17/24 07:22:17.45
• [11.713 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 06/17/24 07:22:17.457
  I0617 07:22:17.457109 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/17/24 07:22:17.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:17.471
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:17.474
  STEP: creating a target pod @ 06/17/24 07:22:17.478
  STEP: adding an ephemeral container @ 06/17/24 07:22:19.498
  STEP: checking pod container endpoints @ 06/17/24 07:22:23.545
  I0617 07:22:23.545458 19 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-4801 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:22:23.545495 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:22:23.546646 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:22:23.546745 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-4801/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0617 07:22:23.589737 19 exec_util.go:106] Exec stderr: ""
  I0617 07:22:23.596077 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-4801" for this suite. @ 06/17/24 07:22:23.601
• [6.150 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 06/17/24 07:22:23.607
  I0617 07:22:23.607781 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename field-validation @ 06/17/24 07:22:23.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:23.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:23.626
  I0617 07:22:23.629745 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  W0617 07:22:26.186124      19 warnings.go:70] unknown field "alpha"
  W0617 07:22:26.186204      19 warnings.go:70] unknown field "beta"
  W0617 07:22:26.186213      19 warnings.go:70] unknown field "delta"
  W0617 07:22:26.186219      19 warnings.go:70] unknown field "epsilon"
  W0617 07:22:26.186226      19 warnings.go:70] unknown field "gamma"
  I0617 07:22:26.729201 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-8180" for this suite. @ 06/17/24 07:22:26.734
• [3.132 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 06/17/24 07:22:26.741
  I0617 07:22:26.741480 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-runtime @ 06/17/24 07:22:26.742
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:26.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:26.759
  STEP: create the container @ 06/17/24 07:22:26.764
  W0617 07:22:26.776043      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/17/24 07:22:26.776
  STEP: get the container status @ 06/17/24 07:22:29.796
  STEP: the container should be terminated @ 06/17/24 07:22:29.799
  STEP: the termination message should be set @ 06/17/24 07:22:29.799
  I0617 07:22:29.799662 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/17/24 07:22:29.799
  I0617 07:22:29.812929 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-836" for this suite. @ 06/17/24 07:22:29.817
• [3.081 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 06/17/24 07:22:29.822
  I0617 07:22:29.822559 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename security-context @ 06/17/24 07:22:29.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:29.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:29.839
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 06/17/24 07:22:29.842
  STEP: Saw pod success @ 06/17/24 07:22:31.855
  I0617 07:22:31.858283 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod security-context-9bcd8a42-8e79-4c7f-bb18-6939a0438f47 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:22:31.867
  I0617 07:22:31.881446 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-9995" for this suite. @ 06/17/24 07:22:31.886
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 06/17/24 07:22:31.892
  I0617 07:22:31.892775 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 07:22:31.894
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:31.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:31.911
  STEP: Creating secret with name secret-test-25470f88-032d-49df-b8d3-e734ae2d4104 @ 06/17/24 07:22:31.931
  STEP: Creating a pod to test consume secrets @ 06/17/24 07:22:31.935
  STEP: Saw pod success @ 06/17/24 07:22:33.949
  I0617 07:22:33.952616 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-8b06e442-a119-4216-a681-acfa99805f29 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 07:22:33.959
  I0617 07:22:33.978013 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5219" for this suite. @ 06/17/24 07:22:33.984
  STEP: Destroying namespace "secret-namespace-8881" for this suite. @ 06/17/24 07:22:33.989
• [2.103 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 06/17/24 07:22:33.996
  I0617 07:22:33.996139 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:22:33.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:34.01
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:34.014
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:22:34.018
  STEP: Saw pod success @ 06/17/24 07:22:36.033
  I0617 07:22:36.036823 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-255c863b-d419-41bb-ad13-1c942070d2ae container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:22:36.042
  I0617 07:22:36.056054 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4384" for this suite. @ 06/17/24 07:22:36.06
• [2.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 06/17/24 07:22:36.079
  I0617 07:22:36.079476 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:22:36.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:36.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:36.095
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-714 @ 06/17/24 07:22:36.098
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/17/24 07:22:36.116
  STEP: creating service externalsvc in namespace services-714 @ 06/17/24 07:22:36.116
  STEP: creating replication controller externalsvc in namespace services-714 @ 06/17/24 07:22:36.13
  I0617 07:22:36.138799      19 runners.go:198] Created replication controller with name: externalsvc, namespace: services-714, replica count: 2
  I0617 07:22:39.190396      19 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 06/17/24 07:22:39.193
  I0617 07:22:39.210427 19 resource.go:361] Creating new exec pod
  I0617 07:22:41.223973 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-714 exec execpodxkhsc -- /bin/sh -x -c nslookup nodeport-service.services-714.svc.cluster.local'
  I0617 07:22:41.416385 19 builder.go:146] stderr: "+ nslookup nodeport-service.services-714.svc.cluster.local\n"
  I0617 07:22:41.416598 19 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nnodeport-service.services-714.svc.cluster.local\tcanonical name = externalsvc.services-714.svc.cluster.local.\nName:\texternalsvc.services-714.svc.cluster.local\nAddress: 10.97.214.201\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-714, will wait for the garbage collector to delete the pods @ 06/17/24 07:22:41.418
  I0617 07:22:41.478856 19 resources.go:139] Deleting ReplicationController externalsvc took: 5.329702ms
  I0617 07:22:41.579583 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.725336ms
  I0617 07:22:45.208554 19 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0617 07:22:45.243039 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-714" for this suite. @ 06/17/24 07:22:45.25
• [9.182 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 06/17/24 07:22:45.262
  I0617 07:22:45.262842 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 07:22:45.264
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:45.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:45.289
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 06/17/24 07:22:45.292
  I0617 07:22:45.298828 19 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-4781  7b0330b1-6eb7-4172-898b-c5ae49ab6b3e 16609 0 2024-06-17 07:22:45 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-06-17 07:22:45 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-m8pc6,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-m8pc6,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  STEP: Verifying customized DNS suffix list is configured on pod... @ 06/17/24 07:22:47.305
  I0617 07:22:47.306068 19 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-4781 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:22:47.306120 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:22:47.307504 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:22:47.307669 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-4781/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 06/17/24 07:22:47.375
  I0617 07:22:47.375524 19 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-4781 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:22:47.375635 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:22:47.376572 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:22:47.376804 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/dns-4781/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0617 07:22:47.442250 19 dns.go:421] Deleting pod test-dns-nameservers...
  I0617 07:22:47.453331 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4781" for this suite. @ 06/17/24 07:22:47.458
• [2.200 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 06/17/24 07:22:47.469
  I0617 07:22:47.469868 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubelet-test @ 06/17/24 07:22:47.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:47.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:47.491
  I0617 07:22:47.514137 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5093" for this suite. @ 06/17/24 07:22:47.519
• [0.055 seconds]
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 06/17/24 07:22:47.525
  I0617 07:22:47.525371 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:22:47.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:47.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:47.546
  STEP: Creating a pod to test downward api env vars @ 06/17/24 07:22:47.55
  STEP: Saw pod success @ 06/17/24 07:22:51.571
  I0617 07:22:51.574375 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downward-api-8f57ae06-d502-4fa7-aaec-ff45f6005ef6 container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 07:22:51.583
  I0617 07:22:51.598643 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2125" for this suite. @ 06/17/24 07:22:51.603
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 06/17/24 07:22:51.608
  I0617 07:22:51.608967 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename discovery @ 06/17/24 07:22:51.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:51.624
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:51.628
  STEP: Setting up server cert @ 06/17/24 07:22:51.634
  I0617 07:22:52.017048 19 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0617 07:22:52.018757 19 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0617 07:22:52.018815 19 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0617 07:22:52.018826 19 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0617 07:22:52.018839 19 discovery.go:139] Checking APIGroup: apps
  I0617 07:22:52.020168 19 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0617 07:22:52.020241 19 discovery.go:148] Versions found [{apps/v1 v1}]
  I0617 07:22:52.020252 19 discovery.go:154] apps/v1 matches apps/v1
  I0617 07:22:52.020262 19 discovery.go:139] Checking APIGroup: events.k8s.io
  I0617 07:22:52.021331 19 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0617 07:22:52.021359 19 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0617 07:22:52.021367 19 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0617 07:22:52.021377 19 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0617 07:22:52.022371 19 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0617 07:22:52.022400 19 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0617 07:22:52.022439 19 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0617 07:22:52.022452 19 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0617 07:22:52.024372 19 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0617 07:22:52.024470 19 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0617 07:22:52.024483 19 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0617 07:22:52.024493 19 discovery.go:139] Checking APIGroup: autoscaling
  I0617 07:22:52.025935 19 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0617 07:22:52.025965 19 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0617 07:22:52.025975 19 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0617 07:22:52.025985 19 discovery.go:139] Checking APIGroup: batch
  I0617 07:22:52.027132 19 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0617 07:22:52.027218 19 discovery.go:148] Versions found [{batch/v1 v1}]
  I0617 07:22:52.027231 19 discovery.go:154] batch/v1 matches batch/v1
  I0617 07:22:52.027347 19 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0617 07:22:52.028583 19 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0617 07:22:52.028666 19 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0617 07:22:52.028685 19 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0617 07:22:52.028702 19 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0617 07:22:52.029723 19 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0617 07:22:52.029755 19 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0617 07:22:52.029764 19 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0617 07:22:52.029773 19 discovery.go:139] Checking APIGroup: policy
  I0617 07:22:52.030932 19 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0617 07:22:52.030963 19 discovery.go:148] Versions found [{policy/v1 v1}]
  I0617 07:22:52.030975 19 discovery.go:154] policy/v1 matches policy/v1
  I0617 07:22:52.031001 19 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0617 07:22:52.032399 19 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0617 07:22:52.032441 19 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0617 07:22:52.032457 19 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0617 07:22:52.032473 19 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0617 07:22:52.033622 19 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0617 07:22:52.033662 19 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0617 07:22:52.033677 19 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0617 07:22:52.033693 19 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0617 07:22:52.034843 19 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0617 07:22:52.034881 19 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0617 07:22:52.034897 19 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0617 07:22:52.034912 19 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0617 07:22:52.036208 19 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0617 07:22:52.036249 19 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0617 07:22:52.036274 19 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0617 07:22:52.036290 19 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0617 07:22:52.037383 19 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0617 07:22:52.037439 19 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0617 07:22:52.037451 19 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0617 07:22:52.037461 19 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0617 07:22:52.038453 19 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0617 07:22:52.038519 19 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0617 07:22:52.038537 19 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0617 07:22:52.038618 19 discovery.go:139] Checking APIGroup: node.k8s.io
  I0617 07:22:52.039713 19 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0617 07:22:52.039743 19 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0617 07:22:52.039753 19 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0617 07:22:52.039763 19 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0617 07:22:52.040815 19 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0617 07:22:52.040845 19 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0617 07:22:52.040856 19 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0617 07:22:52.040866 19 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0617 07:22:52.041988 19 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0617 07:22:52.042034 19 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0617 07:22:52.042051 19 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0617 07:22:52.042068 19 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0617 07:22:52.043377 19 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0617 07:22:52.043417 19 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0617 07:22:52.043432 19 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0617 07:22:52.043852 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-5723" for this suite. @ 06/17/24 07:22:52.048
• [0.444 seconds]
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 06/17/24 07:22:52.053
  I0617 07:22:52.053546 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:22:52.055
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:52.07
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:52.074
  STEP: Creating a ResourceQuota @ 06/17/24 07:22:52.078
  STEP: Getting a ResourceQuota @ 06/17/24 07:22:52.083
  STEP: Listing all ResourceQuotas with LabelSelector @ 06/17/24 07:22:52.087
  STEP: Patching the ResourceQuota @ 06/17/24 07:22:52.09
  STEP: Deleting a Collection of ResourceQuotas @ 06/17/24 07:22:52.096
  STEP: Verifying the deleted ResourceQuota @ 06/17/24 07:22:52.104
  I0617 07:22:52.107838 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3885" for this suite. @ 06/17/24 07:22:52.112
• [0.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 06/17/24 07:22:52.123
  I0617 07:22:52.124517 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 07:22:52.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:52.139
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:52.142
  STEP: creating a ConfigMap @ 06/17/24 07:22:52.146
  STEP: fetching the ConfigMap @ 06/17/24 07:22:52.15
  STEP: patching the ConfigMap @ 06/17/24 07:22:52.153
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 06/17/24 07:22:52.158
  STEP: deleting the ConfigMap by collection with a label selector @ 06/17/24 07:22:52.161
  STEP: listing all ConfigMaps in test namespace @ 06/17/24 07:22:52.169
  I0617 07:22:52.173192 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6094" for this suite. @ 06/17/24 07:22:52.176
• [0.058 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 06/17/24 07:22:52.185
  I0617 07:22:52.185892 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:22:52.187
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:52.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:52.204
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/17/24 07:22:52.207
  STEP: Saw pod success @ 06/17/24 07:22:56.227
  I0617 07:22:56.230504 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-2535b758-2b0b-4b9c-8ac1-7443a3565d97 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:22:56.236
  I0617 07:22:56.248764 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9854" for this suite. @ 06/17/24 07:22:56.254
• [4.075 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 06/17/24 07:22:56.261
  I0617 07:22:56.261210 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename job @ 06/17/24 07:22:56.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:22:56.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:22:56.279
  STEP: Creating a suspended job @ 06/17/24 07:22:56.284
  STEP: Patching the Job @ 06/17/24 07:22:56.289
  STEP: Watching for Job to be patched @ 06/17/24 07:22:56.31
  I0617 07:22:56.316871 19 job.go:1109] Event ADDED observed for Job e2e-h628f in namespace job-160 with labels: map[e2e-job-label:e2e-h628f] and annotations: map[]
  I0617 07:22:56.317473 19 job.go:1109] Event MODIFIED observed for Job e2e-h628f in namespace job-160 with labels: map[e2e-job-label:e2e-h628f] and annotations: map[]
  I0617 07:22:56.317609 19 job.go:1112] Event MODIFIED found for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[]
  STEP: Updating the job @ 06/17/24 07:22:56.317
  STEP: Watching for Job to be updated @ 06/17/24 07:22:56.327
  I0617 07:22:56.330249 19 job.go:1112] Event MODIFIED found for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[updated:true]
  I0617 07:22:56.330540 19 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 06/17/24 07:22:56.33
  I0617 07:22:56.333602 19 job.go:1012] Job: e2e-h628f as labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f]
  STEP: Waiting for job to complete @ 06/17/24 07:22:56.333
  STEP: Delete a job collection with a labelselector @ 06/17/24 07:23:04.338
  STEP: Watching for Job to be deleted @ 06/17/24 07:23:04.344
  I0617 07:23:04.347501 19 job.go:1109] Event MODIFIED observed for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[updated:true]
  I0617 07:23:04.347562 19 job.go:1109] Event MODIFIED observed for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[updated:true]
  I0617 07:23:04.347579 19 job.go:1109] Event MODIFIED observed for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[updated:true]
  I0617 07:23:04.347740 19 job.go:1109] Event MODIFIED observed for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[updated:true]
  I0617 07:23:04.347860 19 job.go:1109] Event MODIFIED observed for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[updated:true]
  I0617 07:23:04.348238 19 job.go:1112] Event DELETED found for Job e2e-h628f in namespace job-160 with labels: map[e2e-h628f:patched e2e-job-label:e2e-h628f] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 06/17/24 07:23:04.348
  I0617 07:23:04.353094 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-160" for this suite. @ 06/17/24 07:23:04.359
• [8.107 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 06/17/24 07:23:04.368
  I0617 07:23:04.368969 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 07:23:04.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:23:04.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:23:04.389
  I0617 07:23:06.405871 19 delete.go:62] Deleting pod "var-expansion-cf05ca3a-286d-494a-b286-f6885c25857e" in namespace "var-expansion-769"
  I0617 07:23:06.413899 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-cf05ca3a-286d-494a-b286-f6885c25857e" to be fully deleted
  I0617 07:23:10.426895 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-769" for this suite. @ 06/17/24 07:23:10.431
• [6.067 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 06/17/24 07:23:10.437
  I0617 07:23:10.437797 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:23:10.44
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:23:10.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:23:10.454
  STEP: Creating configMap with name projected-configmap-test-volume-7ec48e63-cd84-4d78-b056-8835b4ac06b2 @ 06/17/24 07:23:10.457
  STEP: Creating a pod to test consume configMaps @ 06/17/24 07:23:10.46
  STEP: Saw pod success @ 06/17/24 07:23:14.482
  I0617 07:23:14.485663 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-configmaps-3582889d-61a9-4f0a-85df-dbcc842e01f3 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 07:23:14.491
  I0617 07:23:14.503496 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4965" for this suite. @ 06/17/24 07:23:14.508
• [4.075 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 06/17/24 07:23:14.514
  I0617 07:23:14.514398 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename prestop @ 06/17/24 07:23:14.517
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:23:14.531
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:23:14.534
  STEP: Creating server pod server in namespace prestop-1202 @ 06/17/24 07:23:14.536
  STEP: Waiting for pods to come up. @ 06/17/24 07:23:14.546
  STEP: Creating tester pod tester in namespace prestop-1202 @ 06/17/24 07:23:16.558
  STEP: Deleting pre-stop pod @ 06/17/24 07:23:18.577
  I0617 07:23:23.593116 19 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 06/17/24 07:23:23.593
  I0617 07:23:23.607069 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-1202" for this suite. @ 06/17/24 07:23:23.613
• [9.107 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 06/17/24 07:23:23.622
  I0617 07:23:23.622431 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:23:23.623
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:23:23.64
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:23:23.647
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/17/24 07:23:23.652
  STEP: Saw pod success @ 06/17/24 07:23:27.676
  I0617 07:23:27.679965 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-fd4f3869-1788-47f0-8a21-1f51cbfbf4dd container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:23:27.687
  I0617 07:23:27.697676 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5215" for this suite. @ 06/17/24 07:23:27.702
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 06/17/24 07:23:27.708
  I0617 07:23:27.708650 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 07:23:27.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:23:27.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:23:27.724
  STEP: Creating service test in namespace statefulset-917 @ 06/17/24 07:23:27.727
  STEP: Creating a new StatefulSet @ 06/17/24 07:23:27.731
  I0617 07:23:27.743633 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0617 07:23:37.746680 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:23:37.746764 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:23:37.746779 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/17/24 07:23:37.756
  I0617 07:23:37.783823 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 06/17/24 07:23:37.783
  STEP: Not applying an update when the partition is greater than the number of replicas @ 06/17/24 07:23:47.793
  STEP: Performing a canary update @ 06/17/24 07:23:47.793
  I0617 07:23:47.815654 19 statefulset.go:2241] Updating stateful set ss2
  I0617 07:23:47.823452 19 wait.go:74] Waiting for Pod statefulset-917/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  STEP: Restoring Pods to the correct revision when they are deleted @ 06/17/24 07:23:57.826
  I0617 07:23:57.866348 19 wait.go:40] Found 2 stateful pods, waiting for 3
  I0617 07:24:07.865932 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:24:07.866261 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:24:07.866354 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 06/17/24 07:24:07.874
  I0617 07:24:07.898610 19 statefulset.go:2241] Updating stateful set ss2
  I0617 07:24:07.912925 19 wait.go:74] Waiting for Pod statefulset-917/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0617 07:24:17.932660 19 statefulset.go:2241] Updating stateful set ss2
  I0617 07:24:17.942093 19 wait.go:56] Waiting for StatefulSet statefulset-917/ss2 to complete update
  I0617 07:24:17.942218 19 wait.go:63] Waiting for Pod statefulset-917/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0617 07:24:27.941449 19 statefulset.go:135] Deleting all statefulset in ns statefulset-917
  I0617 07:24:27.944312 19 rest.go:150] Scaling statefulset ss2 to 0
  I0617 07:24:37.958286 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 07:24:37.964471 19 rest.go:88] Deleting statefulset ss2
  I0617 07:24:37.975903 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-917" for this suite. @ 06/17/24 07:24:37.982
• [70.281 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 06/17/24 07:24:37.993
  I0617 07:24:37.993103 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pv @ 06/17/24 07:24:37.997
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:24:38.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:24:38.017
  STEP: Creating initial PV and PVC @ 06/17/24 07:24:38.021
  I0617 07:24:38.022098 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-1908" @ 06/17/24 07:24:38.037
  STEP: Listing PVCs in namespace "pv-1908" @ 06/17/24 07:24:38.039
  STEP: Patching the PV "pv-1908-gnw2q" @ 06/17/24 07:24:38.044
  STEP: Patching the PVC "pvc-xpsgh" @ 06/17/24 07:24:38.06
  STEP: Getting PV "pv-1908-gnw2q" @ 06/17/24 07:24:38.073
  STEP: Getting PVC "pvc-xpsgh" @ 06/17/24 07:24:38.08
  STEP: Deleting PVC "pvc-xpsgh" @ 06/17/24 07:24:38.085
  STEP: Confirm deletion of PVC "pvc-xpsgh" @ 06/17/24 07:24:38.094
  STEP: Deleting PV "pv-1908-gnw2q" @ 06/17/24 07:24:40.102
  STEP: Confirm deletion of PV "pv-1908-gnw2q" @ 06/17/24 07:24:40.108
  STEP: Recreating another PV & PVC @ 06/17/24 07:24:42.116
  I0617 07:24:42.116513 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-1908-j5vw7" @ 06/17/24 07:24:42.128
  STEP: Updating the PVC "pvc-wmhpr" @ 06/17/24 07:24:42.137
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-wmhpr=updated" @ 06/17/24 07:24:42.144
  STEP: Deleting PVC "pvc-wmhpr" via DeleteCollection @ 06/17/24 07:24:42.148
  STEP: Confirm deletion of PVC "pvc-wmhpr" @ 06/17/24 07:24:42.153
  STEP: Deleting PV "pv-1908-j5vw7" via DeleteCollection @ 06/17/24 07:24:44.161
  STEP: Confirm deletion of PV "pv-1908-j5vw7" @ 06/17/24 07:24:44.168
  I0617 07:24:46.174927 19 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0617 07:24:46.174972 19 pv.go:201] Deleting PersistentVolumeClaim "pvc-wmhpr"
  I0617 07:24:46.177827 19 pv.go:189] Deleting PersistentVolume "pv-1908-j5vw7"
  I0617 07:24:46.180746 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-1908" for this suite. @ 06/17/24 07:24:46.186
• [8.199 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 06/17/24 07:24:46.191
  I0617 07:24:46.191776 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:24:46.194
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:24:46.208
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:24:46.212
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:24:46.216
  STEP: Saw pod success @ 06/17/24 07:24:50.24
  I0617 07:24:50.243127 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-00821056-8ea4-41b5-9e0e-0192ee0269d7 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:24:50.248
  I0617 07:24:50.262754 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-291" for this suite. @ 06/17/24 07:24:50.267
• [4.081 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 06/17/24 07:24:50.272
  I0617 07:24:50.272813 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:24:50.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:24:50.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:24:50.289
  STEP: Creating configMap with name configmap-projected-all-test-volume-8201beca-b1ee-4550-8e73-675888ed9831 @ 06/17/24 07:24:50.293
  STEP: Creating secret with name secret-projected-all-test-volume-9fbfb9d6-5a53-4c62-919e-baa4031d31fe @ 06/17/24 07:24:50.296
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 06/17/24 07:24:50.299
  STEP: Saw pod success @ 06/17/24 07:24:52.314
  I0617 07:24:52.317107 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod projected-volume-23865288-1034-4481-b097-4f694f92a34a container projected-all-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 07:24:52.321
  I0617 07:24:52.333462 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8858" for this suite. @ 06/17/24 07:24:52.338
• [2.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 06/17/24 07:24:52.346
  I0617 07:24:52.346559 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/17/24 07:24:52.35
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:24:52.361
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:24:52.364
  I0617 07:24:52.368929 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:24:58.589624 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1" for this suite. @ 06/17/24 07:24:58.595
• [6.253 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 06/17/24 07:24:58.601
  I0617 07:24:58.601202 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:24:58.602
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:24:58.616
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:24:58.619
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/17/24 07:24:58.623
  STEP: Saw pod success @ 06/17/24 07:25:02.641
  I0617 07:25:02.645019 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-2f73e366-de86-44b5-a706-a5ecf9703757 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:25:02.65
  I0617 07:25:02.662851 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6879" for this suite. @ 06/17/24 07:25:02.667
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 06/17/24 07:25:02.673
  I0617 07:25:02.673641 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/17/24 07:25:02.675
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:02.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:02.688
  STEP: create the container to handle the HTTPGet hook request. @ 06/17/24 07:25:02.696
  STEP: create the pod with lifecycle hook @ 06/17/24 07:25:04.715
  STEP: check poststart hook @ 06/17/24 07:25:06.732
  STEP: delete the pod with lifecycle hook @ 06/17/24 07:25:06.748
  I0617 07:25:08.762100 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-6171" for this suite. @ 06/17/24 07:25:08.767
• [6.103 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 06/17/24 07:25:08.779
  I0617 07:25:08.779364 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename limitrange @ 06/17/24 07:25:08.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:08.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:08.8
  STEP: Creating a LimitRange @ 06/17/24 07:25:08.804
  STEP: Setting up watch @ 06/17/24 07:25:08.804
  STEP: Submitting a LimitRange @ 06/17/24 07:25:08.907
  STEP: Verifying LimitRange creation was observed @ 06/17/24 07:25:08.915
  STEP: Fetching the LimitRange to ensure it has proper values @ 06/17/24 07:25:08.915
  I0617 07:25:08.918317 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0617 07:25:08.918839 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 06/17/24 07:25:08.919
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 06/17/24 07:25:08.924
  I0617 07:25:08.927360 19 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0617 07:25:08.927768 19 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 06/17/24 07:25:08.928
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 06/17/24 07:25:08.935
  I0617 07:25:08.939470 19 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0617 07:25:08.940045 19 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 06/17/24 07:25:08.94
  STEP: Failing to create a Pod with more than max resources @ 06/17/24 07:25:08.943
  STEP: Updating a LimitRange @ 06/17/24 07:25:08.947
  STEP: Verifying LimitRange updating is effective @ 06/17/24 07:25:08.952
  STEP: Creating a Pod with less than former min resources @ 06/17/24 07:25:10.956
  STEP: Failing to create a Pod with more than max resources @ 06/17/24 07:25:10.961
  STEP: Deleting a LimitRange @ 06/17/24 07:25:10.964
  STEP: Verifying the LimitRange was deleted @ 06/17/24 07:25:10.97
  I0617 07:25:15.978977 19 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 06/17/24 07:25:15.98
  I0617 07:25:15.988458 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-3522" for this suite. @ 06/17/24 07:25:15.993
• [7.221 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 06/17/24 07:25:16
  I0617 07:25:16.000128 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-pred @ 06/17/24 07:25:16.002
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:16.014
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:16.018
  I0617 07:25:16.021458 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0617 07:25:16.029106 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0617 07:25:16.031992 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-1.novalocal before test
  I0617 07:25:16.039302 19 predicates.go:887] calico-node-th4mv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.039346 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:25:16.039359 19 predicates.go:887] kube-proxy-jvqkl from kube-system started at 2024-06-17 06:23:33 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.039369 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:25:16.039380 19 predicates.go:887] pod-partial-resources from limitrange-3522 started at 2024-06-17 07:25:08 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.039389 19 predicates.go:889] 	Container pause ready: true, restart count 0
  I0617 07:25:16.039402 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-gdqsn from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:16.039564 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:16.039578 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 07:25:16.039653 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-2.novalocal before test
  I0617 07:25:16.047261 19 predicates.go:887] calico-kube-controllers-564985c589-zj5q5 from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.047312 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0617 07:25:16.047325 19 predicates.go:887] calico-node-xg2zk from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.047334 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:25:16.047345 19 predicates.go:887] coredns-7db6d8ff4d-24c28 from kube-system started at 2024-06-17 06:52:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.047354 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0617 07:25:16.047365 19 predicates.go:887] kube-proxy-2krmk from kube-system started at 2024-06-17 06:22:45 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.047374 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:25:16.047383 19 predicates.go:887] pfpod from limitrange-3522 started at 2024-06-17 07:25:10 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.047392 19 predicates.go:889] 	Container pause ready: true, restart count 0
  I0617 07:25:16.047408 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-9xmzp from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:16.047422 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:16.047437 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 07:25:16.047455 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-3.novalocal before test
  I0617 07:25:16.055888 19 predicates.go:887] dns-debug from default started at 2024-06-17 06:48:59 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.055970 19 predicates.go:889] 	Container dns-debug ready: true, restart count 0
  I0617 07:25:16.055992 19 predicates.go:887] calico-node-68vkv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.056009 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:25:16.056027 19 predicates.go:887] kube-proxy-pggmm from kube-system started at 2024-06-17 06:23:32 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.056039 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:25:16.056049 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-06-17 06:51:33 +0000 UTC (1 container statuses recorded)
  I0617 07:25:16.056059 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0617 07:25:16.056069 19 predicates.go:887] sonobuoy-e2e-job-f67536e78f3a43e6 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:16.056078 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0617 07:25:16.056087 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:16.056097 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-g5cf4 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:16.056105 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:16.056114 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 06/17/24 07:25:16.056
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17d9b9e417bc5071], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/4 nodes are available: 4 Preemption is not helpful for scheduling.] @ 06/17/24 07:25:22.157
  I0617 07:25:23.125554 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-569" for this suite. @ 06/17/24 07:25:23.129
• [7.136 seconds]
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 06/17/24 07:25:23.135
  I0617 07:25:23.135787 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/17/24 07:25:23.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:23.148
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:23.15
  STEP: Cleaning up the secret @ 06/17/24 07:25:25.175
  STEP: Cleaning up the configmap @ 06/17/24 07:25:25.181
  STEP: Cleaning up the pod @ 06/17/24 07:25:25.187
  I0617 07:25:25.200770 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-8634" for this suite. @ 06/17/24 07:25:25.205
• [2.076 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 06/17/24 07:25:25.214
  I0617 07:25:25.214109 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename job @ 06/17/24 07:25:25.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:25.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:25.233
  STEP: Creating a job @ 06/17/24 07:25:25.237
  STEP: Ensure pods equal to parallelism count is attached to the job @ 06/17/24 07:25:25.244
  STEP: patching /status @ 06/17/24 07:25:27.247
  STEP: updating /status @ 06/17/24 07:25:27.259
  STEP: get /status @ 06/17/24 07:25:27.268
  I0617 07:25:27.272205 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3625" for this suite. @ 06/17/24 07:25:27.276
• [2.070 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 06/17/24 07:25:27.283
  I0617 07:25:27.283111 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-pred @ 06/17/24 07:25:27.284
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:27.3
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:27.303
  I0617 07:25:27.306736 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0617 07:25:27.315698 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0617 07:25:27.319144 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-1.novalocal before test
  I0617 07:25:27.326410 19 predicates.go:887] suspend-false-to-true-jpvk9 from job-3625 started at 2024-06-17 07:25:25 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.326459 19 predicates.go:889] 	Container c ready: true, restart count 0
  I0617 07:25:27.326478 19 predicates.go:887] suspend-false-to-true-wz6dn from job-3625 started at 2024-06-17 07:25:25 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.326490 19 predicates.go:889] 	Container c ready: true, restart count 0
  I0617 07:25:27.326504 19 predicates.go:887] calico-node-th4mv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.326516 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:25:27.326531 19 predicates.go:887] kube-proxy-jvqkl from kube-system started at 2024-06-17 06:23:33 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.326542 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:25:27.326556 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-gdqsn from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:27.326567 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:27.326578 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 07:25:27.326591 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-2.novalocal before test
  I0617 07:25:27.333393 19 predicates.go:887] calico-kube-controllers-564985c589-zj5q5 from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.333855 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0617 07:25:27.334129 19 predicates.go:887] calico-node-xg2zk from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.334425 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:25:27.334733 19 predicates.go:887] coredns-7db6d8ff4d-24c28 from kube-system started at 2024-06-17 06:52:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.334978 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0617 07:25:27.335687 19 predicates.go:887] kube-proxy-2krmk from kube-system started at 2024-06-17 06:22:45 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.335932 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:25:27.336294 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-9xmzp from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:27.336591 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:27.337230 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 07:25:27.337615 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-3.novalocal before test
  I0617 07:25:27.347467 19 predicates.go:887] dns-debug from default started at 2024-06-17 06:48:59 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.347524 19 predicates.go:889] 	Container dns-debug ready: true, restart count 0
  I0617 07:25:27.347538 19 predicates.go:887] calico-node-68vkv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.347549 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:25:27.347557 19 predicates.go:887] kube-proxy-pggmm from kube-system started at 2024-06-17 06:23:32 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.347564 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:25:27.347572 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-06-17 06:51:33 +0000 UTC (1 container statuses recorded)
  I0617 07:25:27.347579 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0617 07:25:27.347604 19 predicates.go:887] sonobuoy-e2e-job-f67536e78f3a43e6 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:27.347617 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0617 07:25:27.347628 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:27.347640 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-g5cf4 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:25:27.347647 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:25:27.347654 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/17/24 07:25:27.347
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/17/24 07:25:29.366
  STEP: Trying to apply a random label on the found node. @ 06/17/24 07:25:29.379
  STEP: verifying the node has the label kubernetes.io/e2e-2e9a381b-ab44-442f-ad88-0a08a68210fc 42 @ 06/17/24 07:25:29.39
  STEP: Trying to relaunch the pod, now with labels. @ 06/17/24 07:25:29.395
  STEP: removing the label kubernetes.io/e2e-2e9a381b-ab44-442f-ad88-0a08a68210fc off the node ck-130-worker-2.novalocal @ 06/17/24 07:25:31.413
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-2e9a381b-ab44-442f-ad88-0a08a68210fc @ 06/17/24 07:25:31.43
  I0617 07:25:31.435760 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7096" for this suite. @ 06/17/24 07:25:31.44
• [4.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 06/17/24 07:25:31.449
  I0617 07:25:31.449481 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:25:31.451
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:31.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:31.471
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:25:31.474
  STEP: Saw pod success @ 06/17/24 07:25:33.491
  I0617 07:25:33.494475 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-66f1d681-7a28-4d5e-87c4-a0ece803f84c container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:25:33.499
  I0617 07:25:33.513836 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-538" for this suite. @ 06/17/24 07:25:33.518
• [2.075 seconds]
------------------------------
S
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 06/17/24 07:25:33.526
  I0617 07:25:33.526366 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 07:25:33.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:25:33.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:25:33.546
  STEP: Creating a test headless service @ 06/17/24 07:25:33.55
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local;sleep 1; done
   @ 06/17/24 07:25:33.554
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-5079.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local;sleep 1; done
   @ 06/17/24 07:25:33.554
  STEP: creating a pod to probe DNS @ 06/17/24 07:25:33.554
  STEP: submitting the pod to kubernetes @ 06/17/24 07:25:33.554
  STEP: retrieving the pod @ 06/17/24 07:25:35.575
  STEP: looking for the results for each expected name from probers @ 06/17/24 07:25:35.577
  I0617 07:25:35.582768 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.585492 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.588008 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.590691 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.593597 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.596127 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.598783 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.601684 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:35.601749 19 dns_common.go:489] Lookups using dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local]

  I0617 07:25:35.607339 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:25:35.612881 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:25:35.618958 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:25:40.587054 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.592368 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.596956 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.602666 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.607808 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.613896 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.618121 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.622882 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:40.622975 19 dns_common.go:489] Lookups using dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local]

  I0617 07:25:40.630602 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:25:40.636563 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:25:40.643262 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:25:45.584089 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.588483 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.592661 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.596675 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.601242 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.605747 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.609727 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.614107 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:45.614206 19 dns_common.go:489] Lookups using dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local]

  I0617 07:25:45.621903 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:25:45.629001 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:25:45.634614 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:25:50.584336 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.587552 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.591585 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.596253 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.600897 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.608104 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.612507 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.617931 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:50.618014 19 dns_common.go:489] Lookups using dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local]

  I0617 07:25:50.627215 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:25:50.634887 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:25:50.640536 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:25:55.588902 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.593339 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.596660 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.600244 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.604537 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.607929 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.611360 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.614801 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:25:55.614935 19 dns_common.go:489] Lookups using dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local]

  I0617 07:25:55.621499 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:25:55.632971 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:25:55.640312 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:26:00.585461 19 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.588608 19 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.607377 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.612160 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.615724 19 dns_common.go:478] Unable to read jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.619090 19 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.622140 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.625582 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local from pod dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55: the server could not find the requested resource (get pods dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55)
  I0617 07:26:00.625627 19 dns_common.go:489] Lookups using dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local wheezy_udp@dns-test-service-2.dns-5079.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-5079.svc.cluster.local jessie_udp@dns-test-service-2.dns-5079.svc.cluster.local jessie_tcp@dns-test-service-2.dns-5079.svc.cluster.local]

  I0617 07:26:00.630826 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:26:00.635715 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:26:00.640323 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:26:05.607894 19 dns_common.go:527] DNS probes using dns-5079/dns-test-ad9ae3b6-d43f-48e8-9b2d-d9eabec7fa55 succeeded

  STEP: deleting the pod @ 06/17/24 07:26:05.608
  STEP: deleting the test headless service @ 06/17/24 07:26:05.624
  I0617 07:26:05.642704 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5079" for this suite. @ 06/17/24 07:26:05.65
• [32.131 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 06/17/24 07:26:05.66
  I0617 07:26:05.660654 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename daemonsets @ 06/17/24 07:26:05.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:26:05.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:26:05.683
  STEP: Creating simple DaemonSet "daemon-set" @ 06/17/24 07:26:05.71
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/17/24 07:26:05.717
  I0617 07:26:05.724563 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:26:05.727773 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:26:05.727865 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:26:06.724693 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:26:06.728760 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0617 07:26:06.728800 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:26:07.724984 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:26:07.729365 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 07:26:07.729408 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 06/17/24 07:26:07.732
  STEP: DeleteCollection of the DaemonSets @ 06/17/24 07:26:07.736
  STEP: Verify that ReplicaSets have been deleted @ 06/17/24 07:26:07.742
  I0617 07:26:07.758446 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"18361"},"items":null}

  I0617 07:26:07.765011 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"18361"},"items":[{"metadata":{"name":"daemon-set-6x48b","generateName":"daemon-set-","namespace":"daemonsets-7954","uid":"71c75791-9fde-431d-8204-424ae11919a8","resourceVersion":"18360","creationTimestamp":"2024-06-17T07:26:05Z","deletionTimestamp":"2024-06-17T07:26:37Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"ed8a425c37c442c92db7b3ebc5d0d057c5fd59537428ca706f960c0ce7274aaf","cni.projectcalico.org/podIP":"172.16.106.113/32","cni.projectcalico.org/podIPs":"172.16.106.113/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a5887a1f-7467-4793-863f-a0c744f062eb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a5887a1f-7467-4793-863f-a0c744f062eb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.106.113\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-qb9c8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-qb9c8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-130-worker-3.novalocal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-130-worker-3.novalocal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:06Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:06Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:06Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:05Z"}],"hostIP":"192.168.190.167","hostIPs":[{"ip":"192.168.190.167"}],"podIP":"172.16.106.113","podIPs":[{"ip":"172.16.106.113"}],"startTime":"2024-06-17T07:26:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-17T07:26:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://b9917c8c80029477faf6e6685091b2d02a4ba823084e89fde65fc7da30f8f581","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-bqxh8","generateName":"daemon-set-","namespace":"daemonsets-7954","uid":"ed38dad4-0acb-4d1a-b58b-13d94c2f3159","resourceVersion":"18359","creationTimestamp":"2024-06-17T07:26:05Z","deletionTimestamp":"2024-06-17T07:26:37Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"b7236095f255d1098391b12c580399ac8001de368d37d1144c54d093bd9527ff","cni.projectcalico.org/podIP":"172.16.228.129/32","cni.projectcalico.org/podIPs":"172.16.228.129/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a5887a1f-7467-4793-863f-a0c744f062eb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a5887a1f-7467-4793-863f-a0c744f062eb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:07Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.228.129\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-p75mm","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-p75mm","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-130-worker-1.novalocal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-130-worker-1.novalocal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:07Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:07Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:07Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:05Z"}],"hostIP":"192.168.190.169","hostIPs":[{"ip":"192.168.190.169"}],"podIP":"172.16.228.129","podIPs":[{"ip":"172.16.228.129"}],"startTime":"2024-06-17T07:26:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-17T07:26:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://c50f56f98a6bee242762720269f7085416bf032b3bd82351af0f6fe8a783a770","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-vt5dq","generateName":"daemon-set-","namespace":"daemonsets-7954","uid":"b26cd81d-7126-4441-91b7-13aa7b0e9a4d","resourceVersion":"18361","creationTimestamp":"2024-06-17T07:26:05Z","deletionTimestamp":"2024-06-17T07:26:37Z","deletionGracePeriodSeconds":30,"labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"89455820c5e639970e858cd4eb228d67017ff17d96d05717b69655ada524332b","cni.projectcalico.org/podIP":"172.16.210.6/32","cni.projectcalico.org/podIPs":"172.16.210.6/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"a5887a1f-7467-4793-863f-a0c744f062eb","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:05Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"a5887a1f-7467-4793-863f-a0c744f062eb\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-06-17T07:26:06Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"172.16.210.6\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-bchg8","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-bchg8","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ck-130-worker-2.novalocal","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ck-130-worker-2.novalocal"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:06Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:05Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:06Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:06Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-06-17T07:26:05Z"}],"hostIP":"192.168.190.166","hostIPs":[{"ip":"192.168.190.166"}],"podIP":"172.16.210.6","podIPs":[{"ip":"172.16.210.6"}],"startTime":"2024-06-17T07:26:05Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-06-17T07:26:06Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"cri-o://b2a85c9555518276ab5a2e8fec05b750e4f1b6c319c51ad7c0e797bd864ee983","started":true}],"qosClass":"BestEffort"}}]}

  I0617 07:26:07.780412 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7954" for this suite. @ 06/17/24 07:26:07.786
• [2.130 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 06/17/24 07:26:07.793
  I0617 07:26:07.793330 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pv @ 06/17/24 07:26:07.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:26:07.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:26:07.809
  STEP: Creating initial PV and PVC @ 06/17/24 07:26:07.817
  I0617 07:26:07.817801 19 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-4582" @ 06/17/24 07:26:07.831
  STEP: Listing PVCs in namespace "pv-4582" @ 06/17/24 07:26:07.835
  STEP: Reading "pvc-zxfsk" Status @ 06/17/24 07:26:07.838
  STEP: Reading "pv-4582-v9mfg" Status @ 06/17/24 07:26:07.841
  STEP: Patching "pvc-zxfsk" Status @ 06/17/24 07:26:07.848
  STEP: Patching "pv-4582-v9mfg" Status @ 06/17/24 07:26:07.856
  STEP: Updating "pvc-zxfsk" Status @ 06/17/24 07:26:07.865
  STEP: Updating "pv-4582-v9mfg" Status @ 06/17/24 07:26:07.872
  I0617 07:26:07.879517 19 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0617 07:26:07.879592 19 pv.go:201] Deleting PersistentVolumeClaim "pvc-zxfsk"
  I0617 07:26:07.884206 19 pv.go:189] Deleting PersistentVolume "pv-4582-v9mfg"
  I0617 07:26:07.891386 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-4582" for this suite. @ 06/17/24 07:26:07.897
• [0.110 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 06/17/24 07:26:07.902
  I0617 07:26:07.902987 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pod-network-test @ 06/17/24 07:26:07.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:26:07.92
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:26:07.923
  STEP: Performing setup for networking test in namespace pod-network-test-1928 @ 06/17/24 07:26:07.926
  STEP: creating a selector @ 06/17/24 07:26:07.926
  STEP: Creating the service pods in kubernetes @ 06/17/24 07:26:07.926
  I0617 07:26:07.926603 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/17/24 07:26:20
  I0617 07:26:22.028520 19 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0617 07:26:22.028840 19 utils.go:472] Going to poll 172.16.228.148 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0617 07:26:22.031751 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.228.148 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1928 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:26:22.031974 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:26:22.032976 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:26:22.033268 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1928/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.228.148+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0617 07:26:23.079349 19 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0617 07:26:23.079486 19 utils.go:472] Going to poll 172.16.210.7 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0617 07:26:23.083977 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.210.7 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1928 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:26:23.084018 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:26:23.084827 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:26:23.084913 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1928/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.210.7+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0617 07:26:24.131796 19 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0617 07:26:24.131845 19 utils.go:472] Going to poll 172.16.106.114 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0617 07:26:24.135412 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 172.16.106.114 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1928 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:26:24.135443 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:26:24.136633 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:26:24.136797 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-1928/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+172.16.106.114+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0617 07:26:25.174210 19 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0617 07:26:25.174372 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1928" for this suite. @ 06/17/24 07:26:25.181
• [17.284 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 06/17/24 07:26:25.187
  I0617 07:26:25.187325 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename disruption @ 06/17/24 07:26:25.189
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:26:25.209
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:26:25.213
  STEP: creating the pdb @ 06/17/24 07:26:25.217
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:26:25.221
  STEP: updating the pdb @ 06/17/24 07:26:27.226
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:26:27.235
  STEP: patching the pdb @ 06/17/24 07:26:29.241
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:26:29.249
  STEP: Waiting for the pdb to be deleted @ 06/17/24 07:26:31.259
  I0617 07:26:31.261872 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9370" for this suite. @ 06/17/24 07:26:31.266
• [6.086 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 06/17/24 07:26:31.273
  I0617 07:26:31.273880 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 07:26:31.274
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:26:31.286
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:26:31.289
  STEP: Creating pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111 @ 06/17/24 07:26:31.292
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 07:26:33.306
  I0617 07:26:33.309673 19 container_probe.go:1749] Initial restart count of pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b is 0
  I0617 07:26:33.312652 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:35.317925 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:37.323362 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:39.328659 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:41.332698 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:43.337596 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:45.343330 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:47.348781 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:49.354702 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:51.360168 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:53.365060 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:55.370480 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:57.375726 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:26:59.381618 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:01.387467 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:03.393907 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:05.399727 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:07.405474 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:09.411134 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:11.415130 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:13.419627 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:15.424515 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:17.433029 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:19.439698 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:21.445800 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:23.451229 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:25.458538 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:27.464038 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:29.471157 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:31.475882 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:33.480044 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:35.485647 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:37.491820 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:39.496674 19 container_probe.go:1759] Get pod test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b in namespace container-probe-9111
  I0617 07:27:39.496730 19 container_probe.go:1763] Restart count of pod container-probe-9111/test-grpc-e3c41818-cffc-4e9a-ba1d-efedb42d9c7b is now 1 (1m6.18701062s elapsed)
  STEP: deleting the pod @ 06/17/24 07:27:39.496
  I0617 07:27:39.509504 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9111" for this suite. @ 06/17/24 07:27:39.515
• [68.248 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 06/17/24 07:27:39.522
  I0617 07:27:39.522616 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:27:39.525
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:27:39.545
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:27:39.549
  I0617 07:27:39.553815 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: creating the pod @ 06/17/24 07:27:39.555
  STEP: submitting the pod to kubernetes @ 06/17/24 07:27:39.556
  I0617 07:27:41.608379 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1848" for this suite. @ 06/17/24 07:27:41.616
• [2.104 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 06/17/24 07:27:41.627
  I0617 07:27:41.627852 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:27:41.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:27:41.645
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:27:41.648
  STEP: Creating secret with name s-test-opt-del-3997cbc8-d2a1-487a-a7c2-3ea27def60fc @ 06/17/24 07:27:41.658
  STEP: Creating secret with name s-test-opt-upd-0343382d-0a8c-4218-8dd5-47abb76550ae @ 06/17/24 07:27:41.663
  STEP: Creating the pod @ 06/17/24 07:27:41.668
  STEP: Deleting secret s-test-opt-del-3997cbc8-d2a1-487a-a7c2-3ea27def60fc @ 06/17/24 07:27:43.706
  STEP: Updating secret s-test-opt-upd-0343382d-0a8c-4218-8dd5-47abb76550ae @ 06/17/24 07:27:43.711
  STEP: Creating secret with name s-test-opt-create-d631f66b-72a8-47fa-b7f1-d693b4fa7286 @ 06/17/24 07:27:43.715
  STEP: waiting to observe update in volume @ 06/17/24 07:27:43.719
  I0617 07:27:45.746719 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8106" for this suite. @ 06/17/24 07:27:45.753
• [4.133 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 06/17/24 07:27:45.761
  I0617 07:27:45.762062 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:27:45.763
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:27:45.781
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:27:45.785
  STEP: Setting up server cert @ 06/17/24 07:27:45.807
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:27:46.032
  STEP: Deploying the webhook pod @ 06/17/24 07:27:46.04
  STEP: Wait for the deployment to be ready @ 06/17/24 07:27:46.05
  I0617 07:27:46.058890 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:27:48.073
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:27:48.093
  I0617 07:27:49.093836 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 06/17/24 07:27:49.103
  STEP: create a configmap that should be updated by the webhook @ 06/17/24 07:27:49.125
  I0617 07:27:49.181703 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1820" for this suite. @ 06/17/24 07:27:49.192
  STEP: Destroying namespace "webhook-markers-6585" for this suite. @ 06/17/24 07:27:49.197
• [3.442 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 06/17/24 07:27:49.204
  I0617 07:27:49.204940 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-preemption @ 06/17/24 07:27:49.206
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:27:49.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:27:49.226
  I0617 07:27:49.239707 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0617 07:28:49.247826 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/17/24 07:28:49.25
  I0617 07:28:49.273737 19 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0617 07:28:49.279547 19 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0617 07:28:49.306814 19 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0617 07:28:49.315549 19 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I0617 07:28:49.351673 19 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I0617 07:28:49.361751 19 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/17/24 07:28:49.361
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 06/17/24 07:28:51.384
  I0617 07:28:55.471685 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-1185" for this suite. @ 06/17/24 07:28:55.475
• [66.278 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 06/17/24 07:28:55.483
  I0617 07:28:55.483749 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:28:55.486
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:28:55.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:28:55.501
  STEP: creating an Endpoint @ 06/17/24 07:28:55.51
  STEP: waiting for available Endpoint @ 06/17/24 07:28:55.515
  STEP: listing all Endpoints @ 06/17/24 07:28:55.518
  STEP: updating the Endpoint @ 06/17/24 07:28:55.521
  STEP: fetching the Endpoint @ 06/17/24 07:28:55.526
  STEP: patching the Endpoint @ 06/17/24 07:28:55.529
  STEP: fetching the Endpoint @ 06/17/24 07:28:55.541
  STEP: deleting the Endpoint by Collection @ 06/17/24 07:28:55.543
  STEP: waiting for Endpoint deletion @ 06/17/24 07:28:55.549
  STEP: fetching the Endpoint @ 06/17/24 07:28:55.551
  I0617 07:28:55.554803 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3236" for this suite. @ 06/17/24 07:28:55.559
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 06/17/24 07:28:55.571
  I0617 07:28:55.571702 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename namespaces @ 06/17/24 07:28:55.573
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:28:55.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:28:55.589
  STEP: creating a Namespace @ 06/17/24 07:28:55.591
  STEP: patching the Namespace @ 06/17/24 07:28:55.602
  STEP: get the Namespace and ensuring it has the label @ 06/17/24 07:28:55.606
  I0617 07:28:55.609866 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5067" for this suite. @ 06/17/24 07:28:55.613
  STEP: Destroying namespace "nspatchtest-b7a20e76-0f05-42af-8d89-8db3624afa8b-844" for this suite. @ 06/17/24 07:28:55.618
• [0.052 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 06/17/24 07:28:55.623
  I0617 07:28:55.623808 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:28:55.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:28:55.634
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:28:55.637
  STEP: fetching services @ 06/17/24 07:28:55.685
  I0617 07:28:55.692464 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7491" for this suite. @ 06/17/24 07:28:55.697
• [0.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 06/17/24 07:28:55.703
  I0617 07:28:55.703743 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:28:55.705
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:28:55.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:28:55.717
  I0617 07:28:55.721457 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/17/24 07:28:57.209
  I0617 07:28:57.209595 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-2846 --namespace=crd-publish-openapi-2846 create -f -'
  I0617 07:28:57.348355 19 builder.go:146] stderr: ""
  I0617 07:28:57.348411 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-522-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0617 07:28:57.348472 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-2846 --namespace=crd-publish-openapi-2846 delete e2e-test-crd-publish-openapi-522-crds test-cr'
  I0617 07:28:57.422913 19 builder.go:146] stderr: ""
  I0617 07:28:57.422968 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-522-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0617 07:28:57.423022 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-2846 --namespace=crd-publish-openapi-2846 apply -f -'
  I0617 07:28:57.500946 19 builder.go:146] stderr: ""
  I0617 07:28:57.500998 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-522-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0617 07:28:57.501060 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-2846 --namespace=crd-publish-openapi-2846 delete e2e-test-crd-publish-openapi-522-crds test-cr'
  I0617 07:28:57.589149 19 builder.go:146] stderr: ""
  I0617 07:28:57.589243 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-522-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/17/24 07:28:57.589
  I0617 07:28:57.589328 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-2846 explain e2e-test-crd-publish-openapi-522-crds'
  I0617 07:28:57.656312 19 builder.go:146] stderr: ""
  I0617 07:28:57.656403 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-522-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0617 07:28:59.026451 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-2846" for this suite. @ 06/17/24 07:28:59.034
• [3.335 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 06/17/24 07:28:59.039
  I0617 07:28:59.039237 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:28:59.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:28:59.05
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:28:59.053
  STEP: creating pod @ 06/17/24 07:28:59.056
  I0617 07:29:01.072430 19 pods.go:83] Pod pod-hostip-03c2823d-7bdf-42ad-bc9a-b892682a17d7 has hostIP: 192.168.190.169
  I0617 07:29:01.072835 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-230" for this suite. @ 06/17/24 07:29:01.076
• [2.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 06/17/24 07:29:01.081
  I0617 07:29:01.081605 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename proxy @ 06/17/24 07:29:01.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:29:01.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:29:01.097
  STEP: starting an echo server on multiple ports @ 06/17/24 07:29:01.119
  STEP: creating replication controller proxy-service-g7t7m in namespace proxy-3040 @ 06/17/24 07:29:01.119
  I0617 07:29:01.130535      19 runners.go:198] Created replication controller with name: proxy-service-g7t7m, namespace: proxy-3040, replica count: 1
  I0617 07:29:02.181508      19 runners.go:198] proxy-service-g7t7m Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0617 07:29:03.182362      19 runners.go:198] proxy-service-g7t7m Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:29:03.185980 19 proxy.go:230] setup took 2.084907765s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 06/17/24 07:29:03.186
  I0617 07:29:03.195608 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 9.260938ms)
  I0617 07:29:03.197726 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 11.510643ms)
  I0617 07:29:03.197905 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 11.735578ms)
  I0617 07:29:03.198527 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 12.028779ms)
  I0617 07:29:03.198600 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 12.163521ms)
  I0617 07:29:03.198596 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 12.19812ms)
  I0617 07:29:03.198656 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 12.474885ms)
  I0617 07:29:03.198714 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 12.146542ms)
  I0617 07:29:03.198866 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 12.282683ms)
  I0617 07:29:03.198873 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 12.364387ms)
  I0617 07:29:03.203059 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 16.724649ms)
  I0617 07:29:03.206402 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 19.042862ms)
  I0617 07:29:03.206428 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 20.04322ms)
  I0617 07:29:03.206464 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 20.003322ms)
  I0617 07:29:03.209611 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 23.211053ms)
  I0617 07:29:03.209697 19 proxy.go:558] (0) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 23.269591ms)
  I0617 07:29:03.217870 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.557662ms)
  I0617 07:29:03.217882 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 7.955106ms)
  I0617 07:29:03.217909 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 7.763693ms)
  I0617 07:29:03.218260 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 7.855138ms)
  I0617 07:29:03.218342 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 7.709576ms)
  I0617 07:29:03.218607 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.05036ms)
  I0617 07:29:03.218671 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 8.058592ms)
  I0617 07:29:03.218830 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 8.465375ms)
  I0617 07:29:03.218947 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 8.867229ms)
  I0617 07:29:03.219422 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 9.294688ms)
  I0617 07:29:03.219540 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 9.101701ms)
  I0617 07:29:03.219531 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 8.984724ms)
  I0617 07:29:03.219614 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 9.485131ms)
  I0617 07:29:03.219668 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 9.35568ms)
  I0617 07:29:03.221027 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 10.810558ms)
  I0617 07:29:03.221296 19 proxy.go:558] (1) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 10.688356ms)
  I0617 07:29:03.227691 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 5.884019ms)
  I0617 07:29:03.227964 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.350062ms)
  I0617 07:29:03.228465 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 6.415915ms)
  I0617 07:29:03.228763 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.924205ms)
  I0617 07:29:03.229224 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.976765ms)
  I0617 07:29:03.229389 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 7.631366ms)
  I0617 07:29:03.229418 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 7.447156ms)
  I0617 07:29:03.229440 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.916654ms)
  I0617 07:29:03.229398 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 7.868673ms)
  I0617 07:29:03.229751 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 7.728858ms)
  I0617 07:29:03.231694 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 9.487275ms)
  I0617 07:29:03.231730 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 9.641423ms)
  I0617 07:29:03.231845 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 9.712019ms)
  I0617 07:29:03.231895 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 9.924929ms)
  I0617 07:29:03.231896 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 9.679658ms)
  I0617 07:29:03.239015 19 proxy.go:558] (2) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 17.334009ms)
  I0617 07:29:03.254615 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 15.08467ms)
  I0617 07:29:03.254615 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 14.37549ms)
  I0617 07:29:03.254665 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 15.578875ms)
  I0617 07:29:03.254676 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 14.735237ms)
  I0617 07:29:03.254705 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 15.270687ms)
  I0617 07:29:03.254941 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 14.89036ms)
  I0617 07:29:03.255290 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 15.414638ms)
  I0617 07:29:03.255384 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 15.220368ms)
  I0617 07:29:03.255437 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 15.238932ms)
  I0617 07:29:03.255517 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 15.704668ms)
  I0617 07:29:03.255569 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 16.253301ms)
  I0617 07:29:03.255413 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 15.332534ms)
  I0617 07:29:03.255938 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 16.218058ms)
  I0617 07:29:03.255972 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 15.850263ms)
  I0617 07:29:03.256039 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 16.41814ms)
  I0617 07:29:03.255995 19 proxy.go:558] (3) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 16.015254ms)
  I0617 07:29:03.263163 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.417108ms)
  I0617 07:29:03.263854 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 7.075715ms)
  I0617 07:29:03.264762 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.942051ms)
  I0617 07:29:03.265243 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 8.603783ms)
  I0617 07:29:03.265345 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 8.46936ms)
  I0617 07:29:03.265233 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 7.667831ms)
  I0617 07:29:03.265302 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.651669ms)
  I0617 07:29:03.265360 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 8.502266ms)
  I0617 07:29:03.265499 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 8.576829ms)
  I0617 07:29:03.265466 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 8.501297ms)
  I0617 07:29:03.265518 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 8.607024ms)
  I0617 07:29:03.265705 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.983643ms)
  I0617 07:29:03.265737 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 8.894457ms)
  I0617 07:29:03.265932 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 9.180829ms)
  I0617 07:29:03.266420 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 9.543214ms)
  I0617 07:29:03.266890 19 proxy.go:558] (4) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 10.311342ms)
  I0617 07:29:03.270928 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 3.980185ms)
  I0617 07:29:03.274873 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 7.716549ms)
  I0617 07:29:03.274877 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 7.519685ms)
  I0617 07:29:03.274917 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.620431ms)
  I0617 07:29:03.274889 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 7.662823ms)
  I0617 07:29:03.274934 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 7.807834ms)
  I0617 07:29:03.274940 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 7.594856ms)
  I0617 07:29:03.274898 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 7.516653ms)
  I0617 07:29:03.276051 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 8.942817ms)
  I0617 07:29:03.276279 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.970449ms)
  I0617 07:29:03.277485 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 10.382923ms)
  I0617 07:29:03.277493 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 10.123068ms)
  I0617 07:29:03.277535 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 10.317799ms)
  I0617 07:29:03.277542 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 10.226478ms)
  I0617 07:29:03.277558 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 10.313699ms)
  I0617 07:29:03.277635 19 proxy.go:558] (5) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 10.260459ms)
  I0617 07:29:03.282330 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 4.605644ms)
  I0617 07:29:03.283046 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 5.167224ms)
  I0617 07:29:03.283611 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 5.596057ms)
  I0617 07:29:03.284828 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 6.604407ms)
  I0617 07:29:03.284950 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 7.072603ms)
  I0617 07:29:03.286576 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.667247ms)
  I0617 07:29:03.286788 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 9.057735ms)
  I0617 07:29:03.286865 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 8.903224ms)
  I0617 07:29:03.286884 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.675339ms)
  I0617 07:29:03.286912 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 9.112023ms)
  I0617 07:29:03.287021 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 8.888982ms)
  I0617 07:29:03.287036 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 9.202972ms)
  I0617 07:29:03.287072 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.929927ms)
  I0617 07:29:03.289048 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 11.299876ms)
  I0617 07:29:03.289055 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 10.822112ms)
  I0617 07:29:03.289247 19 proxy.go:558] (6) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 11.560868ms)
  I0617 07:29:03.295962 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.068533ms)
  I0617 07:29:03.295980 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.151815ms)
  I0617 07:29:03.296053 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 6.226487ms)
  I0617 07:29:03.296576 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 6.256988ms)
  I0617 07:29:03.296559 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.756643ms)
  I0617 07:29:03.296576 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.341933ms)
  I0617 07:29:03.297082 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.569366ms)
  I0617 07:29:03.297880 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 7.540014ms)
  I0617 07:29:03.298224 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 8.720595ms)
  I0617 07:29:03.298230 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 7.85352ms)
  I0617 07:29:03.298434 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 8.132249ms)
  I0617 07:29:03.298615 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.514816ms)
  I0617 07:29:03.298670 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 8.722729ms)
  I0617 07:29:03.298703 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 8.37932ms)
  I0617 07:29:03.298709 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 9.003376ms)
  I0617 07:29:03.298795 19 proxy.go:558] (7) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 8.872235ms)
  I0617 07:29:03.302952 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 3.98951ms)
  I0617 07:29:03.304702 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 5.540114ms)
  I0617 07:29:03.305147 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 6.12845ms)
  I0617 07:29:03.305634 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 6.633106ms)
  I0617 07:29:03.305651 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 6.525694ms)
  I0617 07:29:03.306093 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 6.961386ms)
  I0617 07:29:03.306258 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 7.191404ms)
  I0617 07:29:03.306272 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 7.289895ms)
  I0617 07:29:03.309526 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 10.287218ms)
  I0617 07:29:03.309538 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 10.312752ms)
  I0617 07:29:03.309758 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 10.675187ms)
  I0617 07:29:03.310279 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 11.196995ms)
  I0617 07:29:03.310683 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 11.584717ms)
  I0617 07:29:03.310728 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 11.517788ms)
  I0617 07:29:03.311327 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 12.173091ms)
  I0617 07:29:03.311805 19 proxy.go:558] (8) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 12.596609ms)
  I0617 07:29:03.318793 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.704647ms)
  I0617 07:29:03.319064 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.888645ms)
  I0617 07:29:03.319160 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 7.135082ms)
  I0617 07:29:03.319301 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 7.057987ms)
  I0617 07:29:03.319329 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.037654ms)
  I0617 07:29:03.319456 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 7.217996ms)
  I0617 07:29:03.319588 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 7.224922ms)
  I0617 07:29:03.319598 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 7.2647ms)
  I0617 07:29:03.319489 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 7.400797ms)
  I0617 07:29:03.320050 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 7.80645ms)
  I0617 07:29:03.321037 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.838468ms)
  I0617 07:29:03.321130 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 8.799531ms)
  I0617 07:29:03.321246 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 9.269807ms)
  I0617 07:29:03.321461 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 9.115297ms)
  I0617 07:29:03.321739 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 9.735589ms)
  I0617 07:29:03.321771 19 proxy.go:558] (9) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 9.706964ms)
  I0617 07:29:03.326102 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 4.166967ms)
  I0617 07:29:03.326950 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 5.001083ms)
  I0617 07:29:03.327301 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 5.456ms)
  I0617 07:29:03.330490 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.373399ms)
  I0617 07:29:03.330527 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.454961ms)
  I0617 07:29:03.330701 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 8.594131ms)
  I0617 07:29:03.330820 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 8.680437ms)
  I0617 07:29:03.331330 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 9.274179ms)
  I0617 07:29:03.332193 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 10.181095ms)
  I0617 07:29:03.332250 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 10.377832ms)
  I0617 07:29:03.332235 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 10.214164ms)
  I0617 07:29:03.333419 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 11.274553ms)
  I0617 07:29:03.333582 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 11.573207ms)
  I0617 07:29:03.333905 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 11.868713ms)
  I0617 07:29:03.334019 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 12.147229ms)
  I0617 07:29:03.334361 19 proxy.go:558] (10) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 12.523013ms)
  I0617 07:29:03.344813 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 10.174751ms)
  I0617 07:29:03.344847 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 10.134595ms)
  I0617 07:29:03.344892 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 10.268406ms)
  I0617 07:29:03.344976 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 10.289346ms)
  I0617 07:29:03.345087 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 10.058525ms)
  I0617 07:29:03.345143 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 10.474054ms)
  I0617 07:29:03.345451 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 10.645962ms)
  I0617 07:29:03.345739 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 11.067941ms)
  I0617 07:29:03.345754 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 11.01805ms)
  I0617 07:29:03.345772 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 11.163747ms)
  I0617 07:29:03.346158 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 11.196874ms)
  I0617 07:29:03.346162 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 11.638246ms)
  I0617 07:29:03.346226 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 11.404613ms)
  I0617 07:29:03.346411 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 11.917354ms)
  I0617 07:29:03.346850 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 12.155142ms)
  I0617 07:29:03.346855 19 proxy.go:558] (11) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 11.992943ms)
  I0617 07:29:03.352239 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 5.226287ms)
  I0617 07:29:03.352274 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 5.278442ms)
  I0617 07:29:03.352230 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 5.240108ms)
  I0617 07:29:03.354508 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 7.264483ms)
  I0617 07:29:03.354759 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 7.466768ms)
  I0617 07:29:03.354794 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 7.627169ms)
  I0617 07:29:03.354772 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.445231ms)
  I0617 07:29:03.354785 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 7.695631ms)
  I0617 07:29:03.354832 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 7.733837ms)
  I0617 07:29:03.354834 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 7.671097ms)
  I0617 07:29:03.356407 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 9.103482ms)
  I0617 07:29:03.357473 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 10.154118ms)
  I0617 07:29:03.357488 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 10.277062ms)
  I0617 07:29:03.357513 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 10.380868ms)
  I0617 07:29:03.357536 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 10.299902ms)
  I0617 07:29:03.357550 19 proxy.go:558] (12) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 10.242097ms)
  I0617 07:29:03.361971 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 4.379058ms)
  I0617 07:29:03.363357 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 5.758742ms)
  I0617 07:29:03.363358 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 5.604139ms)
  I0617 07:29:03.365623 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 7.670544ms)
  I0617 07:29:03.366384 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 8.347862ms)
  I0617 07:29:03.366389 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.516638ms)
  I0617 07:29:03.366431 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 8.462ms)
  I0617 07:29:03.366451 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 8.765829ms)
  I0617 07:29:03.366459 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 8.452647ms)
  I0617 07:29:03.366641 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 8.802671ms)
  I0617 07:29:03.367517 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 9.609481ms)
  I0617 07:29:03.368874 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 10.944375ms)
  I0617 07:29:03.368917 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 10.904068ms)
  I0617 07:29:03.369358 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 11.358809ms)
  I0617 07:29:03.369407 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 11.458313ms)
  I0617 07:29:03.369412 19 proxy.go:558] (13) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 11.612923ms)
  I0617 07:29:03.374642 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 4.878166ms)
  I0617 07:29:03.374827 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 5.16568ms)
  I0617 07:29:03.374835 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 5.018563ms)
  I0617 07:29:03.375356 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 5.866661ms)
  I0617 07:29:03.375379 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 5.681737ms)
  I0617 07:29:03.375398 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 5.488215ms)
  I0617 07:29:03.375409 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 5.555045ms)
  I0617 07:29:03.375420 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 5.930578ms)
  I0617 07:29:03.375543 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 5.73311ms)
  I0617 07:29:03.375582 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 6.04158ms)
  I0617 07:29:03.377897 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 8.193464ms)
  I0617 07:29:03.377979 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 8.194119ms)
  I0617 07:29:03.377968 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 8.374056ms)
  I0617 07:29:03.378020 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 8.396778ms)
  I0617 07:29:03.378094 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.215451ms)
  I0617 07:29:03.378118 19 proxy.go:558] (14) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 8.281039ms)
  I0617 07:29:03.384867 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 6.386807ms)
  I0617 07:29:03.384880 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 6.509356ms)
  I0617 07:29:03.384931 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.53784ms)
  I0617 07:29:03.384922 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.282112ms)
  I0617 07:29:03.385125 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 6.893083ms)
  I0617 07:29:03.385379 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.878647ms)
  I0617 07:29:03.385376 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 6.760478ms)
  I0617 07:29:03.385420 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.75936ms)
  I0617 07:29:03.385434 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 6.643461ms)
  I0617 07:29:03.386356 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 8.019517ms)
  I0617 07:29:03.387365 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 8.777149ms)
  I0617 07:29:03.387417 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 9.215131ms)
  I0617 07:29:03.387450 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 9.004076ms)
  I0617 07:29:03.387462 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 9.205783ms)
  I0617 07:29:03.387488 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.804275ms)
  I0617 07:29:03.387509 19 proxy.go:558] (15) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 8.782861ms)
  I0617 07:29:03.389875 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 2.038248ms)
  I0617 07:29:03.394240 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.322339ms)
  I0617 07:29:03.394250 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.230367ms)
  I0617 07:29:03.394307 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.380345ms)
  I0617 07:29:03.394371 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 6.812492ms)
  I0617 07:29:03.394636 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 6.474421ms)
  I0617 07:29:03.394884 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 6.775775ms)
  I0617 07:29:03.394938 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 7.005003ms)
  I0617 07:29:03.394975 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 6.707069ms)
  I0617 07:29:03.395002 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.789965ms)
  I0617 07:29:03.395085 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 7.003744ms)
  I0617 07:29:03.395952 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 7.821746ms)
  I0617 07:29:03.396626 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 8.906959ms)
  I0617 07:29:03.396695 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 8.642473ms)
  I0617 07:29:03.396705 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.726146ms)
  I0617 07:29:03.396717 19 proxy.go:558] (16) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 8.557385ms)
  I0617 07:29:03.399667 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 2.701402ms)
  I0617 07:29:03.402667 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 5.730808ms)
  I0617 07:29:03.402689 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 5.670614ms)
  I0617 07:29:03.402726 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 5.504084ms)
  I0617 07:29:03.402920 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 5.860917ms)
  I0617 07:29:03.402924 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 5.825371ms)
  I0617 07:29:03.402946 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 5.693641ms)
  I0617 07:29:03.403264 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.126059ms)
  I0617 07:29:03.403292 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 6.154285ms)
  I0617 07:29:03.403326 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 6.116587ms)
  I0617 07:29:03.403340 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.181097ms)
  I0617 07:29:03.405355 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.374659ms)
  I0617 07:29:03.405605 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 8.362732ms)
  I0617 07:29:03.405641 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 8.555684ms)
  I0617 07:29:03.405816 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 8.690216ms)
  I0617 07:29:03.405821 19 proxy.go:558] (17) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 8.591019ms)
  I0617 07:29:03.411714 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 5.578794ms)
  I0617 07:29:03.411848 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 5.542937ms)
  I0617 07:29:03.411998 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 5.62776ms)
  I0617 07:29:03.412024 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 5.885835ms)
  I0617 07:29:03.412042 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 5.905731ms)
  I0617 07:29:03.415108 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 8.897833ms)
  I0617 07:29:03.415128 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 8.797232ms)
  I0617 07:29:03.415155 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 8.854684ms)
  I0617 07:29:03.415168 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 8.931446ms)
  I0617 07:29:03.415189 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 8.881063ms)
  I0617 07:29:03.415206 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 9.035613ms)
  I0617 07:29:03.417225 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 10.885081ms)
  I0617 07:29:03.417751 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 11.500612ms)
  I0617 07:29:03.417794 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 11.519569ms)
  I0617 07:29:03.417825 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 11.552053ms)
  I0617 07:29:03.417849 19 proxy.go:558] (18) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 11.620945ms)
  I0617 07:29:03.423676 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 5.695308ms)
  I0617 07:29:03.423684 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:443/proxy/tlsrewritem... (200; 5.792502ms)
  I0617 07:29:03.424321 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">test<... (200; 6.199459ms)
  I0617 07:29:03.424610 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk/proxy/rewriteme">test</a> (200; 6.354471ms)
  I0617 07:29:03.424623 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.462211ms)
  I0617 07:29:03.424618 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:160/proxy/: foo (200; 6.681153ms)
  I0617 07:29:03.424653 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:162/proxy/: bar (200; 6.562819ms)
  I0617 07:29:03.424920 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:462/proxy/: tls qux (200; 6.929208ms)
  I0617 07:29:03.424949 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/: <a href="/api/v1/namespaces/proxy-3040/pods/http:proxy-service-g7t7m-6lhhk:1080/proxy/rewriteme">... (200; 7.010772ms)
  I0617 07:29:03.425170 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/pods/https:proxy-service-g7t7m-6lhhk:460/proxy/: tls baz (200; 7.117943ms)
  I0617 07:29:03.426777 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname1/proxy/: foo (200; 8.677696ms)
  I0617 07:29:03.426787 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname1/proxy/: tls baz (200; 8.71041ms)
  I0617 07:29:03.426836 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/services/https:proxy-service-g7t7m:tlsportname2/proxy/: tls qux (200; 8.681316ms)
  I0617 07:29:03.426894 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/services/proxy-service-g7t7m:portname2/proxy/: bar (200; 8.739536ms)
  I0617 07:29:03.427015 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname2/proxy/: bar (200; 8.979175ms)
  I0617 07:29:03.427218 19 proxy.go:558] (19) /api/v1/namespaces/proxy-3040/services/http:proxy-service-g7t7m:portname1/proxy/: foo (200; 9.041063ms)
  STEP: deleting ReplicationController proxy-service-g7t7m in namespace proxy-3040, will wait for the garbage collector to delete the pods @ 06/17/24 07:29:03.427
  I0617 07:29:03.486041 19 resources.go:139] Deleting ReplicationController proxy-service-g7t7m took: 5.408215ms
  I0617 07:29:03.586264 19 resources.go:163] Terminating ReplicationController proxy-service-g7t7m pods took: 100.226385ms
  I0617 07:29:05.986846 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3040" for this suite. @ 06/17/24 07:29:05.991
• [4.915 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 06/17/24 07:29:05.998
  I0617 07:29:05.998101 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:29:06
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:29:06.015
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:29:06.019
  STEP: creating Agnhost RC @ 06/17/24 07:29:06.023
  I0617 07:29:06.023778 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-157 create -f -'
  I0617 07:29:06.189991 19 builder.go:146] stderr: ""
  I0617 07:29:06.190039 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/17/24 07:29:06.19
  I0617 07:29:07.195259 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:29:07.195326 19 framework.go:733] Found 1 / 1
  I0617 07:29:07.195386 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 06/17/24 07:29:07.195
  I0617 07:29:07.197895 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:29:07.197952 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0617 07:29:07.198024 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-157 patch pod agnhost-primary-vxh22 -p {"metadata":{"annotations":{"x":"y"}}}'
  I0617 07:29:07.293432 19 builder.go:146] stderr: ""
  I0617 07:29:07.294367 19 builder.go:147] stdout: "pod/agnhost-primary-vxh22 patched\n"
  STEP: checking annotations @ 06/17/24 07:29:07.294
  I0617 07:29:07.297957 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:29:07.298012 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0617 07:29:07.298119 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-157" for this suite. @ 06/17/24 07:29:07.302
• [1.309 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 06/17/24 07:29:07.307
  I0617 07:29:07.307149 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 07:29:07.308
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:29:07.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:29:07.327
  I0617 07:29:07.331017 19 deployment.go:1645] Creating simple deployment test-new-deployment
  I0617 07:29:07.341826 19 deployment.go:222] new replicaset for deployment "test-new-deployment" is yet to be created
  STEP: getting scale subresource @ 06/17/24 07:29:09.357
  STEP: updating a scale subresource @ 06/17/24 07:29:09.36
  STEP: verifying the deployment Spec.Replicas was modified @ 06/17/24 07:29:09.366
  STEP: Patch a scale subresource @ 06/17/24 07:29:09.369
  I0617 07:29:09.393931 19 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6228",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca5db7e8-c039-40ed-9a9b-4a079ad62122",
      ResourceVersion: (string) (len=5) "19448",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0617 07:29:09.405257 19 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6228",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae445b7f-c6ae-4eb6-b56a-c9297c3a7f4b",
      ResourceVersion: (string) (len=5) "19453",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "ca5db7e8-c039-40ed-9a9b-4a079ad62122",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 63 61 35 64 62 37  65 38 2d 63 30 33 39 2d  |\"ca5db7e8-c039-|
              00000120  34 30 65 64 2d 39 61 39  62 2d 34 61 30 37 39 61  |40ed-9a9b-4a079a|
              00000130  64 36 32 31 32 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |d62122\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:29:09.411773 19 deployment.go:67] Pod "test-new-deployment-77db57d8df-cwbs8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-cwbs8",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6228",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1b5d2bab-787b-41ce-9d24-5848765cfcf8",
      ResourceVersion: (string) (len=5) "19442",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "04957ff8ec94ed05b012c4a69f6543c0a60e2f60b2d1c417456dff117754fc7a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.155/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.155/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "ae445b7f-c6ae-4eb6-b56a-c9297c3a7f4b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  34 34 35 62 37 66 2d 63  |d\":\"ae445b7f-c|
              00000090  36 61 65 2d 34 65 62 36  2d 62 35 36 61 2d 63 39  |6ae-4eb6-b56a-c9|
              000000a0  32 39 37 63 33 61 37 66  34 62 5c 22 7d 22 3a 7b  |297c3a7f4b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 35 35 5c 22 7d 22  |2.16.228.155\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-pxh2h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-pxh2h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206148,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206147,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.155",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.155"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206147,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206147,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://9488917f090ae7df920aad48a30dc7e051e4a30b1570686bd75e31fe6a1a2815",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:09.415441 19 deployment.go:67] Pod "test-new-deployment-77db57d8df-rglbb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-rglbb",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-6228",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4af9bc4c-e601-4538-8d63-cf03de6988ae",
      ResourceVersion: (string) (len=5) "19456",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "ae445b7f-c6ae-4eb6-b56a-c9297c3a7f4b",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 65  34 34 35 62 37 66 2d 63  |d\":\"ae445b7f-c|
              00000090  36 61 65 2d 34 65 62 36  2d 62 35 36 61 2d 63 39  |6ae-4eb6-b56a-c9|
              000000a0  32 39 37 63 33 61 37 66  34 62 5c 22 7d 22 3a 7b  |297c3a7f4b\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-h8bwl",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-h8bwl",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:09.418329 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6228" for this suite. @ 06/17/24 07:29:09.426
• [2.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 06/17/24 07:29:09.449
  I0617 07:29:09.449778 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 07:29:09.45
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:29:09.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:29:09.491
  I0617 07:29:09.494780 19 deployment.go:1196] Creating deployment "webserver-deployment"
  I0617 07:29:09.499561 19 deployment.go:1200] Waiting for observed generation 1
  I0617 07:29:11.508852 19 deployment.go:1205] Waiting for all required pods to come up
  I0617 07:29:11.515923 19 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 06/17/24 07:29:11.516
  I0617 07:29:11.516231 19 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0617 07:29:11.523377 19 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0617 07:29:11.535335 19 deployment.go:313] Updating deployment webserver-deployment
  I0617 07:29:11.535435 19 deployment.go:1224] Waiting for observed generation 2
  I0617 07:29:13.555148 19 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0617 07:29:13.559378 19 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0617 07:29:13.561877 19 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0617 07:29:13.568383 19 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0617 07:29:13.568473 19 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0617 07:29:13.570470 19 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0617 07:29:13.574496 19 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0617 07:29:13.574703 19 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0617 07:29:13.582858 19 deployment.go:313] Updating deployment webserver-deployment
  I0617 07:29:13.583265 19 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0617 07:29:13.588512 19 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0617 07:29:13.593223 19 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0617 07:29:13.608478 19 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "108b50e8-c6be-43c2-b2f6-17bf40172174",
      ResourceVersion: (string) (len=5) "19748",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 5,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0617 07:29:13.625041 19 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
      ResourceVersion: (string) (len=5) "19742",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "108b50e8-c6be-43c2-b2f6-17bf40172174",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 38 62 35 30  65 38 2d 63 36 62 65 2d  |\"108b50e8-c6be-|
              00000120  34 33 63 32 2d 62 32 66  36 2d 31 37 62 66 34 30  |43c2-b2f6-17bf40|
              00000130  31 37 32 31 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |172174\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:29:13.626113 19 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0617 07:29:13.626711 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
      ResourceVersion: (string) (len=5) "19740",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "108b50e8-c6be-43c2-b2f6-17bf40172174",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 31 30 38 62 35 30  65 38 2d 63 36 62 65 2d  |\"108b50e8-c6be-|
              00000120  34 33 63 32 2d 62 32 66  36 2d 31 37 62 66 34 30  |43c2-b2f6-17bf40|
              00000130  31 37 32 31 37 34 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |172174\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:29:13.669281 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-5f44d" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-5f44d",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f12e67e9-fb4c-49a2-92c3-ac6ed8d27e5c",
      ResourceVersion: (string) (len=5) "19756",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-2sw2k",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-2sw2k",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.678338 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-62j2c" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-62j2c",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a042cf2b-df1f-489a-8f03-28eda7650a33",
      ResourceVersion: (string) (len=5) "19774",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dkxzs",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dkxzs",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.680329 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-7vtmj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7vtmj",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6a30877b-3cfc-4102-b6ea-df656441bf06",
      ResourceVersion: (string) (len=5) "19696",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.106.120/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4decebf0e95db14d15ca39320b4e2397605f990a87b876b3d199bc2bde75263e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.106.120/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sr4nk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sr4nk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.683626 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-bmgjp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-bmgjp",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ea345d2-060b-4b4d-bbe9-4d9859a94315",
      ResourceVersion: (string) (len=5) "19766",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lm92f",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lm92f",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.685633 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-dhxm4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-dhxm4",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4de20ba4-c530-406b-abc4-0b7d9088b601",
      ResourceVersion: (string) (len=5) "19777",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fsfkk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fsfkk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.688131 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-gp7mv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gp7mv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c46e6583-be39-40ca-bf55-1b2c57d4980f",
      ResourceVersion: (string) (len=5) "19705",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a5e82a19239eaebe0b98caa438184570b9d1ebf2c27cd62e551ff8ec2f2d4f8c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.165/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.165/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7tcsm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7tcsm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.691620 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-nvsqc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-nvsqc",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8c64955b-55a9-4276-a9df-a2f6cbd0a652",
      ResourceVersion: (string) (len=5) "19698",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b1460b13d5a48dfafbc39697eed5e86161a490dc7367c3c21b682f59bb976fd3",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.210.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.210.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kfxgr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kfxgr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.696109 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-p6qsn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-p6qsn",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d868857c-6ddd-417a-8b15-6d91a05441e9",
      ResourceVersion: (string) (len=5) "19769",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-n2x5v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-n2x5v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.698690 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-q267q" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-q267q",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6878208d-fcb8-47fe-8f61-24805e333b0c",
      ResourceVersion: (string) (len=5) "19697",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "66a04d04fc1121646700fd5f766db24919a7d3a27fbf03a391eec5a799f6d5a7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.166/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.166/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cncb2",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cncb2",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.702089 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-vhbhj" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-vhbhj",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "921dfdb0-f4da-439d-a4a2-13cd30d2143f",
      ResourceVersion: (string) (len=5) "19776",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v7k2b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v7k2b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.704623 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-vz5zp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-vz5zp",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "17f50ab2-3e95-49e0-9c56-f15c82b42ab2",
      ResourceVersion: (string) (len=5) "19707",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "c46b1c68641ffb34be5a4ffdf74c1c978c31f46609d87656a1422ce8722500bb",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.210.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.210.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206152,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rbk8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rbk8z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206151,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.707913 19 deployment.go:67] Pod "webserver-deployment-67c89d485c-z246b" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-z246b",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "48a5be22-888b-457f-993e-7a400ce5d6d2",
      ResourceVersion: (string) (len=5) "19762",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "6b8e9014-53c1-448d-834d-005c91962a99",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 36 62  38 65 39 30 31 34 2d 35  |d\":\"6b8e9014-5|
              00000090  33 63 31 2d 34 34 38 64  2d 38 33 34 64 2d 30 30  |3c1-448d-834d-00|
              000000a0  35 63 39 31 39 36 32 61  39 39 5c 22 7d 22 3a 7b  |5c91962a99\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hc7x6",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hc7x6",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.710643 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-2jjzt" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-2jjzt",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86dcaa37-cbf7-48e5-8b35-4ba655f33f95",
      ResourceVersion: (string) (len=5) "19602",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "550fc7530140efd42540e521e277b55e6f421516066637c628d3d7a04aff569d",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.162/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 36 32 5c 22 7d 22  |2.16.228.162\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8m6w7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8m6w7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://ed461644c2fd166c26fa1d35a08a86ce6203ffe42851558e42ad4fd56091ea92",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.713863 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-4j94v" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4j94v",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f64a55d0-37e9-4c46-aba7-d7ebfa87bfd2",
      ResourceVersion: (string) (len=5) "19772",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rpgfg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rpgfg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.715995 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-4vvms" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-4vvms",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "21a5c2ce-8ed5-4dd0-af83-d783dc6a0905",
      ResourceVersion: (string) (len=5) "19752",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vfwbk",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vfwbk",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.718265 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-56f6w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-56f6w",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bad07c92-c8b5-40ff-9af6-ec17163565c3",
      ResourceVersion: (string) (len=5) "19755",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dxhfq",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dxhfq",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.720436 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-b6br5" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-b6br5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "078f37b6-0451-4336-b411-6928aabd6bf7",
      ResourceVersion: (string) (len=5) "19620",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.210.12/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e2dfc5239c80d9bfa00fdd0a29d365b29e834e9d7c9d6414e4e24b78a6a1fe2a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.210.12/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 31 30  2e 31 32 5c 22 7d 22 3a  |2.16.210.12\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-92ktv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-92ktv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) (len=13) "172.16.210.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.210.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2a028b1ff00a5fbf5c4f7c4b1307baf274ccb7bc583f70cfb448787a67a64298",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.723289 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-c7lns" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-c7lns",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d57ebf37-78a9-4dbd-b459-105036d7b7cc",
      ResourceVersion: (string) (len=5) "19633",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "638152cf9d265698a18dbf4397c537892b342d0d35c3c913f7f8f3381d508686",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.106.119/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.106.119/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 31 30 36  2e 31 31 39 5c 22 7d 22  |2.16.106.119\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-7fvkn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-7fvkn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=14) "172.16.106.119",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.106.119"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://046f6d5fb4bcd3b3d2e8798e429f2bdde1968368e097248b6bd638eebddcb5a4",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.726101 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-cnznr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cnznr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2bc812e8-c8e2-4fe4-944a-4e9a00f746cf",
      ResourceVersion: (string) (len=5) "19767",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-xpp96",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-xpp96",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.727691 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-frqgs" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-frqgs",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "28b5926d-7f53-4eb3-a5a8-3409fedf1ecc",
      ResourceVersion: (string) (len=5) "19768",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hj4ld",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hj4ld",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.729248 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-k4pxb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-k4pxb",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1f2b1909-7ec5-40e7-8cb1-90a91a5e44c5",
      ResourceVersion: (string) (len=5) "19773",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vqd8z",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vqd8z",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.730896 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-kxqnm" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-kxqnm",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "1104241f-2fba-446d-abad-6a58e3869254",
      ResourceVersion: (string) (len=5) "19764",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4cr6b",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4cr6b",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.733623 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-lgbrq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-lgbrq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c92bda0b-612a-4eb9-896b-ca769c786bb5",
      ResourceVersion: (string) (len=5) "19631",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "85ec1f227e2f55c0719c070e97d8a4ab66ed35ed4b3a624c21c58c2bdd260e6c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.106.118/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.106.118/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 31 30 36  2e 31 31 38 5c 22 7d 22  |2.16.106.118\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-vjcst",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-vjcst",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=14) "172.16.106.118",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.106.118"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2a288dd6d222d16aad78fc54d871889d9487b01212eba9013e55acc034039d31",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.737351 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-ntg9w" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-ntg9w",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57fdb184-ba61-4ea9-a356-aafad8661187",
      ResourceVersion: (string) (len=5) "19770",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-c5f7m",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-c5f7m",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.738942 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-qgtjn" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-qgtjn",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "37211e64-3951-4ffe-9649-f9a884cc7f1d",
      ResourceVersion: (string) (len=5) "19771",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wpftb",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wpftb",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.740836 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-qhrgr" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-qhrgr",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b9ba52be-975a-49b6-82d3-90b16ed08c6d",
      ResourceVersion: (string) (len=5) "19579",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "900ee1391ff78d1fb7d17d35777cc6f64c81fd8b02febe9e81591dbb014a5778",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.106.117/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.106.117/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 31 30 36  2e 31 31 37 5c 22 7d 22  |2.16.106.117\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jcp8l",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jcp8l",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=14) "172.16.106.117",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.106.117"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0d9897922098ca6a63ecd3d980d27d4b7d4693b5d728d0d450f781fd078fbd63",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.743628 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-rjqjx" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-rjqjx",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "64b8c927-3d37-4d12-b603-31d054314d2a",
      ResourceVersion: (string) (len=5) "19625",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "20fce20199ac87e4418fba6058b44e3f66d41600546f5300ca5134abc4569b98",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.210.13/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.210.13/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 31 30  2e 31 33 5c 22 7d 22 3a  |2.16.210.13\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6gtkg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6gtkg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) (len=13) "172.16.210.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.210.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://b925cb7dce2b1f1f23c2f1ad60d5b0beb4af328efb21bbe68f1604b0ab633c82",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.747051 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-tljwx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tljwx",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "46e5f469-ccef-4c0c-82fe-afe0ba1b4a47",
      ResourceVersion: (string) (len=5) "19775",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206153,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206153,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-fzn8x",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-fzn8x",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.749104 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-v82cs" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-v82cs",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a47047ba-3871-46ea-b2c9-e95f2ebefc2e",
      ResourceVersion: (string) (len=5) "19622",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "4dd32a7f4d7dd3ee426e61dced3beef90d8a7e5fee60ffc566e819ef544a8bef",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.210.11/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.210.11/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 31 30  2e 31 31 5c 22 7d 22 3a  |2.16.210.11\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-lqp5h",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-lqp5h",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206151,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) (len=13) "172.16.210.11",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.210.11"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://8e8debf8f9eb288573c4439464d54d4650f8fdcd404a17a0963f1cb51481c68f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.752501 19 deployment.go:67] Pod "webserver-deployment-77db57d8df-x6mvq" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-x6mvq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-4351",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a49b66b2-2d32-45b5-ad3d-f5effe2db654",
      ResourceVersion: (string) (len=5) "19598",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.161/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.161/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7f61cc34dc47c1d25756415c73ec2270a6cf252b0eb53acb606076800af1e578"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "99f9ee82-5858-4846-af1d-8071fe72fd2f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 39 39  66 39 65 65 38 32 2d 35  |d\":\"99f9ee82-5|
              00000090  38 35 38 2d 34 38 34 36  2d 61 66 31 64 2d 38 30  |858-4846-af1d-80|
              000000a0  37 31 66 65 37 32 66 64  32 66 5c 22 7d 22 3a 7b  |71fe72fd2f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 36 31 5c 22 7d 22  |2.16.228.161\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nvsng",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nvsng",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206150,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206149,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.161",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.161"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206149,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206150,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://e77355c7822e20535a6640de24bc14d862dd3d49c5c364713b6975ee3889a75a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:29:13.754818 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4351" for this suite. @ 06/17/24 07:29:13.771
• [4.347 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 06/17/24 07:29:13.798
  I0617 07:29:13.798384 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename gc @ 06/17/24 07:29:13.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:29:13.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:29:13.858
  STEP: create the rc @ 06/17/24 07:29:13.862
  W0617 07:29:13.872677      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/17/24 07:29:18.884
  STEP: wait for all pods to be garbage collected @ 06/17/24 07:29:18.9
  STEP: Gathering metrics @ 06/17/24 07:29:23.907
  I0617 07:29:24.030661 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0617 07:29:24.030961 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6806" for this suite. @ 06/17/24 07:29:24.035
• [10.242 seconds]
------------------------------
SS
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 06/17/24 07:29:24.04
  I0617 07:29:24.040841 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 07:29:24.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:29:24.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:29:24.057
  I0617 07:30:24.072242 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4973" for this suite. @ 06/17/24 07:30:24.077
• [60.043 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 06/17/24 07:30:24.084
  I0617 07:30:24.084458 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:30:24.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:30:24.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:30:24.106
  STEP: Creating configMap with name projected-configmap-test-volume-map-c45e4707-3db6-4945-9e28-dcac5bbbbbe0 @ 06/17/24 07:30:24.109
  STEP: Creating a pod to test consume configMaps @ 06/17/24 07:30:24.116
  STEP: Saw pod success @ 06/17/24 07:30:28.146
  I0617 07:30:28.150515 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-configmaps-19c3df84-83f4-4822-b15d-1ae626a0e2a2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 07:30:28.171
  I0617 07:30:28.187676 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4228" for this suite. @ 06/17/24 07:30:28.193
• [4.114 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 06/17/24 07:30:28.199
  I0617 07:30:28.199864 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename limitrange @ 06/17/24 07:30:28.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:30:28.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:30:28.224
  STEP: Creating LimitRange "e2e-limitrange-xm96t" in namespace "limitrange-8332" @ 06/17/24 07:30:28.235
  STEP: Creating another limitRange in another namespace @ 06/17/24 07:30:28.246
  I0617 07:30:28.262563 19 limit_range.go:299] Namespace "e2e-limitrange-xm96t-8711" created
  I0617 07:30:28.262714 19 limit_range.go:300] Creating LimitRange "e2e-limitrange-xm96t" in namespace "e2e-limitrange-xm96t-8711"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-xm96t" @ 06/17/24 07:30:28.268
  I0617 07:30:28.272484 19 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-xm96t" in "limitrange-8332" namespace @ 06/17/24 07:30:28.272
  I0617 07:30:28.282337 19 limit_range.go:335] LimitRange "e2e-limitrange-xm96t" has been patched
  STEP: Delete LimitRange "e2e-limitrange-xm96t" by Collection with labelSelector: "e2e-limitrange-xm96t=patched" @ 06/17/24 07:30:28.282
  STEP: Confirm that the limitRange "e2e-limitrange-xm96t" has been deleted @ 06/17/24 07:30:28.288
  I0617 07:30:28.288091 19 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0617 07:30:28.290936 19 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-xm96t=patched"
  I0617 07:30:28.290981 19 limit_range.go:344] LimitRange "e2e-limitrange-xm96t" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-xm96t" @ 06/17/24 07:30:28.291
  I0617 07:30:28.294289 19 limit_range.go:350] Found 1 limitRange
  I0617 07:30:28.294638 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-8332" for this suite. @ 06/17/24 07:30:28.3
  STEP: Destroying namespace "e2e-limitrange-xm96t-8711" for this suite. @ 06/17/24 07:30:28.306
• [0.114 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 06/17/24 07:30:28.315
  I0617 07:30:28.315596 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:30:28.317
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:30:28.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:30:28.335
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 06/17/24 07:30:28.339
  STEP: Saw pod success @ 06/17/24 07:30:32.365
  I0617 07:30:32.368658 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-d1a4dd49-2fd4-40ab-abee-f7785484e21e container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:30:32.376
  I0617 07:30:32.392671 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-3866" for this suite. @ 06/17/24 07:30:32.397
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 06/17/24 07:30:32.404
  I0617 07:30:32.404692 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename events @ 06/17/24 07:30:32.407
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:30:32.423
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:30:32.428
  STEP: creating a test event @ 06/17/24 07:30:32.432
  STEP: listing all events in all namespaces @ 06/17/24 07:30:32.437
  STEP: patching the test event @ 06/17/24 07:30:32.449
  STEP: fetching the test event @ 06/17/24 07:30:32.456
  STEP: updating the test event @ 06/17/24 07:30:32.46
  STEP: getting the test event @ 06/17/24 07:30:32.468
  STEP: deleting the test event @ 06/17/24 07:30:32.471
  STEP: listing all events in all namespaces @ 06/17/24 07:30:32.476
  I0617 07:30:32.481593 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-9551" for this suite. @ 06/17/24 07:30:32.485
• [0.086 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 06/17/24 07:30:32.49
  I0617 07:30:32.490479 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-preemption @ 06/17/24 07:30:32.492
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:30:32.502
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:30:32.506
  I0617 07:30:32.520469 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0617 07:31:32.527655 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/17/24 07:31:32.53
  I0617 07:31:32.530991 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/17/24 07:31:32.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:31:32.543
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:31:32.546
  STEP: Finding an available node @ 06/17/24 07:31:32.549
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/17/24 07:31:32.55
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/17/24 07:31:34.572
  I0617 07:31:34.588723 19 preemption.go:583] found a healthy node: ck-130-worker-1.novalocal
  I0617 07:31:40.653784 19 preemption.go:706] pods created so far: [1 1 1]
  I0617 07:31:40.654043 19 preemption.go:707] length of pods created so far: 3
  I0617 07:31:42.667380 19 preemption.go:724] pods created so far: [2 2 1]
  I0617 07:31:49.753870 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-1155" for this suite. @ 06/17/24 07:31:49.759
  I0617 07:31:49.765346 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5537" for this suite. @ 06/17/24 07:31:49.772
• [77.287 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 06/17/24 07:31:49.778
  I0617 07:31:49.778137 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/17/24 07:31:49.781
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:31:49.794
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:31:49.8
  I0617 07:31:49.809467 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3553" for this suite. @ 06/17/24 07:31:49.813
• [0.040 seconds]
------------------------------
SS
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 06/17/24 07:31:49.819
  I0617 07:31:49.819229 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename ingress @ 06/17/24 07:31:49.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:31:49.835
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:31:49.839
  STEP: getting /apis @ 06/17/24 07:31:49.844
  STEP: getting /apis/networking.k8s.io @ 06/17/24 07:31:49.849
  STEP: getting /apis/networking.k8s.iov1 @ 06/17/24 07:31:49.85
  STEP: creating @ 06/17/24 07:31:49.851
  STEP: getting @ 06/17/24 07:31:49.866
  STEP: listing @ 06/17/24 07:31:49.869
  STEP: watching @ 06/17/24 07:31:49.871
  I0617 07:31:49.871811 19 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 06/17/24 07:31:49.873
  STEP: cluster-wide watching @ 06/17/24 07:31:49.876
  I0617 07:31:49.876573 19 ingress.go:198] starting watch
  STEP: patching @ 06/17/24 07:31:49.877
  STEP: updating @ 06/17/24 07:31:49.882
  I0617 07:31:49.888397 19 ingress.go:221] waiting for watch events with expected annotations
  I0617 07:31:49.888442 19 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 06/17/24 07:31:49.888
  STEP: updating /status @ 06/17/24 07:31:49.893
  STEP: get /status @ 06/17/24 07:31:49.899
  STEP: deleting @ 06/17/24 07:31:49.902
  STEP: deleting a collection @ 06/17/24 07:31:49.912
  I0617 07:31:49.923024 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-8323" for this suite. @ 06/17/24 07:31:49.931
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 06/17/24 07:31:49.94
  I0617 07:31:49.940967 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:31:49.943
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:31:49.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:31:49.96
  STEP: Creating projection with secret that has name projected-secret-test-d2fe6040-6af2-47f6-8a8f-befe26927c41 @ 06/17/24 07:31:49.964
  STEP: Creating a pod to test consume secrets @ 06/17/24 07:31:49.97
  STEP: Saw pod success @ 06/17/24 07:31:53.993
  I0617 07:31:53.996310 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-secrets-de6c2939-6cb2-4900-9e9c-267ffc56d694 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 07:31:54.002
  I0617 07:31:54.015602 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1669" for this suite. @ 06/17/24 07:31:54.02
• [4.085 seconds]
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 06/17/24 07:31:54.026
  I0617 07:31:54.026445 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:31:54.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:31:54.042
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:31:54.046
  STEP: creating service in namespace services-5872 @ 06/17/24 07:31:54.049
  STEP: creating service affinity-clusterip in namespace services-5872 @ 06/17/24 07:31:54.049
  STEP: creating replication controller affinity-clusterip in namespace services-5872 @ 06/17/24 07:31:54.061
  I0617 07:31:54.067949      19 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-5872, replica count: 3
  I0617 07:31:57.120361      19 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:31:57.127087 19 resource.go:361] Creating new exec pod
  I0617 07:32:00.139453 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-5872 exec execpod-affinity97cmb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0617 07:32:00.291030 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-clusterip 80\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0617 07:32:00.291118 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:32:00.291274 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-5872 exec execpod-affinity97cmb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.125.17 80'
  I0617 07:32:00.407214 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.125.17 80\nConnection to 10.104.125.17 80 port [tcp/http] succeeded!\n"
  I0617 07:32:00.407511 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:32:00.407615 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-5872 exec execpod-affinity97cmb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.104.125.17:80/ ; done'
  I0617 07:32:00.611805 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.104.125.17:80/\n"
  I0617 07:32:00.612057 19 builder.go:147] stdout: "\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8\naffinity-clusterip-6z6b8"
  I0617 07:32:00.612081 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612093 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612104 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612113 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612134 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612143 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612152 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612162 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612206 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612215 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612227 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612236 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612244 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612253 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612261 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612269 19 service.go:242] Received response from host: affinity-clusterip-6z6b8
  I0617 07:32:00.612371 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-5872, will wait for the garbage collector to delete the pods @ 06/17/24 07:32:00.624
  I0617 07:32:00.684233 19 resources.go:139] Deleting ReplicationController affinity-clusterip took: 5.412643ms
  I0617 07:32:00.784923 19 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.676387ms
  I0617 07:32:03.902068 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5872" for this suite. @ 06/17/24 07:32:03.906
• [9.887 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 06/17/24 07:32:03.913
  I0617 07:32:03.913478 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:32:03.915
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:03.927
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:03.93
  STEP: Creating a ResourceQuota with terminating scope @ 06/17/24 07:32:03.933
  STEP: Ensuring ResourceQuota status is calculated @ 06/17/24 07:32:03.936
  STEP: Creating a ResourceQuota with not terminating scope @ 06/17/24 07:32:05.941
  STEP: Ensuring ResourceQuota status is calculated @ 06/17/24 07:32:05.946
  STEP: Creating a long running pod @ 06/17/24 07:32:07.951
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 06/17/24 07:32:07.967
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 06/17/24 07:32:09.973
  STEP: Deleting the pod @ 06/17/24 07:32:11.979
  STEP: Ensuring resource quota status released the pod usage @ 06/17/24 07:32:11.991
  STEP: Creating a terminating pod @ 06/17/24 07:32:13.995
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 06/17/24 07:32:14.005
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 06/17/24 07:32:16.01
  STEP: Deleting the pod @ 06/17/24 07:32:18.014
  STEP: Ensuring resource quota status released the pod usage @ 06/17/24 07:32:18.024
  I0617 07:32:20.028735 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-214" for this suite. @ 06/17/24 07:32:20.033
• [16.125 seconds]
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 06/17/24 07:32:20.039
  I0617 07:32:20.039654 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:32:20.041
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:20.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:20.058
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:32:20.061
  STEP: Saw pod success @ 06/17/24 07:32:24.082
  I0617 07:32:24.085605 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-ef28167e-bf19-4c4b-9801-1e72917ba584 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:32:24.095
  I0617 07:32:24.109114 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9553" for this suite. @ 06/17/24 07:32:24.112
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 06/17/24 07:32:24.118
  I0617 07:32:24.118211 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 07:32:24.119
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:24.134
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:24.139
  STEP: creating a secret @ 06/17/24 07:32:24.142
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 06/17/24 07:32:24.147
  STEP: patching the secret @ 06/17/24 07:32:24.15
  STEP: deleting the secret using a LabelSelector @ 06/17/24 07:32:24.158
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 06/17/24 07:32:24.163
  I0617 07:32:24.166470 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9843" for this suite. @ 06/17/24 07:32:24.169
• [0.056 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 06/17/24 07:32:24.174
  I0617 07:32:24.174151 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:32:24.175
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:24.185
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:24.19
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:32:24.193
  STEP: Saw pod success @ 06/17/24 07:32:28.228
  I0617 07:32:28.231123 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-008f05d5-0d0e-462f-b0b1-cf1bba5c6ad3 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:32:28.236
  I0617 07:32:28.247883 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7762" for this suite. @ 06/17/24 07:32:28.254
• [4.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 06/17/24 07:32:28.259
  I0617 07:32:28.260026 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:32:28.261
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:28.272
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:28.274
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 06/17/24 07:32:28.277
  I0617 07:32:28.278718 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:32:29.781035 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:32:35.566829 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-8123" for this suite. @ 06/17/24 07:32:35.576
• [7.321 seconds]
------------------------------
S
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 06/17/24 07:32:35.581
  I0617 07:32:35.582029 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename endpointslicemirroring @ 06/17/24 07:32:35.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:35.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:35.598
  STEP: mirroring a new custom Endpoint @ 06/17/24 07:32:35.61
  I0617 07:32:35.618111 19 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 06/17/24 07:32:37.625
  I0617 07:32:37.635470 19 endpointslicemirroring.go:171] Expected EndpointSlice to have 10.2.3.4 as address, got 10.1.2.3
  STEP: mirroring deletion of a custom Endpoint @ 06/17/24 07:32:39.64
  I0617 07:32:39.650131 19 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0617 07:32:41.654854 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-7238" for this suite. @ 06/17/24 07:32:41.659
• [6.082 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 06/17/24 07:32:41.664
  I0617 07:32:41.664360 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubelet-test @ 06/17/24 07:32:41.666
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:41.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:41.68
  I0617 07:32:45.701729 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-5050" for this suite. @ 06/17/24 07:32:45.707
• [4.050 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 06/17/24 07:32:45.719
  I0617 07:32:45.720252 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-runtime @ 06/17/24 07:32:45.722
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:45.734
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:45.737
  STEP: create the container @ 06/17/24 07:32:45.74
  W0617 07:32:45.747588      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 06/17/24 07:32:45.747
  STEP: get the container status @ 06/17/24 07:32:47.759
  STEP: the container should be terminated @ 06/17/24 07:32:47.763
  STEP: the termination message should be set @ 06/17/24 07:32:47.764
  I0617 07:32:47.764076 19 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 06/17/24 07:32:47.764
  I0617 07:32:47.781050 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-8748" for this suite. @ 06/17/24 07:32:47.785
• [2.072 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 06/17/24 07:32:47.792
  I0617 07:32:47.792069 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 07:32:47.793
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:47.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:47.809
  STEP: Creating secret with name secret-test-map-2a49454b-2240-45df-9cc6-56b127095a99 @ 06/17/24 07:32:47.813
  STEP: Creating a pod to test consume secrets @ 06/17/24 07:32:47.817
  STEP: Saw pod success @ 06/17/24 07:32:49.831
  I0617 07:32:49.834601 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-bb1ad279-a3d4-42a6-9343-acb21258c1e2 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 07:32:49.844
  I0617 07:32:49.858286 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3285" for this suite. @ 06/17/24 07:32:49.862
• [2.079 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 06/17/24 07:32:49.87
  I0617 07:32:49.870798 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename field-validation @ 06/17/24 07:32:49.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:49.886
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:49.89
  I0617 07:32:49.893889 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  W0617 07:32:52.472126      19 warnings.go:70] unknown field "alpha"
  W0617 07:32:52.472162      19 warnings.go:70] unknown field "beta"
  W0617 07:32:52.472195      19 warnings.go:70] unknown field "delta"
  W0617 07:32:52.472203      19 warnings.go:70] unknown field "epsilon"
  W0617 07:32:52.472209      19 warnings.go:70] unknown field "gamma"
  I0617 07:32:53.007159 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5025" for this suite. @ 06/17/24 07:32:53.011
• [3.147 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 06/17/24 07:32:53.017
  I0617 07:32:53.017244 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename podtemplate @ 06/17/24 07:32:53.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:53.032
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:53.036
  I0617 07:32:53.061279 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-4948" for this suite. @ 06/17/24 07:32:53.065
• [0.052 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 06/17/24 07:32:53.069
  I0617 07:32:53.069903 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/17/24 07:32:53.071
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:53.083
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:53.087
  I0617 07:32:53.090444 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:32:56.141874 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-2633" for this suite. @ 06/17/24 07:32:56.147
• [3.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 06/17/24 07:32:56.154
  I0617 07:32:56.154404 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replication-controller @ 06/17/24 07:32:56.156
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:56.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:56.172
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 06/17/24 07:32:56.175
  STEP: When a replication controller with a matching selector is created @ 06/17/24 07:32:58.194
  STEP: Then the orphan pod is adopted @ 06/17/24 07:32:58.199
  I0617 07:32:59.207915 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-3014" for this suite. @ 06/17/24 07:32:59.213
• [3.065 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 06/17/24 07:32:59.219
  I0617 07:32:59.219641 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename aggregateddiscovery @ 06/17/24 07:32:59.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:32:59.235
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:32:59.238
  I0617 07:32:59.243152 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:33:02.295104 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3779" for this suite. @ 06/17/24 07:33:02.299
• [3.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 06/17/24 07:33:02.305
  I0617 07:33:02.305903 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replicaset @ 06/17/24 07:33:02.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:33:02.321
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:33:02.324
  I0617 07:33:02.328351 19 replica_set.go:191] Creating ReplicaSet my-hostname-basic-fcef2806-debe-4946-b68a-6aceb6063ce3
  I0617 07:33:02.337427 19 resource.go:87] Pod name my-hostname-basic-fcef2806-debe-4946-b68a-6aceb6063ce3: Found 0 pods out of 1
  I0617 07:33:07.344632 19 resource.go:87] Pod name my-hostname-basic-fcef2806-debe-4946-b68a-6aceb6063ce3: Found 1 pods out of 1
  I0617 07:33:07.344709 19 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-fcef2806-debe-4946-b68a-6aceb6063ce3" is running
  I0617 07:33:07.351437 19 replica_set.go:220] Pod "my-hostname-basic-fcef2806-debe-4946-b68a-6aceb6063ce3-vff54" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 07:33:03 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 07:33:02 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 07:33:03 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 07:33:03 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 07:33:02 +0000 UTC Reason: Message:}])
  I0617 07:33:07.351504 19 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/17/24 07:33:07.351
  I0617 07:33:07.369933 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-8082" for this suite. @ 06/17/24 07:33:07.376
• [5.079 seconds]
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 06/17/24 07:33:07.384
  I0617 07:33:07.384371 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl-logs @ 06/17/24 07:33:07.385
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:33:07.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:33:07.404
  STEP: creating an pod @ 06/17/24 07:33:07.407
  I0617 07:33:07.407491 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0617 07:33:07.507917 19 builder.go:146] stderr: ""
  I0617 07:33:07.508006 19 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 06/17/24 07:33:07.508
  I0617 07:33:07.508222 19 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0617 07:33:09.520562 19 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 06/17/24 07:33:09.52
  I0617 07:33:09.520867 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 logs logs-generator logs-generator'
  I0617 07:33:09.618885 19 builder.go:146] stderr: ""
  I0617 07:33:09.618963 19 builder.go:147] stdout: "I0617 07:33:08.145063       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/8h2v 555\nI0617 07:33:08.345252       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/xgz 405\nI0617 07:33:08.545872       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/fhk 396\nI0617 07:33:08.745165       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/p9q8 479\nI0617 07:33:08.945497       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/bbnb 249\nI0617 07:33:09.145927       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/2b8j 392\nI0617 07:33:09.345236       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/sgr 351\nI0617 07:33:09.545658       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/5wn 590\n"
  I0617 07:33:11.619550 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 logs logs-generator logs-generator'
  I0617 07:33:11.712210 19 builder.go:146] stderr: ""
  I0617 07:33:11.712420 19 builder.go:147] stdout: "I0617 07:33:08.145063       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/8h2v 555\nI0617 07:33:08.345252       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/xgz 405\nI0617 07:33:08.545872       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/fhk 396\nI0617 07:33:08.745165       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/p9q8 479\nI0617 07:33:08.945497       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/bbnb 249\nI0617 07:33:09.145927       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/2b8j 392\nI0617 07:33:09.345236       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/sgr 351\nI0617 07:33:09.545658       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/5wn 590\nI0617 07:33:09.745840       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/m9c2 414\nI0617 07:33:09.945199       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/9l2 432\nI0617 07:33:10.145637       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/jxd 532\nI0617 07:33:10.346080       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/fnt2 343\nI0617 07:33:10.545508       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/2mb 585\nI0617 07:33:10.745940       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/sfl 533\nI0617 07:33:10.945260       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/jvh 450\nI0617 07:33:11.145683       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/z2x6 492\nI0617 07:33:11.346115       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/4cvp 487\nI0617 07:33:11.545526       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/gf4w 217\n"
  STEP: limiting log lines @ 06/17/24 07:33:11.712
  I0617 07:33:11.712671 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 logs logs-generator logs-generator --tail=1'
  I0617 07:33:11.805730 19 builder.go:146] stderr: ""
  I0617 07:33:11.805865 19 builder.go:147] stdout: "I0617 07:33:11.745904       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/v2d 228\n"
  I0617 07:33:11.805911 19 logs.go:127] got output "I0617 07:33:11.745904       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/v2d 228\n"
  STEP: limiting log bytes @ 06/17/24 07:33:11.805
  I0617 07:33:11.806144 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 logs logs-generator logs-generator --limit-bytes=1'
  I0617 07:33:11.887255 19 builder.go:146] stderr: ""
  I0617 07:33:11.887318 19 builder.go:147] stdout: "I"
  I0617 07:33:11.887334 19 logs.go:133] got output "I"
  STEP: exposing timestamps @ 06/17/24 07:33:11.887
  I0617 07:33:11.887526 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 logs logs-generator logs-generator --tail=1 --timestamps'
  I0617 07:33:11.992909 19 builder.go:146] stderr: ""
  I0617 07:33:11.992988 19 builder.go:147] stdout: "2024-06-17T07:33:11.945327070Z I0617 07:33:11.945222       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/sqtd 504\n"
  I0617 07:33:11.993401 19 logs.go:139] got output "2024-06-17T07:33:11.945327070Z I0617 07:33:11.945222       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/sqtd 504\n"
  STEP: restricting to a time range @ 06/17/24 07:33:11.993
  I0617 07:33:14.495814 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 logs logs-generator logs-generator --since=1s'
  I0617 07:33:14.578045 19 builder.go:146] stderr: ""
  I0617 07:33:14.579988 19 builder.go:147] stdout: "I0617 07:33:13.745900       1 logs_generator.go:76] 28 POST /api/v1/namespaces/ns/pods/2s5 439\nI0617 07:33:13.945270       1 logs_generator.go:76] 29 POST /api/v1/namespaces/default/pods/9n8 326\nI0617 07:33:14.145706       1 logs_generator.go:76] 30 PUT /api/v1/namespaces/ns/pods/ftd 377\nI0617 07:33:14.346128       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/kube-system/pods/mdt7 541\nI0617 07:33:14.545487       1 logs_generator.go:76] 32 PUT /api/v1/namespaces/ns/pods/8ld9 400\n"
  I0617 07:33:14.580079 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 logs logs-generator logs-generator --since=24h'
  I0617 07:33:14.662263 19 builder.go:146] stderr: ""
  I0617 07:33:14.662470 19 builder.go:147] stdout: "I0617 07:33:08.145063       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/default/pods/8h2v 555\nI0617 07:33:08.345252       1 logs_generator.go:76] 1 POST /api/v1/namespaces/ns/pods/xgz 405\nI0617 07:33:08.545872       1 logs_generator.go:76] 2 POST /api/v1/namespaces/ns/pods/fhk 396\nI0617 07:33:08.745165       1 logs_generator.go:76] 3 GET /api/v1/namespaces/default/pods/p9q8 479\nI0617 07:33:08.945497       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/ns/pods/bbnb 249\nI0617 07:33:09.145927       1 logs_generator.go:76] 5 POST /api/v1/namespaces/default/pods/2b8j 392\nI0617 07:33:09.345236       1 logs_generator.go:76] 6 GET /api/v1/namespaces/ns/pods/sgr 351\nI0617 07:33:09.545658       1 logs_generator.go:76] 7 POST /api/v1/namespaces/default/pods/5wn 590\nI0617 07:33:09.745840       1 logs_generator.go:76] 8 PUT /api/v1/namespaces/kube-system/pods/m9c2 414\nI0617 07:33:09.945199       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/9l2 432\nI0617 07:33:10.145637       1 logs_generator.go:76] 10 PUT /api/v1/namespaces/ns/pods/jxd 532\nI0617 07:33:10.346080       1 logs_generator.go:76] 11 GET /api/v1/namespaces/ns/pods/fnt2 343\nI0617 07:33:10.545508       1 logs_generator.go:76] 12 POST /api/v1/namespaces/kube-system/pods/2mb 585\nI0617 07:33:10.745940       1 logs_generator.go:76] 13 GET /api/v1/namespaces/kube-system/pods/sfl 533\nI0617 07:33:10.945260       1 logs_generator.go:76] 14 POST /api/v1/namespaces/default/pods/jvh 450\nI0617 07:33:11.145683       1 logs_generator.go:76] 15 GET /api/v1/namespaces/ns/pods/z2x6 492\nI0617 07:33:11.346115       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/default/pods/4cvp 487\nI0617 07:33:11.545526       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/gf4w 217\nI0617 07:33:11.745904       1 logs_generator.go:76] 18 GET /api/v1/namespaces/default/pods/v2d 228\nI0617 07:33:11.945222       1 logs_generator.go:76] 19 POST /api/v1/namespaces/default/pods/sqtd 504\nI0617 07:33:12.145660       1 logs_generator.go:76] 20 POST /api/v1/namespaces/kube-system/pods/b6j 440\nI0617 07:33:12.346090       1 logs_generator.go:76] 21 POST /api/v1/namespaces/kube-system/pods/d82 304\nI0617 07:33:12.545443       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/pwjc 368\nI0617 07:33:12.745896       1 logs_generator.go:76] 23 GET /api/v1/namespaces/default/pods/zr7d 583\nI0617 07:33:12.945152       1 logs_generator.go:76] 24 PUT /api/v1/namespaces/ns/pods/pcws 509\nI0617 07:33:13.145630       1 logs_generator.go:76] 25 GET /api/v1/namespaces/kube-system/pods/tlt4 441\nI0617 07:33:13.346064       1 logs_generator.go:76] 26 POST /api/v1/namespaces/ns/pods/q76j 272\nI0617 07:33:13.545503       1 logs_generator.go:76] 27 POST /api/v1/namespaces/kube-system/pods/jrpv 458\nI0617 07:33:13.745900       1 logs_generator.go:76] 28 POST /api/v1/namespaces/ns/pods/2s5 439\nI0617 07:33:13.945270       1 logs_generator.go:76] 29 POST /api/v1/namespaces/default/pods/9n8 326\nI0617 07:33:14.145706       1 logs_generator.go:76] 30 PUT /api/v1/namespaces/ns/pods/ftd 377\nI0617 07:33:14.346128       1 logs_generator.go:76] 31 PUT /api/v1/namespaces/kube-system/pods/mdt7 541\nI0617 07:33:14.545487       1 logs_generator.go:76] 32 PUT /api/v1/namespaces/ns/pods/8ld9 400\n"
  I0617 07:33:14.662847 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-logs-218 delete pod logs-generator'
  I0617 07:33:15.694010 19 builder.go:146] stderr: ""
  I0617 07:33:15.694094 19 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0617 07:33:15.694393 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-218" for this suite. @ 06/17/24 07:33:15.7
• [8.321 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 06/17/24 07:33:15.706
  I0617 07:33:15.706554 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:33:15.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:33:15.721
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:33:15.724
  STEP: Setting up server cert @ 06/17/24 07:33:15.795
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:33:16.484
  STEP: Deploying the webhook pod @ 06/17/24 07:33:16.494
  STEP: Wait for the deployment to be ready @ 06/17/24 07:33:16.508
  I0617 07:33:16.519403 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:33:18.531
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:33:18.545
  I0617 07:33:19.546024 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0617 07:33:19.553313 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8815-crds.webhook.example.com via the AdmissionRegistration API @ 06/17/24 07:33:20.067
  STEP: Creating a custom resource while v1 is storage version @ 06/17/24 07:33:20.087
  STEP: Patching Custom Resource Definition to set v2 as storage @ 06/17/24 07:33:22.149
  STEP: Patching the custom resource while v2 is storage version @ 06/17/24 07:33:22.188
  I0617 07:33:22.802948 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7111" for this suite. @ 06/17/24 07:33:22.808
  STEP: Destroying namespace "webhook-markers-2209" for this suite. @ 06/17/24 07:33:22.813
• [7.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 06/17/24 07:33:22.822
  I0617 07:33:22.822233 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replication-controller @ 06/17/24 07:33:22.823
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:33:22.844
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:33:22.851
  I0617 07:33:22.859095 19 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 06/17/24 07:33:23.871
  STEP: Checking rc "condition-test" has the desired failure condition set @ 06/17/24 07:33:23.881
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 06/17/24 07:33:24.889
  I0617 07:33:24.896152 19 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 06/17/24 07:33:24.896
  I0617 07:33:25.902238 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6485" for this suite. @ 06/17/24 07:33:25.906
• [3.089 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 06/17/24 07:33:25.911
  I0617 07:33:25.911117 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 07:33:25.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:33:25.928
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:33:25.931
  STEP: creating the pod @ 06/17/24 07:33:25.935
  STEP: waiting for pod running @ 06/17/24 07:33:25.942
  STEP: creating a file in subpath @ 06/17/24 07:33:27.95
  I0617 07:33:27.952793 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-1917 PodName:var-expansion-412103d6-c953-47d2-8f46-f97f7a46a17d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:33:27.952860 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:33:27.953841 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:33:27.953972 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1917/pods/var-expansion-412103d6-c953-47d2-8f46-f97f7a46a17d/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 06/17/24 07:33:27.994
  I0617 07:33:27.997914 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-1917 PodName:var-expansion-412103d6-c953-47d2-8f46-f97f7a46a17d ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:33:27.997994 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:33:27.998763 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:33:27.998844 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/var-expansion-1917/pods/var-expansion-412103d6-c953-47d2-8f46-f97f7a46a17d/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 06/17/24 07:33:28.032
  I0617 07:33:28.545539 19 pod_client.go:141] Successfully updated pod "var-expansion-412103d6-c953-47d2-8f46-f97f7a46a17d"
  STEP: waiting for annotated pod running @ 06/17/24 07:33:28.545
  STEP: deleting the pod gracefully @ 06/17/24 07:33:28.548
  I0617 07:33:28.548512 19 delete.go:62] Deleting pod "var-expansion-412103d6-c953-47d2-8f46-f97f7a46a17d" in namespace "var-expansion-1917"
  I0617 07:33:28.553432 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-412103d6-c953-47d2-8f46-f97f7a46a17d" to be fully deleted
  I0617 07:34:02.642527 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1917" for this suite. @ 06/17/24 07:34:02.646
• [36.744 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 06/17/24 07:34:02.656
  I0617 07:34:02.656267 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:34:02.658
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:02.669
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:02.673
  STEP: creating Agnhost RC @ 06/17/24 07:34:02.676
  I0617 07:34:02.676818 19 kubectl.go:1540] namespace kubectl-5994
  I0617 07:34:02.677019 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-5994 create -f -'
  I0617 07:34:02.865530 19 builder.go:146] stderr: ""
  I0617 07:34:02.865581 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/17/24 07:34:02.865
  I0617 07:34:03.870561 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:34:03.870615 19 framework.go:733] Found 1 / 1
  I0617 07:34:03.870666 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0617 07:34:03.873107 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:34:03.873151 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0617 07:34:03.873169 19 kubectl.go:1547] wait on agnhost-primary startup in kubectl-5994 
  I0617 07:34:03.873280 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-5994 logs agnhost-primary-7chq8 agnhost-primary'
  I0617 07:34:03.947983 19 builder.go:146] stderr: ""
  I0617 07:34:03.948034 19 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 06/17/24 07:34:03.948
  I0617 07:34:03.948138 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-5994 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0617 07:34:04.038872 19 builder.go:146] stderr: ""
  I0617 07:34:04.038937 19 builder.go:147] stdout: "service/rm2 exposed\n"
  I0617 07:34:04.042612 19 utils.go:1179] Service rm2 in namespace kubectl-5994 found.
  STEP: exposing service @ 06/17/24 07:34:06.048
  I0617 07:34:06.048531 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-5994 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0617 07:34:06.139804 19 builder.go:146] stderr: ""
  I0617 07:34:06.139901 19 builder.go:147] stdout: "service/rm3 exposed\n"
  I0617 07:34:06.145451 19 utils.go:1179] Service rm3 in namespace kubectl-5994 found.
  I0617 07:34:08.154407 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5994" for this suite. @ 06/17/24 07:34:08.16
• [5.511 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 06/17/24 07:34:08.169
  I0617 07:34:08.169163 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename field-validation @ 06/17/24 07:34:08.173
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:08.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:08.193
  I0617 07:34:08.198320 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  W0617 07:34:10.794087      19 warnings.go:70] unknown field "alpha"
  W0617 07:34:10.794152      19 warnings.go:70] unknown field "beta"
  W0617 07:34:10.794163      19 warnings.go:70] unknown field "delta"
  W0617 07:34:10.794211      19 warnings.go:70] unknown field "epsilon"
  W0617 07:34:10.794222      19 warnings.go:70] unknown field "gamma"
  I0617 07:34:11.345603 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-6896" for this suite. @ 06/17/24 07:34:11.351
• [3.189 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 06/17/24 07:34:11.356
  I0617 07:34:11.356919 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replicaset @ 06/17/24 07:34:11.358
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:11.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:11.373
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 06/17/24 07:34:11.377
  I0617 07:34:11.386167 19 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0617 07:34:16.392478 19 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/17/24 07:34:16.392
  STEP: getting scale subresource @ 06/17/24 07:34:16.393
  STEP: updating a scale subresource @ 06/17/24 07:34:16.396
  STEP: verifying the replicaset Spec.Replicas was modified @ 06/17/24 07:34:16.403
  STEP: Patch a scale subresource @ 06/17/24 07:34:16.409
  I0617 07:34:16.436060 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2208" for this suite. @ 06/17/24 07:34:16.446
• [5.098 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 06/17/24 07:34:16.455
  I0617 07:34:16.455823 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:34:16.458
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:16.474
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:16.478
  STEP: Counting existing ResourceQuota @ 06/17/24 07:34:16.483
  STEP: Creating a ResourceQuota @ 06/17/24 07:34:21.494
  STEP: Ensuring resource quota status is calculated @ 06/17/24 07:34:21.5
  STEP: Creating a Pod that fits quota @ 06/17/24 07:34:23.505
  STEP: Ensuring ResourceQuota status captures the pod usage @ 06/17/24 07:34:23.524
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 06/17/24 07:34:25.53
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 06/17/24 07:34:25.538
  STEP: Ensuring a pod cannot update its resource requirements @ 06/17/24 07:34:25.541
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 06/17/24 07:34:25.545
  STEP: Deleting the pod @ 06/17/24 07:34:27.552
  STEP: Ensuring resource quota status released the pod usage @ 06/17/24 07:34:27.567
  I0617 07:34:29.573405 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6991" for this suite. @ 06/17/24 07:34:29.578
• [13.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 06/17/24 07:34:29.587
  I0617 07:34:29.587753 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 07:34:29.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:29.604
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:29.607
  STEP: creating a Deployment @ 06/17/24 07:34:29.615
  I0617 07:34:29.615317 19 deployment.go:507] Creating simple deployment test-deployment-4zwjn
  I0617 07:34:29.625911 19 deployment.go:222] new replicaset for deployment "test-deployment-4zwjn" is yet to be created
  STEP: Getting /status @ 06/17/24 07:34:31.639
  I0617 07:34:31.643282 19 deployment.go:532] Deployment test-deployment-4zwjn has Conditions: [{Available True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:30 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4zwjn-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 06/17/24 07:34:31.643
  I0617 07:34:31.651545 19 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 34, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 34, 30, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 34, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 34, 29, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-4zwjn-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 06/17/24 07:34:31.651
  I0617 07:34:31.654439 19 deployment.go:579] Observed &Deployment event: ADDED
  I0617 07:34:31.654505 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4zwjn-c8586b885"}
  I0617 07:34:31.654669 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0617 07:34:31.654724 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4zwjn-c8586b885"}
  I0617 07:34:31.654744 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0617 07:34:31.654957 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0617 07:34:31.654981 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0617 07:34:31.655003 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4zwjn-c8586b885" is progressing.}
  I0617 07:34:31.655228 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0617 07:34:31.655259 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:30 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0617 07:34:31.655272 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4zwjn-c8586b885" has successfully progressed.}
  I0617 07:34:31.655434 19 deployment.go:579] Observed &Deployment event: MODIFIED
  I0617 07:34:31.655531 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:30 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0617 07:34:31.655611 19 deployment.go:575] Observed Deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4zwjn-c8586b885" has successfully progressed.}
  I0617 07:34:31.655664 19 deployment.go:572] Found Deployment test-deployment-4zwjn in namespace deployment-234 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0617 07:34:31.655708 19 deployment.go:583] Deployment test-deployment-4zwjn has an updated status
  STEP: patching the Statefulset Status @ 06/17/24 07:34:31.655
  I0617 07:34:31.655788 19 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0617 07:34:31.664989 19 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 06/17/24 07:34:31.665
  I0617 07:34:31.668108 19 deployment.go:616] Observed &Deployment event: ADDED
  I0617 07:34:31.668233 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4zwjn-c8586b885"}
  I0617 07:34:31.668494 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0617 07:34:31.668530 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-4zwjn-c8586b885"}
  I0617 07:34:31.668561 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0617 07:34:31.668748 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0617 07:34:31.668794 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0617 07:34:31.668836 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:29 +0000 UTC 2024-06-17 07:34:29 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-4zwjn-c8586b885" is progressing.}
  I0617 07:34:31.668992 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0617 07:34:31.669012 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:30 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0617 07:34:31.669043 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4zwjn-c8586b885" has successfully progressed.}
  I0617 07:34:31.669168 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0617 07:34:31.669214 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:30 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0617 07:34:31.669225 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-06-17 07:34:30 +0000 UTC 2024-06-17 07:34:29 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-4zwjn-c8586b885" has successfully progressed.}
  I0617 07:34:31.669243 19 deployment.go:612] Observed deployment test-deployment-4zwjn in namespace deployment-234 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0617 07:34:31.669476 19 deployment.go:616] Observed &Deployment event: MODIFIED
  I0617 07:34:31.669523 19 deployment.go:609] Found deployment test-deployment-4zwjn in namespace deployment-234 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0617 07:34:31.669538 19 deployment.go:620] Deployment test-deployment-4zwjn has a patched status
  I0617 07:34:31.674799 19 deployment.go:633] Deployment "test-deployment-4zwjn":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-4zwjn",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0ce678e2-f86d-4597-85f2-23f08181414c",
      ResourceVersion: (string) (len=5) "22051",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=373) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 50 72 6f  |:{\"type\":\"Pro|
              000000a0  67 72 65 73 73 69 6e 67  5c 22 7d 22 3a 7b 22 2e  |gressing\"}":{".|
              000000b0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000000c0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000000d0  66 3a 6c 61 73 74 55 70  64 61 74 65 54 69 6d 65  |f:lastUpdateTime|
              000000e0  22 3a 7b 7d 2c 22 66 3a  6d 65 73 73 61 67 65 22  |":{},"f:message"|
              000000f0  3a 7b 7d 2c 22 66 3a 72  65 61 73 6f 6e 22 3a 7b  |:{},"f:reason":{|
              00000100  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              00000110  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              00000120  3a 6f 62 73 65 72 76 65  64 47 65 6e 65 72 61 74  |:observedGenerat|
              00000130  69 6f 6e 22 3a 7b 7d 2c  22 66 3a 72 65 61 64 79  |ion":{},"f:ready|
              00000140  52 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |Replicas":{},"f:|
              00000150  72 65 70 6c 69 63 61 73  22 3a 7b 7d 2c 22 66 3a  |replicas":{},"f:|
              00000160  75 70 64 61 74 65 64 52  65 70 6c 69 63 61 73 22  |updatedReplicas"|
              00000170  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206471,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "FoundNewReplicaSet",
          Message: (string) (len=55) "Found new replica set \"test-deployment-4zwjn-c8586b885\""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0617 07:34:31.690279 19 deployment.go:39] New ReplicaSet "test-deployment-4zwjn-c8586b885" of Deployment "test-deployment-4zwjn":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-4zwjn-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9637a32e-66f2-4323-bf8e-b32de43b48a0",
      ResourceVersion: (string) (len=5) "22046",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-4zwjn",
          UID: (types.UID) (len=36) "0ce678e2-f86d-4597-85f2-23f08181414c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 30 63 65  |k:{\"uid\":\"0ce|
              00000120  36 37 38 65 32 2d 66 38  36 64 2d 34 35 39 37 2d  |678e2-f86d-4597-|
              00000130  38 35 66 32 2d 32 33 66  30 38 31 38 31 34 31 34  |85f2-23f08181414|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:34:31.696100 19 deployment.go:67] Pod "test-deployment-4zwjn-c8586b885-r6jlj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-4zwjn-c8586b885-r6jlj",
      GenerateName: (string) (len=32) "test-deployment-4zwjn-c8586b885-",
      Namespace: (string) (len=14) "deployment-234",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0214c73c-9f24-4716-ae82-2dc8ac357df1",
      ResourceVersion: (string) (len=5) "22045",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "71bff39b1ef68f8b5d5b95a5b1689a9a225293020ac2a316837adcdd0d6996b4",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.132/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.132/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-4zwjn-c8586b885",
          UID: (types.UID) (len=36) "9637a32e-66f2-4323-bf8e-b32de43b48a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 36 33 37 61 33 32  65 2d 36 36 66 32 2d 34  |"9637a32e-66f2-4|
              000000a0  33 32 33 2d 62 66 38 65  2d 62 33 32 64 65 34 33  |323-bf8e-b32de43|
              000000b0  62 34 38 61 30 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |b48a0\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 33 32 5c 22 7d 22  |2.16.228.132\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-b5h72",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-b5h72",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206470,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206469,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.132",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.132"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206469,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206470,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://ec331fa18ab6cb27397405a0146bd182ce1c1e024d034323a508828a07502f70",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:34:31.699051 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-234" for this suite. @ 06/17/24 07:34:31.705
• [2.125 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 06/17/24 07:34:31.711
  I0617 07:34:31.712005 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename proxy @ 06/17/24 07:34:31.713
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:31.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:31.738
  I0617 07:34:31.742165 19 proxy.go:387] Creating pod...
  I0617 07:34:33.759260 19 proxy.go:411] Creating service...
  I0617 07:34:33.778492 19 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/pods/agnhost/proxy?method=DELETE
  I0617 07:34:33.785748 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0617 07:34:33.785853 19 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/pods/agnhost/proxy?method=OPTIONS
  I0617 07:34:33.789389 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0617 07:34:33.789444 19 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/pods/agnhost/proxy?method=PATCH
  I0617 07:34:33.793411 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0617 07:34:33.793456 19 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/pods/agnhost/proxy?method=POST
  I0617 07:34:33.797412 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0617 07:34:33.797524 19 proxy.go:448] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/pods/agnhost/proxy?method=PUT
  I0617 07:34:33.801115 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0617 07:34:33.801166 19 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/services/e2e-proxy-test-service/proxy?method=DELETE
  I0617 07:34:33.807334 19 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0617 07:34:33.807400 19 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0617 07:34:33.811780 19 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0617 07:34:33.811853 19 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/services/e2e-proxy-test-service/proxy?method=PATCH
  I0617 07:34:33.816482 19 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0617 07:34:33.816532 19 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/services/e2e-proxy-test-service/proxy?method=POST
  I0617 07:34:33.821312 19 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0617 07:34:33.821405 19 proxy.go:459] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/services/e2e-proxy-test-service/proxy?method=PUT
  I0617 07:34:33.826153 19 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0617 07:34:33.826228 19 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/pods/agnhost/proxy?method=GET
  I0617 07:34:33.828719 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0617 07:34:33.828806 19 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/services/e2e-proxy-test-service/proxy?method=GET
  I0617 07:34:33.831817 19 proxy.go:487] http.Client request:GET StatusCode:301
  I0617 07:34:33.831884 19 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/pods/agnhost/proxy?method=HEAD
  I0617 07:34:33.834304 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0617 07:34:33.834370 19 proxy.go:479] Starting http.Client for https://10.96.0.1:443/api/v1/namespaces/proxy-3227/services/e2e-proxy-test-service/proxy?method=HEAD
  I0617 07:34:33.841747 19 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0617 07:34:33.842144 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-3227" for this suite. @ 06/17/24 07:34:33.847
• [2.141 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 06/17/24 07:34:33.853
  I0617 07:34:33.853823 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 07:34:33.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:33.889
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:33.892
  STEP: Creating service test in namespace statefulset-7531 @ 06/17/24 07:34:33.896
  STEP: Looking for a node to schedule stateful set and pod @ 06/17/24 07:34:33.907
  STEP: Creating pod with conflicting port in namespace statefulset-7531 @ 06/17/24 07:34:33.923
  STEP: Waiting until pod test-pod will start running in namespace statefulset-7531 @ 06/17/24 07:34:33.935
  STEP: Creating statefulset with conflicting port in namespace statefulset-7531 @ 06/17/24 07:34:35.948
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-7531 @ 06/17/24 07:34:35.954
  I0617 07:34:35.971055 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-7531, name: ss-0, uid: 0d40b78a-dde8-4a2a-abd8-c173a69cc7eb, status phase: Pending. Waiting for statefulset controller to delete.
  I0617 07:34:35.984225 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-7531, name: ss-0, uid: 0d40b78a-dde8-4a2a-abd8-c173a69cc7eb, status phase: Failed. Waiting for statefulset controller to delete.
  I0617 07:34:36.020365 19 statefulset.go:866] Observed stateful pod in namespace: statefulset-7531, name: ss-0, uid: 0d40b78a-dde8-4a2a-abd8-c173a69cc7eb, status phase: Failed. Waiting for statefulset controller to delete.
  I0617 07:34:36.020455 19 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-7531
  STEP: Removing pod with conflicting port in namespace statefulset-7531 @ 06/17/24 07:34:36.02
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-7531 and will be in running state @ 06/17/24 07:34:36.035
  I0617 07:34:38.045228 19 statefulset.go:135] Deleting all statefulset in ns statefulset-7531
  I0617 07:34:38.047561 19 rest.go:150] Scaling statefulset ss to 0
  I0617 07:34:48.061688 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 07:34:48.065483 19 rest.go:88] Deleting statefulset ss
  I0617 07:34:48.077303 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7531" for this suite. @ 06/17/24 07:34:48.082
• [14.233 seconds]
------------------------------
S
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 06/17/24 07:34:48.087
  I0617 07:34:48.087125 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:34:48.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:34:48.1
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:34:48.103
  STEP: creating service endpoint-test2 in namespace services-1522 @ 06/17/24 07:34:48.107
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1522 to expose endpoints map[] @ 06/17/24 07:34:48.117
  I0617 07:34:48.123684 19 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  I0617 07:34:49.132329 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-1522 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1522 @ 06/17/24 07:34:49.133
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1522 to expose endpoints map[pod1:[80]] @ 06/17/24 07:34:51.158
  I0617 07:34:51.171211 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-1522 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 06/17/24 07:34:51.171
  I0617 07:34:51.172016 19 resource.go:361] Creating new exec pod
  I0617 07:34:54.186427 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-1522 exec execpod2q5tq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0617 07:34:54.376272 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0617 07:34:54.376363 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:34:54.376653 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-1522 exec execpod2q5tq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.104.224 80'
  I0617 07:34:54.492253 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.104.224 80\nConnection to 10.103.104.224 80 port [tcp/http] succeeded!\n"
  I0617 07:34:54.492330 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-1522 @ 06/17/24 07:34:54.493
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1522 to expose endpoints map[pod1:[80] pod2:[80]] @ 06/17/24 07:34:56.509
  I0617 07:34:56.522253 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-1522 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 06/17/24 07:34:56.522
  I0617 07:34:57.522758 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-1522 exec execpod2q5tq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0617 07:34:57.634016 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0617 07:34:57.634091 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:34:57.634259 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-1522 exec execpod2q5tq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.104.224 80'
  I0617 07:34:57.747504 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.104.224 80\nConnection to 10.103.104.224 80 port [tcp/http] succeeded!\n"
  I0617 07:34:57.747591 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1522 @ 06/17/24 07:34:57.747
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1522 to expose endpoints map[pod2:[80]] @ 06/17/24 07:34:57.758
  I0617 07:34:58.781017 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-1522 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 06/17/24 07:34:58.781
  I0617 07:34:59.782034 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-1522 exec execpod2q5tq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  I0617 07:34:59.915096 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0617 07:34:59.915188 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:34:59.915309 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-1522 exec execpod2q5tq -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.103.104.224 80'
  I0617 07:35:00.052791 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.103.104.224 80\nConnection to 10.103.104.224 80 port [tcp/http] succeeded!\n"
  I0617 07:35:00.052844 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-1522 @ 06/17/24 07:35:00.052
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-1522 to expose endpoints map[] @ 06/17/24 07:35:00.063
  I0617 07:35:00.074493 19 service.go:4258] successfully validated that service endpoint-test2 in namespace services-1522 exposes endpoints map[]
  I0617 07:35:00.093633 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1522" for this suite. @ 06/17/24 07:35:00.099
• [12.018 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 06/17/24 07:35:00.106
  I0617 07:35:00.106317 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 07:35:00.108
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:00.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:00.127
  STEP: Creating a pod to test env composition @ 06/17/24 07:35:00.131
  STEP: Saw pod success @ 06/17/24 07:35:04.153
  I0617 07:35:04.156563 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod var-expansion-4e500bb6-1d99-4828-b4d7-8ba8131bd84a container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 07:35:04.164
  I0617 07:35:04.180865 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-915" for this suite. @ 06/17/24 07:35:04.187
• [4.090 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 06/17/24 07:35:04.196
  I0617 07:35:04.196350 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:35:04.2
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:04.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:04.223
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 06/17/24 07:35:04.229
  STEP: Saw pod success @ 06/17/24 07:35:06.266
  I0617 07:35:06.269319 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-dde3e8b4-5b68-45b3-a48a-24599447707a container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:35:06.275
  I0617 07:35:06.286137 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2240" for this suite. @ 06/17/24 07:35:06.29
• [2.099 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 06/17/24 07:35:06.296
  I0617 07:35:06.296679 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename apf @ 06/17/24 07:35:06.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:06.308
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:06.312
  STEP: getting /apis @ 06/17/24 07:35:06.315
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/17/24 07:35:06.32
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/17/24 07:35:06.321
  STEP: creating @ 06/17/24 07:35:06.322
  STEP: getting @ 06/17/24 07:35:06.333
  STEP: listing @ 06/17/24 07:35:06.336
  STEP: watching @ 06/17/24 07:35:06.339
  I0617 07:35:06.339396 19 flowcontrol.go:394] starting watch
  STEP: patching @ 06/17/24 07:35:06.34
  STEP: updating @ 06/17/24 07:35:06.345
  I0617 07:35:06.350897 19 flowcontrol.go:422] waiting for watch events with expected annotations
  STEP: getting /status @ 06/17/24 07:35:06.351
  STEP: patching /status @ 06/17/24 07:35:06.353
  STEP: updating /status @ 06/17/24 07:35:06.357
  STEP: deleting @ 06/17/24 07:35:06.379
  STEP: deleting a collection @ 06/17/24 07:35:06.386
  I0617 07:35:06.399355 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6855" for this suite. @ 06/17/24 07:35:06.403
• [0.110 seconds]
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 06/17/24 07:35:06.407
  I0617 07:35:06.407505 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename daemonsets @ 06/17/24 07:35:06.408
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:06.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:06.424
  I0617 07:35:06.455639 19 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0617 07:35:06.460400 19 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0617 07:35:06.464968 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:06.467313 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:35:06.467370 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:35:07.466251 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:07.469577 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0617 07:35:07.469612 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:35:08.466109 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:08.471565 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 07:35:08.471635 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0617 07:35:08.471669 19 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0617 07:35:08.480611 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0617 07:35:10.494257 19 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0617 07:35:10.502306 19 daemon_set.go:102] Updating DaemonSet daemon-set
  I0617 07:35:10.502357 19 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0617 07:35:10.509927 19 daemon_set.go:1178] Wrong image for pod: daemon-set-66b8j. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0617 07:35:10.510021 19 daemon_set.go:1183] Pod daemon-set-66b8j is not available
  I0617 07:35:10.517256 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:11.512441 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:12.505985 19 daemon_set.go:1183] Pod daemon-set-ltqlj is not available
  I0617 07:35:12.509685 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  STEP: Deleting DaemonSet "daemon-set" @ 06/17/24 07:35:12.516
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5676, will wait for the garbage collector to delete the pods @ 06/17/24 07:35:12.516
  I0617 07:35:12.576593 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 6.319024ms
  I0617 07:35:12.676934 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.331275ms
  I0617 07:35:14.181011 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:35:14.181075 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0617 07:35:14.183880 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22581"},"items":null}

  I0617 07:35:14.185925 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22581"},"items":null}

  I0617 07:35:14.197942 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5676" for this suite. @ 06/17/24 07:35:14.202
• [7.804 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 06/17/24 07:35:14.211
  I0617 07:35:14.212024 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 06/17/24 07:35:14.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:14.232
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:14.237
  STEP: creating a target pod @ 06/17/24 07:35:14.241
  STEP: adding an ephemeral container @ 06/17/24 07:35:16.262
  STEP: checking pod container endpoints @ 06/17/24 07:35:18.282
  I0617 07:35:18.283040 19 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-1089 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:35:18.283093 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:35:18.284449 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:35:18.284536 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/ephemeral-containers-test-1089/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0617 07:35:18.326741 19 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 06/17/24 07:35:18.332
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 06/17/24 07:35:18.337
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 06/17/24 07:35:18.346
  I0617 07:35:18.350628 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-1089" for this suite. @ 06/17/24 07:35:18.355
• [4.150 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 06/17/24 07:35:18.362
  I0617 07:35:18.362566 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename conformance-tests @ 06/17/24 07:35:18.364
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:18.379
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:18.383
  STEP: Getting node addresses @ 06/17/24 07:35:18.387
  I0617 07:35:18.387365 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0617 07:35:18.394659 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-7107" for this suite. @ 06/17/24 07:35:18.399
• [0.041 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 06/17/24 07:35:18.403
  I0617 07:35:18.403938 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:35:18.405
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:18.416
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:18.42
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:35:18.423
  STEP: Saw pod success @ 06/17/24 07:35:22.445
  I0617 07:35:22.448954 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-f46f2e73-4864-49d9-9614-cc9313adc767 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:35:22.456
  I0617 07:35:22.469607 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-3089" for this suite. @ 06/17/24 07:35:22.475
• [4.078 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 06/17/24 07:35:22.493
  I0617 07:35:22.493159 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/17/24 07:35:22.494
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:22.509
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:22.512
  STEP: getting /apis @ 06/17/24 07:35:22.522
  STEP: getting /apis/admissionregistration.k8s.io @ 06/17/24 07:35:22.527
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 06/17/24 07:35:22.529
  STEP: creating @ 06/17/24 07:35:22.53
  STEP: getting @ 06/17/24 07:35:22.542
  STEP: listing @ 06/17/24 07:35:22.544
  STEP: watching @ 06/17/24 07:35:22.547
  I0617 07:35:22.547630 19 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 06/17/24 07:35:22.549
  STEP: updating @ 06/17/24 07:35:22.553
  I0617 07:35:22.559426 19 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 06/17/24 07:35:22.559
  STEP: deleting a collection @ 06/17/24 07:35:22.567
  I0617 07:35:22.579515 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-6577" for this suite. @ 06/17/24 07:35:22.583
• [0.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 06/17/24 07:35:22.588
  I0617 07:35:22.588586 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename subpath @ 06/17/24 07:35:22.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:22.602
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:22.605
  STEP: Setting up data @ 06/17/24 07:35:22.608
  STEP: Creating pod pod-subpath-test-secret-2brb @ 06/17/24 07:35:22.617
  STEP: Creating a pod to test atomic-volume-subpath @ 06/17/24 07:35:22.618
  STEP: Saw pod success @ 06/17/24 07:35:46.694
  I0617 07:35:46.698829 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-subpath-test-secret-2brb container test-container-subpath-secret-2brb: <nil>
  STEP: delete the pod @ 06/17/24 07:35:46.707
  STEP: Deleting pod pod-subpath-test-secret-2brb @ 06/17/24 07:35:46.722
  I0617 07:35:46.723029 19 delete.go:62] Deleting pod "pod-subpath-test-secret-2brb" in namespace "subpath-9868"
  I0617 07:35:46.726310 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9868" for this suite. @ 06/17/24 07:35:46.73
• [24.147 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 06/17/24 07:35:46.736
  I0617 07:35:46.736253 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename daemonsets @ 06/17/24 07:35:46.739
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:46.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:46.757
  STEP: Creating simple DaemonSet "daemon-set" @ 06/17/24 07:35:46.783
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/17/24 07:35:46.788
  I0617 07:35:46.792081 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:46.795226 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:35:46.795357 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:35:47.798286 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:47.802150 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:35:47.802294 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:35:48.793849 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:35:48.796626 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 07:35:48.796655 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 06/17/24 07:35:48.799
  I0617 07:35:48.802123 19 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 06/17/24 07:35:48.802
  I0617 07:35:48.810637 19 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 06/17/24 07:35:48.81
  I0617 07:35:48.813537 19 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0617 07:35:48.814114 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.814799 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.815459 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.815916 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.816599 19 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.816964 19 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-9220 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0617 07:35:48.817152 19 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 06/17/24 07:35:48.817
  STEP: watching for the daemon set status to be patched @ 06/17/24 07:35:48.824
  I0617 07:35:48.827072 19 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0617 07:35:48.827458 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.827801 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.828112 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.828453 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.828740 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.828944 19 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-9220 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0617 07:35:48.829271 19 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0617 07:35:48.829485 19 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-9220 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0617 07:35:48.829630 19 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 06/17/24 07:35:48.833
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9220, will wait for the garbage collector to delete the pods @ 06/17/24 07:35:48.833
  I0617 07:35:48.893018 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.56113ms
  I0617 07:35:48.994044 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.017902ms
  I0617 07:35:51.497406 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:35:51.497464 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0617 07:35:51.500218 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"22873"},"items":null}

  I0617 07:35:51.503166 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"22873"},"items":null}

  I0617 07:35:51.515833 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9220" for this suite. @ 06/17/24 07:35:51.52
• [4.790 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 06/17/24 07:35:51.526
  I0617 07:35:51.526326 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svcaccounts @ 06/17/24 07:35:51.53
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:51.548
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:51.552
  STEP: creating a ServiceAccount @ 06/17/24 07:35:51.555
  STEP: watching for the ServiceAccount to be added @ 06/17/24 07:35:51.563
  STEP: patching the ServiceAccount @ 06/17/24 07:35:51.566
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 06/17/24 07:35:51.572
  STEP: deleting the ServiceAccount @ 06/17/24 07:35:51.575
  I0617 07:35:51.584211 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5011" for this suite. @ 06/17/24 07:35:51.587
• [0.067 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 06/17/24 07:35:51.593
  I0617 07:35:51.593485 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pod-network-test @ 06/17/24 07:35:51.594
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:35:51.603
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:35:51.606
  STEP: Performing setup for networking test in namespace pod-network-test-5140 @ 06/17/24 07:35:51.609
  STEP: creating a selector @ 06/17/24 07:35:51.609
  STEP: Creating the service pods in kubernetes @ 06/17/24 07:35:51.609
  I0617 07:35:51.609169 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/17/24 07:36:13.718
  I0617 07:36:15.749902 19 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0617 07:36:15.750059 19 utils.go:472] Going to poll 172.16.228.181 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0617 07:36:15.753078 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.228.181:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5140 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:36:15.753124 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:36:15.754302 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:36:15.754404 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5140/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.228.181%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0617 07:36:15.800052 19 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0617 07:36:15.800115 19 utils.go:472] Going to poll 172.16.210.33 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0617 07:36:15.804571 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.210.33:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5140 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:36:15.804628 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:36:15.805474 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:36:15.805578 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5140/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.210.33%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0617 07:36:15.852597 19 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0617 07:36:15.852662 19 utils.go:472] Going to poll 172.16.106.124 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0617 07:36:15.857941 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://172.16.106.124:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-5140 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:36:15.858031 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:36:15.858956 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:36:15.859071 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-5140/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F172.16.106.124%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0617 07:36:15.895799 19 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0617 07:36:15.896261 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5140" for this suite. @ 06/17/24 07:36:15.901
• [24.314 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 06/17/24 07:36:15.907
  I0617 07:36:15.907881 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename containers @ 06/17/24 07:36:15.909
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:36:15.923
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:36:15.926
  STEP: Creating a pod to test override all @ 06/17/24 07:36:15.93
  STEP: Saw pod success @ 06/17/24 07:36:19.952
  I0617 07:36:19.957324 19 output.go:196] Trying to get logs from node ck-130-worker-2.novalocal pod client-containers-bb26ac9a-e8f4-415e-9b5b-78b316b1cbe2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 07:36:19.975
  I0617 07:36:19.991710 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-63" for this suite. @ 06/17/24 07:36:19.997
• [4.095 seconds]
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 06/17/24 07:36:20.002
  I0617 07:36:20.002737 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:36:20.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:36:20.017
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:36:20.021
  STEP: creating the pod @ 06/17/24 07:36:20.024
  STEP: setting up watch @ 06/17/24 07:36:20.024
  STEP: submitting the pod to kubernetes @ 06/17/24 07:36:20.127
  STEP: verifying the pod is in kubernetes @ 06/17/24 07:36:20.135
  STEP: verifying pod creation was observed @ 06/17/24 07:36:20.14
  STEP: deleting the pod gracefully @ 06/17/24 07:36:22.153
  STEP: verifying pod deletion was observed @ 06/17/24 07:36:22.158
  I0617 07:36:24.321017 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-262" for this suite. @ 06/17/24 07:36:24.327
• [4.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 06/17/24 07:36:24.334
  I0617 07:36:24.334763 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:36:24.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:36:24.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:36:24.352
  STEP: Creating the pod @ 06/17/24 07:36:24.357
  I0617 07:36:26.898203 19 pod_client.go:141] Successfully updated pod "labelsupdate6bc920ce-0bf4-4a77-bf48-330c0d14d8a6"
  I0617 07:36:30.923572 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-861" for this suite. @ 06/17/24 07:36:30.928
• [6.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 06/17/24 07:36:30.933
  I0617 07:36:30.933595 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:36:30.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:36:30.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:36:30.955
  STEP: Setting up server cert @ 06/17/24 07:36:30.975
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:36:31.52
  STEP: Deploying the webhook pod @ 06/17/24 07:36:31.528
  STEP: Wait for the deployment to be ready @ 06/17/24 07:36:31.539
  I0617 07:36:31.544811 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/17/24 07:36:33.557
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:36:33.582
  I0617 07:36:34.582502 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/17/24 07:36:34.59
  I0617 07:36:34.630737 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8084" for this suite. @ 06/17/24 07:36:34.636
  STEP: Destroying namespace "webhook-markers-8446" for this suite. @ 06/17/24 07:36:34.643
• [3.715 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 06/17/24 07:36:34.649
  I0617 07:36:34.649199 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename cronjob @ 06/17/24 07:36:34.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:36:34.661
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:36:34.665
  STEP: Creating a cronjob @ 06/17/24 07:36:34.67
  STEP: Ensuring more than one job is running at a time @ 06/17/24 07:36:34.677
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 06/17/24 07:38:00.683
  STEP: Removing cronjob @ 06/17/24 07:38:00.687
  I0617 07:38:00.693595 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5593" for this suite. @ 06/17/24 07:38:00.701
• [86.058 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 06/17/24 07:38:00.707
  I0617 07:38:00.707387 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:38:00.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:00.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:00.726
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 06/17/24 07:38:00.731
  STEP: Saw pod success @ 06/17/24 07:38:02.748
  I0617 07:38:02.752274 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-4921447e-de19-4938-81b0-0d906d824635 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:38:02.769
  I0617 07:38:02.782734 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-939" for this suite. @ 06/17/24 07:38:02.787
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 06/17/24 07:38:02.794
  I0617 07:38:02.794548 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:38:02.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:02.807
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:02.81
  I0617 07:38:02.817879 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7237" for this suite. @ 06/17/24 07:38:02.821
• [0.032 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 06/17/24 07:38:02.826
  I0617 07:38:02.826776 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:38:02.828
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:02.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:02.842
  STEP: Setting up server cert @ 06/17/24 07:38:02.866
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:38:03.172
  STEP: Deploying the webhook pod @ 06/17/24 07:38:03.18
  STEP: Wait for the deployment to be ready @ 06/17/24 07:38:03.19
  I0617 07:38:03.197771 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:38:05.208
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:38:05.225
  I0617 07:38:06.225716 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 06/17/24 07:38:06.233
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/17/24 07:38:06.251
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 06/17/24 07:38:06.259
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/17/24 07:38:06.269
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 06/17/24 07:38:06.278
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 06/17/24 07:38:06.284
  I0617 07:38:06.327948 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2915" for this suite. @ 06/17/24 07:38:06.332
  STEP: Destroying namespace "webhook-markers-3675" for this suite. @ 06/17/24 07:38:06.357
• [3.549 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 06/17/24 07:38:06.376
  I0617 07:38:06.376815 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename watch @ 06/17/24 07:38:06.378
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:06.406
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:06.411
  STEP: creating a watch on configmaps @ 06/17/24 07:38:06.415
  STEP: creating a new configmap @ 06/17/24 07:38:06.417
  STEP: modifying the configmap once @ 06/17/24 07:38:06.427
  STEP: closing the watch once it receives two notifications @ 06/17/24 07:38:06.433
  I0617 07:38:06.433860 19 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4517  4ce92da1-f417-455c-870d-6dfba0929622 23571 0 2024-06-17 07:38:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-17 07:38:06 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:38:06.434071 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4517  4ce92da1-f417-455c-870d-6dfba0929622 23572 0 2024-06-17 07:38:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-17 07:38:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 06/17/24 07:38:06.434
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 06/17/24 07:38:06.44
  STEP: deleting the configmap @ 06/17/24 07:38:06.442
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 06/17/24 07:38:06.447
  I0617 07:38:06.447519 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4517  4ce92da1-f417-455c-870d-6dfba0929622 23573 0 2024-06-17 07:38:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-17 07:38:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:38:06.448118 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-4517  4ce92da1-f417-455c-870d-6dfba0929622 23574 0 2024-06-17 07:38:06 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-06-17 07:38:06 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 07:38:06.448549 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-4517" for this suite. @ 06/17/24 07:38:06.453
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 06/17/24 07:38:06.458
  I0617 07:38:06.458658 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 07:38:06.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:06.47
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:06.472
  STEP: Creating secret with name secret-test-73ebddba-dbd8-4df6-aa6a-bacb015c07fa @ 06/17/24 07:38:06.478
  STEP: Creating a pod to test consume secrets @ 06/17/24 07:38:06.483
  STEP: Saw pod success @ 06/17/24 07:38:10.5
  I0617 07:38:10.503992 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-cef80988-9b54-4990-9c71-ec60953bf60f container secret-env-test: <nil>
  STEP: delete the pod @ 06/17/24 07:38:10.51
  I0617 07:38:10.522103 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2485" for this suite. @ 06/17/24 07:38:10.526
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 06/17/24 07:38:10.531
  I0617 07:38:10.531613 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename daemonsets @ 06/17/24 07:38:10.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:10.544
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:10.548
  STEP: Creating simple DaemonSet "daemon-set" @ 06/17/24 07:38:10.566
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/17/24 07:38:10.57
  I0617 07:38:10.574203 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:38:10.576625 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:38:10.576664 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:38:11.576435 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:38:11.582847 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0617 07:38:11.582918 19 fixtures.go:130] Node ck-130-worker-3.novalocal is running 0 daemon pod, expected 1
  I0617 07:38:12.576898 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:38:12.580464 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 07:38:12.580505 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 06/17/24 07:38:12.583
  I0617 07:38:12.595798 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:38:12.599136 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0617 07:38:12.599222 19 fixtures.go:130] Node ck-130-worker-3.novalocal is running 0 daemon pod, expected 1
  I0617 07:38:13.598239 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:38:13.601634 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0617 07:38:13.601671 19 fixtures.go:130] Node ck-130-worker-3.novalocal is running 0 daemon pod, expected 1
  I0617 07:38:14.597078 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:38:14.601945 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0617 07:38:14.602008 19 fixtures.go:130] Node ck-130-worker-3.novalocal is running 0 daemon pod, expected 1
  I0617 07:38:15.597571 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 07:38:15.602074 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 07:38:15.602118 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/17/24 07:38:15.604
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-3331, will wait for the garbage collector to delete the pods @ 06/17/24 07:38:15.604
  I0617 07:38:15.663206 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.281027ms
  I0617 07:38:15.764255 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.039015ms
  I0617 07:38:17.968332 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:38:17.968435 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0617 07:38:17.972077 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23762"},"items":null}

  I0617 07:38:17.975445 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23762"},"items":null}

  I0617 07:38:17.987663 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-3331" for this suite. @ 06/17/24 07:38:17.991
• [7.465 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 06/17/24 07:38:17.996
  I0617 07:38:17.996741 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename chunking @ 06/17/24 07:38:17.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:18.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:18.014
  STEP: creating a large number of resources @ 06/17/24 07:38:18.018
  I0617 07:38:20.304572      19 request.go:697] Waited for 1.001485214s due to client-side throttling, not priority and fairness, request: POST:https://10.96.0.1:443/api/v1/namespaces/chunking-570/podtemplates
  STEP: retrieving those results in paged fashion several times @ 06/17/24 07:38:35.705
  I0617 07:38:35.754033 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0617 07:38:35.804529 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0617 07:38:35.854424 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0617 07:38:35.904031 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0617 07:38:35.954790 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0617 07:38:36.004962 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0617 07:38:36.053965 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0617 07:38:36.104192 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0617 07:38:36.154399 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0617 07:38:36.203747 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0617 07:38:36.253971 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0617 07:38:36.305242 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0617 07:38:36.353355 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0617 07:38:36.403120 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0617 07:38:36.452932 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0617 07:38:36.505488 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0617 07:38:36.553667 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0617 07:38:36.603843 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0617 07:38:36.654152 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0617 07:38:36.704841 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0617 07:38:36.754092 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0617 07:38:36.804969 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0617 07:38:36.853959 19 chunking.go:98] Retrieved 17/17 results with rv 24238 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyMzgsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0617 07:38:36.903985 19 chunking.go:98] Retrieved 9/17 results with rv 24238 and continue 
  I0617 07:38:36.952839 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0617 07:38:37.004351 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0617 07:38:37.053906 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0617 07:38:37.104156 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0617 07:38:37.153514 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0617 07:38:37.203059 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0617 07:38:37.253120 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0617 07:38:37.302517 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0617 07:38:37.355040 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0617 07:38:37.404361 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0617 07:38:37.452904 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0617 07:38:37.505407 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0617 07:38:37.553852 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0617 07:38:37.603272 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0617 07:38:37.652843 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0617 07:38:37.704310 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0617 07:38:37.753016 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0617 07:38:37.804139 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0617 07:38:37.854369 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0617 07:38:37.903901 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0617 07:38:37.953905 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0617 07:38:38.003820 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0617 07:38:38.053397 19 chunking.go:98] Retrieved 17/17 results with rv 24240 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0617 07:38:38.102005 19 chunking.go:98] Retrieved 9/17 results with rv 24240 and continue 
  I0617 07:38:38.153089 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0617 07:38:38.204307 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0617 07:38:38.253882 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0617 07:38:38.303727 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0617 07:38:38.355144 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0617 07:38:38.404380 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0617 07:38:38.453200 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0617 07:38:38.503967 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0617 07:38:38.555134 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0617 07:38:38.602072 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0617 07:38:38.653440 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0617 07:38:38.703313 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0617 07:38:38.752953 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0617 07:38:38.804938 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0617 07:38:38.853337 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0617 07:38:38.903282 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0617 07:38:38.952886 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0617 07:38:39.003465 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0617 07:38:39.052806 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0617 07:38:39.103736 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0617 07:38:39.152979 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0617 07:38:39.203107 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0617 07:38:39.253261 19 chunking.go:98] Retrieved 17/17 results with rv 24242 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MjQyNDIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0617 07:38:39.301547 19 chunking.go:98] Retrieved 9/17 results with rv 24242 and continue 
  STEP: retrieving those results all at once @ 06/17/24 07:38:39.301
  I0617 07:38:39.370390 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-570" for this suite. @ 06/17/24 07:38:39.404
• [21.458 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 06/17/24 07:38:39.456
  I0617 07:38:39.456324 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:38:39.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:39.477
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:39.48
  STEP: Creating the pod @ 06/17/24 07:38:39.483
  I0617 07:38:42.019573 19 pod_client.go:141] Successfully updated pod "annotationupdateebf768cd-dec9-45ea-ab35-5eec6b0730cd"
  I0617 07:38:46.042117 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4814" for this suite. @ 06/17/24 07:38:46.046
• [6.595 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 06/17/24 07:38:46.051
  I0617 07:38:46.051483 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 07:38:46.053
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:46.064
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:46.067
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/17/24 07:38:46.07
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 06/17/24 07:38:46.07
  STEP: creating a pod to probe DNS @ 06/17/24 07:38:46.07
  STEP: submitting the pod to kubernetes @ 06/17/24 07:38:46.07
  STEP: retrieving the pod @ 06/17/24 07:38:48.082
  STEP: looking for the results for each expected name from probers @ 06/17/24 07:38:48.085
  I0617 07:38:48.097394 19 dns_common.go:527] DNS probes using dns-1892/dns-test-99ff63b9-11ca-4c57-abad-655ae7688ef5 succeeded

  STEP: deleting the pod @ 06/17/24 07:38:48.097
  I0617 07:38:48.106771 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1892" for this suite. @ 06/17/24 07:38:48.112
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 06/17/24 07:38:48.117
  I0617 07:38:48.117783 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename runtimeclass @ 06/17/24 07:38:48.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:48.133
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:48.14
  STEP: getting /apis @ 06/17/24 07:38:48.143
  STEP: getting /apis/node.k8s.io @ 06/17/24 07:38:48.148
  STEP: getting /apis/node.k8s.io/v1 @ 06/17/24 07:38:48.15
  STEP: creating @ 06/17/24 07:38:48.151
  STEP: watching @ 06/17/24 07:38:48.165
  I0617 07:38:48.165866 19 runtimeclass.go:275] starting watch
  STEP: getting @ 06/17/24 07:38:48.171
  STEP: listing @ 06/17/24 07:38:48.174
  STEP: patching @ 06/17/24 07:38:48.176
  STEP: updating @ 06/17/24 07:38:48.18
  I0617 07:38:48.185568 19 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 06/17/24 07:38:48.185
  STEP: deleting a collection @ 06/17/24 07:38:48.194
  I0617 07:38:48.205489 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-7186" for this suite. @ 06/17/24 07:38:48.21
• [0.097 seconds]
------------------------------
SSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 06/17/24 07:38:48.215
  I0617 07:38:48.215815 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:38:48.216
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:48.229
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:48.232
  STEP: creating the pod @ 06/17/24 07:38:48.235
  STEP: submitting the pod to kubernetes @ 06/17/24 07:38:48.235
  W0617 07:38:48.242439      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: verifying the pod is in kubernetes @ 06/17/24 07:38:50.252
  STEP: updating the pod @ 06/17/24 07:38:50.256
  I0617 07:38:50.777421 19 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-c36e7085-7215-4dbd-b32b-74f5a1a51341"
  I0617 07:38:54.790203 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1061" for this suite. @ 06/17/24 07:38:54.794
• [6.585 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 06/17/24 07:38:54.801
  I0617 07:38:54.801734 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename csi-storageclass @ 06/17/24 07:38:54.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:54.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:54.819
  STEP: Creating a StorageClass @ 06/17/24 07:38:54.823
  STEP: Get StorageClass "e2e-bx6gx" @ 06/17/24 07:38:54.828
  STEP: Patching the StorageClass "e2e-bx6gx" @ 06/17/24 07:38:54.83
  STEP: Delete StorageClass "e2e-bx6gx" @ 06/17/24 07:38:54.84
  STEP: Confirm deletion of StorageClass "e2e-bx6gx" @ 06/17/24 07:38:54.844
  STEP: Create a replacement StorageClass @ 06/17/24 07:38:54.847
  STEP: Updating StorageClass "e2e-v2-zdl8g" @ 06/17/24 07:38:54.851
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-zdl8g=updated" @ 06/17/24 07:38:54.856
  STEP: Deleting StorageClass "e2e-v2-zdl8g" via DeleteCollection @ 06/17/24 07:38:54.859
  STEP: Confirm deletion of StorageClass "e2e-v2-zdl8g" @ 06/17/24 07:38:54.864
  I0617 07:38:54.866794 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-2410" for this suite. @ 06/17/24 07:38:54.87
• [0.072 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 06/17/24 07:38:54.874
  I0617 07:38:54.874424 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:38:54.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:38:54.884
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:38:54.887
  STEP: Counting existing ResourceQuota @ 06/17/24 07:38:54.89
  STEP: Creating a ResourceQuota @ 06/17/24 07:38:59.893
  STEP: Ensuring resource quota status is calculated @ 06/17/24 07:38:59.899
  STEP: Creating a ReplicaSet @ 06/17/24 07:39:01.904
  STEP: Ensuring resource quota status captures replicaset creation @ 06/17/24 07:39:01.916
  STEP: Deleting a ReplicaSet @ 06/17/24 07:39:03.923
  STEP: Ensuring resource quota status released usage @ 06/17/24 07:39:03.931
  I0617 07:39:05.936076 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4876" for this suite. @ 06/17/24 07:39:05.941
• [11.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 06/17/24 07:39:05.948
  I0617 07:39:05.948926 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 07:39:05.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:39:05.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:39:05.964
  STEP: Creating configMap with name configmap-test-volume-map-6f5c92ab-816a-4d08-9124-0d5942391a2b @ 06/17/24 07:39:05.97
  STEP: Creating a pod to test consume configMaps @ 06/17/24 07:39:05.974
  STEP: Saw pod success @ 06/17/24 07:39:07.992
  I0617 07:39:07.996259 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-082ce860-d8d6-4e4a-97fd-1e7eaabebad2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 07:39:08.003
  I0617 07:39:08.019160 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2236" for this suite. @ 06/17/24 07:39:08.026
• [2.085 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 06/17/24 07:39:08.037
  I0617 07:39:08.037865 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 07:39:08.04
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:39:08.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:39:08.058
  STEP: Creating a pod to test downward api env vars @ 06/17/24 07:39:08.062
  STEP: Saw pod success @ 06/17/24 07:39:10.081
  I0617 07:39:10.084030 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downward-api-390591cd-c073-4d18-a9d9-b292fe902103 container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 07:39:10.091
  I0617 07:39:10.105309 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7567" for this suite. @ 06/17/24 07:39:10.11
• [2.079 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 06/17/24 07:39:10.118
  I0617 07:39:10.118788 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename daemonsets @ 06/17/24 07:39:10.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:39:10.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:39:10.14
  I0617 07:39:10.162231 19 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 06/17/24 07:39:10.168
  I0617 07:39:10.171574 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:39:10.172060 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 06/17/24 07:39:10.172
  I0617 07:39:10.196209 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:39:10.196258 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:39:11.195084 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:39:11.195228 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:39:12.195146 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0617 07:39:12.195284 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 06/17/24 07:39:12.197
  I0617 07:39:12.215121 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0617 07:39:12.215277 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  I0617 07:39:13.214527 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:39:13.214584 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 06/17/24 07:39:13.214
  I0617 07:39:13.226005 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:39:13.226063 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:39:14.232253 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:39:14.232341 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 07:39:15.224595 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0617 07:39:15.224645 19 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 06/17/24 07:39:15.231
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7005, will wait for the garbage collector to delete the pods @ 06/17/24 07:39:15.231
  I0617 07:39:15.290582 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.326659ms
  I0617 07:39:15.391710 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 101.12005ms
  I0617 07:39:17.896618 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 07:39:17.896670 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0617 07:39:17.901649 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25003"},"items":null}

  I0617 07:39:17.904975 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25003"},"items":null}

  I0617 07:39:17.940211 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7005" for this suite. @ 06/17/24 07:39:17.949
• [7.839 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 06/17/24 07:39:17.96
  I0617 07:39:17.960260 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:39:17.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:39:17.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:39:17.984
  STEP: creating a collection of services @ 06/17/24 07:39:17.989
  I0617 07:39:17.989460 19 service.go:3608] Creating e2e-svc-a-dnghn
  I0617 07:39:18.003501 19 service.go:3608] Creating e2e-svc-b-6vt42
  I0617 07:39:18.020000 19 service.go:3608] Creating e2e-svc-c-jqs2r
  STEP: deleting service collection @ 06/17/24 07:39:18.044
  I0617 07:39:18.077314 19 service.go:3643] Collection of services has been deleted
  I0617 07:39:18.077656 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4848" for this suite. @ 06/17/24 07:39:18.083
• [0.130 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 06/17/24 07:39:18.09
  I0617 07:39:18.090341 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:39:18.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:39:18.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:39:18.108
  I0617 07:39:18.112144 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/17/24 07:39:19.484
  I0617 07:39:19.485280 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-5679 --namespace=crd-publish-openapi-5679 create -f -'
  I0617 07:39:21.634042 19 builder.go:146] stderr: ""
  I0617 07:39:21.634117 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1403-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0617 07:39:21.634216 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-5679 --namespace=crd-publish-openapi-5679 delete e2e-test-crd-publish-openapi-1403-crds test-cr'
  I0617 07:39:21.741383 19 builder.go:146] stderr: ""
  I0617 07:39:21.742383 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1403-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0617 07:39:21.742537 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-5679 --namespace=crd-publish-openapi-5679 apply -f -'
  I0617 07:39:21.838362 19 builder.go:146] stderr: ""
  I0617 07:39:21.838521 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1403-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0617 07:39:21.839502 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-5679 --namespace=crd-publish-openapi-5679 delete e2e-test-crd-publish-openapi-1403-crds test-cr'
  I0617 07:39:21.946214 19 builder.go:146] stderr: ""
  I0617 07:39:21.946260 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1403-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 06/17/24 07:39:21.946
  I0617 07:39:21.946385 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-5679 explain e2e-test-crd-publish-openapi-1403-crds'
  I0617 07:39:22.029558 19 builder.go:146] stderr: ""
  I0617 07:39:22.029648 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-1403-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  I0617 07:39:23.457434 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-5679" for this suite. @ 06/17/24 07:39:23.465
• [5.381 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 06/17/24 07:39:23.472
  I0617 07:39:23.472166 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-watch @ 06/17/24 07:39:23.473
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:39:23.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:39:23.486
  I0617 07:39:23.489763 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Creating first CR  @ 06/17/24 07:39:26.036
  I0617 07:39:26.041162 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-17T07:39:26Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-17T07:39:26Z]] name:name1 resourceVersion:25081 uid:4409570a-3702-48e0-b3f3-ceddb114ff10] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Creating second CR @ 06/17/24 07:39:36.041
  I0617 07:39:36.047054 19 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-17T07:39:36Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-17T07:39:36Z]] name:name2 resourceVersion:25102 uid:8529ff31-5841-48d0-a41d-5a2d03c4421a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying first CR @ 06/17/24 07:39:46.05
  I0617 07:39:46.057352 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-17T07:39:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-17T07:39:46Z]] name:name1 resourceVersion:25119 uid:4409570a-3702-48e0-b3f3-ceddb114ff10] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Modifying second CR @ 06/17/24 07:39:56.058
  I0617 07:39:56.064088 19 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-17T07:39:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-17T07:39:56Z]] name:name2 resourceVersion:25136 uid:8529ff31-5841-48d0-a41d-5a2d03c4421a] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting first CR @ 06/17/24 07:40:06.065
  I0617 07:40:06.073842 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-17T07:39:26Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-17T07:39:46Z]] name:name1 resourceVersion:25154 uid:4409570a-3702-48e0-b3f3-ceddb114ff10] num:map[num1:9223372036854775807 num2:1000000]]}
  STEP: Deleting second CR @ 06/17/24 07:40:16.075
  I0617 07:40:16.083932 19 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-06-17T07:39:36Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-06-17T07:39:56Z]] name:name2 resourceVersion:25171 uid:8529ff31-5841-48d0-a41d-5a2d03c4421a] num:map[num1:9223372036854775807 num2:1000000]]}
  I0617 07:40:26.600467 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9181" for this suite. @ 06/17/24 07:40:26.605
• [63.140 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 06/17/24 07:40:26.613
  I0617 07:40:26.613242 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename init-container @ 06/17/24 07:40:26.615
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:40:26.628
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:40:26.633
  STEP: creating the pod @ 06/17/24 07:40:26.636
  I0617 07:40:26.636631 19 init_container.go:213] PodSpec: initContainers in spec.initContainers
  I0617 07:40:31.146917 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5283" for this suite. @ 06/17/24 07:40:31.151
• [4.544 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 06/17/24 07:40:31.157
  I0617 07:40:31.157641 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:40:31.158
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:40:31.169
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:40:31.172
  STEP: Setting up server cert @ 06/17/24 07:40:31.191
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:40:31.57
  STEP: Deploying the webhook pod @ 06/17/24 07:40:31.578
  STEP: Wait for the deployment to be ready @ 06/17/24 07:40:31.588
  I0617 07:40:31.594304 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/17/24 07:40:33.605
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:40:33.62
  I0617 07:40:34.620563 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 06/17/24 07:40:34.689
  STEP: Creating a configMap that should be mutated @ 06/17/24 07:40:34.708
  STEP: Deleting the collection of validation webhooks @ 06/17/24 07:40:34.737
  STEP: Creating a configMap that should not be mutated @ 06/17/24 07:40:34.765
  I0617 07:40:34.808859 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-384" for this suite. @ 06/17/24 07:40:34.814
  STEP: Destroying namespace "webhook-markers-7250" for this suite. @ 06/17/24 07:40:34.819
• [3.667 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 06/17/24 07:40:34.824
  I0617 07:40:34.825007 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename field-validation @ 06/17/24 07:40:34.827
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:40:34.838
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:40:34.84
  I0617 07:40:34.843733 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  W0617 07:40:34.844846      19 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc0060a5bb0 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  W0617 07:40:37.399031      19 warnings.go:70] unknown field "alpha"
  W0617 07:40:37.399100      19 warnings.go:70] unknown field "beta"
  W0617 07:40:37.399112      19 warnings.go:70] unknown field "delta"
  W0617 07:40:37.399123      19 warnings.go:70] unknown field "epsilon"
  W0617 07:40:37.399135      19 warnings.go:70] unknown field "gamma"
  I0617 07:40:37.937512 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2082" for this suite. @ 06/17/24 07:40:37.942
• [3.122 seconds]
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 06/17/24 07:40:37.946
  I0617 07:40:37.946784 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 07:40:37.948
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:40:37.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:40:37.964
  I0617 07:40:37.977410 19 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  I0617 07:40:42.982203 19 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 06/17/24 07:40:42.982
  I0617 07:40:42.982357 19 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  I0617 07:40:44.987781 19 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0617 07:40:44.995579 19 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  I0617 07:40:47.010714 19 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0617 07:40:47.021633 19 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0617 07:40:47.027596 19 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0617 07:40:47.035670 19 deployment.go:313] Updating deployment test-rollover-deployment
  I0617 07:40:47.035743 19 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  I0617 07:40:49.043073 19 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0617 07:40:49.048661 19 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0617 07:40:49.054477 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0617 07:40:49.054817 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:40:51.062626 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0617 07:40:51.063164 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:40:53.060948 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0617 07:40:53.061229 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:40:55.064309 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0617 07:40:55.064577 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:40:57.062749 19 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0617 07:40:57.062863 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 40, 48, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 40, 45, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:40:59.063327 19 deployment.go:94] 
  I0617 07:40:59.063489 19 deployment.go:974] Ensure that both old replica sets have no replicas
  I0617 07:40:59.072000 19 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1668",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "8f749d59-3891-4d52-b49b-994f36a97b42",
      ResourceVersion: (string) (len=5) "25490",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206844,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206845,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0617 07:40:59.091046 19 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1668",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "09a8742a-e214-499c-8871-987730ce0fe5",
      ResourceVersion: (string) (len=5) "25480",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8f749d59-3891-4d52-b49b-994f36a97b42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 66 37 34 39 64  35 39 2d 33 38 39 31 2d  |\"8f749d59-3891-|
              00000120  34 64 35 32 2d 62 34 39  62 2d 39 39 34 66 33 36  |4d52-b49b-994f36|
              00000130  61 39 37 62 34 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a97b42\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:40:59.092616 19 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0617 07:40:59.093151 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1668",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "0acfc623-d60b-4c27-a9b7-77dd0bb83171",
      ResourceVersion: (string) (len=5) "25489",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206837,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8f749d59-3891-4d52-b49b-994f36a97b42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206837,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  38 66 37 34 39 64 35 39  2d 33 38 39 31 2d 34 64  |8f749d59-3891-4d|
              000000c0  35 32 2d 62 34 39 62 2d  39 39 34 66 33 36 61 39  |52-b49b-994f36a9|
              000000d0  37 62 34 32 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |7b42\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206858,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:40:59.094750 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1668",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "4b1b9d15-d123-4932-98fd-b23e19f35811",
      ResourceVersion: (string) (len=5) "25448",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206845,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "8f749d59-3891-4d52-b49b-994f36a97b42",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 66 37 34 39 64  35 39 2d 33 38 39 31 2d  |\"8f749d59-3891-|
              00000120  34 64 35 32 2d 62 34 39  62 2d 39 39 34 66 33 36  |4d52-b49b-994f36|
              00000130  61 39 37 62 34 32 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |a97b42\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b",
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:40:59.101373 19 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-tlkd6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-tlkd6",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-1668",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "be52bd40-5fcc-4145-9af8-fd02899509e5",
      ResourceVersion: (string) (len=5) "25458",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "ade125e6f6351ef3b7f304e8c4361742fc095bf840ae99367e15bb35fc6c93ab",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.162/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.162/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "09a8742a-e214-499c-8871-987730ce0fe5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 30 39  61 38 37 34 32 61 2d 65  |d\":\"09a8742a-e|
              00000090  32 31 34 2d 34 39 39 63  2d 38 38 37 31 2d 39 38  |214-499c-8871-98|
              000000a0  37 37 33 30 63 65 30 66  65 35 5c 22 7d 22 3a 7b  |7730ce0fe5\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206848,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 36 32 5c 22 7d 22  |2.16.228.162\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-j5zdm",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-j5zdm",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854206847,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.162",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.162"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854206847,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854206847,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=111) "registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a",
          ContainerID: (string) (len=72) "cri-o://8b577eb59a247cbd756a14ffd26338c9bcc8362661be43783318ced70a756edc",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:40:59.105057 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1668" for this suite. @ 06/17/24 07:40:59.111
• [21.171 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 06/17/24 07:40:59.118
  I0617 07:40:59.118762 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 07:40:59.12
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:40:59.136
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:40:59.14
  STEP: Creating secret with name s-test-opt-del-e0d07c0b-1297-4bfc-9ecf-e89aff65512d @ 06/17/24 07:40:59.149
  STEP: Creating secret with name s-test-opt-upd-00b57fa0-1d41-403d-9dc3-9e1eec258add @ 06/17/24 07:40:59.154
  STEP: Creating the pod @ 06/17/24 07:40:59.161
  STEP: Deleting secret s-test-opt-del-e0d07c0b-1297-4bfc-9ecf-e89aff65512d @ 06/17/24 07:41:01.204
  STEP: Updating secret s-test-opt-upd-00b57fa0-1d41-403d-9dc3-9e1eec258add @ 06/17/24 07:41:01.208
  STEP: Creating secret with name s-test-opt-create-a27ae881-b5bc-4a39-ae3f-a7a440dbbec8 @ 06/17/24 07:41:01.215
  STEP: waiting to observe update in volume @ 06/17/24 07:41:01.221
  I0617 07:42:11.605502 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9723" for this suite. @ 06/17/24 07:42:11.611
• [72.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 06/17/24 07:42:11.623
  I0617 07:42:11.623283 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:42:11.625
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:42:11.646
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:42:11.651
  STEP: creating service in namespace services-6542 @ 06/17/24 07:42:11.655
  STEP: creating service affinity-nodeport-transition in namespace services-6542 @ 06/17/24 07:42:11.655
  STEP: creating replication controller affinity-nodeport-transition in namespace services-6542 @ 06/17/24 07:42:11.672
  I0617 07:42:11.683677      19 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-6542, replica count: 3
  I0617 07:42:14.736454      19 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 07:42:14.746773 19 resource.go:361] Creating new exec pod
  I0617 07:42:17.767300 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-6542 exec execpod-affinitykqcxb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0617 07:42:17.934424 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport-transition 80\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0617 07:42:17.934529 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:42:17.934868 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-6542 exec execpod-affinitykqcxb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.97.38.74 80'
  I0617 07:42:18.052800 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.97.38.74 80\nConnection to 10.97.38.74 80 port [tcp/http] succeeded!\n"
  I0617 07:42:18.053033 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:42:18.053162 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-6542 exec execpod-affinitykqcxb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 30296'
  I0617 07:42:18.167215 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 30296\nConnection to 192.168.190.167 30296 port [tcp/*] succeeded!\n"
  I0617 07:42:18.167284 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:42:18.167500 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-6542 exec execpod-affinitykqcxb -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 30296'
  I0617 07:42:18.306234 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 30296\nConnection to 192.168.190.169 30296 port [tcp/*] succeeded!\n"
  I0617 07:42:18.306305 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:42:18.314608 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-6542 exec execpod-affinitykqcxb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:30296/ ; done'
  I0617 07:42:18.553797 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n"
  I0617 07:42:18.553914 19 builder.go:147] stdout: "\naffinity-nodeport-transition-jn4sn\naffinity-nodeport-transition-jn4sn\naffinity-nodeport-transition-jn4sn\naffinity-nodeport-transition-jn4sn\naffinity-nodeport-transition-j6dxl\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-j6dxl\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-jn4sn\naffinity-nodeport-transition-j6dxl\naffinity-nodeport-transition-j6dxl\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-jn4sn\naffinity-nodeport-transition-b2l4h"
  I0617 07:42:18.553944 19 service.go:242] Received response from host: affinity-nodeport-transition-jn4sn
  I0617 07:42:18.553964 19 service.go:242] Received response from host: affinity-nodeport-transition-jn4sn
  I0617 07:42:18.553980 19 service.go:242] Received response from host: affinity-nodeport-transition-jn4sn
  I0617 07:42:18.554002 19 service.go:242] Received response from host: affinity-nodeport-transition-jn4sn
  I0617 07:42:18.554019 19 service.go:242] Received response from host: affinity-nodeport-transition-j6dxl
  I0617 07:42:18.554034 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.554052 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.554066 19 service.go:242] Received response from host: affinity-nodeport-transition-j6dxl
  I0617 07:42:18.554081 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.554095 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.554109 19 service.go:242] Received response from host: affinity-nodeport-transition-jn4sn
  I0617 07:42:18.554123 19 service.go:242] Received response from host: affinity-nodeport-transition-j6dxl
  I0617 07:42:18.554137 19 service.go:242] Received response from host: affinity-nodeport-transition-j6dxl
  I0617 07:42:18.554150 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.554164 19 service.go:242] Received response from host: affinity-nodeport-transition-jn4sn
  I0617 07:42:18.554227 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.572731 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-6542 exec execpod-affinitykqcxb -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:30296/ ; done'
  I0617 07:42:18.751409 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:30296/\n"
  I0617 07:42:18.751602 19 builder.go:147] stdout: "\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h\naffinity-nodeport-transition-b2l4h"
  I0617 07:42:18.751633 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751647 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751658 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751666 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751677 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751686 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751694 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751703 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751712 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751720 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751728 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751737 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751745 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751753 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751761 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.751769 19 service.go:242] Received response from host: affinity-nodeport-transition-b2l4h
  I0617 07:42:18.752678 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-6542, will wait for the garbage collector to delete the pods @ 06/17/24 07:42:18.764
  I0617 07:42:18.823618 19 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 6.096886ms
  I0617 07:42:18.924651 19 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 101.030164ms
  I0617 07:42:22.648380 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6542" for this suite. @ 06/17/24 07:42:22.653
• [11.035 seconds]
------------------------------
SS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 06/17/24 07:42:22.658
  I0617 07:42:22.658336 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 07:42:22.661
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:42:22.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:42:22.676
  STEP: Creating service test in namespace statefulset-1086 @ 06/17/24 07:42:22.68
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 06/17/24 07:42:22.685
  STEP: Creating stateful set ss in namespace statefulset-1086 @ 06/17/24 07:42:22.689
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-1086 @ 06/17/24 07:42:22.695
  I0617 07:42:22.698688 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0617 07:42:32.701222 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 06/17/24 07:42:32.701
  I0617 07:42:32.704241 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:42:32.822997 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:42:32.823063 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:42:32.823086 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:42:32.827448 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0617 07:42:42.829325 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:42:42.829499 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0617 07:42:42.846378 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.999999681s
  I0617 07:42:43.850595 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.996902373s
  I0617 07:42:44.856153 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.991836413s
  I0617 07:42:45.861840 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.987115902s
  I0617 07:42:46.868691 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.980533395s
  I0617 07:42:47.874753 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.973674396s
  I0617 07:42:48.879871 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.968384134s
  I0617 07:42:49.885247 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.963378541s
  I0617 07:42:50.890076 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.958022606s
  I0617 07:42:51.894529 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 953.154068ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-1086 @ 06/17/24 07:42:52.895
  I0617 07:42:52.900716 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 07:42:53.035022 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0617 07:42:53.035093 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 07:42:53.035134 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 07:42:53.041061 19 wait.go:40] Found 1 stateful pods, waiting for 3
  I0617 07:43:03.039986 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:43:03.040062 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:43:03.040078 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 06/17/24 07:43:03.04
  STEP: Scale down will halt with unhealthy stateful pod @ 06/17/24 07:43:03.04
  I0617 07:43:03.046193 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:43:03.176574 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:43:03.176665 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:43:03.176693 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:43:03.176875 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:43:03.291536 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:43:03.291583 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:43:03.291597 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:43:03.291774 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:43:03.397614 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:43:03.397704 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:43:03.397732 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:43:03.397765 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0617 07:43:03.402758 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0617 07:43:13.410627 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:43:13.410773 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:43:13.410844 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:43:13.423662 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999999663s
  I0617 07:43:14.429232 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.996171658s
  I0617 07:43:15.434387 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.990635632s
  I0617 07:43:16.439505 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.985474275s
  I0617 07:43:17.445720 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.979657611s
  I0617 07:43:18.451092 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.973570961s
  I0617 07:43:19.456279 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.968688543s
  I0617 07:43:20.462610 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.96347253s
  I0617 07:43:21.467134 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.957291814s
  I0617 07:43:22.472825 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 952.655488ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-1086 @ 06/17/24 07:43:23.475
  I0617 07:43:23.482316 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 07:43:23.616147 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0617 07:43:23.616255 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 07:43:23.616285 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 07:43:23.616392 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 07:43:23.751318 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0617 07:43:23.751408 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 07:43:23.751436 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 07:43:23.751536 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-1086 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 07:43:23.879393 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0617 07:43:23.879633 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 07:43:23.879673 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 07:43:23.879779 19 rest.go:150] Scaling statefulset ss to 0
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 06/17/24 07:43:33.889
  I0617 07:43:33.889902 19 statefulset.go:135] Deleting all statefulset in ns statefulset-1086
  I0617 07:43:33.893427 19 rest.go:150] Scaling statefulset ss to 0
  I0617 07:43:33.899112 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 07:43:33.901886 19 rest.go:88] Deleting statefulset ss
  I0617 07:43:33.912712 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-1086" for this suite. @ 06/17/24 07:43:33.918
• [71.267 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 06/17/24 07:43:33.927
  I0617 07:43:33.927372 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 07:43:33.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:43:33.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:43:33.945
  STEP: Creating service test in namespace statefulset-5236 @ 06/17/24 07:43:33.949
  STEP: Creating statefulset ss in namespace statefulset-5236 @ 06/17/24 07:43:33.955
  I0617 07:43:33.967084 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0617 07:43:43.968389 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 06/17/24 07:43:43.973
  STEP: updating a scale subresource @ 06/17/24 07:43:43.976
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/17/24 07:43:43.981
  STEP: Patch a scale subresource @ 06/17/24 07:43:43.984
  STEP: verifying the statefulset Spec.Replicas was modified @ 06/17/24 07:43:43.991
  I0617 07:43:43.996108 19 statefulset.go:135] Deleting all statefulset in ns statefulset-5236
  I0617 07:43:43.999493 19 rest.go:150] Scaling statefulset ss to 0
  I0617 07:43:54.016343 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 07:43:54.019439 19 rest.go:88] Deleting statefulset ss
  I0617 07:43:54.030115 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5236" for this suite. @ 06/17/24 07:43:54.034
• [20.113 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 06/17/24 07:43:54.04
  I0617 07:43:54.040950 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 07:43:54.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:43:54.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:43:54.059
  STEP: creating the pod @ 06/17/24 07:43:54.063
  STEP: submitting the pod to kubernetes @ 06/17/24 07:43:54.063
  STEP: verifying QOS class is set on the pod @ 06/17/24 07:43:54.072
  I0617 07:43:54.075462 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7073" for this suite. @ 06/17/24 07:43:54.08
• [0.044 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 06/17/24 07:43:54.086
  I0617 07:43:54.086418 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:43:54.088
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:43:54.102
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:43:54.107
  STEP: Setting up server cert @ 06/17/24 07:43:54.128
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:43:54.715
  STEP: Deploying the webhook pod @ 06/17/24 07:43:54.723
  STEP: Wait for the deployment to be ready @ 06/17/24 07:43:54.735
  I0617 07:43:54.742459 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:43:56.752
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:43:56.765
  I0617 07:43:57.766160 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 06/17/24 07:43:57.773
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/17/24 07:43:57.773
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 06/17/24 07:43:57.79
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 06/17/24 07:43:58.8
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/17/24 07:43:58.8
  STEP: Having no error when timeout is longer than webhook latency @ 06/17/24 07:43:59.826
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/17/24 07:43:59.826
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 06/17/24 07:44:04.862
  STEP: Registering slow webhook via the AdmissionRegistration API @ 06/17/24 07:44:04.862
  I0617 07:44:09.943011 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8949" for this suite. @ 06/17/24 07:44:09.948
  STEP: Destroying namespace "webhook-markers-8959" for this suite. @ 06/17/24 07:44:09.956
• [15.876 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 06/17/24 07:44:09.963
  I0617 07:44:09.963352 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 07:44:09.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:44:09.978
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:44:09.982
  I0617 07:44:09.987544 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-9969 create -f -'
  I0617 07:44:10.142920 19 builder.go:146] stderr: ""
  I0617 07:44:10.142996 19 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0617 07:44:10.143064 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-9969 create -f -'
  I0617 07:44:10.323807 19 builder.go:146] stderr: ""
  I0617 07:44:10.323887 19 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 06/17/24 07:44:10.323
  I0617 07:44:11.329448 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:44:11.329505 19 framework.go:733] Found 0 / 1
  I0617 07:44:12.328427 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:44:12.328487 19 framework.go:733] Found 1 / 1
  I0617 07:44:12.328524 19 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0617 07:44:12.331574 19 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0617 07:44:12.331616 19 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0617 07:44:12.331681 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-9969 describe pod agnhost-primary-vnp6r'
  I0617 07:44:12.432009 19 builder.go:146] stderr: ""
  I0617 07:44:12.432301 19 builder.go:147] stdout: "Name:             agnhost-primary-vnp6r\nNamespace:        kubectl-9969\nPriority:         0\nService Account:  default\nNode:             ck-130-worker-1.novalocal/192.168.190.169\nStart Time:       Mon, 17 Jun 2024 07:44:10 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 94f9006278adf5a2bb369328e7ce87e95d7a77e2581af0c2b34d14fe9e6f56dc\n                  cni.projectcalico.org/podIP: 172.16.228.168/32\n                  cni.projectcalico.org/podIPs: 172.16.228.168/32\nStatus:           Running\nIP:               172.16.228.168\nIPs:\n  IP:           172.16.228.168\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   cri-o://b319b829b74a5ec6bb52ae83d760ce7af2af9e91bfe8b437f177f787195d0734\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       registry.k8s.io/e2e-test-images/agnhost@sha256:c9997bf8d2e223d7d2a0078dcfb11a653e9b16cf09418829ec03e1d57ca9628a\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Mon, 17 Jun 2024 07:44:10 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-7wm4q (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-7wm4q:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  2s    default-scheduler  Successfully assigned kubectl-9969/agnhost-primary-vnp6r to ck-130-worker-1.novalocal\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0617 07:44:12.433834 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-9969 describe rc agnhost-primary'
  I0617 07:44:12.553233 19 builder.go:146] stderr: ""
  I0617 07:44:12.553339 19 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-9969\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  2s    replication-controller  Created pod: agnhost-primary-vnp6r\n"
  I0617 07:44:12.553460 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-9969 describe service agnhost-primary'
  I0617 07:44:12.644220 19 builder.go:146] stderr: ""
  I0617 07:44:12.644343 19 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-9969\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.97.232.236\nIPs:               10.97.232.236\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         172.16.228.168:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0617 07:44:12.650047 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-9969 describe node ck-130-master.novalocal'
  I0617 07:44:12.769102 19 builder.go:146] stderr: ""
  I0617 07:44:12.769394 19 builder.go:147] stdout: "Name:               ck-130-master.novalocal\nRoles:              control-plane\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ck-130-master.novalocal\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/control-plane=\n                    node.kubernetes.io/exclude-from-external-load-balancers=\nAnnotations:        kubeadm.alpha.kubernetes.io/cri-socket: unix:///var/run/crio/crio.sock\n                    node.alpha.kubernetes.io/ttl: 0\n                    projectcalico.org/IPv4Address: 192.168.190.151/24\n                    projectcalico.org/IPv4IPIPTunnelAddr: 172.16.88.128\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Mon, 17 Jun 2024 06:12:54 +0000\nTaints:             node-role.kubernetes.io/control-plane:NoSchedule\nUnschedulable:      false\nLease:\n  HolderIdentity:  ck-130-master.novalocal\n  AcquireTime:     <unset>\n  RenewTime:       Mon, 17 Jun 2024 07:44:12 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Mon, 17 Jun 2024 06:25:46 +0000   Mon, 17 Jun 2024 06:25:46 +0000   CalicoIsUp                   Calico is running on this node\n  MemoryPressure       False   Mon, 17 Jun 2024 07:39:56 +0000   Mon, 17 Jun 2024 06:12:54 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Mon, 17 Jun 2024 07:39:56 +0000   Mon, 17 Jun 2024 06:12:54 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Mon, 17 Jun 2024 07:39:56 +0000   Mon, 17 Jun 2024 06:12:54 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Mon, 17 Jun 2024 07:39:56 +0000   Mon, 17 Jun 2024 06:13:07 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  192.168.190.151\n  Hostname:    ck-130-master.novalocal\nCapacity:\n  cpu:                4\n  ephemeral-storage:  103714796Ki\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16117492Ki\n  pods:               110\nAllocatable:\n  cpu:                4\n  ephemeral-storage:  95583555836\n  hugepages-1Gi:      0\n  hugepages-2Mi:      0\n  memory:             16015092Ki\n  pods:               110\nSystem Info:\n  Machine ID:                 37ca1cdf6f55442187f28112da093ab0\n  System UUID:                37ca1cdf-6f55-4421-87f2-8112da093ab0\n  Boot ID:                    894ede83-0ee5-4456-aeec-5d6c9a6fcb1a\n  Kernel Version:             5.14.0-284.11.1.el9_2.x86_64\n  OS Image:                   Rocky Linux 9.2 (Blue Onyx)\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  cri-o://1.31.0\n  Kubelet Version:            v1.30.2\n  Kube-Proxy Version:         v1.30.2\nNon-terminated Pods:          (8 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  kube-system                 calico-node-fpw97                                          250m (6%)     0 (0%)      0 (0%)           0 (0%)         78m\n  kube-system                 coredns-7db6d8ff4d-slj9b                                   100m (2%)     0 (0%)      70Mi (0%)        170Mi (1%)     91m\n  kube-system                 etcd-ck-130-master.novalocal                               100m (2%)     0 (0%)      100Mi (0%)       0 (0%)         91m\n  kube-system                 kube-apiserver-ck-130-master.novalocal                     250m (6%)     0 (0%)      0 (0%)           0 (0%)         91m\n  kube-system                 kube-controller-manager-ck-130-master.novalocal            200m (5%)     0 (0%)      0 (0%)           0 (0%)         91m\n  kube-system                 kube-proxy-5q484                                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         91m\n  kube-system                 kube-scheduler-ck-130-master.novalocal                     100m (2%)     0 (0%)      0 (0%)           0 (0%)         91m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-5d2j4    0 (0%)        0 (0%)      0 (0%)           0 (0%)         52m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource           Requests    Limits\n  --------           --------    ------\n  cpu                1 (25%)     0 (0%)\n  memory             170Mi (1%)  170Mi (1%)\n  ephemeral-storage  0 (0%)      0 (0%)\n  hugepages-1Gi      0 (0%)      0 (0%)\n  hugepages-2Mi      0 (0%)      0 (0%)\nEvents:              <none>\n"
  I0617 07:44:12.770038 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-9969 describe namespace kubectl-9969'
  I0617 07:44:12.851832 19 builder.go:146] stderr: ""
  I0617 07:44:12.851921 19 builder.go:147] stdout: "Name:         kubectl-9969\nLabels:       e2e-framework=kubectl\n              e2e-run=0f895fec-2dd6-4d97-9be2-9e4c7f72c132\n              kubernetes.io/metadata.name=kubectl-9969\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  <none>\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0617 07:44:12.852232 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9969" for this suite. @ 06/17/24 07:44:12.858
• [2.902 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 06/17/24 07:44:12.866
  I0617 07:44:12.866640 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/17/24 07:44:12.868
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:44:12.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:44:12.884
  STEP: create the container to handle the HTTPGet hook request. @ 06/17/24 07:44:12.892
  STEP: create the pod with lifecycle hook @ 06/17/24 07:44:14.915
  STEP: check poststart hook @ 06/17/24 07:44:16.931
  STEP: delete the pod with lifecycle hook @ 06/17/24 07:44:16.94
  I0617 07:44:20.965538 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-8142" for this suite. @ 06/17/24 07:44:20.974
• [8.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 06/17/24 07:44:20.981
  I0617 07:44:20.981296 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename disruption @ 06/17/24 07:44:20.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:44:20.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:44:21.002
  STEP: Creating a kubernetes client @ 06/17/24 07:44:21.005
  I0617 07:44:21.005755 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename disruption-2 @ 06/17/24 07:44:21.007
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:44:21.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:44:21.024
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:44:21.032
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:44:23.044
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:44:23.052
  STEP: listing a collection of PDBs across all namespaces @ 06/17/24 07:44:23.056
  STEP: listing a collection of PDBs in namespace disruption-1417 @ 06/17/24 07:44:23.059
  STEP: deleting a collection of PDBs @ 06/17/24 07:44:23.061
  STEP: Waiting for the PDB collection to be deleted @ 06/17/24 07:44:23.072
  I0617 07:44:23.075158 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-1488" for this suite. @ 06/17/24 07:44:23.079
  I0617 07:44:23.084598 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-1417" for this suite. @ 06/17/24 07:44:23.089
• [2.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 06/17/24 07:44:23.1
  I0617 07:44:23.100902 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename apf @ 06/17/24 07:44:23.102
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:44:23.118
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:44:23.123
  STEP: getting /apis @ 06/17/24 07:44:23.129
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 06/17/24 07:44:23.135
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 06/17/24 07:44:23.136
  STEP: creating @ 06/17/24 07:44:23.138
  STEP: getting @ 06/17/24 07:44:23.152
  STEP: listing @ 06/17/24 07:44:23.157
  STEP: watching @ 06/17/24 07:44:23.16
  I0617 07:44:23.160770 19 flowcontrol.go:620] starting watch
  STEP: patching @ 06/17/24 07:44:23.162
  STEP: updating @ 06/17/24 07:44:23.167
  I0617 07:44:23.175372 19 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 06/17/24 07:44:23.175
  STEP: patching /status @ 06/17/24 07:44:23.178
  STEP: updating /status @ 06/17/24 07:44:23.184
  STEP: deleting @ 06/17/24 07:44:23.195
  STEP: deleting a collection @ 06/17/24 07:44:23.205
  I0617 07:44:23.221335 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-956" for this suite. @ 06/17/24 07:44:23.226
• [0.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 06/17/24 07:44:23.236
  I0617 07:44:23.236844 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 07:44:23.238
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:44:23.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:44:23.257
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 07:44:23.26
  STEP: Saw pod success @ 06/17/24 07:44:27.284
  I0617 07:44:27.287759 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-dbd055e5-bf2e-4d32-bdee-8c46043d522a container client-container: <nil>
  STEP: delete the pod @ 06/17/24 07:44:27.304
  I0617 07:44:27.319281 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4597" for this suite. @ 06/17/24 07:44:27.323
• [4.093 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 06/17/24 07:44:27.33
  I0617 07:44:27.330541 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 07:44:27.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:44:27.348
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:44:27.351
  STEP: Creating a test headless service @ 06/17/24 07:44:27.354
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1199 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1199;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1199 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1199;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1199.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-1199.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1199.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-1199.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-1199.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-1199.svc;check="$$(dig +notcp +noall +answer +search 186.115.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.115.186_udp@PTR;check="$$(dig +tcp +noall +answer +search 186.115.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.115.186_tcp@PTR;sleep 1; done
   @ 06/17/24 07:44:27.369
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1199 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1199;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1199 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1199;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-1199.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-1199.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-1199.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-1199.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-1199.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-1199.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-1199.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-1199.svc;check="$$(dig +notcp +noall +answer +search 186.115.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.115.186_udp@PTR;check="$$(dig +tcp +noall +answer +search 186.115.99.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.99.115.186_tcp@PTR;sleep 1; done
   @ 06/17/24 07:44:27.369
  STEP: creating a pod to probe DNS @ 06/17/24 07:44:27.369
  STEP: submitting the pod to kubernetes @ 06/17/24 07:44:27.369
  STEP: retrieving the pod @ 06/17/24 07:44:29.388
  STEP: looking for the results for each expected name from probers @ 06/17/24 07:44:29.39
  I0617 07:44:29.394835 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.398085 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.401275 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.403882 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.406507 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.408851 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.411913 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.414464 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.428511 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.431457 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.434350 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.437409 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.440228 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.443089 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.445983 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.448488 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:29.460252 19 dns_common.go:489] Lookups using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1199 wheezy_tcp@dns-test-service.dns-1199 wheezy_udp@dns-test-service.dns-1199.svc wheezy_tcp@dns-test-service.dns-1199.svc wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1199 jessie_tcp@dns-test-service.dns-1199 jessie_udp@dns-test-service.dns-1199.svc jessie_tcp@dns-test-service.dns-1199.svc jessie_udp@_http._tcp.dns-test-service.dns-1199.svc jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc]

  I0617 07:44:29.467349 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:44:29.473546 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:44:29.478893 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:44:34.395799 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.399478 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.402508 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.405903 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.409208 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.412695 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.416371 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.419236 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.433081 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.436830 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.439967 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.443049 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.446111 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.450087 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.452734 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.455645 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:34.466761 19 dns_common.go:489] Lookups using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1199 wheezy_tcp@dns-test-service.dns-1199 wheezy_udp@dns-test-service.dns-1199.svc wheezy_tcp@dns-test-service.dns-1199.svc wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1199 jessie_tcp@dns-test-service.dns-1199 jessie_udp@dns-test-service.dns-1199.svc jessie_tcp@dns-test-service.dns-1199.svc jessie_udp@_http._tcp.dns-test-service.dns-1199.svc jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc]

  I0617 07:44:34.472309 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:44:34.476813 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:44:34.481274 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:44:39.397128 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.400587 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.403800 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.406678 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.410496 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.414470 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.417730 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.420806 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.436803 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.439849 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.442522 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.445144 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.447778 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.450854 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.453348 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.455868 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:39.466530 19 dns_common.go:489] Lookups using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1199 wheezy_tcp@dns-test-service.dns-1199 wheezy_udp@dns-test-service.dns-1199.svc wheezy_tcp@dns-test-service.dns-1199.svc wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1199 jessie_tcp@dns-test-service.dns-1199 jessie_udp@dns-test-service.dns-1199.svc jessie_tcp@dns-test-service.dns-1199.svc jessie_udp@_http._tcp.dns-test-service.dns-1199.svc jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc]

  I0617 07:44:39.471903 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:44:39.476444 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:44:39.481134 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:44:44.396400 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.400741 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.404020 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.407723 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.411395 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.414786 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.418597 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.422927 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.442241 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.446891 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.452164 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.454757 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.457636 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.460754 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.464131 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.468346 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:44.482434 19 dns_common.go:489] Lookups using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1199 wheezy_tcp@dns-test-service.dns-1199 wheezy_udp@dns-test-service.dns-1199.svc wheezy_tcp@dns-test-service.dns-1199.svc wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1199 jessie_tcp@dns-test-service.dns-1199 jessie_udp@dns-test-service.dns-1199.svc jessie_tcp@dns-test-service.dns-1199.svc jessie_udp@_http._tcp.dns-test-service.dns-1199.svc jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc]

  I0617 07:44:44.488603 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:44:44.494576 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:44:44.500221 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:44:49.396102 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.399549 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.402475 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.405313 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.408335 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.412547 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.417421 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.420637 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.436006 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.439000 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.441783 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.444428 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.447449 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.450156 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.453498 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.456463 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:49.468623 19 dns_common.go:489] Lookups using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1199 wheezy_tcp@dns-test-service.dns-1199 wheezy_udp@dns-test-service.dns-1199.svc wheezy_tcp@dns-test-service.dns-1199.svc wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1199 jessie_tcp@dns-test-service.dns-1199 jessie_udp@dns-test-service.dns-1199.svc jessie_tcp@dns-test-service.dns-1199.svc jessie_udp@_http._tcp.dns-test-service.dns-1199.svc jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc]

  I0617 07:44:49.474741 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:44:49.480424 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:44:49.486075 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:44:54.396130 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.399827 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.403668 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.407330 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.411004 19 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.416088 19 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.421900 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.426212 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.445963 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.449870 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.453921 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.457557 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199 from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.461151 19 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.465393 19 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.470556 19 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.474915 19 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:54.492522 19 dns_common.go:489] Lookups using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 failed for: [wheezy_udp@dns-test-service wheezy_tcp@dns-test-service wheezy_udp@dns-test-service.dns-1199 wheezy_tcp@dns-test-service.dns-1199 wheezy_udp@dns-test-service.dns-1199.svc wheezy_tcp@dns-test-service.dns-1199.svc wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc jessie_udp@dns-test-service jessie_tcp@dns-test-service jessie_udp@dns-test-service.dns-1199 jessie_tcp@dns-test-service.dns-1199 jessie_udp@dns-test-service.dns-1199.svc jessie_tcp@dns-test-service.dns-1199.svc jessie_udp@_http._tcp.dns-test-service.dns-1199.svc jessie_tcp@_http._tcp.dns-test-service.dns-1199.svc]

  I0617 07:44:54.500345 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:44:54.507651 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:44:54.516023 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:44:59.414694 19 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:59.417948 19 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc from pod dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787: the server could not find the requested resource (get pods dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787)
  I0617 07:44:59.474884 19 dns_common.go:489] Lookups using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 failed for: [wheezy_udp@_http._tcp.dns-test-service.dns-1199.svc wheezy_tcp@_http._tcp.dns-test-service.dns-1199.svc]

  I0617 07:44:59.480768 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 07:44:59.486375 19 dns_common.go:495] Pod client logs for querier: 
  I0617 07:44:59.490925 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 07:45:04.472597 19 dns_common.go:527] DNS probes using dns-1199/dns-test-073855e7-1e29-42c3-8bc5-df8b4be26787 succeeded

  STEP: deleting the pod @ 06/17/24 07:45:04.473
  STEP: deleting the test service @ 06/17/24 07:45:04.491
  STEP: deleting the test headless service @ 06/17/24 07:45:04.525
  I0617 07:45:04.535244 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1199" for this suite. @ 06/17/24 07:45:04.541
• [37.216 seconds]
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 06/17/24 07:45:04.547
  I0617 07:45:04.547279 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 07:45:04.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:45:04.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:45:04.567
  STEP: creating the pod with failed condition @ 06/17/24 07:45:04.571
  STEP: updating the pod @ 06/17/24 07:47:04.579
  I0617 07:47:05.093583 19 pod_client.go:141] Successfully updated pod "var-expansion-93198191-5439-4809-a704-033c0c0a11b1"
  STEP: waiting for pod running @ 06/17/24 07:47:05.093
  STEP: deleting the pod gracefully @ 06/17/24 07:47:07.102
  I0617 07:47:07.102778 19 delete.go:62] Deleting pod "var-expansion-93198191-5439-4809-a704-033c0c0a11b1" in namespace "var-expansion-7196"
  I0617 07:47:07.109693 19 delete.go:70] Wait up to 5m0s for pod "var-expansion-93198191-5439-4809-a704-033c0c0a11b1" to be fully deleted
  I0617 07:47:39.198708 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7196" for this suite. @ 06/17/24 07:47:39.208
• [154.668 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 06/17/24 07:47:39.215
  I0617 07:47:39.215386 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 07:47:39.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:47:39.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:47:39.241
  STEP: Creating service test in namespace statefulset-2583 @ 06/17/24 07:47:39.245
  STEP: Creating stateful set ss in namespace statefulset-2583 @ 06/17/24 07:47:39.249
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2583 @ 06/17/24 07:47:39.258
  I0617 07:47:39.263462 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0617 07:47:49.264321 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 06/17/24 07:47:49.264
  I0617 07:47:49.267818 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-2583 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:47:49.399739 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:47:49.399813 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:47:49.399845 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:47:49.403722 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  I0617 07:47:59.405874 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:47:59.406005 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0617 07:47:59.421083 19 resource.go:168] POD   NODE                       PHASE    GRACE  CONDITIONS
  I0617 07:47:59.421486 19 resource.go:175] ss-0  ck-130-worker-1.novalocal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:39 +0000 UTC  }]
  I0617 07:47:59.421518 19 resource.go:178] 
  I0617 07:47:59.421534 19 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 1
  I0617 07:48:00.428649 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.995339695s
  I0617 07:48:01.434741 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.988392493s
  I0617 07:48:02.439709 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.982404588s
  I0617 07:48:03.445868 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.977702127s
  I0617 07:48:04.451930 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.9716386s
  I0617 07:48:05.456920 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.965466692s
  I0617 07:48:06.462204 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.960487708s
  I0617 07:48:07.470561 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.954810901s
  I0617 07:48:08.475947 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 946.355218ms
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2583 @ 06/17/24 07:48:09.476
  I0617 07:48:09.481701 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-2583 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 07:48:09.621689 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0617 07:48:09.621785 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 07:48:09.621812 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 07:48:09.621967 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-2583 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 07:48:09.747253 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0617 07:48:09.747325 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 07:48:09.747343 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 07:48:09.747434 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-2583 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 07:48:09.880418 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0617 07:48:09.880482 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 07:48:09.880503 19 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 07:48:09.885443 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=false
  I0617 07:48:19.886415 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:48:19.886489 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0617 07:48:19.886518 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 06/17/24 07:48:19.886
  I0617 07:48:19.890509 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-2583 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:48:19.992473 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:48:19.992548 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:48:19.992576 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:48:19.992693 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-2583 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:48:20.096749 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:48:20.096827 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:48:20.096842 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:48:20.096905 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-2583 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 07:48:20.209539 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 07:48:20.209647 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 07:48:20.209693 19 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 07:48:20.209716 19 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0617 07:48:20.213792 19 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 3
  I0617 07:48:30.221465 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:48:30.221516 19 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:48:30.221529 19 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0617 07:48:30.237843 19 resource.go:168] POD   NODE                       PHASE    GRACE  CONDITIONS
  I0617 07:48:30.238060 19 resource.go:175] ss-0  ck-130-worker-1.novalocal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:40 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:39 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:39 +0000 UTC  }]
  I0617 07:48:30.238147 19 resource.go:175] ss-1  ck-130-worker-2.novalocal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:59 +0000 UTC  }]
  I0617 07:48:30.238288 19 resource.go:175] ss-2  ck-130-worker-3.novalocal  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:59 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:59 +0000 UTC  }]
  I0617 07:48:30.238337 19 resource.go:178] 
  I0617 07:48:30.238359 19 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  I0617 07:48:31.242362 19 resource.go:168] POD   NODE                       PHASE      GRACE  CONDITIONS
  I0617 07:48:31.242458 19 resource.go:175] ss-2  ck-130-worker-3.novalocal  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:30 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:59 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:48:20 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-06-17 07:47:59 +0000 UTC  }]
  I0617 07:48:31.242470 19 resource.go:178] 
  I0617 07:48:31.242480 19 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 1
  I0617 07:48:32.245874 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 7.990747089s
  I0617 07:48:33.250288 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 6.987117123s
  I0617 07:48:34.254647 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.982853728s
  I0617 07:48:35.259504 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.978455146s
  I0617 07:48:36.264083 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.973610894s
  I0617 07:48:37.268813 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.96903891s
  I0617 07:48:38.273396 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.964217913s
  I0617 07:48:39.277813 19 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 959.727758ms
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2583 @ 06/17/24 07:48:40.278
  I0617 07:48:40.282612 19 rest.go:150] Scaling statefulset ss to 0
  I0617 07:48:40.288916 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 07:48:40.293319 19 statefulset.go:135] Deleting all statefulset in ns statefulset-2583
  I0617 07:48:40.297271 19 rest.go:150] Scaling statefulset ss to 0
  I0617 07:48:40.305453 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 07:48:40.309778 19 rest.go:88] Deleting statefulset ss
  I0617 07:48:40.326012 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2583" for this suite. @ 06/17/24 07:48:40.333
• [61.125 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 06/17/24 07:48:40.341
  I0617 07:48:40.341105 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename disruption @ 06/17/24 07:48:40.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:48:40.369
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:48:40.376
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:48:40.388
  STEP: Updating PodDisruptionBudget status @ 06/17/24 07:48:42.392
  STEP: Waiting for all pods to be running @ 06/17/24 07:48:42.399
  I0617 07:48:42.402779 19 disruption.go:578] running pods: 0 < 1
  STEP: locating a running pod @ 06/17/24 07:48:44.405
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:48:44.415
  STEP: Patching PodDisruptionBudget status @ 06/17/24 07:48:44.423
  STEP: Waiting for the pdb to be processed @ 06/17/24 07:48:44.432
  I0617 07:48:44.436312 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-7388" for this suite. @ 06/17/24 07:48:44.441
• [4.106 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 06/17/24 07:48:44.446
  I0617 07:48:44.446992 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/17/24 07:48:44.449
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:48:44.46
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:48:44.464
  I0617 07:48:44.466957 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:48:45.007053 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-8117" for this suite. @ 06/17/24 07:48:45.012
• [0.572 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 06/17/24 07:48:45.02
  I0617 07:48:45.020644 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename gc @ 06/17/24 07:48:45.022
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:48:45.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:48:45.036
  I0617 07:48:45.073512 19 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"188657dc-1c7f-4926-8ff7-8720c9f3ba6e", Controller:(*bool)(0xc0045a8e96), BlockOwnerDeletion:(*bool)(0xc0045a8e97)}}
  I0617 07:48:45.088852 19 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"2681b295-2600-4a21-933a-89b8c648ba2b", Controller:(*bool)(0xc0027f0fbe), BlockOwnerDeletion:(*bool)(0xc0027f0fbf)}}
  I0617 07:48:45.099983 19 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"a9c5323b-da32-4b38-a259-6f3a46587771", Controller:(*bool)(0xc0027f1a2e), BlockOwnerDeletion:(*bool)(0xc0027f1a2f)}}
  I0617 07:48:50.110751 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-1257" for this suite. @ 06/17/24 07:48:50.116
• [5.104 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 06/17/24 07:48:50.127
  I0617 07:48:50.127193 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 07:48:50.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:48:50.14
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:48:50.144
  STEP: Counting existing ResourceQuota @ 06/17/24 07:49:07.151
  STEP: Creating a ResourceQuota @ 06/17/24 07:49:12.158
  STEP: Ensuring resource quota status is calculated @ 06/17/24 07:49:12.165
  STEP: Creating a ConfigMap @ 06/17/24 07:49:14.172
  STEP: Ensuring resource quota status captures configMap creation @ 06/17/24 07:49:14.186
  STEP: Deleting a ConfigMap @ 06/17/24 07:49:16.192
  STEP: Ensuring resource quota status released usage @ 06/17/24 07:49:16.197
  I0617 07:49:18.203036 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9270" for this suite. @ 06/17/24 07:49:18.209
• [28.089 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 06/17/24 07:49:18.216
  I0617 07:49:18.216209 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 07:49:18.218
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:49:18.23
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:49:18.233
  STEP: creating service multiprotocol-test in namespace services-3564 @ 06/17/24 07:49:18.237
  STEP: creating pod pod1 in namespace services-3564 @ 06/17/24 07:49:18.253
  STEP: Creating pod pod1 in namespace services-3564 @ 06/17/24 07:49:18.253
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-3564 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 06/17/24 07:49:20.281
  I0617 07:49:20.289772 19 service.go:4351] successfully validated that service multiprotocol-test in namespace services-3564 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 06/17/24 07:49:20.289
  I0617 07:49:20.289853 19 resource.go:361] Creating new exec pod
  I0617 07:49:22.302977 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80'
  I0617 07:49:22.461883 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.149.251 80\nConnection to 10.104.149.251 80 port [tcp/http] succeeded!\n"
  I0617 07:49:22.461956 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:49:22.462082 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.104.149.251 80'
  I0617 07:49:26.568997 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.104.149.251 80\nConnection to 10.104.149.251 80 port [udp/*] succeeded!\n"
  I0617 07:49:26.569123 19 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 06/17/24 07:49:26.569
  I0617 07:49:26.580025 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80'
  I0617 07:49:26.705906 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.104.149.251 80\nConnection to 10.104.149.251 80 port [tcp/http] succeeded!\n"
  I0617 07:49:26.705980 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 07:49:26.706200 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.104.149.251 80'
  I0617 07:49:30.813389 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.104.149.251 80\nConnection to 10.104.149.251 80 port [udp/*] succeeded!\n"
  I0617 07:49:30.813497 19 builder.go:147] stdout: ""
  I0617 07:49:30.813606 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.104.149.251 80'
  I0617 07:49:34.954817 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.104.149.251 80\nConnection to 10.104.149.251 80 port [udp/*] succeeded!\n"
  I0617 07:49:34.954916 19 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 06/17/24 07:49:34.955
  I0617 07:49:34.964329 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.104.149.251 80'
  I0617 07:49:39.069363 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.104.149.251 80\nConnection to 10.104.149.251 80 port [udp/*] succeeded!\n"
  I0617 07:49:39.069426 19 builder.go:147] stdout: "pod1"
  I0617 07:49:39.069563 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80'
  I0617 07:49:41.192217 19 builder.go:135] rc: 1
  I0617 07:49:41.192354 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.104.149.251 80
  nc: connect to 10.104.149.251 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0617 07:49:41.192500 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80'
  I0617 07:49:43.293563 19 builder.go:135] rc: 1
  I0617 07:49:43.293789 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.104.149.251 80
  nc: connect to 10.104.149.251 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0617 07:49:43.294046 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80'
  I0617 07:49:45.414668 19 builder.go:135] rc: 1
  I0617 07:49:45.414826 19 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3564 exec execpodflgh6 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.104.149.251 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.104.149.251 80
  nc: connect to 10.104.149.251 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0617 07:49:45.416333 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3564" for this suite. @ 06/17/24 07:49:45.423
• [27.214 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 06/17/24 07:49:45.43
  I0617 07:49:45.431054 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename endpointslice @ 06/17/24 07:49:45.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:49:45.45
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:49:45.454
  I0617 07:49:45.466571 19 endpointslice.go:1045] Endpoints addresses: [192.168.190.151] , ports: [6443]
  I0617 07:49:45.466639 19 endpointslice.go:1075] EndpointSlices addresses: [192.168.190.151] , ports: [6443]
  I0617 07:49:45.466751 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-208" for this suite. @ 06/17/24 07:49:45.471
• [0.048 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 06/17/24 07:49:45.478
  I0617 07:49:45.478797 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:49:45.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:49:45.49
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:49:45.493
  STEP: Setting up server cert @ 06/17/24 07:49:45.514
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:49:45.88
  STEP: Deploying the webhook pod @ 06/17/24 07:49:45.889
  STEP: Wait for the deployment to be ready @ 06/17/24 07:49:45.902
  I0617 07:49:45.911513 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:49:47.922
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:49:47.941
  I0617 07:49:48.941911 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 06/17/24 07:49:48.948
  STEP: verifying the validating webhook match conditions @ 06/17/24 07:49:48.956
  STEP: updating the validating webhook match conditions @ 06/17/24 07:49:48.958
  STEP: verifying the validating webhook match conditions @ 06/17/24 07:49:48.967
  I0617 07:49:49.022038 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1011" for this suite. @ 06/17/24 07:49:49.026
  STEP: Destroying namespace "webhook-markers-582" for this suite. @ 06/17/24 07:49:49.032
• [3.561 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 06/17/24 07:49:49.04
  I0617 07:49:49.040697 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename aggregator @ 06/17/24 07:49:49.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:49:49.054
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:49:49.057
  I0617 07:49:49.060962 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Registering the sample API server. @ 06/17/24 07:49:49.062
  I0617 07:49:49.353047 19 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0617 07:49:49.380881 19 deployment.go:222] deployment "sample-apiserver-deployment" doesn't have the required revision set
  I0617 07:49:51.427315 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:49:53.431691 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:49:55.434284 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:49:57.433098 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:49:59.434834 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:50:01.434722 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:50:03.432430 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:50:05.433555 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:50:07.431650 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:50:09.431773 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:50:11.431226 19 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.June, 17, 7, 49, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0617 07:50:13.554456 19 aggregator.go:749] Waited 115.156968ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 06/17/24 07:50:13.608
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 06/17/24 07:50:13.611
  STEP: List APIServices @ 06/17/24 07:50:13.617
  I0617 07:50:13.624435 19 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 06/17/24 07:50:13.624
  I0617 07:50:13.638747 19 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 06/17/24 07:50:13.638
  I0617 07:50:13.648207 19 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.June, 17, 7, 50, 13, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 06/17/24 07:50:13.648
  I0617 07:50:13.652165 19 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-06-17 07:50:13 +0000 UTC Passed all checks passed}
  I0617 07:50:13.652249 19 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0617 07:50:13.652268 19 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 06/17/24 07:50:13.652
  I0617 07:50:13.662042 19 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-904061985" @ 06/17/24 07:50:13.662
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 06/17/24 07:50:13.676
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 06/17/24 07:50:13.687
  STEP: Patch APIService Status @ 06/17/24 07:50:13.691
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 06/17/24 07:50:13.7
  I0617 07:50:13.704158 19 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-06-17 07:50:13 +0000 UTC Passed all checks passed}
  I0617 07:50:13.704224 19 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0617 07:50:13.704247 19 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0617 07:50:13.704320 19 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 06/17/24 07:50:13.704
  STEP: Confirm that the generated APIService has been deleted @ 06/17/24 07:50:13.711
  I0617 07:50:13.712018 19 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0617 07:50:13.716219 19 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0617 07:50:13.716265 19 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0617 07:50:13.800476 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-4104" for this suite. @ 06/17/24 07:50:13.804
• [24.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 06/17/24 07:50:13.813
  I0617 07:50:13.813345 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 07:50:13.815
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:50:13.828
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:50:13.832
  I0617 07:50:13.836202 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 06/17/24 07:50:15.294
  I0617 07:50:15.294284 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-9789 --namespace=crd-publish-openapi-9789 create -f -'
  I0617 07:50:15.442348 19 builder.go:146] stderr: ""
  I0617 07:50:15.442428 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4503-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0617 07:50:15.442519 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-9789 --namespace=crd-publish-openapi-9789 delete e2e-test-crd-publish-openapi-4503-crds test-cr'
  I0617 07:50:15.531075 19 builder.go:146] stderr: ""
  I0617 07:50:15.531231 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4503-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0617 07:50:15.531443 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-9789 --namespace=crd-publish-openapi-9789 apply -f -'
  I0617 07:50:15.641658 19 builder.go:146] stderr: ""
  I0617 07:50:15.641770 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4503-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0617 07:50:15.641898 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-9789 --namespace=crd-publish-openapi-9789 delete e2e-test-crd-publish-openapi-4503-crds test-cr'
  I0617 07:50:15.748221 19 builder.go:146] stderr: ""
  I0617 07:50:15.748331 19 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4503-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 06/17/24 07:50:15.748
  I0617 07:50:15.748544 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=crd-publish-openapi-9789 explain e2e-test-crd-publish-openapi-4503-crds'
  I0617 07:50:15.837582 19 builder.go:146] stderr: ""
  I0617 07:50:15.837685 19 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-4503-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  I0617 07:50:17.274294 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9789" for this suite. @ 06/17/24 07:50:17.282
• [3.476 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 06/17/24 07:50:17.289
  I0617 07:50:17.289973 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svcaccounts @ 06/17/24 07:50:17.292
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:50:17.303
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:50:17.306
  I0617 07:50:17.321777 19 service_accounts.go:618] created pod
  STEP: Saw pod success @ 06/17/24 07:50:21.336
  I0617 07:50:51.338495 19 service_accounts.go:624] polling logs
  I0617 07:50:51.360161 19 service_accounts.go:634] Pod logs: 
  I0617 07:50:18.007415       1 log.go:245] OK: Got token
  I0617 07:50:18.007513       1 log.go:245] validating with in-cluster discovery
  I0617 07:50:18.007986       1 log.go:245] OK: got issuer https://kubernetes.default.svc.cluster.local
  I0617 07:50:18.008018       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5865:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00022bab0), NotBefore:(*jwt.NumericDate)(0xc00022bba0), IssuedAt:(*jwt.NumericDate)(0xc00022bac0), ID:"4b0e4422-4520-48ce-b03e-bf3b75413009"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5865", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"88ac851f-6554-4930-9bbf-b82d7990d8d8"}}}
  I0617 07:50:18.025542       1 log.go:245] OK: Constructed OIDC provider for issuer https://kubernetes.default.svc.cluster.local
  I0617 07:50:18.032968       1 log.go:245] OK: Validated signature on JWT
  I0617 07:50:18.033185       1 log.go:245] OK: Got valid claims from token!
  I0617 07:50:18.033221       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://kubernetes.default.svc.cluster.local", Subject:"system:serviceaccount:svcaccounts-5865:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc000338758), NotBefore:(*jwt.NumericDate)(0xc000338780), IssuedAt:(*jwt.NumericDate)(0xc000338760), ID:"4b0e4422-4520-48ce-b03e-bf3b75413009"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-5865", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"88ac851f-6554-4930-9bbf-b82d7990d8d8"}}}

  I0617 07:50:51.360306 19 service_accounts.go:638] completed pod
  I0617 07:50:51.366770 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-5865" for this suite. @ 06/17/24 07:50:51.373
• [34.089 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 06/17/24 07:50:51.38
  I0617 07:50:51.380742 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/17/24 07:50:51.383
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:50:51.403
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:50:51.409
  STEP: creating the policy @ 06/17/24 07:50:51.419
  STEP: waiting until the marker is denied @ 06/17/24 07:50:51.439
  STEP: testing a replicated Deployment to be allowed @ 06/17/24 07:50:51.657
  STEP: testing a non-replicated ReplicaSet not to be denied @ 06/17/24 07:50:51.673
  I0617 07:50:51.736455 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-7614" for this suite. @ 06/17/24 07:50:51.741
• [0.366 seconds]
------------------------------
SSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 06/17/24 07:50:51.748
  I0617 07:50:51.748494 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 07:50:51.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:50:51.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:50:51.766
  I0617 07:50:51.769552 19 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0617 07:50:51.776408 19 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0617 07:50:51.783265 19 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0617 07:50:53.791011 19 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0617 07:50:53.793730 19 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0617 07:50:53.801825 19 deployment.go:313] Updating deployment test-recreate-deployment
  I0617 07:50:53.801882 19 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0617 07:50:53.880606 19 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1114",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6bd74e48-5351-4704-b4dc-25accd0236f9",
      ResourceVersion: (string) (len=5) "28152",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854207451,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207451,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0617 07:50:53.885697 19 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1114",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "edb2485f-578c-416b-b96d-431b00e5a132",
      ResourceVersion: (string) (len=5) "28149",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854207453,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6bd74e48-5351-4704-b4dc-25accd0236f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 62 64 37 34 65  34 38 2d 35 33 35 31 2d  |\"6bd74e48-5351-|
              00000120  34 37 30 34 2d 62 34 64  63 2d 32 35 61 63 63 64  |4704-b4dc-25accd|
              00000130  30 32 33 36 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0236f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f",
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:50:53.886808 19 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0617 07:50:53.887244 19 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1114",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "93b9d239-a07e-4407-abda-47db5cd6594a",
      ResourceVersion: (string) (len=5) "28140",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854207451,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "6bd74e48-5351-4704-b4dc-25accd0236f9",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 62 64 37 34 65  34 38 2d 35 33 35 31 2d  |\"6bd74e48-5351-|
              00000120  34 37 30 34 2d 62 34 64  63 2d 32 35 61 63 63 64  |4704-b4dc-25accd|
              00000130  30 32 33 36 66 39 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |0236f9\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0617 07:50:53.892936 19 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-gpvhx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-gpvhx",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-1114",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "660e80ed-8f32-428f-8f15-eb54cb67cf09",
      ResourceVersion: (string) (len=5) "28151",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854207453,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "edb2485f-578c-416b-b96d-431b00e5a132",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 64  62 32 34 38 35 66 2d 35  |d\":\"edb2485f-5|
              00000090  37 38 63 2d 34 31 36 62  2d 62 39 36 64 2d 34 33  |78c-416b-b96d-43|
              000000a0  31 62 30 30 65 35 61 31  33 32 5c 22 7d 22 3a 7b  |1b00e5a132\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jhckf",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jhckf",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854207453,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854207453,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0617 07:50:53.895603 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1114" for this suite. @ 06/17/24 07:50:53.904
• [2.163 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 06/17/24 07:50:53.911
  I0617 07:50:53.911857 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:50:53.912
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:50:53.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:50:53.94
  STEP: Setting up server cert @ 06/17/24 07:50:53.964
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:50:54.324
  STEP: Deploying the webhook pod @ 06/17/24 07:50:54.333
  STEP: Wait for the deployment to be ready @ 06/17/24 07:50:54.341
  I0617 07:50:54.347218 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:50:56.358
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:50:56.372
  I0617 07:50:57.373161 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/17/24 07:50:57.38
  STEP: verifying the mutating webhook match conditions @ 06/17/24 07:50:57.388
  STEP: updating the mutating webhook match conditions @ 06/17/24 07:50:57.392
  STEP: verifying the mutating webhook match conditions @ 06/17/24 07:50:57.4
  I0617 07:50:57.437687 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5966" for this suite. @ 06/17/24 07:50:57.442
  STEP: Destroying namespace "webhook-markers-9771" for this suite. @ 06/17/24 07:50:57.45
• [3.547 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 06/17/24 07:50:57.459
  I0617 07:50:57.459360 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 07:50:57.46
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:50:57.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:50:57.476
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/17/24 07:50:57.48
  STEP: Saw pod success @ 06/17/24 07:51:01.499
  I0617 07:51:01.502367 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-18d28404-72e6-4e0a-9803-bee9780c96e5 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 07:51:01.509
  I0617 07:51:01.525324 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-617" for this suite. @ 06/17/24 07:51:01.53
• [4.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 06/17/24 07:51:01.537
  I0617 07:51:01.537917 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-pred @ 06/17/24 07:51:01.539
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:51:01.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:51:01.559
  I0617 07:51:01.564594 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0617 07:51:01.573776 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0617 07:51:01.576949 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-1.novalocal before test
  I0617 07:51:01.585235 19 predicates.go:887] calico-node-th4mv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.585299 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:51:01.585314 19 predicates.go:887] kube-proxy-jvqkl from kube-system started at 2024-06-17 06:23:33 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.585325 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:51:01.585357 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-gdqsn from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:51:01.585367 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:51:01.585396 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 07:51:01.585406 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-2.novalocal before test
  I0617 07:51:01.594722 19 predicates.go:887] calico-kube-controllers-564985c589-zj5q5 from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.594789 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0617 07:51:01.594802 19 predicates.go:887] calico-node-xg2zk from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.594810 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:51:01.594869 19 predicates.go:887] coredns-7db6d8ff4d-24c28 from kube-system started at 2024-06-17 06:52:43 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.594878 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0617 07:51:01.594887 19 predicates.go:887] kube-proxy-2krmk from kube-system started at 2024-06-17 06:22:45 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.594934 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:51:01.594985 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-9xmzp from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:51:01.594999 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:51:01.595007 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 07:51:01.595017 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-3.novalocal before test
  I0617 07:51:01.603660 19 predicates.go:887] dns-debug from default started at 2024-06-17 06:48:59 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.603717 19 predicates.go:889] 	Container dns-debug ready: true, restart count 0
  I0617 07:51:01.603738 19 predicates.go:887] calico-node-68vkv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.603750 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 07:51:01.603766 19 predicates.go:887] kube-proxy-pggmm from kube-system started at 2024-06-17 06:23:32 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.603777 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 07:51:01.603792 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-06-17 06:51:33 +0000 UTC (1 container statuses recorded)
  I0617 07:51:01.603803 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0617 07:51:01.603819 19 predicates.go:887] sonobuoy-e2e-job-f67536e78f3a43e6 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:51:01.603831 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0617 07:51:01.603844 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:51:01.603859 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-g5cf4 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 07:51:01.603872 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 07:51:01.603899 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 06/17/24 07:51:01.603
  STEP: Explicitly delete pod here to free the resource it takes. @ 06/17/24 07:51:03.624
  STEP: Trying to apply a random label on the found node. @ 06/17/24 07:51:03.641
  STEP: verifying the node has the label kubernetes.io/e2e-e8cc2b16-379d-4b55-9de7-bad29c57c3cd 95 @ 06/17/24 07:51:03.655
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 06/17/24 07:51:03.664
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 192.168.190.169 on the node which pod4 resides and expect not scheduled @ 06/17/24 07:51:05.679
  STEP: removing the label kubernetes.io/e2e-e8cc2b16-379d-4b55-9de7-bad29c57c3cd off the node ck-130-worker-1.novalocal @ 06/17/24 07:56:05.688
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-e8cc2b16-379d-4b55-9de7-bad29c57c3cd @ 06/17/24 07:56:05.703
  I0617 07:56:05.710849 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-3410" for this suite. @ 06/17/24 07:56:05.716
• [304.185 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 06/17/24 07:56:05.731
  I0617 07:56:05.731719 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/17/24 07:56:05.734
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:56:05.759
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:56:05.763
  I0617 07:56:05.767749 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:56:06.796025 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-9559" for this suite. @ 06/17/24 07:56:06.803
• [1.082 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 06/17/24 07:56:06.814
  I0617 07:56:06.814487 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:56:06.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:56:06.836
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:56:06.84
  STEP: Setting up server cert @ 06/17/24 07:56:06.862
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:56:07.971
  STEP: Deploying the webhook pod @ 06/17/24 07:56:07.977
  STEP: Wait for the deployment to be ready @ 06/17/24 07:56:07.987
  I0617 07:56:07.995403 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  STEP: Deploying the webhook service @ 06/17/24 07:56:10.007
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:56:10.02
  I0617 07:56:11.021022 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 06/17/24 07:56:11.028
  STEP: create a pod that should be updated by the webhook @ 06/17/24 07:56:11.047
  I0617 07:56:11.131999 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7614" for this suite. @ 06/17/24 07:56:11.137
  STEP: Destroying namespace "webhook-markers-365" for this suite. @ 06/17/24 07:56:11.142
• [4.334 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 06/17/24 07:56:11.148
  I0617 07:56:11.149008 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 07:56:11.15
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:56:11.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:56:11.163
  STEP: Setting up server cert @ 06/17/24 07:56:11.181
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 07:56:11.424
  STEP: Deploying the webhook pod @ 06/17/24 07:56:11.429
  STEP: Wait for the deployment to be ready @ 06/17/24 07:56:11.438
  I0617 07:56:11.445099 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 07:56:13.455
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 07:56:13.472
  I0617 07:56:14.473114 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/17/24 07:56:14.48
  I0617 07:56:14.497068 19 webhook.go:2672] Waiting for webhook configuration to be ready...
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 06/17/24 07:56:14.608
  STEP: Creating a dummy validating-webhook-configuration object @ 06/17/24 07:56:14.625
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 06/17/24 07:56:14.634
  STEP: Creating a dummy mutating-webhook-configuration object @ 06/17/24 07:56:14.638
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 06/17/24 07:56:14.646
  I0617 07:56:14.694354 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1526" for this suite. @ 06/17/24 07:56:14.699
  STEP: Destroying namespace "webhook-markers-58" for this suite. @ 06/17/24 07:56:14.705
• [3.562 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 06/17/24 07:56:14.714
  I0617 07:56:14.714598 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename hostport @ 06/17/24 07:56:14.717
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:56:14.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:56:14.734
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 06/17/24 07:56:14.744
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 192.168.190.166 on the node which pod1 resides and expect scheduled @ 06/17/24 07:56:18.765
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 192.168.190.166 but use UDP protocol on the node which pod2 resides @ 06/17/24 07:56:20.785
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 06/17/24 07:56:26.822
  I0617 07:56:26.822311 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 192.168.190.166 http://127.0.0.1:54323/hostname] Namespace:hostport-4959 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:56:26.822370 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:56:26.823855 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:56:26.823967 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4959/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+192.168.190.166+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.190.166, port: 54323 @ 06/17/24 07:56:26.875
  I0617 07:56:26.875202 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://192.168.190.166:54323/hostname] Namespace:hostport-4959 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:56:26.875229 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:56:26.876026 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:56:26.876109 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4959/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F192.168.190.166%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 192.168.190.166, port: 54323 UDP @ 06/17/24 07:56:26.926
  I0617 07:56:26.926135 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 192.168.190.166 54323] Namespace:hostport-4959 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 07:56:26.926167 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 07:56:26.927320 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 07:56:26.927422 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/hostport-4959/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+192.168.190.166+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0617 07:56:31.970647 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-4959" for this suite. @ 06/17/24 07:56:31.976
• [17.271 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 06/17/24 07:56:31.986
  I0617 07:56:31.986762 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/17/24 07:56:31.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:56:32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:56:32.006
  STEP: create the container to handle the HTTPGet hook request. @ 06/17/24 07:56:32.017
  STEP: create the pod with lifecycle hook @ 06/17/24 07:56:34.037
  STEP: delete the pod with lifecycle hook @ 06/17/24 07:56:36.058
  STEP: check prestop hook @ 06/17/24 07:56:40.08
  I0617 07:56:40.092024 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-4844" for this suite. @ 06/17/24 07:56:40.097
• [8.115 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 06/17/24 07:56:40.102
  I0617 07:56:40.102394 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 07:56:40.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:56:40.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:56:40.119
  STEP: Creating configMap with name configmap-test-volume-48172825-af12-4ddf-85b3-5f85a9351d2e @ 06/17/24 07:56:40.121
  STEP: Creating a pod to test consume configMaps @ 06/17/24 07:56:40.125
  STEP: Saw pod success @ 06/17/24 07:56:44.145
  I0617 07:56:44.148684 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-9c565fd3-a7bb-48b0-809d-3611071821c7 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 07:56:44.167
  I0617 07:56:44.184307 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8417" for this suite. @ 06/17/24 07:56:44.189
• [4.096 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 06/17/24 07:56:44.198
  I0617 07:56:44.199062 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 07:56:44.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 07:56:44.219
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 07:56:44.224
  STEP: Creating pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019 @ 06/17/24 07:56:44.229
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 07:56:46.255
  I0617 07:56:46.260426 19 container_probe.go:1749] Initial restart count of pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 is 0
  I0617 07:56:46.264113 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:56:48.268810 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:56:50.276167 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:56:52.282968 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:56:54.290225 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:56:56.295051 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:56:58.299579 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:00.304921 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:02.311782 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:04.317542 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:06.322136 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:08.326514 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:10.331005 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:12.335232 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:14.340571 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:16.347675 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:18.427866 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:20.432287 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:22.437833 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:24.444125 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:26.450044 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:28.454927 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:30.459480 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:32.465704 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:34.472469 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:36.478660 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:38.482870 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:40.489325 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:42.495666 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:44.501977 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:46.507885 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:48.513604 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:50.521553 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:52.527687 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:54.534720 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:56.541678 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:57:58.549913 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:00.554572 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:02.560033 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:04.566696 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:06.571713 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:08.577027 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:10.582792 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:12.587715 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:14.592730 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:16.596388 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:18.602998 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:20.608298 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:22.614536 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:24.620723 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:26.625697 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:28.630997 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:30.635023 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:32.641666 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:34.646483 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:36.649699 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:38.654697 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:40.660469 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:42.665427 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:44.670728 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:46.676415 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:48.680318 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:50.684134 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:52.689401 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:54.694046 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:56.701671 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:58:58.706527 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:00.712149 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:02.717385 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:04.723082 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:06.727862 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:08.734374 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:10.739449 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:12.744794 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:14.750348 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:16.756045 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:18.761615 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:20.768919 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:22.773089 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:24.778690 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:26.784461 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:28.788710 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:30.794526 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:32.800285 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:34.805878 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:36.812608 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:38.818860 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:40.823992 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:42.830267 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:44.833867 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:46.838794 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:48.843389 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:50.848730 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:52.854022 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:54.859756 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:56.864610 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 07:59:58.869659 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:00.874559 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:02.878994 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:04.884322 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:06.890508 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:08.894920 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:10.900315 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:12.906485 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:14.913072 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:16.918403 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:18.923154 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:20.929006 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:22.933318 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:24.939218 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:26.944998 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:28.950002 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:30.955047 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:32.960030 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:34.965846 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:36.970780 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:38.976194 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:40.982153 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:42.989005 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  I0617 08:00:44.994614 19 container_probe.go:1759] Get pod test-webserver-130672de-c65b-403c-bbe9-9b5c4ce21368 in namespace container-probe-2019
  STEP: deleting the pod @ 06/17/24 08:00:46.996
  I0617 08:00:47.013119 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2019" for this suite. @ 06/17/24 08:00:47.021
• [242.827 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 06/17/24 08:00:47.026
  I0617 08:00:47.026410 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:00:47.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:00:47.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:00:47.043
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 08:00:47.047
  STEP: Saw pod success @ 06/17/24 08:00:51.067
  I0617 08:00:51.070800 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-3e404e18-342e-4377-a77f-b8b5c58b8989 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 08:00:51.084
  I0617 08:00:51.095831 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1034" for this suite. @ 06/17/24 08:00:51.101
• [4.081 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 06/17/24 08:00:51.107
  I0617 08:00:51.107971 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 08:00:51.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:00:51.123
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:00:51.128
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 08:00:51.132
  STEP: Saw pod success @ 06/17/24 08:00:55.154
  I0617 08:00:55.158392 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-cda08c94-a5e9-4e52-819a-1d271d269861 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 08:00:55.165
  I0617 08:00:55.178667 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8431" for this suite. @ 06/17/24 08:00:55.183
• [4.081 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 06/17/24 08:00:55.188
  I0617 08:00:55.188930 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 08:00:55.19
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:00:55.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:00:55.209
  STEP: Saw pod success @ 06/17/24 08:00:59.271
  I0617 08:00:59.274077 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod client-envvars-178afa88-be79-465a-855f-3aa3d23553db container env3cont: <nil>
  STEP: delete the pod @ 06/17/24 08:00:59.279
  I0617 08:00:59.292102 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1720" for this suite. @ 06/17/24 08:00:59.295
• [4.114 seconds]
------------------------------
S
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 06/17/24 08:00:59.303
  I0617 08:00:59.303480 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename controllerrevisions @ 06/17/24 08:00:59.305
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:00:59.32
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:00:59.324
  STEP: Creating DaemonSet "e2e-z9692-daemon-set" @ 06/17/24 08:00:59.344
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/17/24 08:00:59.352
  I0617 08:00:59.357423 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:00:59.360660 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-z9692-daemon-set: 0
  I0617 08:00:59.360743 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  I0617 08:01:00.365675 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:01:00.372459 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-z9692-daemon-set: 2
  I0617 08:01:00.372510 19 fixtures.go:130] Node ck-130-worker-3.novalocal is running 0 daemon pod, expected 1
  I0617 08:01:01.358595 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:01:01.362284 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-z9692-daemon-set: 3
  I0617 08:01:01.362345 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-z9692-daemon-set
  STEP: Confirm DaemonSet "e2e-z9692-daemon-set" successfully created with "daemonset-name=e2e-z9692-daemon-set" label @ 06/17/24 08:01:01.364
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-z9692-daemon-set" @ 06/17/24 08:01:01.37
  I0617 08:01:01.373675 19 controller_revision.go:162] Located ControllerRevision: "e2e-z9692-daemon-set-6f95b94fd9"
  STEP: Patching ControllerRevision "e2e-z9692-daemon-set-6f95b94fd9" @ 06/17/24 08:01:01.375
  I0617 08:01:01.382439 19 controller_revision.go:173] e2e-z9692-daemon-set-6f95b94fd9 has been patched
  STEP: Create a new ControllerRevision @ 06/17/24 08:01:01.382
  I0617 08:01:01.388045 19 controller_revision.go:191] Created ControllerRevision: e2e-z9692-daemon-set-76f55b55c5
  STEP: Confirm that there are two ControllerRevisions @ 06/17/24 08:01:01.388
  I0617 08:01:01.388198 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0617 08:01:01.391335 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-z9692-daemon-set-6f95b94fd9" @ 06/17/24 08:01:01.391
  STEP: Confirm that there is only one ControllerRevision @ 06/17/24 08:01:01.395
  I0617 08:01:01.395686 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0617 08:01:01.398558 19 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-z9692-daemon-set-76f55b55c5" @ 06/17/24 08:01:01.401
  I0617 08:01:01.408214 19 controller_revision.go:220] e2e-z9692-daemon-set-76f55b55c5 has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 06/17/24 08:01:01.408
  W0617 08:01:01.414769      19 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 06/17/24 08:01:01.414
  I0617 08:01:01.415115 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0617 08:01:02.415533 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0617 08:01:02.419612 19 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-z9692-daemon-set-76f55b55c5=updated" @ 06/17/24 08:01:02.419
  STEP: Confirm that there is only one ControllerRevision @ 06/17/24 08:01:02.425
  I0617 08:01:02.425775 19 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0617 08:01:02.428377 19 controller_revision.go:265] Found 1 ControllerRevisions
  I0617 08:01:02.430973 19 controller_revision.go:246] ControllerRevision "e2e-z9692-daemon-set-7c968f998" has revision 3
  STEP: Deleting DaemonSet "e2e-z9692-daemon-set" @ 06/17/24 08:01:02.434
  STEP: deleting DaemonSet.extensions e2e-z9692-daemon-set in namespace controllerrevisions-5632, will wait for the garbage collector to delete the pods @ 06/17/24 08:01:02.434
  I0617 08:01:02.493759 19 resources.go:139] Deleting DaemonSet.extensions e2e-z9692-daemon-set took: 6.060557ms
  I0617 08:01:02.594862 19 resources.go:163] Terminating DaemonSet.extensions e2e-z9692-daemon-set pods took: 101.077292ms
  I0617 08:01:04.099019 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-z9692-daemon-set: 0
  I0617 08:01:04.099085 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-z9692-daemon-set
  I0617 08:01:04.101688 19 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"29925"},"items":null}

  I0617 08:01:04.104044 19 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"29925"},"items":null}

  I0617 08:01:04.115509 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-5632" for this suite. @ 06/17/24 08:01:04.119
• [4.821 seconds]
------------------------------
S
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 06/17/24 08:01:04.124
  I0617 08:01:04.124066 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 08:01:04.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:01:04.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:01:04.14
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-3800 @ 06/17/24 08:01:04.145
  STEP: changing the ExternalName service to type=ClusterIP @ 06/17/24 08:01:04.149
  STEP: creating replication controller externalname-service in namespace services-3800 @ 06/17/24 08:01:04.168
  I0617 08:01:04.177269      19 runners.go:198] Created replication controller with name: externalname-service, namespace: services-3800, replica count: 2
  I0617 08:01:07.228884      19 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 08:01:07.228942 19 resource.go:361] Creating new exec pod
  I0617 08:01:10.244796 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3800 exec execpodrmgsx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0617 08:01:10.408479 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0617 08:01:10.408547 19 builder.go:147] stdout: "externalname-service-blkwh"
  I0617 08:01:10.408702 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-3800 exec execpodrmgsx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.102.195.3 80'
  I0617 08:01:10.544848 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.102.195.3 80\nConnection to 10.102.195.3 80 port [tcp/http] succeeded!\n"
  I0617 08:01:10.545055 19 builder.go:147] stdout: "externalname-service-blkwh"
  I0617 08:01:10.545196 19 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0617 08:01:10.564563 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3800" for this suite. @ 06/17/24 08:01:10.57
• [6.450 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 06/17/24 08:01:10.574
  I0617 08:01:10.574706 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename volumeattachment @ 06/17/24 08:01:10.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:01:10.589
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:01:10.592
  STEP: Create VolumeAttachment "va-e2e-j2vnr" on node "ck-130-worker-2.novalocal" @ 06/17/24 08:01:10.599
  STEP: Get VolumeAttachment "va-e2e-j2vnr" on node "ck-130-worker-2.novalocal" @ 06/17/24 08:01:10.603
  STEP: Patch VolumeAttachment "va-e2e-j2vnr" on node "ck-130-worker-2.novalocal" @ 06/17/24 08:01:10.605
  STEP: List VolumeAttachments with "va-e2e-j2vnr=patched" label @ 06/17/24 08:01:10.609
  STEP: Delete VolumeAttachment "va-e2e-j2vnr" on node "ck-130-worker-2.novalocal" @ 06/17/24 08:01:10.611
  STEP: Confirm deletion of VolumeAttachment "va-e2e-j2vnr" on node "ck-130-worker-2.novalocal" @ 06/17/24 08:01:10.615
  STEP: Create VolumeAttachment "va-e2e-rv8c4" on node "ck-130-worker-2.novalocal" @ 06/17/24 08:01:10.621
  STEP: Update the VolumeAttachment "va-e2e-rv8c4" on node "ck-130-worker-2.novalocal" with label "va-e2e=updated" @ 06/17/24 08:01:10.626
  STEP: Create VolumeAttachment "va-e2e-dwpcr" on node "ck-130-worker-2.novalocal" @ 06/17/24 08:01:10.639
  STEP: Update the VolumeAttachment "va-e2e-dwpcr" on node "ck-130-worker-2.novalocal" with label "va-e2e=updated" @ 06/17/24 08:01:10.643
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 06/17/24 08:01:10.65
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 06/17/24 08:01:10.659
  I0617 08:01:10.661995 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-8834" for this suite. @ 06/17/24 08:01:10.666
• [0.097 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 06/17/24 08:01:10.671
  I0617 08:01:10.671676 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 08:01:10.672
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:01:10.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:01:10.69
  STEP: Creating a pod to test emptydir volume type on node default medium @ 06/17/24 08:01:10.693
  STEP: Saw pod success @ 06/17/24 08:01:14.713
  I0617 08:01:14.715921 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-684a5ab2-0527-4f2d-b8dd-0e405b67b934 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 08:01:14.721
  I0617 08:01:14.735599 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9535" for this suite. @ 06/17/24 08:01:14.741
• [4.077 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 06/17/24 08:01:14.748
  I0617 08:01:14.748737 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 08:01:14.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:01:14.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:01:14.771
  STEP: Creating a test externalName service @ 06/17/24 08:01:14.777
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1289.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local; sleep 1; done
   @ 06/17/24 08:01:14.786
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1289.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local; sleep 1; done
   @ 06/17/24 08:01:14.786
  STEP: creating a pod to probe DNS @ 06/17/24 08:01:14.787
  STEP: submitting the pod to kubernetes @ 06/17/24 08:01:14.787
  STEP: retrieving the pod @ 06/17/24 08:01:16.807
  STEP: looking for the results for each expected name from probers @ 06/17/24 08:01:16.81
  I0617 08:01:16.817937 19 dns_common.go:552] DNS probes using dns-test-e4c6042a-2dd9-4ef3-ac9d-45e92e6d3bd2 succeeded

  STEP: changing the externalName to bar.example.com @ 06/17/24 08:01:16.818
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1289.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local; sleep 1; done
   @ 06/17/24 08:01:16.824
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1289.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local; sleep 1; done
   @ 06/17/24 08:01:16.824
  STEP: creating a second pod to probe DNS @ 06/17/24 08:01:16.824
  STEP: submitting the pod to kubernetes @ 06/17/24 08:01:16.824
  STEP: retrieving the pod @ 06/17/24 08:01:18.838
  STEP: looking for the results for each expected name from probers @ 06/17/24 08:01:18.842
  I0617 08:01:18.847872 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:18.851494 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:18.851546 19 dns_common.go:489] Lookups using dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 failed for: [wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local]

  I0617 08:01:18.870529 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 08:01:18.874926 19 dns_common.go:495] Pod client logs for querier: 
  I0617 08:01:18.879096 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 08:01:23.847274 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:23.851406 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:23.851514 19 dns_common.go:489] Lookups using dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 failed for: [wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local]

  I0617 08:01:23.858367 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 08:01:23.864499 19 dns_common.go:495] Pod client logs for querier: 
  I0617 08:01:23.870538 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 08:01:28.847005 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:28.850326 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:28.850383 19 dns_common.go:489] Lookups using dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 failed for: [wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local]

  I0617 08:01:28.855851 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 08:01:28.861119 19 dns_common.go:495] Pod client logs for querier: 
  I0617 08:01:28.866201 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 08:01:33.848123 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:33.851681 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:33.851770 19 dns_common.go:489] Lookups using dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 failed for: [wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local]

  I0617 08:01:33.860190 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 08:01:33.864906 19 dns_common.go:495] Pod client logs for querier: 
  I0617 08:01:33.869876 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 08:01:38.850413 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:38.855273 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:38.855370 19 dns_common.go:489] Lookups using dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 failed for: [wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local]

  I0617 08:01:38.863673 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 08:01:38.869497 19 dns_common.go:495] Pod client logs for querier: 
  I0617 08:01:38.874994 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 08:01:43.847693 19 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:43.851018 19 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local from pod  dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 contains 'foo.example.com.
  ' instead of 'bar.example.com.'
  I0617 08:01:43.851110 19 dns_common.go:489] Lookups using dns-1289/dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 failed for: [wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local]

  I0617 08:01:43.856245 19 dns_common.go:495] Pod client logs for webserver: 
  I0617 08:01:43.860693 19 dns_common.go:495] Pod client logs for querier: 
  I0617 08:01:43.865338 19 dns_common.go:495] Pod client logs for jessie-querier: 
  I0617 08:01:48.854475 19 dns_common.go:552] DNS probes using dns-test-842ec58e-3f55-4865-8fd2-c1bceb41fa65 succeeded

  STEP: changing the service to type=ClusterIP @ 06/17/24 08:01:48.855
  W0617 08:01:48.873302      19 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1289.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-1289.svc.cluster.local; sleep 1; done
   @ 06/17/24 08:01:48.873
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-1289.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-1289.svc.cluster.local; sleep 1; done
   @ 06/17/24 08:01:48.874
  STEP: creating a third pod to probe DNS @ 06/17/24 08:01:48.874
  STEP: submitting the pod to kubernetes @ 06/17/24 08:01:48.879
  STEP: retrieving the pod @ 06/17/24 08:01:50.896
  STEP: looking for the results for each expected name from probers @ 06/17/24 08:01:50.899
  I0617 08:01:50.908071 19 dns_common.go:552] DNS probes using dns-test-e68a74e4-fc11-4e29-89cc-851477e3404b succeeded

  STEP: deleting the pod @ 06/17/24 08:01:50.908
  STEP: deleting the pod @ 06/17/24 08:01:50.92
  STEP: deleting the pod @ 06/17/24 08:01:50.928
  STEP: deleting the test externalName service @ 06/17/24 08:01:50.945
  I0617 08:01:50.961087 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-1289" for this suite. @ 06/17/24 08:01:50.966
• [36.222 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 06/17/24 08:01:50.972
  I0617 08:01:50.972671 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename deployment @ 06/17/24 08:01:50.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:01:50.991
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:01:50.995
  STEP: creating a Deployment @ 06/17/24 08:01:51
  STEP: waiting for Deployment to be created @ 06/17/24 08:01:51.005
  STEP: waiting for all Replicas to be Ready @ 06/17/24 08:01:51.007
  I0617 08:01:51.008995 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:51.009064 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:51.017994 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:51.018029 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:51.038765 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:51.038821 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:51.057845 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:51.058056 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0617 08:01:52.212363 19 deployment.go:246] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0617 08:01:52.212441 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0617 08:01:52.276349 19 deployment.go:248] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 06/17/24 08:01:52.276
  I0617 08:01:52.285283 19 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 06/17/24 08:01:52.285
  I0617 08:01:52.287531 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.287562 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.287793 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.287815 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.288355 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.288386 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.288994 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.289016 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 0
  I0617 08:01:52.289602 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:52.289622 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:52.289754 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.289791 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.289808 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.289818 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.299817 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.299891 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.315127 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.315207 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:52.329536 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:52.329603 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:52.338300 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:52.338345 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:53.288911 19 deployment.go:309] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:53.288961 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:53.309246 19 deployment.go:311] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  STEP: listing Deployments @ 06/17/24 08:01:53.309
  I0617 08:01:53.313621 19 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 06/17/24 08:01:53.313
  I0617 08:01:53.334970 19 deployment.go:360] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 06/17/24 08:01:53.335
  I0617 08:01:53.342803 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:53.348695 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:53.369967 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:53.383514 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:53.390763 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:53.395049 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:54.220436 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:54.345264 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:54.435952 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:54.460893 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0617 08:01:55.606129 19 deployment.go:389] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 06/17/24 08:01:55.624
  STEP: fetching the DeploymentStatus @ 06/17/24 08:01:55.633
  I0617 08:01:55.639105 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:55.639165 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:55.639213 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:55.639374 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:55.639736 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:55.639762 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 1
  I0617 08:01:55.639966 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:55.640003 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 3
  I0617 08:01:55.640339 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:55.640360 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 2
  I0617 08:01:55.640626 19 deployment.go:449] observed Deployment test-deployment in namespace deployment-7976 with ReadyReplicas 3
  STEP: deleting the Deployment @ 06/17/24 08:01:55.64
  I0617 08:01:55.647533 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.647727 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.647810 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.648010 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.648056 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.648212 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.648457 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.648673 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.648835 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.648989 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.649212 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.649388 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.649541 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.649778 19 deployment.go:475] observed event type MODIFIED
  I0617 08:01:55.654817 19 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0617 08:01:55.657759 19 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "cd1c05c4-c3c2-446c-82a4-aa908fee574b",
      ResourceVersion: (string) (len=5) "30367",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208111,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "48d9fe85-a223-40a8-b7c9-2ac7c13ba8cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 38 64 39  66 65 38 35 2d 61 32 32  |":\"48d9fe85-a22|
              00000130  33 2d 34 30 61 38 2d 62  37 63 39 2d 32 61 63 37  |3-40a8-b7c9-2ac7|
              00000140  63 31 33 62 61 38 63 62  5c 22 7d 22 3a 7b 7d 7d  |c13ba8cb\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0617 08:01:55.680821 19 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c7d799f6-6463-4fb9-8ca5-5e96684b31e0",
      ResourceVersion: (string) (len=5) "30477",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "48d9fe85-a223-40a8-b7c9-2ac7c13ba8cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 38 64 39  66 65 38 35 2d 61 32 32  |":\"48d9fe85-a22|
              00000130  33 2d 34 30 61 38 2d 62  37 63 39 2d 32 61 63 37  |3-40a8-b7c9-2ac7|
              00000140  63 31 33 62 61 38 63 62  5c 22 7d 22 3a 7b 7d 7d  |c13ba8cb\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0617 08:01:55.689621 19 deployment.go:669] pod: "test-deployment-65fbf5b65d-bk8k6":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-bk8k6",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-7976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3e25d428-5e5d-4c1a-920e-6c90a4648e05",
      ResourceVersion: (string) (len=5) "30468",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208116,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) "",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "e58997ccfeabe68c952eddd4054fdb4118ca7bfbd5aa1ecc5a4ca002266bbde0",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) ""
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "c7d799f6-6463-4fb9-8ca5-5e96684b31e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 37 64 37 39 39 66 36  |uid\":\"c7d799f6|
              000000a0  2d 36 34 36 33 2d 34 66  62 39 2d 38 63 61 35 2d  |-6463-4fb9-8ca5-|
              000000b0  35 65 39 36 36 38 34 62  33 31 65 30 5c 22 7d 22  |5e96684b31e0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=621) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 72 65 61 73 6f 6e  |me":{},"f:reason|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000090  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              000000a0  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 49  |"k:{\"type\":\"I|
              000000b0  6e 69 74 69 61 6c 69 7a  65 64 5c 22 7d 22 3a 7b  |nitialized\"}":{|
              000000c0  22 2e 22 3a 7b 7d 2c 22  66 3a 6c 61 73 74 50 72  |".":{},"f:lastPr|
              000000d0  6f 62 65 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |obeTime":{},"f:l|
              000000e0  61 73 74 54 72 61 6e 73  69 74 69 6f 6e 54 69 6d  |astTransitionTim|
              000000f0  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000100  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000110  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              00000120  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 50 6f  |k:{\"type\":\"Po|
              00000130  64 52 65 61 64 79 54 6f  53 74 61 72 74 43 6f 6e  |dReadyToStartCon|
              00000140  74 61 69 6e 65 72 73 5c  22 7d 22 3a 7b 22 2e 22  |tainers\"}":{"."|
              00000150  3a 7b 7d 2c 22 66 3a 6c  61 73 74 50 72 6f 62 65  |:{},"f:lastProbe|
              00000160  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |Time":{},"f:last|
              00000170  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000180  7b 7d 2c 22 66 3a 73 74  61 74 75 73 22 3a 7b 7d  |{},"f:status":{}|
              00000190  2c 22 66 3a 74 79 70 65  22 3a 7b 7d 7d 2c 22 6b  |,"f:type":{}},"k|
              000001a0  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 52 65 61  |:{\"type\":\"Rea|
              000001b0  64 79 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |dy\"}":{".":{},"|
              000001c0  66 3a 6c 61 73 74 50 72  6f 62 65 54 69 6d 65 22  |f:lastProbeTime"|
              000001d0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 54 72 61 6e 73  |:{},"f:lastTrans|
              000001e0  69 74 69 6f 6e 54 69 6d  65 22 3a 7b 7d 2c 22 66  |itionTime":{},"f|
              000001f0  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000200  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000210  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000220  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000230  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000240  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000250  3a 70 68 61 73 65 22 3a  7b 7d 2c 22 66 3a 73 74  |:phase":{},"f:st|
              00000260  61 72 74 54 69 6d 65 22  3a 7b 7d 7d 7d           |artTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-krqvr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-krqvr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=9) "Succeeded",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=12) "PodCompleted",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208112,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208112,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)({
              ExitCode: (int32) 0,
              Signal: (int32) 0,
              Reason: (string) (len=9) "Completed",
              Message: (string) "",
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854208112,
                  loc: (*time.Location)(<already shown>)
                }
              },
              FinishedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854208115,
                  loc: (*time.Location)(<already shown>)
                }
              },
              ContainerID: (string) (len=72) "cri-o://3227d7608b6094c352c8d6bfba65e309d1739cdd940fdcea7804d2744a3588ec"
            })
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://3227d7608b6094c352c8d6bfba65e309d1739cdd940fdcea7804d2744a3588ec",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0617 08:01:55.699034 19 deployment.go:669] pod: "test-deployment-65fbf5b65d-dxvh9":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-dxvh9",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-7976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fd7be71-442f-45b9-b0dd-0e29d84f0597",
      ResourceVersion: (string) (len=5) "30473",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208117,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "62b3942baa0f16a7ce9582e77181e033628e8d15e110e00a8845dd7c260d2013",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.210.27/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.210.27/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "c7d799f6-6463-4fb9-8ca5-5e96684b31e0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  63 37 64 37 39 39 66 36  |uid\":\"c7d799f6|
              000000a0  2d 36 34 36 33 2d 34 66  62 39 2d 38 63 61 35 2d  |-6463-4fb9-8ca5-|
              000000b0  35 65 39 36 36 38 34 62  33 31 65 30 5c 22 7d 22  |5e96684b31e0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 31 30  2e 32 37 5c 22 7d 22 3a  |2.16.210.27\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-clhj4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-clhj4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-2.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.166",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.166"
        }
      },
      PodIP: (string) (len=13) "172.16.210.27",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.210.27"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854208113,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=93) "registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=72) "cri-o://f0f90dacd2dc0e17268ef934276b6d4e502221fe24d12a5bfda6eab06cadfbc9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0617 08:01:55.720019 19 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6ecbde5b-1f2c-474c-bc83-165be617b820",
      ResourceVersion: (string) (len=5) "30470",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "48d9fe85-a223-40a8-b7c9-2ac7c13ba8cb",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 34 38 64 39  66 65 38 35 2d 61 32 32  |":\"48d9fe85-a22|
              00000130  33 2d 34 30 61 38 2d 62  37 63 39 2d 32 61 63 37  |3-40a8-b7c9-2ac7|
              00000140  63 31 33 62 61 38 63 62  5c 22 7d 22 3a 7b 7d 7d  |c13ba8cb\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0617 08:01:55.732525 19 deployment.go:669] pod: "test-deployment-6b9f8f4d48-j8987":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-j8987",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-7976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "19dca545-044a-4f8a-b40a-1bea9d4d13b1",
      ResourceVersion: (string) (len=5) "30486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208114,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208116,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=16) "172.16.106.88/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=16) "172.16.106.88/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2d8e3f2676d97213cc044e2eba29d28f5d17162f1fc73a0c4a98093a2322205f"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "6ecbde5b-1f2c-474c-bc83-165be617b820",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 65 63 62 64 65 35 62  |uid\":\"6ecbde5b|
              000000a0  2d 31 66 32 63 2d 34 37  34 63 2d 62 63 38 33 2d  |-1f2c-474c-bc83-|
              000000b0  31 36 35 62 65 36 31 37  62 38 32 30 5c 22 7d 22  |165be617b820\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=662) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 31 30 36  2e 38 38 5c 22 7d 22 3a  |2.16.106.88\"}":|
              00000270  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 70 22 3a 7b  |{".":{},"f:ip":{|
              00000280  7d 7d 7d 2c 22 66 3a 73  74 61 72 74 54 69 6d 65  |}}},"f:startTime|
              00000290  22 3a 7b 7d 7d 7d                                 |":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-sdnm8",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-sdnm8",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-3.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208115,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.167",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.167"
        }
      },
      PodIP: (string) (len=13) "172.16.106.88",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=13) "172.16.106.88"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208114,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854208115,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://2d9db9bdaec26e66022f85cf6d9c9af8337f6564c2a42714e6f0ac69c228599d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0617 08:01:55.746345 19 deployment.go:669] pod: "test-deployment-6b9f8f4d48-t4z72":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-t4z72",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-7976",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "c371803a-3c27-4dfb-9972-63dde0b82bbb",
      ResourceVersion: (string) (len=5) "30485",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208116,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9b580b5a9b5964e7bde7fc2e5b563c14bbc039fae0736eea3a967e60320e992c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=17) "172.16.228.146/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=17) "172.16.228.146/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "6ecbde5b-1f2c-474c-bc83-165be617b820",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  36 65 63 62 64 65 35 62  |uid\":\"6ecbde5b|
              000000a0  2d 31 66 32 63 2d 34 37  34 63 2d 62 63 38 33 2d  |-1f2c-474c-bc83-|
              000000b0  31 36 35 62 65 36 31 37  62 38 32 30 5c 22 7d 22  |165be617b820\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=663) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 37  |,"k:{\"ip\":\"17|
              00000260  32 2e 31 36 2e 32 32 38  2e 31 34 36 5c 22 7d 22  |2.16.228.146\"}"|
              00000270  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 70 22 3a  |:{".":{},"f:ip":|
              00000280  7b 7d 7d 7d 2c 22 66 3a  73 74 61 72 74 54 69 6d  |{}}},"f:startTim|
              00000290  65 22 3a 7b 7d 7d 7d                              |e":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tbltv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tbltv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=25) "ck-130-worker-1.novalocal",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208114,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63854208113,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=15) "192.168.190.169",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=15) "192.168.190.169"
        }
      },
      PodIP: (string) (len=14) "172.16.228.146",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=14) "172.16.228.146"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63854208113,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63854208113,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=109) "registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=72) "cri-o://0b966db829dbf9a9bda3fdafd232262c5168731dc1d7b3a584204fc431825c12",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0617 08:01:55.760499 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7976" for this suite. @ 06/17/24 08:01:55.766
• [4.801 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 06/17/24 08:01:55.774
  I0617 08:01:55.774507 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename endpointslice @ 06/17/24 08:01:55.776
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:01:55.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:01:55.79
  STEP: referencing a single matching pod @ 06/17/24 08:01:57.891
  STEP: referencing matching pods with named port @ 06/17/24 08:01:57.9
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 06/17/24 08:01:57.906
  STEP: recreating EndpointSlices after they've been deleted @ 06/17/24 08:01:57.916
  I0617 08:01:57.932970 19 endpointslice.go:938] EndpointSlice for Service endpointslice-4370/example-named-port not found
  I0617 08:01:59.937976 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-4370" for this suite. @ 06/17/24 08:01:59.942
• [4.172 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 06/17/24 08:01:59.947
  I0617 08:01:59.947543 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename cronjob @ 06/17/24 08:01:59.949
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:01:59.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:01:59.966
  STEP: Creating a ReplaceConcurrent cronjob @ 06/17/24 08:01:59.969
  STEP: Ensuring a job is scheduled @ 06/17/24 08:01:59.975
  STEP: Ensuring exactly one is scheduled @ 06/17/24 08:02:01.981
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 06/17/24 08:02:01.984
  STEP: Ensuring the job is replaced with a new one @ 06/17/24 08:02:01.987
  STEP: Removing cronjob @ 06/17/24 08:03:01.992
  I0617 08:03:01.998690 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2720" for this suite. @ 06/17/24 08:03:02.004
• [62.063 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 06/17/24 08:03:02.011
  I0617 08:03:02.011380 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replicaset @ 06/17/24 08:03:02.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:02.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:02.032
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 06/17/24 08:03:02.036
  STEP: When a replicaset with a matching selector is created @ 06/17/24 08:03:04.054
  STEP: Then the orphan pod is adopted @ 06/17/24 08:03:04.058
  STEP: When the matched label of one of its pods change @ 06/17/24 08:03:05.065
  I0617 08:03:05.068122 19 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 06/17/24 08:03:05.076
  I0617 08:03:06.083559 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-6136" for this suite. @ 06/17/24 08:03:06.088
• [4.082 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 06/17/24 08:03:06.093
  I0617 08:03:06.093728 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename containers @ 06/17/24 08:03:06.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:06.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:06.112
  I0617 08:03:08.147163 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9634" for this suite. @ 06/17/24 08:03:08.152
• [2.064 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 06/17/24 08:03:08.161
  I0617 08:03:08.161987 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename watch @ 06/17/24 08:03:08.163
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:08.175
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:08.179
  STEP: creating a new configmap @ 06/17/24 08:03:08.184
  STEP: modifying the configmap once @ 06/17/24 08:03:08.188
  STEP: modifying the configmap a second time @ 06/17/24 08:03:08.195
  STEP: deleting the configmap @ 06/17/24 08:03:08.201
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 06/17/24 08:03:08.205
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 06/17/24 08:03:08.206
  I0617 08:03:08.207406 19 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-506  367869a5-36f7-406b-893d-902bef6235fd 31091 0 2024-06-17 08:03:08 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-17 08:03:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 08:03:08.207927 19 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-506  367869a5-36f7-406b-893d-902bef6235fd 31092 0 2024-06-17 08:03:08 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-06-17 08:03:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0617 08:03:08.208642 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-506" for this suite. @ 06/17/24 08:03:08.212
• [0.056 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 06/17/24 08:03:08.218
  I0617 08:03:08.218088 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 08:03:08.219
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:08.231
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:08.234
  STEP: Creating configMap with name configmap-test-volume-map-fa67d298-4770-4a07-ae60-2fdcdf31a518 @ 06/17/24 08:03:08.238
  STEP: Creating a pod to test consume configMaps @ 06/17/24 08:03:08.242
  STEP: Saw pod success @ 06/17/24 08:03:12.26
  I0617 08:03:12.262733 19 output.go:196] Trying to get logs from node ck-130-worker-2.novalocal pod pod-configmaps-a12f54bc-8a04-4055-be05-0a02f09a438c container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:03:12.268
  I0617 08:03:12.282517 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6575" for this suite. @ 06/17/24 08:03:12.286
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 06/17/24 08:03:12.294
  I0617 08:03:12.294066 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 08:03:12.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:12.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:12.31
  STEP: Setting up server cert @ 06/17/24 08:03:12.327
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 08:03:12.753
  STEP: Deploying the webhook pod @ 06/17/24 08:03:12.762
  STEP: Wait for the deployment to be ready @ 06/17/24 08:03:12.776
  I0617 08:03:12.784999 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 08:03:14.794
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 08:03:14.804
  I0617 08:03:15.805159 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0617 08:03:15.812274 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5264-crds.webhook.example.com via the AdmissionRegistration API @ 06/17/24 08:03:16.327
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/17/24 08:03:16.35
  I0617 08:03:18.973139 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7103" for this suite. @ 06/17/24 08:03:18.98
  STEP: Destroying namespace "webhook-markers-826" for this suite. @ 06/17/24 08:03:18.985
• [6.698 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 06/17/24 08:03:18.992
  I0617 08:03:18.992452 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pod-network-test @ 06/17/24 08:03:18.993
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:19.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:19.011
  STEP: Performing setup for networking test in namespace pod-network-test-4456 @ 06/17/24 08:03:19.015
  STEP: creating a selector @ 06/17/24 08:03:19.016
  STEP: Creating the service pods in kubernetes @ 06/17/24 08:03:19.016
  I0617 08:03:19.016820 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/17/24 08:03:31.101
  I0617 08:03:33.117833 19 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0617 08:03:33.117948 19 networking.go:42] Breadth first check of 172.16.228.130 on host 192.168.190.169...
  I0617 08:03:33.120155 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.228.145:9080/dial?request=hostname&protocol=http&host=172.16.228.130&port=8083&tries=1'] Namespace:pod-network-test-4456 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:03:33.120252 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:03:33.122402 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:03:33.122491 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4456/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.228.145%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.228.130%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0617 08:03:33.169773 19 utils.go:331] Waiting for responses: map[]
  I0617 08:03:33.169831 19 utils.go:335] reached 172.16.228.130 after 0/1 tries
  I0617 08:03:33.169854 19 networking.go:42] Breadth first check of 172.16.210.25 on host 192.168.190.166...
  I0617 08:03:33.173326 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.228.145:9080/dial?request=hostname&protocol=http&host=172.16.210.25&port=8083&tries=1'] Namespace:pod-network-test-4456 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:03:33.173368 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:03:33.174330 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:03:33.174424 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4456/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.228.145%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.210.25%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0617 08:03:33.215642 19 utils.go:331] Waiting for responses: map[]
  I0617 08:03:33.215693 19 utils.go:335] reached 172.16.210.25 after 0/1 tries
  I0617 08:03:33.215707 19 networking.go:42] Breadth first check of 172.16.106.77 on host 192.168.190.167...
  I0617 08:03:33.219769 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.228.145:9080/dial?request=hostname&protocol=http&host=172.16.106.77&port=8083&tries=1'] Namespace:pod-network-test-4456 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:03:33.219813 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:03:33.220828 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:03:33.220901 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-4456/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.228.145%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D172.16.106.77%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0617 08:03:33.269743 19 utils.go:331] Waiting for responses: map[]
  I0617 08:03:33.269799 19 utils.go:335] reached 172.16.106.77 after 0/1 tries
  I0617 08:03:33.269827 19 networking.go:53] Going to retry 0 out of 3 pods....
  I0617 08:03:33.270291 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-4456" for this suite. @ 06/17/24 08:03:33.275
• [14.289 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 06/17/24 08:03:33.283
  I0617 08:03:33.283778 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename security-context-test @ 06/17/24 08:03:33.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:33.298
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:33.301
  I0617 08:03:37.330324 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-2471" for this suite. @ 06/17/24 08:03:37.335
• [4.057 seconds]
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 06/17/24 08:03:37.34
  I0617 08:03:37.340938 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 08:03:37.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:37.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:37.36
  STEP: Setting up server cert @ 06/17/24 08:03:37.387
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 08:03:37.733
  STEP: Deploying the webhook pod @ 06/17/24 08:03:37.74
  STEP: Wait for the deployment to be ready @ 06/17/24 08:03:37.752
  I0617 08:03:37.758651 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 08:03:39.777
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 08:03:39.79
  I0617 08:03:40.791241 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 06/17/24 08:03:40.799
  STEP: create the configmap with a random name @ 06/17/24 08:03:40.822
  STEP: verify the configmap is mutated @ 06/17/24 08:03:40.833
  STEP: create the configmap with 'skip-me' name @ 06/17/24 08:03:40.833
  I0617 08:03:40.873825 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3626" for this suite. @ 06/17/24 08:03:40.879
  STEP: Destroying namespace "webhook-markers-8203" for this suite. @ 06/17/24 08:03:40.884
• [3.551 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 06/17/24 08:03:40.893
  I0617 08:03:40.893062 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename disruption @ 06/17/24 08:03:40.895
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:40.906
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:40.91
  STEP: Creating a pdb that targets all three pods in a test replica set @ 06/17/24 08:03:40.913
  STEP: Waiting for the pdb to be processed @ 06/17/24 08:03:40.918
  STEP: First trying to evict a pod which shouldn't be evictable @ 06/17/24 08:03:42.928
  STEP: Waiting for all pods to be running @ 06/17/24 08:03:42.928
  I0617 08:03:42.930792 19 disruption.go:567] pods: 0 < 3
  STEP: locating a running pod @ 06/17/24 08:03:44.934
  STEP: Updating the pdb to allow a pod to be evicted @ 06/17/24 08:03:44.946
  STEP: Waiting for the pdb to be processed @ 06/17/24 08:03:44.955
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/17/24 08:03:46.959
  STEP: Waiting for all pods to be running @ 06/17/24 08:03:46.959
  STEP: Waiting for the pdb to observed all healthy pods @ 06/17/24 08:03:46.963
  STEP: Patching the pdb to disallow a pod to be evicted @ 06/17/24 08:03:46.986
  STEP: Waiting for the pdb to be processed @ 06/17/24 08:03:47.068
  STEP: Waiting for all pods to be running @ 06/17/24 08:03:49.074
  STEP: locating a running pod @ 06/17/24 08:03:49.079
  STEP: Deleting the pdb to allow a pod to be evicted @ 06/17/24 08:03:49.092
  STEP: Waiting for the pdb to be deleted @ 06/17/24 08:03:49.096
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 06/17/24 08:03:49.099
  STEP: Waiting for all pods to be running @ 06/17/24 08:03:49.099
  I0617 08:03:49.118371 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-539" for this suite. @ 06/17/24 08:03:49.126
• [8.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 06/17/24 08:03:49.139
  I0617 08:03:49.139534 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 08:03:49.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:49.157
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:49.161
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 06/17/24 08:03:49.166
  STEP: Saw pod success @ 06/17/24 08:03:53.185
  I0617 08:03:53.188383 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-0e8249a9-990c-44a9-af86-203a9ad3d5e4 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 08:03:53.195
  I0617 08:03:53.208208 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-263" for this suite. @ 06/17/24 08:03:53.214
• [4.085 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 06/17/24 08:03:53.225
  I0617 08:03:53.225223 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 08:03:53.226
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:53.239
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:53.243
  I0617 08:03:53.246627 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-1871 version'
  I0617 08:03:53.353935 19 builder.go:146] stderr: ""
  I0617 08:03:53.354008 19 builder.go:147] stdout: "Client Version: v1.30.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.2\n"
  I0617 08:03:53.354694 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1871" for this suite. @ 06/17/24 08:03:53.359
• [0.141 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 06/17/24 08:03:53.367
  I0617 08:03:53.367100 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 08:03:53.368
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:53.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:53.387
  STEP: Creating secret with name secret-test-437963cd-2a6d-4763-9f60-4ae4d8d50172 @ 06/17/24 08:03:53.39
  STEP: Creating a pod to test consume secrets @ 06/17/24 08:03:53.394
  STEP: Saw pod success @ 06/17/24 08:03:57.413
  I0617 08:03:57.415648 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-cce53a2b-6014-4402-8e72-59b9f05f8f1c container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 08:03:57.421
  I0617 08:03:57.433956 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9990" for this suite. @ 06/17/24 08:03:57.438
• [4.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 06/17/24 08:03:57.444
  I0617 08:03:57.444271 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename taint-multiple-pods @ 06/17/24 08:03:57.445
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:03:57.459
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:03:57.462
  I0617 08:03:57.465053 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0617 08:04:57.466255 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0617 08:04:57.471359 19 taints.go:150] Starting informer...
  STEP: Starting pods... @ 06/17/24 08:04:57.471
  I0617 08:04:57.693073 19 taints.go:469] Pod1 is running on ck-130-worker-1.novalocal. Tainting Node
  I0617 08:04:59.914360 19 taints.go:477] Pod2 is running on ck-130-worker-1.novalocal. Tainting Node
  STEP: Trying to apply a taint on the Node @ 06/17/24 08:04:59.914
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/17/24 08:04:59.929
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 06/17/24 08:04:59.938
  I0617 08:05:05.917825 19 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  I0617 08:05:25.974231 19 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 06/17/24 08:05:25.992
  I0617 08:05:26.002744 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-397" for this suite. @ 06/17/24 08:05:26.007
• [88.571 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 06/17/24 08:05:26.015
  I0617 08:05:26.015872 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:05:26.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:05:26.044
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:05:26.049
  STEP: Creating projection with secret that has name projected-secret-test-fc1513fb-2046-488c-98b7-8c7271399538 @ 06/17/24 08:05:26.053
  STEP: Creating a pod to test consume secrets @ 06/17/24 08:05:26.057
  STEP: Saw pod success @ 06/17/24 08:05:30.076
  I0617 08:05:30.079490 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-secrets-5ad39b7a-9e38-4fee-b21e-d3978a55cff4 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 08:05:30.094
  I0617 08:05:30.112470 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-779" for this suite. @ 06/17/24 08:05:30.118
• [4.107 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 06/17/24 08:05:30.125
  I0617 08:05:30.125103 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 08:05:30.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:05:30.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:05:30.146
  STEP: Setting up server cert @ 06/17/24 08:05:30.166
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 08:05:30.549
  STEP: Deploying the webhook pod @ 06/17/24 08:05:30.559
  STEP: Wait for the deployment to be ready @ 06/17/24 08:05:30.572
  I0617 08:05:30.581577 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 08:05:32.592
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 08:05:32.605
  I0617 08:05:33.605255 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0617 08:05:33.612651 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 06/17/24 08:05:34.124
  STEP: Creating a custom resource that should be denied by the webhook @ 06/17/24 08:05:34.145
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 06/17/24 08:05:36.175
  STEP: Updating the custom resource with disallowed data should be denied @ 06/17/24 08:05:36.181
  STEP: Deleting the custom resource should be denied @ 06/17/24 08:05:36.189
  STEP: Remove the offending key and value from the custom resource data @ 06/17/24 08:05:36.196
  STEP: Deleting the updated custom resource should be successful @ 06/17/24 08:05:36.205
  I0617 08:05:36.768974 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9475" for this suite. @ 06/17/24 08:05:36.776
  STEP: Destroying namespace "webhook-markers-4585" for this suite. @ 06/17/24 08:05:36.787
• [6.669 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 06/17/24 08:05:36.793
  I0617 08:05:36.793809 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:05:36.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:05:36.808
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:05:36.812
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 08:05:36.815
  STEP: Saw pod success @ 06/17/24 08:05:40.836
  I0617 08:05:40.839869 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-d7fdf960-d10a-4ab8-ae96-c056143a888d container client-container: <nil>
  STEP: delete the pod @ 06/17/24 08:05:40.847
  I0617 08:05:40.861008 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1106" for this suite. @ 06/17/24 08:05:40.866
• [4.081 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 06/17/24 08:05:40.876
  I0617 08:05:40.876394 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 08:05:40.877
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:05:40.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:05:40.894
  STEP: Creating service test in namespace statefulset-6243 @ 06/17/24 08:05:40.897
  I0617 08:05:40.911973 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0617 08:05:50.915982 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 06/17/24 08:05:50.923
  W0617 08:05:50.954074      19 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0617 08:05:50.961252 19 wait.go:40] Found 1 stateful pods, waiting for 2
  I0617 08:06:00.967454 19 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0617 08:06:00.967513 19 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 06/17/24 08:06:00.974
  STEP: Delete all of the StatefulSets @ 06/17/24 08:06:00.977
  STEP: Verify that StatefulSets have been deleted @ 06/17/24 08:06:00.983
  I0617 08:06:00.986386 19 statefulset.go:135] Deleting all statefulset in ns statefulset-6243
  I0617 08:06:00.993805 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6243" for this suite. @ 06/17/24 08:06:00.999
• [20.132 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 06/17/24 08:06:01.009
  I0617 08:06:01.009475 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename job @ 06/17/24 08:06:01.013
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:01.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:01.033
  STEP: Creating Indexed job @ 06/17/24 08:06:01.04
  STEP: Ensuring job reaches completions @ 06/17/24 08:06:01.048
  STEP: Ensuring pods with index for job exist @ 06/17/24 08:06:09.053
  I0617 08:06:09.059495 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6250" for this suite. @ 06/17/24 08:06:09.063
• [8.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 06/17/24 08:06:09.08
  I0617 08:06:09.080536 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 08:06:09.082
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:09.098
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:09.101
  STEP: Creating pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015 @ 06/17/24 08:06:09.104
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 08:06:11.12
  I0617 08:06:11.123121 19 container_probe.go:1749] Initial restart count of pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 is 0
  I0617 08:06:11.125469 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:13.130759 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:15.136627 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:17.141463 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:19.146779 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:21.153596 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:23.157830 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:25.162968 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:27.167294 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:29.172546 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:31.178814 19 container_probe.go:1759] Get pod liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 in namespace container-probe-1015
  I0617 08:06:31.178938 19 container_probe.go:1763] Restart count of pod container-probe-1015/liveness-cdf3844b-890b-4eae-b12d-880f9004ccc0 is now 1 (20.055770997s elapsed)
  STEP: deleting the pod @ 06/17/24 08:06:31.179
  I0617 08:06:31.189320 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1015" for this suite. @ 06/17/24 08:06:31.194
• [22.119 seconds]
------------------------------
SS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 06/17/24 08:06:31.2
  I0617 08:06:31.200453 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 08:06:31.203
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:31.218
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:31.221
  STEP: creating secret secrets-6476/secret-test-d889525a-75c5-4c6d-ad49-e16d50c64aed @ 06/17/24 08:06:31.224
  STEP: Creating a pod to test consume secrets @ 06/17/24 08:06:31.229
  STEP: Saw pod success @ 06/17/24 08:06:35.249
  I0617 08:06:35.252340 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-191af10b-a3b8-4332-8c6b-9fdefa941ee5 container env-test: <nil>
  STEP: delete the pod @ 06/17/24 08:06:35.258
  I0617 08:06:35.271277 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6476" for this suite. @ 06/17/24 08:06:35.276
• [4.080 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 06/17/24 08:06:35.28
  I0617 08:06:35.280708 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 08:06:35.282
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:35.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:35.293
  STEP: Creating secret with name secret-test-890e3d62-145e-4be3-bbbf-670383b9a916 @ 06/17/24 08:06:35.297
  STEP: Creating a pod to test consume secrets @ 06/17/24 08:06:35.301
  STEP: Saw pod success @ 06/17/24 08:06:39.319
  I0617 08:06:39.322220 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-5734a6f5-e8cb-405e-8b42-efc62a21c423 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 08:06:39.328
  I0617 08:06:39.340543 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-5825" for this suite. @ 06/17/24 08:06:39.344
• [4.068 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 06/17/24 08:06:39.35
  I0617 08:06:39.350556 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename init-container @ 06/17/24 08:06:39.352
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:39.366
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:39.369
  STEP: creating the pod @ 06/17/24 08:06:39.372
  I0617 08:06:39.372994 19 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0617 08:06:42.228338 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-3206" for this suite. @ 06/17/24 08:06:42.233
• [2.889 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 06/17/24 08:06:42.239
  I0617 08:06:42.239614 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubectl @ 06/17/24 08:06:42.241
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:42.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:42.254
  STEP: validating cluster-info @ 06/17/24 08:06:42.257
  I0617 08:06:42.257971 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=kubectl-8754 cluster-info'
  I0617 08:06:42.348143 19 builder.go:146] stderr: ""
  I0617 08:06:42.348275 19 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.96.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0617 08:06:42.348407 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8754" for this suite. @ 06/17/24 08:06:42.353
• [0.118 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 06/17/24 08:06:42.359
  I0617 08:06:42.359422 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 08:06:42.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:42.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:42.376
  STEP: creating service in namespace services-4443 @ 06/17/24 08:06:42.38
  STEP: creating service affinity-nodeport in namespace services-4443 @ 06/17/24 08:06:42.38
  STEP: creating replication controller affinity-nodeport in namespace services-4443 @ 06/17/24 08:06:42.396
  I0617 08:06:42.403613      19 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-4443, replica count: 3
  I0617 08:06:45.455125      19 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0617 08:06:45.467039 19 resource.go:361] Creating new exec pod
  I0617 08:06:48.485716 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-4443 exec execpod-affinityl8hhx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0617 08:06:48.608054 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 affinity-nodeport 80\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0617 08:06:48.608189 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 08:06:48.608324 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-4443 exec execpod-affinityl8hhx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.106.244.232 80'
  I0617 08:06:48.720122 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.106.244.232 80\nConnection to 10.106.244.232 80 port [tcp/http] succeeded!\n"
  I0617 08:06:48.720221 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 08:06:48.720388 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-4443 exec execpod-affinityl8hhx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.169 31057'
  I0617 08:06:48.847684 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.169 31057\nConnection to 192.168.190.169 31057 port [tcp/*] succeeded!\n"
  I0617 08:06:48.847770 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 08:06:48.847936 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-4443 exec execpod-affinityl8hhx -- /bin/sh -x -c echo hostName | nc -v -t -w 2 192.168.190.167 31057'
  I0617 08:06:48.962601 19 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 192.168.190.167 31057\nConnection to 192.168.190.167 31057 port [tcp/*] succeeded!\n"
  I0617 08:06:48.962680 19 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0617 08:06:48.962905 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-4443 exec execpod-affinityl8hhx -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://192.168.190.169:31057/ ; done'
  I0617 08:06:49.161629 19 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n+ echo\n+ curl -q -s --connect-timeout 2 http://192.168.190.169:31057/\n"
  I0617 08:06:49.161724 19 builder.go:147] stdout: "\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc\naffinity-nodeport-7hhkc"
  I0617 08:06:49.161763 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161785 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161813 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161822 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161831 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161856 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161865 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161873 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161882 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161890 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161898 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161906 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161914 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161921 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161929 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.161951 19 service.go:242] Received response from host: affinity-nodeport-7hhkc
  I0617 08:06:49.162097 19 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-4443, will wait for the garbage collector to delete the pods @ 06/17/24 08:06:49.178
  I0617 08:06:49.239231 19 resources.go:139] Deleting ReplicationController affinity-nodeport took: 5.509244ms
  I0617 08:06:49.340461 19 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.224742ms
  I0617 08:06:52.460610 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4443" for this suite. @ 06/17/24 08:06:52.464
• [10.110 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 06/17/24 08:06:52.469
  I0617 08:06:52.469730 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 08:06:52.471
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:52.483
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:52.486
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 08:06:52.49
  STEP: Saw pod success @ 06/17/24 08:06:54.508
  I0617 08:06:54.510858 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-6c829797-0534-46a0-b3a9-839ade007d5c container client-container: <nil>
  STEP: delete the pod @ 06/17/24 08:06:54.517
  I0617 08:06:54.529530 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-908" for this suite. @ 06/17/24 08:06:54.533
• [2.069 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 06/17/24 08:06:54.539
  I0617 08:06:54.539534 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 08:06:54.542
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:54.554
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:54.558
  I0617 08:06:54.586531 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1804" for this suite. @ 06/17/24 08:06:54.59
• [0.056 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 06/17/24 08:06:54.599
  I0617 08:06:54.599677 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename subjectreview @ 06/17/24 08:06:54.601
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:54.614
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:54.618
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-1459" @ 06/17/24 08:06:54.622
  I0617 08:06:54.625698 19 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-1459:e2e"
  I0617 08:06:54.625748 19 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-1459"}
  I0617 08:06:54.625765 19 subjectreviews.go:71] saUID: "04cb3273-f9b7-4f7e-9578-1bcd99c12420"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-1459:e2e" @ 06/17/24 08:06:54.625
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-1459:e2e" @ 06/17/24 08:06:54.626
  I0617 08:06:54.628372 19 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-1459:e2e" api 'list' configmaps in "subjectreview-1459" namespace @ 06/17/24 08:06:54.628
  I0617 08:06:54.629756 19 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-1459:e2e" @ 06/17/24 08:06:54.629
  I0617 08:06:54.631970 19 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0617 08:06:54.632021 19 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0617 08:06:54.632423 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-1459" for this suite. @ 06/17/24 08:06:54.636
• [0.042 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 06/17/24 08:06:54.644
  I0617 08:06:54.644505 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 08:06:54.646
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:54.656
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:54.659
  STEP: Create set of pods @ 06/17/24 08:06:54.666
  I0617 08:06:54.672575 19 pods.go:871] created test-pod-1
  I0617 08:06:54.678938 19 pods.go:871] created test-pod-2
  I0617 08:06:54.684497 19 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 06/17/24 08:06:54.684
  STEP: waiting for all pods to be deleted @ 06/17/24 08:06:56.728
  I0617 08:06:56.732826 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0617 08:06:57.734392 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0617 08:06:58.733672 19 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  I0617 08:06:59.732801 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5829" for this suite. @ 06/17/24 08:06:59.74
• [5.102 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 06/17/24 08:06:59.746
  I0617 08:06:59.746475 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename discovery @ 06/17/24 08:06:59.747
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:06:59.763
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:06:59.767
  STEP: Setting up server cert @ 06/17/24 08:06:59.772
  STEP: Requesting APIResourceList from "/api/v1" @ 06/17/24 08:07:00.54
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 06/17/24 08:07:00.542
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 06/17/24 08:07:00.544
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 06/17/24 08:07:00.545
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 06/17/24 08:07:00.546
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 06/17/24 08:07:00.548
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 06/17/24 08:07:00.549
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 06/17/24 08:07:00.55
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 06/17/24 08:07:00.551
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 06/17/24 08:07:00.553
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 06/17/24 08:07:00.554
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 06/17/24 08:07:00.555
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 06/17/24 08:07:00.556
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 06/17/24 08:07:00.558
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 06/17/24 08:07:00.559
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 06/17/24 08:07:00.56
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 06/17/24 08:07:00.562
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 06/17/24 08:07:00.563
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 06/17/24 08:07:00.565
  I0617 08:07:00.566702 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-4214" for this suite. @ 06/17/24 08:07:00.571
• [0.834 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 06/17/24 08:07:00.58
  I0617 08:07:00.580904 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 08:07:00.582
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:07:00.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:07:00.603
  I0617 08:07:22.675153 19 container_probe.go:92] Container started at 2024-06-17 08:07:01 +0000 UTC, pod became ready at 2024-06-17 08:07:20 +0000 UTC
  I0617 08:07:22.675762 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3823" for this suite. @ 06/17/24 08:07:22.68
• [22.104 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 06/17/24 08:07:22.685
  I0617 08:07:22.685807 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename security-context-test @ 06/17/24 08:07:22.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:07:22.703
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:07:22.706
  I0617 08:07:24.731097 19 security_context.go:538] Got logs for pod "busybox-privileged-false-068474a1-add1-4526-bd5a-6046d91f66ed": "ip: RTNETLINK answers: Operation not permitted\n"
  I0617 08:07:24.731528 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4475" for this suite. @ 06/17/24 08:07:24.737
• [2.057 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 06/17/24 08:07:24.743
  I0617 08:07:24.744079 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 08:07:24.746
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:07:24.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:07:24.765
  STEP: creating a Service @ 06/17/24 08:07:24.771
  STEP: watching for the Service to be added @ 06/17/24 08:07:24.814
  I0617 08:07:24.816086 19 service.go:3397] Found Service test-service-psl9k in namespace services-218 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32657}]
  I0617 08:07:24.816165 19 service.go:3404] Service test-service-psl9k created
  STEP: Getting /status @ 06/17/24 08:07:24.816
  I0617 08:07:24.821466 19 service.go:3415] Service test-service-psl9k has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 06/17/24 08:07:24.821
  STEP: watching for the Service to be patched @ 06/17/24 08:07:24.829
  I0617 08:07:24.831883 19 service.go:3438] observed Service test-service-psl9k in namespace services-218 with annotations: map[] & LoadBalancer: {[]}
  I0617 08:07:24.831966 19 service.go:3441] Found Service test-service-psl9k in namespace services-218 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000e7c5f0 []}]}
  I0617 08:07:24.832020 19 service.go:3448] Service test-service-psl9k has service status patched
  STEP: updating the ServiceStatus @ 06/17/24 08:07:24.832
  I0617 08:07:24.842540 19 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 06/17/24 08:07:24.842
  I0617 08:07:24.849583 19 service.go:3479] Observed Service test-service-psl9k in namespace services-218 with annotations: map[] & Conditions: {[]}
  I0617 08:07:24.850082 19 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-psl9k  services-218  b25a6116-c661-4305-89b2-3106fa1ace09 33203 0 2024-06-17 08:07:24 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-06-17 08:07:24 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-06-17 08:07:24 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32657,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.109.40.228,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.109.40.228],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0617 08:07:24.850311 19 service.go:3486] Found Service test-service-psl9k in namespace services-218 with annotations: map[patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0617 08:07:24.850342 19 service.go:3498] Service test-service-psl9k has service status updated
  STEP: patching the service @ 06/17/24 08:07:24.85
  STEP: watching for the Service to be patched @ 06/17/24 08:07:24.879
  I0617 08:07:24.881932 19 service.go:3521] observed Service test-service-psl9k in namespace services-218 with labels: map[test-service-static:true]
  I0617 08:07:24.882003 19 service.go:3521] observed Service test-service-psl9k in namespace services-218 with labels: map[test-service-static:true]
  I0617 08:07:24.882080 19 service.go:3521] observed Service test-service-psl9k in namespace services-218 with labels: map[test-service-static:true]
  I0617 08:07:24.882132 19 service.go:3524] Found Service test-service-psl9k in namespace services-218 with labels: map[test-service:patched test-service-static:true]
  I0617 08:07:24.882213 19 service.go:3531] Service test-service-psl9k patched
  STEP: deleting the service @ 06/17/24 08:07:24.882
  STEP: watching for the Service to be deleted @ 06/17/24 08:07:24.904
  I0617 08:07:24.906358 19 service.go:3555] Observed event: ADDED
  I0617 08:07:24.906685 19 service.go:3555] Observed event: MODIFIED
  I0617 08:07:24.906808 19 service.go:3555] Observed event: MODIFIED
  I0617 08:07:24.906836 19 service.go:3555] Observed event: MODIFIED
  I0617 08:07:24.907383 19 service.go:3551] Found Service test-service-psl9k in namespace services-218 with labels: map[test-service:patched test-service-static:true] & annotations: map[patchedstatus:true]
  I0617 08:07:24.907418 19 service.go:3560] Service test-service-psl9k deleted
  I0617 08:07:24.907582 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-218" for this suite. @ 06/17/24 08:07:24.913
• [0.175 seconds]
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 06/17/24 08:07:24.919
  I0617 08:07:24.919164 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 08:07:24.921
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:07:24.936
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:07:24.939
  STEP: Creating the pod @ 06/17/24 08:07:24.943
  I0617 08:07:27.487350 19 pod_client.go:141] Successfully updated pod "annotationupdatea7a1c9a3-7a9a-429e-91a0-8d8a95188e08"
  I0617 08:07:31.510079 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2756" for this suite. @ 06/17/24 08:07:31.514
• [6.601 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 06/17/24 08:07:31.52
  I0617 08:07:31.521039 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-runtime @ 06/17/24 08:07:31.523
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:07:31.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:07:31.541
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 06/17/24 08:07:31.553
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 06/17/24 08:07:45.622
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 06/17/24 08:07:45.626
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 06/17/24 08:07:45.633
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 06/17/24 08:07:45.633
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 06/17/24 08:07:45.656
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 06/17/24 08:07:47.669
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 06/17/24 08:07:48.677
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 06/17/24 08:07:48.682
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 06/17/24 08:07:48.682
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 06/17/24 08:07:48.699
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 06/17/24 08:07:49.706
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 06/17/24 08:07:50.714
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 06/17/24 08:07:50.72
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 06/17/24 08:07:50.72
  I0617 08:07:50.738082 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2551" for this suite. @ 06/17/24 08:07:50.742
• [19.227 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 06/17/24 08:07:50.748
  I0617 08:07:50.748520 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pod-network-test @ 06/17/24 08:07:50.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:07:50.766
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:07:50.77
  STEP: Performing setup for networking test in namespace pod-network-test-9305 @ 06/17/24 08:07:50.774
  STEP: creating a selector @ 06/17/24 08:07:50.774
  STEP: Creating the service pods in kubernetes @ 06/17/24 08:07:50.774
  I0617 08:07:50.774254 19 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 06/17/24 08:08:02.86
  I0617 08:08:04.882649 19 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0617 08:08:04.882739 19 networking.go:42] Breadth first check of 172.16.228.137 on host 192.168.190.169...
  I0617 08:08:04.887090 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.228.177:9080/dial?request=hostname&protocol=udp&host=172.16.228.137&port=8081&tries=1'] Namespace:pod-network-test-9305 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:08:04.887232 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:08:04.892136 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:08:04.892289 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9305/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.228.177%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.228.137%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0617 08:08:04.945050 19 utils.go:331] Waiting for responses: map[]
  I0617 08:08:04.945109 19 utils.go:335] reached 172.16.228.137 after 0/1 tries
  I0617 08:08:04.945125 19 networking.go:42] Breadth first check of 172.16.210.35 on host 192.168.190.166...
  I0617 08:08:04.949771 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.228.177:9080/dial?request=hostname&protocol=udp&host=172.16.210.35&port=8081&tries=1'] Namespace:pod-network-test-9305 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:08:04.949962 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:08:04.952611 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:08:04.952918 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9305/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.228.177%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.210.35%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0617 08:08:04.997635 19 utils.go:331] Waiting for responses: map[]
  I0617 08:08:04.997698 19 utils.go:335] reached 172.16.210.35 after 0/1 tries
  I0617 08:08:04.997718 19 networking.go:42] Breadth first check of 172.16.106.95 on host 192.168.190.167...
  I0617 08:08:05.001660 19 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://172.16.228.177:9080/dial?request=hostname&protocol=udp&host=172.16.106.95&port=8081&tries=1'] Namespace:pod-network-test-9305 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:08:05.001707 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:08:05.003040 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:08:05.003131 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/pod-network-test-9305/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F172.16.228.177%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D172.16.106.95%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0617 08:08:05.046299 19 utils.go:331] Waiting for responses: map[]
  I0617 08:08:05.046355 19 utils.go:335] reached 172.16.106.95 after 0/1 tries
  I0617 08:08:05.046370 19 networking.go:53] Going to retry 0 out of 3 pods....
  I0617 08:08:05.046800 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9305" for this suite. @ 06/17/24 08:08:05.052
• [14.311 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 06/17/24 08:08:05.06
  I0617 08:08:05.061017 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 08:08:05.063
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:08:05.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:08:05.082
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 08:08:05.085
  STEP: Saw pod success @ 06/17/24 08:08:09.105
  I0617 08:08:09.108010 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-d56e3c78-af00-43fd-9e5e-aacc9828bb65 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 08:08:09.115
  I0617 08:08:09.127839 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2736" for this suite. @ 06/17/24 08:08:09.132
• [4.077 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 06/17/24 08:08:09.139
  I0617 08:08:09.139461 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename watch @ 06/17/24 08:08:09.14
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:08:09.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:08:09.156
  STEP: getting a starting resourceVersion @ 06/17/24 08:08:09.16
  STEP: starting a background goroutine to produce watch events @ 06/17/24 08:08:09.163
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 06/17/24 08:08:09.163
  I0617 08:08:11.908001 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6146" for this suite. @ 06/17/24 08:08:11.946
• [2.857 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 06/17/24 08:08:11.997
  I0617 08:08:11.998496 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename gc @ 06/17/24 08:08:12
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:08:12.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:08:12.014
  STEP: create the rc @ 06/17/24 08:08:12.021
  W0617 08:08:12.028344      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: delete the rc @ 06/17/24 08:08:18.032
  STEP: wait for the rc to be deleted @ 06/17/24 08:08:18.039
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 06/17/24 08:08:23.043
  STEP: Gathering metrics @ 06/17/24 08:08:53.063
  I0617 08:08:53.196001 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0617 08:08:53.196132 19 delete.go:95] Deleting pod "simpletest.rc-25ppq" in namespace "gc-7131"
  I0617 08:08:53.207651 19 delete.go:95] Deleting pod "simpletest.rc-2b8rx" in namespace "gc-7131"
  I0617 08:08:53.219742 19 delete.go:95] Deleting pod "simpletest.rc-2dpcx" in namespace "gc-7131"
  I0617 08:08:53.235505 19 delete.go:95] Deleting pod "simpletest.rc-2szpb" in namespace "gc-7131"
  I0617 08:08:53.254071 19 delete.go:95] Deleting pod "simpletest.rc-2w9p8" in namespace "gc-7131"
  I0617 08:08:53.269877 19 delete.go:95] Deleting pod "simpletest.rc-2wfcq" in namespace "gc-7131"
  I0617 08:08:53.282973 19 delete.go:95] Deleting pod "simpletest.rc-2xq6j" in namespace "gc-7131"
  I0617 08:08:53.294404 19 delete.go:95] Deleting pod "simpletest.rc-44d58" in namespace "gc-7131"
  I0617 08:08:53.307529 19 delete.go:95] Deleting pod "simpletest.rc-4jqdw" in namespace "gc-7131"
  I0617 08:08:53.323111 19 delete.go:95] Deleting pod "simpletest.rc-4mq8q" in namespace "gc-7131"
  I0617 08:08:53.337449 19 delete.go:95] Deleting pod "simpletest.rc-4pzff" in namespace "gc-7131"
  I0617 08:08:53.354010 19 delete.go:95] Deleting pod "simpletest.rc-52ds6" in namespace "gc-7131"
  I0617 08:08:53.364489 19 delete.go:95] Deleting pod "simpletest.rc-56sqr" in namespace "gc-7131"
  I0617 08:08:53.395769 19 delete.go:95] Deleting pod "simpletest.rc-5c5g9" in namespace "gc-7131"
  I0617 08:08:53.432043 19 delete.go:95] Deleting pod "simpletest.rc-64hhh" in namespace "gc-7131"
  I0617 08:08:53.462307 19 delete.go:95] Deleting pod "simpletest.rc-74jns" in namespace "gc-7131"
  I0617 08:08:53.504770 19 delete.go:95] Deleting pod "simpletest.rc-768vq" in namespace "gc-7131"
  I0617 08:08:53.546599 19 delete.go:95] Deleting pod "simpletest.rc-7gn44" in namespace "gc-7131"
  I0617 08:08:53.602311 19 delete.go:95] Deleting pod "simpletest.rc-7kmf2" in namespace "gc-7131"
  I0617 08:08:53.634094 19 delete.go:95] Deleting pod "simpletest.rc-7sdkm" in namespace "gc-7131"
  I0617 08:08:53.709913 19 delete.go:95] Deleting pod "simpletest.rc-7wmlk" in namespace "gc-7131"
  I0617 08:08:53.739106 19 delete.go:95] Deleting pod "simpletest.rc-84cq9" in namespace "gc-7131"
  I0617 08:08:53.761907 19 delete.go:95] Deleting pod "simpletest.rc-8vsc2" in namespace "gc-7131"
  I0617 08:08:53.786350 19 delete.go:95] Deleting pod "simpletest.rc-9f99z" in namespace "gc-7131"
  I0617 08:08:53.813332 19 delete.go:95] Deleting pod "simpletest.rc-9rksj" in namespace "gc-7131"
  I0617 08:08:53.836043 19 delete.go:95] Deleting pod "simpletest.rc-9v52k" in namespace "gc-7131"
  I0617 08:08:53.869106 19 delete.go:95] Deleting pod "simpletest.rc-b5sfv" in namespace "gc-7131"
  I0617 08:08:53.902066 19 delete.go:95] Deleting pod "simpletest.rc-bd8cg" in namespace "gc-7131"
  I0617 08:08:53.929911 19 delete.go:95] Deleting pod "simpletest.rc-bjbkx" in namespace "gc-7131"
  I0617 08:08:53.949292 19 delete.go:95] Deleting pod "simpletest.rc-cds6l" in namespace "gc-7131"
  I0617 08:08:53.979859 19 delete.go:95] Deleting pod "simpletest.rc-cl7bx" in namespace "gc-7131"
  I0617 08:08:54.008654 19 delete.go:95] Deleting pod "simpletest.rc-cn8ds" in namespace "gc-7131"
  I0617 08:08:54.044649 19 delete.go:95] Deleting pod "simpletest.rc-cql2f" in namespace "gc-7131"
  I0617 08:08:54.076599 19 delete.go:95] Deleting pod "simpletest.rc-cspj8" in namespace "gc-7131"
  I0617 08:08:54.112623 19 delete.go:95] Deleting pod "simpletest.rc-dmfgj" in namespace "gc-7131"
  I0617 08:08:54.135042 19 delete.go:95] Deleting pod "simpletest.rc-dr45b" in namespace "gc-7131"
  I0617 08:08:54.152022 19 delete.go:95] Deleting pod "simpletest.rc-dvzdw" in namespace "gc-7131"
  I0617 08:08:54.186220 19 delete.go:95] Deleting pod "simpletest.rc-f7wqb" in namespace "gc-7131"
  I0617 08:08:54.221709 19 delete.go:95] Deleting pod "simpletest.rc-f84jh" in namespace "gc-7131"
  I0617 08:08:54.276061 19 delete.go:95] Deleting pod "simpletest.rc-f8rrl" in namespace "gc-7131"
  I0617 08:08:54.313469 19 delete.go:95] Deleting pod "simpletest.rc-fkx7t" in namespace "gc-7131"
  I0617 08:08:54.370049 19 delete.go:95] Deleting pod "simpletest.rc-fr9gx" in namespace "gc-7131"
  I0617 08:08:54.414129 19 delete.go:95] Deleting pod "simpletest.rc-fxdf4" in namespace "gc-7131"
  I0617 08:08:54.462152 19 delete.go:95] Deleting pod "simpletest.rc-g42hc" in namespace "gc-7131"
  I0617 08:08:54.499079 19 delete.go:95] Deleting pod "simpletest.rc-g8grv" in namespace "gc-7131"
  I0617 08:08:54.527703 19 delete.go:95] Deleting pod "simpletest.rc-gfbzb" in namespace "gc-7131"
  I0617 08:08:54.586622 19 delete.go:95] Deleting pod "simpletest.rc-gkmnt" in namespace "gc-7131"
  I0617 08:08:54.613788 19 delete.go:95] Deleting pod "simpletest.rc-gpr4w" in namespace "gc-7131"
  I0617 08:08:54.632941 19 delete.go:95] Deleting pod "simpletest.rc-hg7br" in namespace "gc-7131"
  I0617 08:08:54.657023 19 delete.go:95] Deleting pod "simpletest.rc-hlg5l" in namespace "gc-7131"
  I0617 08:08:54.676258 19 delete.go:95] Deleting pod "simpletest.rc-j44rg" in namespace "gc-7131"
  I0617 08:08:54.696858 19 delete.go:95] Deleting pod "simpletest.rc-j4d6v" in namespace "gc-7131"
  I0617 08:08:54.727751 19 delete.go:95] Deleting pod "simpletest.rc-j58zk" in namespace "gc-7131"
  I0617 08:08:54.753577 19 delete.go:95] Deleting pod "simpletest.rc-jddgn" in namespace "gc-7131"
  I0617 08:08:54.804022 19 delete.go:95] Deleting pod "simpletest.rc-jg9ps" in namespace "gc-7131"
  I0617 08:08:54.874667 19 delete.go:95] Deleting pod "simpletest.rc-kd4vg" in namespace "gc-7131"
  I0617 08:08:54.951124 19 delete.go:95] Deleting pod "simpletest.rc-ksn6t" in namespace "gc-7131"
  I0617 08:08:55.002115 19 delete.go:95] Deleting pod "simpletest.rc-lcfb9" in namespace "gc-7131"
  I0617 08:08:55.022726 19 delete.go:95] Deleting pod "simpletest.rc-lq4px" in namespace "gc-7131"
  I0617 08:08:55.056956 19 delete.go:95] Deleting pod "simpletest.rc-lxwjx" in namespace "gc-7131"
  I0617 08:08:55.080836 19 delete.go:95] Deleting pod "simpletest.rc-mg75r" in namespace "gc-7131"
  I0617 08:08:55.093294 19 delete.go:95] Deleting pod "simpletest.rc-mgtf6" in namespace "gc-7131"
  I0617 08:08:55.119236 19 delete.go:95] Deleting pod "simpletest.rc-mqsbt" in namespace "gc-7131"
  I0617 08:08:55.142457 19 delete.go:95] Deleting pod "simpletest.rc-n59gw" in namespace "gc-7131"
  I0617 08:08:55.163325 19 delete.go:95] Deleting pod "simpletest.rc-n62tf" in namespace "gc-7131"
  I0617 08:08:55.193611 19 delete.go:95] Deleting pod "simpletest.rc-ntnsv" in namespace "gc-7131"
  I0617 08:08:55.229471 19 delete.go:95] Deleting pod "simpletest.rc-p4mbk" in namespace "gc-7131"
  I0617 08:08:55.257227 19 delete.go:95] Deleting pod "simpletest.rc-pdbzt" in namespace "gc-7131"
  I0617 08:08:55.289571 19 delete.go:95] Deleting pod "simpletest.rc-plkb4" in namespace "gc-7131"
  I0617 08:08:55.330112 19 delete.go:95] Deleting pod "simpletest.rc-px5xj" in namespace "gc-7131"
  I0617 08:08:55.362100 19 delete.go:95] Deleting pod "simpletest.rc-qkqxw" in namespace "gc-7131"
  I0617 08:08:55.378891 19 delete.go:95] Deleting pod "simpletest.rc-ql7jm" in namespace "gc-7131"
  I0617 08:08:55.400425 19 delete.go:95] Deleting pod "simpletest.rc-rh945" in namespace "gc-7131"
  I0617 08:08:55.448042 19 delete.go:95] Deleting pod "simpletest.rc-rhw6z" in namespace "gc-7131"
  I0617 08:08:55.472967 19 delete.go:95] Deleting pod "simpletest.rc-rjpmq" in namespace "gc-7131"
  I0617 08:08:55.498208 19 delete.go:95] Deleting pod "simpletest.rc-rk268" in namespace "gc-7131"
  I0617 08:08:55.536599 19 delete.go:95] Deleting pod "simpletest.rc-rp5vp" in namespace "gc-7131"
  I0617 08:08:55.559563 19 delete.go:95] Deleting pod "simpletest.rc-s2ph2" in namespace "gc-7131"
  I0617 08:08:55.585652 19 delete.go:95] Deleting pod "simpletest.rc-sjzt6" in namespace "gc-7131"
  I0617 08:08:55.616207 19 delete.go:95] Deleting pod "simpletest.rc-smvnt" in namespace "gc-7131"
  I0617 08:08:55.639680 19 delete.go:95] Deleting pod "simpletest.rc-srcq6" in namespace "gc-7131"
  I0617 08:08:55.665721 19 delete.go:95] Deleting pod "simpletest.rc-t2w9r" in namespace "gc-7131"
  I0617 08:08:55.685928 19 delete.go:95] Deleting pod "simpletest.rc-t69tn" in namespace "gc-7131"
  I0617 08:08:55.708294 19 delete.go:95] Deleting pod "simpletest.rc-t87sq" in namespace "gc-7131"
  I0617 08:08:55.728774 19 delete.go:95] Deleting pod "simpletest.rc-t8n4s" in namespace "gc-7131"
  I0617 08:08:55.750007 19 delete.go:95] Deleting pod "simpletest.rc-tt7rt" in namespace "gc-7131"
  I0617 08:08:55.767956 19 delete.go:95] Deleting pod "simpletest.rc-v4hj6" in namespace "gc-7131"
  I0617 08:08:55.811048 19 delete.go:95] Deleting pod "simpletest.rc-vh2kw" in namespace "gc-7131"
  I0617 08:08:55.841366 19 delete.go:95] Deleting pod "simpletest.rc-vhrlj" in namespace "gc-7131"
  I0617 08:08:55.862256 19 delete.go:95] Deleting pod "simpletest.rc-vht27" in namespace "gc-7131"
  I0617 08:08:55.910470 19 delete.go:95] Deleting pod "simpletest.rc-vllth" in namespace "gc-7131"
  I0617 08:08:55.943684 19 delete.go:95] Deleting pod "simpletest.rc-vnlrk" in namespace "gc-7131"
  I0617 08:08:55.973625 19 delete.go:95] Deleting pod "simpletest.rc-wbnrr" in namespace "gc-7131"
  I0617 08:08:55.997558 19 delete.go:95] Deleting pod "simpletest.rc-xdr8k" in namespace "gc-7131"
  I0617 08:08:56.036422 19 delete.go:95] Deleting pod "simpletest.rc-xnzbv" in namespace "gc-7131"
  I0617 08:08:56.070482 19 delete.go:95] Deleting pod "simpletest.rc-xtn9x" in namespace "gc-7131"
  I0617 08:08:56.092754 19 delete.go:95] Deleting pod "simpletest.rc-xxlvk" in namespace "gc-7131"
  I0617 08:08:56.109699 19 delete.go:95] Deleting pod "simpletest.rc-xzzth" in namespace "gc-7131"
  I0617 08:08:56.136446 19 delete.go:95] Deleting pod "simpletest.rc-z7lk5" in namespace "gc-7131"
  I0617 08:08:56.185344 19 delete.go:95] Deleting pod "simpletest.rc-zpfzm" in namespace "gc-7131"
  I0617 08:08:56.260684 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7131" for this suite. @ 06/17/24 08:08:56.28
• [44.303 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 06/17/24 08:08:56.307
  I0617 08:08:56.308032 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename gc @ 06/17/24 08:08:56.311
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:08:56.354
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:08:56.372
  STEP: create the deployment @ 06/17/24 08:08:56.378
  W0617 08:08:56.401424      19 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 06/17/24 08:08:56.401
  STEP: delete the deployment @ 06/17/24 08:08:56.915
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 06/17/24 08:08:56.924
  STEP: Gathering metrics @ 06/17/24 08:08:57.454
  I0617 08:08:57.685207 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0617 08:08:57.685990 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8501" for this suite. @ 06/17/24 08:08:57.696
• [1.414 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 06/17/24 08:08:57.723
  I0617 08:08:57.723128 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 08:08:57.724
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:08:57.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:08:57.756
  STEP: Setting up server cert @ 06/17/24 08:08:57.793
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 08:08:58.234
  STEP: Deploying the webhook pod @ 06/17/24 08:08:58.244
  STEP: Wait for the deployment to be ready @ 06/17/24 08:08:58.256
  I0617 08:08:58.274398 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  STEP: Deploying the webhook service @ 06/17/24 08:09:00.286
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 08:09:00.297
  I0617 08:09:01.298104 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 06/17/24 08:09:01.306
  STEP: create a namespace for the webhook @ 06/17/24 08:09:01.328
  STEP: create a configmap should be unconditionally rejected by the webhook @ 06/17/24 08:09:01.34
  I0617 08:09:01.392167 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1584" for this suite. @ 06/17/24 08:09:01.397
  STEP: Destroying namespace "webhook-markers-262" for this suite. @ 06/17/24 08:09:01.404
  STEP: Destroying namespace "fail-closed-namespace-708" for this suite. @ 06/17/24 08:09:01.411
• [3.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 06/17/24 08:09:01.465
  I0617 08:09:01.465332 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/17/24 08:09:01.466
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:01.478
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:01.48
  I0617 08:09:01.483690 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:09:04.615696 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-69" for this suite. @ 06/17/24 08:09:04.621
• [3.162 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 06/17/24 08:09:04.628
  I0617 08:09:04.628078 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename var-expansion @ 06/17/24 08:09:04.629
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:04.642
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:04.646
  STEP: Creating a pod to test substitution in container's args @ 06/17/24 08:09:04.649
  STEP: Saw pod success @ 06/17/24 08:09:08.669
  I0617 08:09:08.672973 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod var-expansion-4d87695e-495b-4503-851b-a8e142469633 container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 08:09:08.678
  I0617 08:09:08.691408 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8633" for this suite. @ 06/17/24 08:09:08.695
• [4.075 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 06/17/24 08:09:08.705
  I0617 08:09:08.705862 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename namespaces @ 06/17/24 08:09:08.708
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:08.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:08.738
  STEP: Creating a test namespace @ 06/17/24 08:09:08.744
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:08.758
  STEP: Creating a pod in the namespace @ 06/17/24 08:09:08.761
  STEP: Waiting for the pod to have running status @ 06/17/24 08:09:08.771
  STEP: Deleting the namespace @ 06/17/24 08:09:10.784
  STEP: Waiting for the namespace to be removed. @ 06/17/24 08:09:10.79
  STEP: Recreating the namespace @ 06/17/24 08:09:21.793
  STEP: Verifying there are no pods in the namespace @ 06/17/24 08:09:21.804
  I0617 08:09:21.809018 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-1277" for this suite. @ 06/17/24 08:09:21.817
  STEP: Destroying namespace "nsdeletetest-1303" for this suite. @ 06/17/24 08:09:21.822
  I0617 08:09:21.826221 19 framework.go:370] Namespace nsdeletetest-1303 was already deleted
  STEP: Destroying namespace "nsdeletetest-4294" for this suite. @ 06/17/24 08:09:21.826
• [13.127 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 06/17/24 08:09:21.833
  I0617 08:09:21.834003 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename custom-resource-definition @ 06/17/24 08:09:21.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:21.85
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:21.857
  STEP: fetching the /apis discovery document @ 06/17/24 08:09:21.863
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 06/17/24 08:09:21.866
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 06/17/24 08:09:21.866
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 06/17/24 08:09:21.866
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 06/17/24 08:09:21.867
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 06/17/24 08:09:21.867
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 06/17/24 08:09:21.869
  I0617 08:09:21.869945 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-7616" for this suite. @ 06/17/24 08:09:21.876
• [0.048 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 06/17/24 08:09:21.882
  I0617 08:09:21.882794 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-pred @ 06/17/24 08:09:21.884
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:21.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:21.903
  I0617 08:09:21.908432 19 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0617 08:09:21.919568 19 util.go:400] Waiting for terminating namespaces to be deleted...
  I0617 08:09:21.923949 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-1.novalocal before test
  I0617 08:09:21.932313 19 predicates.go:887] calico-node-th4mv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.932353 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 08:09:21.932365 19 predicates.go:887] kube-proxy-jvqkl from kube-system started at 2024-06-17 06:23:33 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.932421 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 08:09:21.932433 19 predicates.go:887] secloudit-registry-agent-trkj9 from secloudit started at 2024-06-17 08:05:26 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.932448 19 predicates.go:889] 	Container secloudit-registry-agent ready: false, restart count 0
  I0617 08:09:21.932504 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-gdqsn from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 08:09:21.932522 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 08:09:21.932532 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 08:09:21.932551 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-2.novalocal before test
  I0617 08:09:21.942501 19 predicates.go:887] calico-kube-controllers-564985c589-zj5q5 from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.942567 19 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0617 08:09:21.942589 19 predicates.go:887] calico-node-xg2zk from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.942606 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 08:09:21.942624 19 predicates.go:887] coredns-7db6d8ff4d-24c28 from kube-system started at 2024-06-17 06:52:43 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.942654 19 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0617 08:09:21.942679 19 predicates.go:887] kube-proxy-2krmk from kube-system started at 2024-06-17 06:22:45 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.942697 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 08:09:21.942720 19 predicates.go:887] secloudit-registry-agent-jw8ps from secloudit started at 2024-06-17 08:02:10 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.942741 19 predicates.go:889] 	Container secloudit-registry-agent ready: false, restart count 0
  I0617 08:09:21.942762 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-9xmzp from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 08:09:21.942783 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 08:09:21.942801 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0617 08:09:21.942956 19 predicates.go:121] 
  Logging pods the apiserver thinks is on node ck-130-worker-3.novalocal before test
  I0617 08:09:21.952007 19 predicates.go:887] dns-debug from default started at 2024-06-17 06:48:59 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.952056 19 predicates.go:889] 	Container dns-debug ready: true, restart count 0
  I0617 08:09:21.952079 19 predicates.go:887] calico-node-68vkv from kube-system started at 2024-06-17 06:25:43 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.952089 19 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0617 08:09:21.952099 19 predicates.go:887] kube-proxy-pggmm from kube-system started at 2024-06-17 06:23:32 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.952108 19 predicates.go:889] 	Container kube-proxy ready: true, restart count 0
  I0617 08:09:21.952118 19 predicates.go:887] secloudit-registry-agent-rx7cb from secloudit started at 2024-06-17 08:02:10 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.952128 19 predicates.go:889] 	Container secloudit-registry-agent ready: false, restart count 0
  I0617 08:09:21.952143 19 predicates.go:887] sonobuoy from sonobuoy started at 2024-06-17 06:51:33 +0000 UTC (1 container statuses recorded)
  I0617 08:09:21.952152 19 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0617 08:09:21.952162 19 predicates.go:887] sonobuoy-e2e-job-f67536e78f3a43e6 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 08:09:21.952187 19 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0617 08:09:21.952196 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 08:09:21.952207 19 predicates.go:887] sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-g5cf4 from sonobuoy started at 2024-06-17 06:51:35 +0000 UTC (2 container statuses recorded)
  I0617 08:09:21.952217 19 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0617 08:09:21.952225 19 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ck-130-worker-1.novalocal @ 06/17/24 08:09:21.977
  STEP: verifying the node has the label node ck-130-worker-2.novalocal @ 06/17/24 08:09:21.993
  STEP: verifying the node has the label node ck-130-worker-3.novalocal @ 06/17/24 08:09:22.004
  I0617 08:09:22.021660 19 predicates.go:374] Pod dns-debug requesting resource cpu=50m on Node ck-130-worker-3.novalocal
  I0617 08:09:22.021726 19 predicates.go:374] Pod calico-kube-controllers-564985c589-zj5q5 requesting resource cpu=0m on Node ck-130-worker-2.novalocal
  I0617 08:09:22.021745 19 predicates.go:374] Pod calico-node-68vkv requesting resource cpu=250m on Node ck-130-worker-3.novalocal
  I0617 08:09:22.021761 19 predicates.go:374] Pod calico-node-th4mv requesting resource cpu=250m on Node ck-130-worker-1.novalocal
  I0617 08:09:22.021775 19 predicates.go:374] Pod calico-node-xg2zk requesting resource cpu=250m on Node ck-130-worker-2.novalocal
  I0617 08:09:22.021797 19 predicates.go:374] Pod coredns-7db6d8ff4d-24c28 requesting resource cpu=100m on Node ck-130-worker-2.novalocal
  I0617 08:09:22.021814 19 predicates.go:374] Pod kube-proxy-2krmk requesting resource cpu=0m on Node ck-130-worker-2.novalocal
  I0617 08:09:22.021827 19 predicates.go:374] Pod kube-proxy-jvqkl requesting resource cpu=0m on Node ck-130-worker-1.novalocal
  I0617 08:09:22.021839 19 predicates.go:374] Pod kube-proxy-pggmm requesting resource cpu=0m on Node ck-130-worker-3.novalocal
  I0617 08:09:22.021852 19 predicates.go:374] Pod secloudit-registry-agent-jw8ps requesting resource cpu=0m on Node ck-130-worker-2.novalocal
  I0617 08:09:22.021864 19 predicates.go:374] Pod secloudit-registry-agent-rx7cb requesting resource cpu=0m on Node ck-130-worker-3.novalocal
  I0617 08:09:22.021877 19 predicates.go:374] Pod secloudit-registry-agent-trkj9 requesting resource cpu=0m on Node ck-130-worker-1.novalocal
  I0617 08:09:22.021891 19 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node ck-130-worker-3.novalocal
  I0617 08:09:22.021905 19 predicates.go:374] Pod sonobuoy-e2e-job-f67536e78f3a43e6 requesting resource cpu=0m on Node ck-130-worker-3.novalocal
  I0617 08:09:22.021919 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-9xmzp requesting resource cpu=0m on Node ck-130-worker-2.novalocal
  I0617 08:09:22.021931 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-g5cf4 requesting resource cpu=0m on Node ck-130-worker-3.novalocal
  I0617 08:09:22.021944 19 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-cb9e521e43234f57-gdqsn requesting resource cpu=0m on Node ck-130-worker-1.novalocal
  STEP: Starting Pods to consume most of the cluster CPU. @ 06/17/24 08:09:22.021
  I0617 08:09:22.021998 19 predicates.go:384] Creating a pod which consumes cpu=4025m on Node ck-130-worker-1.novalocal
  I0617 08:09:22.032387 19 predicates.go:384] Creating a pod which consumes cpu=3955m on Node ck-130-worker-2.novalocal
  I0617 08:09:22.039309 19 predicates.go:384] Creating a pod which consumes cpu=3990m on Node ck-130-worker-3.novalocal
  STEP: Creating another pod that requires unavailable amount of CPU. @ 06/17/24 08:09:24.064
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-41b4e000-7381-4ae9-94fb-c69835336bef.17d9bc4abf206c60], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8199/filler-pod-41b4e000-7381-4ae9-94fb-c69835336bef to ck-130-worker-1.novalocal] @ 06/17/24 08:09:24.068
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-41b4e000-7381-4ae9-94fb-c69835336bef.17d9bc4ae1a684b8], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/17/24 08:09:24.068
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-41b4e000-7381-4ae9-94fb-c69835336bef.17d9bc4ae5dc5c9b], Reason = [Created], Message = [Created container filler-pod-41b4e000-7381-4ae9-94fb-c69835336bef] @ 06/17/24 08:09:24.068
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-41b4e000-7381-4ae9-94fb-c69835336bef.17d9bc4ae658ee69], Reason = [Started], Message = [Started container filler-pod-41b4e000-7381-4ae9-94fb-c69835336bef] @ 06/17/24 08:09:24.068
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dbfdf58-19d7-4cfe-9a83-a34ad884b822.17d9bc4ac015da56], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8199/filler-pod-6dbfdf58-19d7-4cfe-9a83-a34ad884b822 to ck-130-worker-3.novalocal] @ 06/17/24 08:09:24.068
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dbfdf58-19d7-4cfe-9a83-a34ad884b822.17d9bc4ae24fa22f], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/17/24 08:09:24.069
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dbfdf58-19d7-4cfe-9a83-a34ad884b822.17d9bc4ae62fc824], Reason = [Created], Message = [Created container filler-pod-6dbfdf58-19d7-4cfe-9a83-a34ad884b822] @ 06/17/24 08:09:24.069
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-6dbfdf58-19d7-4cfe-9a83-a34ad884b822.17d9bc4ae7521970], Reason = [Started], Message = [Started container filler-pod-6dbfdf58-19d7-4cfe-9a83-a34ad884b822] @ 06/17/24 08:09:24.069
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb4b922-9501-4b02-811b-333dd455c81b.17d9bc4abfa3811e], Reason = [Scheduled], Message = [Successfully assigned sched-pred-8199/filler-pod-ffb4b922-9501-4b02-811b-333dd455c81b to ck-130-worker-2.novalocal] @ 06/17/24 08:09:24.069
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb4b922-9501-4b02-811b-333dd455c81b.17d9bc4ae1077797], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 06/17/24 08:09:24.069
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb4b922-9501-4b02-811b-333dd455c81b.17d9bc4ae5687303], Reason = [Created], Message = [Created container filler-pod-ffb4b922-9501-4b02-811b-333dd455c81b] @ 06/17/24 08:09:24.069
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-ffb4b922-9501-4b02-811b-333dd455c81b.17d9bc4ae5fee7e0], Reason = [Started], Message = [Started container filler-pod-ffb4b922-9501-4b02-811b-333dd455c81b] @ 06/17/24 08:09:24.069
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17d9bc4b38a5de24], Reason = [FailedScheduling], Message = [0/4 nodes are available: 1 node(s) had untolerated taint {node-role.kubernetes.io/control-plane: }, 3 Insufficient cpu. preemption: 0/4 nodes are available: 1 Preemption is not helpful for scheduling, 3 No preemption victims found for incoming pod.] @ 06/17/24 08:09:24.087
  STEP: removing the label node off the node ck-130-worker-2.novalocal @ 06/17/24 08:09:25.081
  STEP: verifying the node doesn't have the label node @ 06/17/24 08:09:25.093
  STEP: removing the label node off the node ck-130-worker-3.novalocal @ 06/17/24 08:09:25.097
  STEP: verifying the node doesn't have the label node @ 06/17/24 08:09:25.111
  STEP: removing the label node off the node ck-130-worker-1.novalocal @ 06/17/24 08:09:25.115
  STEP: verifying the node doesn't have the label node @ 06/17/24 08:09:25.13
  I0617 08:09:25.134792 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-8199" for this suite. @ 06/17/24 08:09:25.139
• [3.262 seconds]
------------------------------
SSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 06/17/24 08:09:25.144
  I0617 08:09:25.144889 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/17/24 08:09:25.147
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:25.164
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:25.17
  STEP: creating @ 06/17/24 08:09:25.177
  STEP: getting @ 06/17/24 08:09:25.195
  STEP: listing in namespace @ 06/17/24 08:09:25.199
  STEP: patching @ 06/17/24 08:09:25.202
  STEP: deleting @ 06/17/24 08:09:25.208
  I0617 08:09:25.216327 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4989" for this suite. @ 06/17/24 08:09:25.22
• [0.082 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 06/17/24 08:09:25.226
  I0617 08:09:25.226795 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 08:09:25.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:25.238
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:25.244
  STEP: Creating a pod to test downward api env vars @ 06/17/24 08:09:25.249
  STEP: Saw pod success @ 06/17/24 08:09:29.267
  I0617 08:09:29.271296 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downward-api-9fb0b5a1-fd3f-4686-a4a7-d47f7eda2298 container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 08:09:29.279
  I0617 08:09:29.298054 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8334" for this suite. @ 06/17/24 08:09:29.303
• [4.083 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 06/17/24 08:09:29.311
  I0617 08:09:29.311796 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:09:29.314
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:29.327
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:29.331
  STEP: Creating a pod to test downward API volume plugin @ 06/17/24 08:09:29.334
  STEP: Saw pod success @ 06/17/24 08:09:33.354
  I0617 08:09:33.356957 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downwardapi-volume-5e6f5787-84aa-44e0-825c-e7d9dcfe2704 container client-container: <nil>
  STEP: delete the pod @ 06/17/24 08:09:33.363
  I0617 08:09:33.376413 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1459" for this suite. @ 06/17/24 08:09:33.38
• [4.074 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 06/17/24 08:09:33.386
  I0617 08:09:33.386595 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 08:09:33.388
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:33.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:33.404
  STEP: Creating service test in namespace statefulset-9819 @ 06/17/24 08:09:33.408
  STEP: Creating statefulset ss in namespace statefulset-9819 @ 06/17/24 08:09:33.415
  I0617 08:09:33.423643 19 wait.go:40] Found 0 stateful pods, waiting for 1
  I0617 08:09:43.425008 19 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 06/17/24 08:09:43.43
  STEP: Getting /status @ 06/17/24 08:09:43.436
  I0617 08:09:43.441753 19 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 06/17/24 08:09:43.441
  I0617 08:09:43.449779 19 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 06/17/24 08:09:43.449
  I0617 08:09:43.452358 19 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0617 08:09:43.452515 19 statefulset.go:1108] Found Statefulset ss in namespace statefulset-9819 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0617 08:09:43.452649 19 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 06/17/24 08:09:43.452
  I0617 08:09:43.453115 19 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0617 08:09:43.461275 19 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 06/17/24 08:09:43.461
  I0617 08:09:43.463193 19 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0617 08:09:43.463326 19 statefulset.go:1148] Observed Statefulset ss in namespace statefulset-9819 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0617 08:09:43.463619 19 statefulset.go:1152] Observed &StatefulSet event: MODIFIED
  I0617 08:09:43.463850 19 statefulset.go:135] Deleting all statefulset in ns statefulset-9819
  I0617 08:09:43.466154 19 rest.go:150] Scaling statefulset ss to 0
  I0617 08:09:53.478472 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 08:09:53.481519 19 rest.go:88] Deleting statefulset ss
  I0617 08:09:53.491492 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-9819" for this suite. @ 06/17/24 08:09:53.496
• [20.120 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 06/17/24 08:09:53.508
  I0617 08:09:53.509034 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 08:09:53.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:53.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:53.529
  STEP: Creating configMap with name configmap-test-volume-ba260099-c632-476e-8491-34490ba4c282 @ 06/17/24 08:09:53.532
  STEP: Creating a pod to test consume configMaps @ 06/17/24 08:09:53.538
  STEP: Saw pod success @ 06/17/24 08:09:57.564
  I0617 08:09:57.569214 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-5d6cfde9-00a7-4be3-9f6e-6fbe82f7b676 container configmap-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 08:09:57.577
  I0617 08:09:57.595325 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7220" for this suite. @ 06/17/24 08:09:57.602
• [4.099 seconds]
------------------------------
S
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 06/17/24 08:09:57.608
  I0617 08:09:57.608363 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replication-controller @ 06/17/24 08:09:57.61
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:57.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:57.625
  STEP: Creating ReplicationController "e2e-rc-2bgsn" @ 06/17/24 08:09:57.628
  I0617 08:09:57.634704 19 rc.go:792] Get Replication Controller "e2e-rc-2bgsn" to confirm replicas
  I0617 08:09:58.635195 19 rc.go:792] Get Replication Controller "e2e-rc-2bgsn" to confirm replicas
  I0617 08:09:58.638616 19 rc.go:801] Found 1 replicas for "e2e-rc-2bgsn" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-2bgsn" @ 06/17/24 08:09:58.638
  STEP: Updating a scale subresource @ 06/17/24 08:09:58.642
  STEP: Verifying replicas where modified for replication controller "e2e-rc-2bgsn" @ 06/17/24 08:09:58.648
  I0617 08:09:58.648878 19 rc.go:792] Get Replication Controller "e2e-rc-2bgsn" to confirm replicas
  I0617 08:09:59.649166 19 rc.go:792] Get Replication Controller "e2e-rc-2bgsn" to confirm replicas
  I0617 08:09:59.652913 19 rc.go:801] Found 2 replicas for "e2e-rc-2bgsn" replication controller
  I0617 08:09:59.653309 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6415" for this suite. @ 06/17/24 08:09:59.658
• [2.056 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 06/17/24 08:09:59.664
  I0617 08:09:59.664560 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename containers @ 06/17/24 08:09:59.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:09:59.679
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:09:59.683
  STEP: Creating a pod to test override arguments @ 06/17/24 08:09:59.687
  STEP: Saw pod success @ 06/17/24 08:10:03.706
  I0617 08:10:03.709688 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod client-containers-f769bc04-e585-4fa0-b85b-df53bfac9ce2 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:10:03.715
  I0617 08:10:03.728198 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-46" for this suite. @ 06/17/24 08:10:03.733
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 06/17/24 08:10:03.739
  I0617 08:10:03.739556 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svcaccounts @ 06/17/24 08:10:03.741
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:03.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:03.756
  STEP: Creating ServiceAccount "e2e-sa-4kq2c"  @ 06/17/24 08:10:03.759
  I0617 08:10:03.763988 19 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-4kq2c"  @ 06/17/24 08:10:03.764
  I0617 08:10:03.773557 19 service_accounts.go:839] AutomountServiceAccountToken: true
  I0617 08:10:03.773695 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-2855" for this suite. @ 06/17/24 08:10:03.778
• [0.044 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 06/17/24 08:10:03.783
  I0617 08:10:03.784194 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:10:03.785
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:03.8
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:03.804
  STEP: Creating projection with secret that has name projected-secret-test-map-e9afd2eb-37e2-4232-a634-f613bdeabdc3 @ 06/17/24 08:10:03.807
  STEP: Creating a pod to test consume secrets @ 06/17/24 08:10:03.812
  STEP: Saw pod success @ 06/17/24 08:10:05.825
  I0617 08:10:05.828463 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-secrets-713748da-c7e1-4686-94f7-c50d743ab7fa container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 08:10:05.833
  I0617 08:10:05.846114 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4213" for this suite. @ 06/17/24 08:10:05.851
• [2.072 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 06/17/24 08:10:05.856
  I0617 08:10:05.856587 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename endpointslice @ 06/17/24 08:10:05.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:05.869
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:05.874
  I0617 08:10:05.925701 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-390" for this suite. @ 06/17/24 08:10:05.93
• [0.080 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 06/17/24 08:10:05.94
  I0617 08:10:05.940819 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename csiinlinevolumes @ 06/17/24 08:10:05.942
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:05.956
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:05.959
  STEP: Creating two CSIDrivers @ 06/17/24 08:10:05.962
  STEP: Getting "inline-driver-83289a8a-9355-4840-b832-95d24522d6ae" & "inline-driver-38c9388d-f834-4ba4-bb24-38d8b4183618" @ 06/17/24 08:10:05.974
  STEP: Patching the CSIDriver "inline-driver-38c9388d-f834-4ba4-bb24-38d8b4183618" @ 06/17/24 08:10:05.978
  STEP: Updating the CSIDriver "inline-driver-38c9388d-f834-4ba4-bb24-38d8b4183618" @ 06/17/24 08:10:05.988
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-6713" @ 06/17/24 08:10:05.994
  STEP: Deleting CSIDriver "inline-driver-83289a8a-9355-4840-b832-95d24522d6ae" @ 06/17/24 08:10:05.997
  STEP: Confirm deletion of CSIDriver "inline-driver-83289a8a-9355-4840-b832-95d24522d6ae" @ 06/17/24 08:10:06.001
  STEP: Deleting CSIDriver "inline-driver-38c9388d-f834-4ba4-bb24-38d8b4183618" via DeleteCollection @ 06/17/24 08:10:06.004
  STEP: Confirm deletion of CSIDriver "inline-driver-38c9388d-f834-4ba4-bb24-38d8b4183618" @ 06/17/24 08:10:06.009
  I0617 08:10:06.012479 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-6713" for this suite. @ 06/17/24 08:10:06.016
• [0.081 seconds]
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 06/17/24 08:10:06.022
  I0617 08:10:06.022789 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 08:10:06.024
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:06.035
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:06.038
  STEP: Creating a test headless service @ 06/17/24 08:10:06.041
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 06/17/24 08:10:06.046
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-5423.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 06/17/24 08:10:06.046
  STEP: creating a pod to probe DNS @ 06/17/24 08:10:06.046
  STEP: submitting the pod to kubernetes @ 06/17/24 08:10:06.046
  STEP: retrieving the pod @ 06/17/24 08:10:08.063
  STEP: looking for the results for each expected name from probers @ 06/17/24 08:10:08.067
  I0617 08:10:08.084694 19 dns_common.go:527] DNS probes using dns-5423/dns-test-8ba2921b-ee2a-40d3-bd6a-7c6a66083ef7 succeeded

  STEP: deleting the pod @ 06/17/24 08:10:08.084
  STEP: deleting the test headless service @ 06/17/24 08:10:08.096
  I0617 08:10:08.108110 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-5423" for this suite. @ 06/17/24 08:10:08.113
• [2.097 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 06/17/24 08:10:08.119
  I0617 08:10:08.119972 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename namespaces @ 06/17/24 08:10:08.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:08.132
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:08.138
  STEP: Creating a test namespace @ 06/17/24 08:10:08.141
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:08.154
  STEP: Creating a service in the namespace @ 06/17/24 08:10:08.157
  STEP: Deleting the namespace @ 06/17/24 08:10:08.168
  STEP: Waiting for the namespace to be removed. @ 06/17/24 08:10:08.175
  STEP: Recreating the namespace @ 06/17/24 08:10:14.178
  STEP: Verifying there is no service in the namespace @ 06/17/24 08:10:14.191
  I0617 08:10:14.194784 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-846" for this suite. @ 06/17/24 08:10:14.199
  STEP: Destroying namespace "nsdeletetest-3923" for this suite. @ 06/17/24 08:10:14.203
  I0617 08:10:14.206684 19 framework.go:370] Namespace nsdeletetest-3923 was already deleted
  STEP: Destroying namespace "nsdeletetest-4264" for this suite. @ 06/17/24 08:10:14.206
• [6.092 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 06/17/24 08:10:14.221
  I0617 08:10:14.221652 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:10:14.223
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:14.245
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:14.249
  STEP: Creating configMap with name projected-configmap-test-volume-map-dc118ea2-4f99-48f8-8f89-1f61d8610fb6 @ 06/17/24 08:10:14.253
  STEP: Creating a pod to test consume configMaps @ 06/17/24 08:10:14.266
  STEP: Saw pod success @ 06/17/24 08:10:18.297
  I0617 08:10:18.301276 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-configmaps-93f86e09-168e-4863-848c-6ec4089d04f3 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:10:18.307
  I0617 08:10:18.322541 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-328" for this suite. @ 06/17/24 08:10:18.327
• [4.113 seconds]
------------------------------
SS
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 06/17/24 08:10:18.335
  I0617 08:10:18.335887 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 08:10:18.337
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:18.349
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:18.353
  STEP: Creating configMap with name configmap-test-upd-dcde1ca5-66f3-4d5b-851e-f0661298d519 @ 06/17/24 08:10:18.36
  STEP: Creating the pod @ 06/17/24 08:10:18.365
  STEP: Waiting for pod with text data @ 06/17/24 08:10:20.379
  STEP: Waiting for pod with binary data @ 06/17/24 08:10:20.386
  I0617 08:10:20.391929 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-6493" for this suite. @ 06/17/24 08:10:20.396
• [2.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 06/17/24 08:10:20.407
  I0617 08:10:20.407156 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 08:10:20.41
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:20.421
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:20.424
  STEP: Creating the pod @ 06/17/24 08:10:20.427
  I0617 08:10:22.972542 19 pod_client.go:141] Successfully updated pod "labelsupdatef4711d04-6a83-42f8-bd15-b21bb46aff5e"
  I0617 08:10:26.997339 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9640" for this suite. @ 06/17/24 08:10:27.003
• [6.603 seconds]
------------------------------
SSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 06/17/24 08:10:27.01
  I0617 08:10:27.010494 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename statefulset @ 06/17/24 08:10:27.012
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:10:27.024
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:10:27.028
  STEP: Creating service test in namespace statefulset-8028 @ 06/17/24 08:10:27.033
  STEP: Creating a new StatefulSet @ 06/17/24 08:10:27.039
  I0617 08:10:27.051904 19 wait.go:40] Found 0 stateful pods, waiting for 3
  I0617 08:10:37.054406 19 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0617 08:10:37.054463 19 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0617 08:10:37.054475 19 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0617 08:10:37.064714 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-8028 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 08:10:37.226908 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 08:10:37.226982 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 08:10:37.227031 19 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 06/17/24 08:10:47.236
  I0617 08:10:47.259258 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 06/17/24 08:10:47.259
  STEP: Updating Pods in reverse ordinal order @ 06/17/24 08:10:57.267
  I0617 08:10:57.270227 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-8028 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 08:10:57.384912 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0617 08:10:57.384965 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 08:10:57.385105 19 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  STEP: Rolling back to a previous revision @ 06/17/24 08:11:07.402
  I0617 08:11:07.402612 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-8028 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0617 08:11:07.537759 19 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0617 08:11:07.537873 19 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0617 08:11:07.537912 19 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0617 08:11:17.575691 19 statefulset.go:2241] Updating stateful set ss2
  STEP: Rolling back update in reverse ordinal order @ 06/17/24 08:11:27.585
  I0617 08:11:27.589087 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=statefulset-8028 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0617 08:11:27.704352 19 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0617 08:11:27.704403 19 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0617 08:11:27.704420 19 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0617 08:11:37.731045 19 statefulset.go:135] Deleting all statefulset in ns statefulset-8028
  I0617 08:11:37.735245 19 rest.go:150] Scaling statefulset ss2 to 0
  I0617 08:11:47.752753 19 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0617 08:11:47.756029 19 rest.go:88] Deleting statefulset ss2
  I0617 08:11:47.769910 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-8028" for this suite. @ 06/17/24 08:11:47.783
• [80.782 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 06/17/24 08:11:47.793
  I0617 08:11:47.793646 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename job @ 06/17/24 08:11:47.795
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:11:47.81
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:11:47.814
  STEP: Creating a job @ 06/17/24 08:11:47.817
  STEP: Ensuring active pods == parallelism @ 06/17/24 08:11:47.823
  STEP: Orphaning one of the Job's Pods @ 06/17/24 08:11:49.828
  I0617 08:11:50.343531 19 pod_client.go:141] Successfully updated pod "adopt-release-rnvkg"
  STEP: Checking that the Job readopts the Pod @ 06/17/24 08:11:50.343
  STEP: Removing the labels from the Job's Pod @ 06/17/24 08:11:52.354
  I0617 08:11:52.870025 19 pod_client.go:141] Successfully updated pod "adopt-release-rnvkg"
  STEP: Checking that the Job releases the Pod @ 06/17/24 08:11:52.87
  I0617 08:11:54.877573 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-3196" for this suite. @ 06/17/24 08:11:54.881
• [7.094 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 06/17/24 08:11:54.889
  I0617 08:11:54.889300 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename services @ 06/17/24 08:11:54.89
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:11:54.902
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:11:54.907
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-858 @ 06/17/24 08:11:54.91
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 06/17/24 08:11:54.923
  STEP: creating service externalsvc in namespace services-858 @ 06/17/24 08:11:54.923
  STEP: creating replication controller externalsvc in namespace services-858 @ 06/17/24 08:11:54.935
  I0617 08:11:54.947548      19 runners.go:198] Created replication controller with name: externalsvc, namespace: services-858, replica count: 2
  I0617 08:11:57.999099      19 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 06/17/24 08:11:58.003
  I0617 08:11:58.017244 19 resource.go:361] Creating new exec pod
  I0617 08:12:00.034811 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=services-858 exec execpodv44gn -- /bin/sh -x -c nslookup clusterip-service.services-858.svc.cluster.local'
  I0617 08:12:00.234602 19 builder.go:146] stderr: "+ nslookup clusterip-service.services-858.svc.cluster.local\n"
  I0617 08:12:00.234745 19 builder.go:147] stdout: "Server:\t\t10.96.0.10\nAddress:\t10.96.0.10#53\n\nclusterip-service.services-858.svc.cluster.local\tcanonical name = externalsvc.services-858.svc.cluster.local.\nName:\texternalsvc.services-858.svc.cluster.local\nAddress: 10.104.199.66\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-858, will wait for the garbage collector to delete the pods @ 06/17/24 08:12:00.235
  I0617 08:12:00.294683 19 resources.go:139] Deleting ReplicationController externalsvc took: 4.516113ms
  I0617 08:12:00.395094 19 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.405582ms
  I0617 08:12:04.018776 19 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0617 08:12:04.027769 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-858" for this suite. @ 06/17/24 08:12:04.035
• [9.164 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 06/17/24 08:12:04.056
  I0617 08:12:04.056418 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 08:12:04.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:12:04.101
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:12:04.108
  STEP: Creating configMap that has name configmap-test-emptyKey-efa2fcf4-d2bb-4df7-b9ca-e5b0f7df211c @ 06/17/24 08:12:04.112
  I0617 08:12:04.115773 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9219" for this suite. @ 06/17/24 08:12:04.122
• [0.082 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 06/17/24 08:12:04.142
  I0617 08:12:04.142537 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename resourcequota @ 06/17/24 08:12:04.144
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:12:04.16
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:12:04.166
  STEP: Counting existing ResourceQuota @ 06/17/24 08:12:04.169
  STEP: Creating a ResourceQuota @ 06/17/24 08:12:09.173
  STEP: Ensuring resource quota status is calculated @ 06/17/24 08:12:09.179
  STEP: Creating a Service @ 06/17/24 08:12:11.184
  STEP: Creating a NodePort Service @ 06/17/24 08:12:11.21
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 06/17/24 08:12:11.239
  STEP: Ensuring resource quota status captures service creation @ 06/17/24 08:12:11.262
  STEP: Deleting Services @ 06/17/24 08:12:13.267
  STEP: Ensuring resource quota status released usage @ 06/17/24 08:12:13.302
  I0617 08:12:15.310881 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-5802" for this suite. @ 06/17/24 08:12:15.316
• [11.181 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 06/17/24 08:12:15.324
  I0617 08:12:15.324482 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename tables @ 06/17/24 08:12:15.327
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:12:15.343
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:12:15.347
  I0617 08:12:15.353544 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-9324" for this suite. @ 06/17/24 08:12:15.358
• [0.039 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 06/17/24 08:12:15.365
  I0617 08:12:15.365545 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-preemption @ 06/17/24 08:12:15.367
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:12:15.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:12:15.384
  I0617 08:12:15.402271 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0617 08:13:15.411049 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 06/17/24 08:13:15.415
  I0617 08:13:15.453668 19 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0617 08:13:15.461924 19 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0617 08:13:15.485501 19 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0617 08:13:15.491334 19 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I0617 08:13:15.539401 19 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I0617 08:13:15.545683 19 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 06/17/24 08:13:15.545
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 06/17/24 08:13:17.572
  I0617 08:13:23.650840 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9823" for this suite. @ 06/17/24 08:13:23.655
• [68.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 06/17/24 08:13:23.661
  I0617 08:13:23.661586 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replication-controller @ 06/17/24 08:13:23.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:13:23.674
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:13:23.678
  STEP: creating a ReplicationController @ 06/17/24 08:13:23.684
  STEP: waiting for RC to be added @ 06/17/24 08:13:23.689
  STEP: waiting for available Replicas @ 06/17/24 08:13:23.689
  STEP: patching ReplicationController @ 06/17/24 08:13:25.144
  STEP: waiting for RC to be modified @ 06/17/24 08:13:25.159
  STEP: patching ReplicationController status @ 06/17/24 08:13:25.16
  STEP: waiting for RC to be modified @ 06/17/24 08:13:25.166
  STEP: waiting for available Replicas @ 06/17/24 08:13:25.166
  STEP: fetching ReplicationController status @ 06/17/24 08:13:25.171
  STEP: patching ReplicationController scale @ 06/17/24 08:13:25.174
  STEP: waiting for RC to be modified @ 06/17/24 08:13:25.18
  STEP: waiting for ReplicationController's scale to be the max amount @ 06/17/24 08:13:25.18
  STEP: fetching ReplicationController; ensuring that it's patched @ 06/17/24 08:13:26.785
  STEP: updating ReplicationController status @ 06/17/24 08:13:26.788
  STEP: waiting for RC to be modified @ 06/17/24 08:13:26.796
  STEP: listing all ReplicationControllers @ 06/17/24 08:13:26.797
  STEP: checking that ReplicationController has expected values @ 06/17/24 08:13:26.8
  STEP: deleting ReplicationControllers by collection @ 06/17/24 08:13:26.8
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 06/17/24 08:13:26.808
  I0617 08:13:26.865416 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0617 08:13:26.866070      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "replication-controller-3196" for this suite. @ 06/17/24 08:13:26.869
• [3.213 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 06/17/24 08:13:26.874
  I0617 08:13:26.874521 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename crd-publish-openapi @ 06/17/24 08:13:26.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:13:26.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:13:26.894
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 06/17/24 08:13:26.899
  I0617 08:13:26.903005 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  E0617 08:13:27.866957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:13:28.360236 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  E0617 08:13:28.867666      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:29.868537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:30.868697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:31.868869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:32.868981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:33.869875      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:13:33.969268 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6220" for this suite. @ 06/17/24 08:13:33.977
• [7.109 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 06/17/24 08:13:33.986
  I0617 08:13:33.986495 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir-wrapper @ 06/17/24 08:13:33.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:13:34.006
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:13:34.009
  STEP: Creating 50 configmaps @ 06/17/24 08:13:34.013
  STEP: Creating RC which spawns configmap-volume pods @ 06/17/24 08:13:34.249
  I0617 08:13:34.365218 19 resource.go:87] Pod name wrapped-volume-race-8f09cccd-a034-4113-a28d-18976832dce5: Found 4 pods out of 5
  E0617 08:13:34.870268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:35.870885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:36.871901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:37.872513      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:38.872779      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:13:39.375831 19 resource.go:87] Pod name wrapped-volume-race-8f09cccd-a034-4113-a28d-18976832dce5: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/17/24 08:13:39.375
  STEP: Creating RC which spawns configmap-volume pods @ 06/17/24 08:13:39.406
  I0617 08:13:39.423517 19 resource.go:87] Pod name wrapped-volume-race-399c3efa-990e-4647-8d1b-a364c7703a99: Found 0 pods out of 5
  E0617 08:13:39.873232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:40.873658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:41.873835      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:42.874563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:43.875134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:13:44.433748 19 resource.go:87] Pod name wrapped-volume-race-399c3efa-990e-4647-8d1b-a364c7703a99: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/17/24 08:13:44.433
  STEP: Creating RC which spawns configmap-volume pods @ 06/17/24 08:13:44.452
  I0617 08:13:44.469528 19 resource.go:87] Pod name wrapped-volume-race-81bd71d4-6c9d-4a7d-a06b-d475a4836fed: Found 0 pods out of 5
  E0617 08:13:44.875290      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:45.875900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:46.876481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:47.878647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:48.877977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:13:49.479990 19 resource.go:87] Pod name wrapped-volume-race-81bd71d4-6c9d-4a7d-a06b-d475a4836fed: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 06/17/24 08:13:49.48
  STEP: deleting ReplicationController wrapped-volume-race-81bd71d4-6c9d-4a7d-a06b-d475a4836fed in namespace emptydir-wrapper-9352, will wait for the garbage collector to delete the pods @ 06/17/24 08:13:49.495
  I0617 08:13:49.555342 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-81bd71d4-6c9d-4a7d-a06b-d475a4836fed took: 5.446676ms
  I0617 08:13:49.655691 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-81bd71d4-6c9d-4a7d-a06b-d475a4836fed pods took: 100.344595ms
  E0617 08:13:49.878105      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-399c3efa-990e-4647-8d1b-a364c7703a99 in namespace emptydir-wrapper-9352, will wait for the garbage collector to delete the pods @ 06/17/24 08:13:50.557
  I0617 08:13:50.620319 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-399c3efa-990e-4647-8d1b-a364c7703a99 took: 7.21347ms
  I0617 08:13:50.721368 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-399c3efa-990e-4647-8d1b-a364c7703a99 pods took: 101.047096ms
  E0617 08:13:50.878082      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:51.878799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-8f09cccd-a034-4113-a28d-18976832dce5 in namespace emptydir-wrapper-9352, will wait for the garbage collector to delete the pods @ 06/17/24 08:13:52.122
  I0617 08:13:52.183852 19 resources.go:139] Deleting ReplicationController wrapped-volume-race-8f09cccd-a034-4113-a28d-18976832dce5 took: 6.216789ms
  I0617 08:13:52.285151 19 resources.go:163] Terminating ReplicationController wrapped-volume-race-8f09cccd-a034-4113-a28d-18976832dce5 pods took: 101.270359ms
  E0617 08:13:52.879901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 06/17/24 08:13:53.586
  I0617 08:13:53.794903 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9352" for this suite. @ 06/17/24 08:13:53.8
• [19.822 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 06/17/24 08:13:53.807
  I0617 08:13:53.807118 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 08:13:53.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:13:53.822
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:13:53.826
  STEP: Setting up server cert @ 06/17/24 08:13:53.847
  E0617 08:13:53.880473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 08:13:54.509
  STEP: Deploying the webhook pod @ 06/17/24 08:13:54.516
  STEP: Wait for the deployment to be ready @ 06/17/24 08:13:54.526
  I0617 08:13:54.532268 19 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0617 08:13:54.881083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:55.881772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/17/24 08:13:56.542
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 08:13:56.556
  E0617 08:13:56.882587      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:13:57.556730 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 06/17/24 08:13:57.568
  STEP: create a pod @ 06/17/24 08:13:57.587
  E0617 08:13:57.883508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:13:58.884007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 06/17/24 08:13:59.598
  I0617 08:13:59.598540 19 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-2400038241 --namespace=webhook-6607 attach --namespace=webhook-6607 to-be-attached-pod -i -c=container1'
  I0617 08:13:59.712504 19 builder.go:135] rc: 1
  I0617 08:13:59.758374 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6607" for this suite. @ 06/17/24 08:13:59.768
  STEP: Destroying namespace "webhook-markers-9439" for this suite. @ 06/17/24 08:13:59.773
• [5.974 seconds]
------------------------------
S
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 06/17/24 08:13:59.781
  I0617 08:13:59.781485 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 06/17/24 08:13:59.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:13:59.795
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:13:59.798
  STEP: Setting up the test @ 06/17/24 08:13:59.801
  STEP: Creating hostNetwork=false pod @ 06/17/24 08:13:59.801
  E0617 08:13:59.884742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:00.885293      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating hostNetwork=true pod @ 06/17/24 08:14:01.819
  E0617 08:14:01.885961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:02.886565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Running the test @ 06/17/24 08:14:03.833
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 06/17/24 08:14:03.833
  I0617 08:14:03.833585 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:03.833611 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:03.834429 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:03.834514 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0617 08:14:03.875376 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:03.875874 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:03.876120 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:03.877636 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:03.877922 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  E0617 08:14:03.886956      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:14:03.911654 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:03.911725 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:03.911739 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:03.912464 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:03.912529 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0617 08:14:03.949830 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:03.950112 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:03.950260 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:03.951452 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:03.951662 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0617 08:14:03.985593 19 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 06/17/24 08:14:03.985
  I0617 08:14:03.985921 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:03.985957 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:03.987743 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:03.987816 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0617 08:14:04.017535 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:04.017664 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:04.017718 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:04.018700 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:04.018803 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0617 08:14:04.055501 19 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 06/17/24 08:14:04.055
  I0617 08:14:04.055649 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:04.055670 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:04.056728 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:04.056831 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0617 08:14:04.106277 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:04.106357 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:04.106393 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:04.107338 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:04.107415 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0617 08:14:04.156802 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:04.156895 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:04.156917 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:04.158001 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:04.158111 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0617 08:14:04.198454 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:04.198539 19 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-8014 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0617 08:14:04.198555 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  I0617 08:14:04.199410 19 exec_util.go:62] ExecWithOptions: Clientset creation
  I0617 08:14:04.199497 19 exec_util.go:79] ExecWithOptions: execute(POST https://10.96.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-8014/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0617 08:14:04.253316 19 exec_util.go:106] Exec stderr: ""
  I0617 08:14:04.253528 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-8014" for this suite. @ 06/17/24 08:14:04.259
• [4.494 seconds]
------------------------------
SS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 06/17/24 08:14:04.275
  I0617 08:14:04.275268 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename init-container @ 06/17/24 08:14:04.278
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:14:04.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:14:04.312
  STEP: creating the pod @ 06/17/24 08:14:04.318
  I0617 08:14:04.318128 19 init_container.go:374] PodSpec: initContainers in spec.initContainers
  E0617 08:14:04.887396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:05.887946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:06.888361      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:07.888538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:08.889040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:09.889340      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:10.889615      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:11.889836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:12.890430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:13.890583      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:14.890742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:15.890940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:16.891933      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:17.892867      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:18.892964      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:19.893439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:20.895470      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:21.894597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:22.895400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:23.895843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:24.895944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:25.896477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:26.897042      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:27.897540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:28.898937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:29.898007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:30.899772      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:31.900319      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:32.900832      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:33.901010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:34.901366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:35.902015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:36.902844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:37.903566      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:38.903931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:39.908915      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:40.905397      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:41.905711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:42.906459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:43.906907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:44.907385      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:14:45.537385 19 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-1ce6ab5e-5bf4-48cd-8595-b4741ca62a79", GenerateName:"", Namespace:"init-container-2871", SelfLink:"", UID:"ad2caddc-730f-4fe4-8e9a-be46c55bfeeb", ResourceVersion:"39392", Generation:0, CreationTimestamp:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"318096845"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"61a8238b2118103e48a0d9167a36f359e7acc8e2b720a8d2fec841980d3eb8a3", "cni.projectcalico.org/podIP":"172.16.106.122/32", "cni.projectcalico.org/podIPs":"172.16.106.122/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00472b5f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00472b650), Subresource:""}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.June, 17, 8, 14, 45, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc00472b6c8), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-2sh8q", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc004bcf880), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2sh8q", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2sh8q", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-2sh8q", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc006f8d510), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ck-130-worker-3.novalocal", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc0025f4980), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006f8d590)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc006f8d5b0)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc006f8d5b8), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc006f8d5bc), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004aa0550), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 17, 8, 14, 5, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"192.168.190.167", HostIPs:[]v1.HostIP{v1.HostIP{IP:"192.168.190.167"}}, PodIP:"172.16.106.122", PodIPs:[]v1.PodIP{v1.PodIP{IP:"172.16.106.122"}}, StartTime:time.Date(2024, time.June, 17, 8, 14, 4, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00048b490)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc00048b5e0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"cri-o://8f0ff0c9a566e6c36f41a434f00e2c73dd0f94c721ce7ea3dea8d394edeae61c", Started:(*bool)(0xc006f8d65f), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004bcf8e0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc006f8d665), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc004bcf8c0), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc006f8d634), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0617 08:14:45.538740 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-2871" for this suite. @ 06/17/24 08:14:45.545
• [41.276 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 06/17/24 08:14:45.556
  I0617 08:14:45.556301 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 08:14:45.558
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:14:45.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:14:45.573
  STEP: Setting up server cert @ 06/17/24 08:14:45.593
  E0617 08:14:45.908268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 08:14:46.524
  STEP: Deploying the webhook pod @ 06/17/24 08:14:46.533
  STEP: Wait for the deployment to be ready @ 06/17/24 08:14:46.545
  I0617 08:14:46.554583 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0617 08:14:46.908683      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:47.909414      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/17/24 08:14:48.565
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 08:14:48.583
  E0617 08:14:48.910151      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:14:49.584110 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 06/17/24 08:14:49.592
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 06/17/24 08:14:49.616
  STEP: Creating a configMap that should not be mutated @ 06/17/24 08:14:49.623
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 06/17/24 08:14:49.632
  STEP: Creating a configMap that should be mutated @ 06/17/24 08:14:49.639
  I0617 08:14:49.697611 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8674" for this suite. @ 06/17/24 08:14:49.702
  STEP: Destroying namespace "webhook-markers-6441" for this suite. @ 06/17/24 08:14:49.713
• [4.165 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 06/17/24 08:14:49.721
  I0617 08:14:49.721601 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:14:49.723
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:14:49.738
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:14:49.742
  STEP: Creating configMap with name projected-configmap-test-volume-f1fb92c3-44ce-4a15-b4bd-be0d73a22495 @ 06/17/24 08:14:49.747
  STEP: Creating a pod to test consume configMaps @ 06/17/24 08:14:49.75
  E0617 08:14:49.910944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:50.911491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:51.911537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:52.912642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:14:53.774
  I0617 08:14:53.777093 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-configmaps-a5ed9ae6-1718-4b54-9bfa-c239370af475 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:14:53.797
  I0617 08:14:53.811013 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6315" for this suite. @ 06/17/24 08:14:53.815
• [4.099 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 06/17/24 08:14:53.822
  I0617 08:14:53.822648 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename cronjob @ 06/17/24 08:14:53.824
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:14:53.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:14:53.843
  STEP: Creating a cronjob @ 06/17/24 08:14:53.846
  STEP: creating @ 06/17/24 08:14:53.846
  STEP: getting @ 06/17/24 08:14:53.859
  STEP: listing @ 06/17/24 08:14:53.862
  STEP: watching @ 06/17/24 08:14:53.864
  I0617 08:14:53.864666 19 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 06/17/24 08:14:53.865
  STEP: cluster-wide watching @ 06/17/24 08:14:53.868
  I0617 08:14:53.868684 19 cronjob.go:382] starting watch
  STEP: patching @ 06/17/24 08:14:53.869
  STEP: updating @ 06/17/24 08:14:53.876
  I0617 08:14:53.884091 19 cronjob.go:406] waiting for watch events with expected annotations
  I0617 08:14:53.884154 19 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 06/17/24 08:14:53.884
  STEP: updating /status @ 06/17/24 08:14:53.889
  STEP: get /status @ 06/17/24 08:14:53.895
  STEP: deleting @ 06/17/24 08:14:53.898
  STEP: deleting a collection @ 06/17/24 08:14:53.911
  E0617 08:14:53.913647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:14:53.920690 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-2236" for this suite. @ 06/17/24 08:14:53.924
• [0.107 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 06/17/24 08:14:53.929
  I0617 08:14:53.929449 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename downward-api @ 06/17/24 08:14:53.93
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:14:53.944
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:14:53.947
  STEP: Creating a pod to test downward api env vars @ 06/17/24 08:14:53.95
  E0617 08:14:54.914598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:55.913995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:56.914734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:57.915506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:14:57.97
  I0617 08:14:57.973574 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod downward-api-f0b98b82-3748-4013-95a8-5dccebbf522e container dapi-container: <nil>
  STEP: delete the pod @ 06/17/24 08:14:57.978
  I0617 08:14:57.990296 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-7546" for this suite. @ 06/17/24 08:14:57.994
• [4.073 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 06/17/24 08:14:58.004
  I0617 08:14:58.004881 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename subpath @ 06/17/24 08:14:58.006
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:14:58.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:14:58.026
  STEP: Setting up data @ 06/17/24 08:14:58.029
  STEP: Creating pod pod-subpath-test-projected-jmd6 @ 06/17/24 08:14:58.036
  STEP: Creating a pod to test atomic-volume-subpath @ 06/17/24 08:14:58.036
  E0617 08:14:58.915629      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:14:59.915861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:00.915977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:01.916390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:02.916686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:03.917631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:04.921925      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:05.922458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:06.923433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:07.924048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:08.924912      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:09.925124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:10.925744      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:11.926239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:12.926354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:13.926749      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:14.927376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:15.927539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:16.927619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:17.928804      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:18.928990      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:19.929211      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:20.930131      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:21.930987      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:15:22.107
  I0617 08:15:22.110439 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-subpath-test-projected-jmd6 container test-container-subpath-projected-jmd6: <nil>
  STEP: delete the pod @ 06/17/24 08:15:22.117
  STEP: Deleting pod pod-subpath-test-projected-jmd6 @ 06/17/24 08:15:22.131
  I0617 08:15:22.131093 19 delete.go:62] Deleting pod "pod-subpath-test-projected-jmd6" in namespace "subpath-5854"
  I0617 08:15:22.133579 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-5854" for this suite. @ 06/17/24 08:15:22.137
• [24.138 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 06/17/24 08:15:22.143
  I0617 08:15:22.144009 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename disruption @ 06/17/24 08:15:22.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:15:22.156
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:15:22.159
  STEP: Waiting for the pdb to be processed @ 06/17/24 08:15:22.165
  E0617 08:15:22.931542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:23.932300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 06/17/24 08:15:24.186
  I0617 08:15:24.194130 19 disruption.go:578] running pods: 0 < 3
  E0617 08:15:24.932628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:25.933051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:26.193944 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8348" for this suite. @ 06/17/24 08:15:26.198
• [4.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 06/17/24 08:15:26.204
  I0617 08:15:26.204437 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename security-context-test @ 06/17/24 08:15:26.21
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:15:26.226
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:15:26.234
  E0617 08:15:26.934005      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:27.934741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:28.935631      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:29.935886      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:30.258288 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-1840" for this suite. @ 06/17/24 08:15:30.263
• [4.071 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 06/17/24 08:15:30.275
  I0617 08:15:30.275749 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename security-context-test @ 06/17/24 08:15:30.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:15:30.295
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:15:30.299
  E0617 08:15:30.936733      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:31.936844      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:32.937125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:33.937395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:34.938514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:35.938741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:36.341513 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-584" for this suite. @ 06/17/24 08:15:36.348
• [6.080 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 06/17/24 08:15:36.356
  I0617 08:15:36.356068 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 08:15:36.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:15:36.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:15:36.386
  STEP: Creating pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281 @ 06/17/24 08:15:36.391
  E0617 08:15:36.938827      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:37.939591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 08:15:38.411
  I0617 08:15:38.415511 19 container_probe.go:1749] Initial restart count of pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 is 0
  I0617 08:15:38.418927 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:38.939902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:39.940100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:40.425160 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:40.940836      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:41.940969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:42.429430 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:42.941401      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:43.941960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:44.433730 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:44.942403      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:45.942735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:46.439521 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:46.943481      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:47.943916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:48.444923 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:48.944586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:49.944944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:50.450076 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:50.945747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:51.946040      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:52.454772 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:52.946946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:53.947459      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:54.459074 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:54.947643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:55.948085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:56.464650 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:56.948526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:57.949400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:15:58.468722 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:15:58.949940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:15:59.950155      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:00.472311 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:00.950527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:01.950898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:02.480890 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:02.951577      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:03.951897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:04.485780 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:04.952204      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:05.952502      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:06.491238 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:06.952654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:07.953423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:08.496811 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:08.954500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:09.954902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:10.501904 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:10.955410      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:11.955711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:12.506344 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:12.956017      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:13.956377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:14.514092 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:14.956903      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:15.957274      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:16.522028 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:16.957899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:17.958702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:18.526003 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:18.959604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:19.959965      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:20.532756 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:20.960323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:21.960739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:22.538573 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:22.961464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:23.961821      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:24.543788 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:24.962093      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:25.962239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:26.548732 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  E0617 08:16:26.962618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:27.963466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:28.552960 19 container_probe.go:1759] Get pod busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 in namespace container-probe-4281
  I0617 08:16:28.553043 19 container_probe.go:1763] Restart count of pod container-probe-4281/busybox-7da47ecd-0171-404c-ade3-47fcf6e7d403 is now 1 (50.137466883s elapsed)
  STEP: deleting the pod @ 06/17/24 08:16:28.553
  I0617 08:16:28.563979 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4281" for this suite. @ 06/17/24 08:16:28.569
• [52.219 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 06/17/24 08:16:28.575
  I0617 08:16:28.575063 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:16:28.576
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:16:28.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:16:28.593
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-98bbe880-017d-4cc5-a672-adc4920bba20 @ 06/17/24 08:16:28.6
  STEP: Creating the pod @ 06/17/24 08:16:28.605
  E0617 08:16:28.963624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:29.964424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-98bbe880-017d-4cc5-a672-adc4920bba20 @ 06/17/24 08:16:30.627
  STEP: waiting to observe update in volume @ 06/17/24 08:16:30.633
  E0617 08:16:30.965015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:31.965362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:16:32.645164 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1837" for this suite. @ 06/17/24 08:16:32.649
• [4.080 seconds]
------------------------------
SSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 06/17/24 08:16:32.655
  I0617 08:16:32.655404 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-preemption @ 06/17/24 08:16:32.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:16:32.673
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:16:32.678
  I0617 08:16:32.694989 19 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0617 08:16:32.966315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:33.966906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:34.967873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:35.968294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:36.968331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:37.969147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:38.969799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:39.970277      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:40.970906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:41.971442      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:42.972265      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:43.972599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:44.973320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:45.973423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:46.974063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:47.974571      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:48.974931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:49.975740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:50.975972      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:51.976218      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:52.976506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:53.976950      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:54.977591      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:55.977904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:56.978272      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:57.979125      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:58.979408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:16:59.979689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:00.980527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:01.980769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:02.981065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:03.981280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:04.981400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:05.981783      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:06.982680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:07.983395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:08.983580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:09.984057      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:10.985026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:11.985367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:12.986344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:13.986623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:14.987680      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:15.988162      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:16.989096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:17.989842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:18.990485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:19.990817      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:20.991685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:21.991996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:22.992856      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:23.993113      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:24.993768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:25.994132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:26.994565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:27.995149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:28.995231      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:29.995503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:30.996377      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:31.996777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:17:32.701854 19 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 06/17/24 08:17:32.705
  I0617 08:17:32.705922 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename sched-preemption-path @ 06/17/24 08:17:32.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:17:32.723
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:17:32.727
  I0617 08:17:32.743732 19 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0617 08:17:32.747137 19 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  I0617 08:17:32.819822 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-5654" for this suite. @ 06/17/24 08:17:32.824
  I0617 08:17:32.829583 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-2365" for this suite. @ 06/17/24 08:17:32.833
• [60.183 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 06/17/24 08:17:32.839
  I0617 08:17:32.840020 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename kubelet-test @ 06/17/24 08:17:32.843
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:17:32.852
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:17:32.855
  E0617 08:17:32.996940      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:33.997379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:17:34.882215 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6946" for this suite. @ 06/17/24 08:17:34.888
• [2.059 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 06/17/24 08:17:34.9
  I0617 08:17:34.900121 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename replication-controller @ 06/17/24 08:17:34.903
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:17:34.925
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:17:34.928
  STEP: Creating replication controller my-hostname-basic-d3d6d21a-e4f9-4c71-aa4a-207c73cd044d @ 06/17/24 08:17:34.932
  I0617 08:17:34.942528 19 resource.go:87] Pod name my-hostname-basic-d3d6d21a-e4f9-4c71-aa4a-207c73cd044d: Found 0 pods out of 1
  E0617 08:17:34.997818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:35.997935      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:36.998308      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:37.998962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:38.999400      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:17:39.948219 19 resource.go:87] Pod name my-hostname-basic-d3d6d21a-e4f9-4c71-aa4a-207c73cd044d: Found 1 pods out of 1
  I0617 08:17:39.948280 19 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-d3d6d21a-e4f9-4c71-aa4a-207c73cd044d" are running
  I0617 08:17:39.951126 19 rc.go:523] Pod "my-hostname-basic-d3d6d21a-e4f9-4c71-aa4a-207c73cd044d-ggchv" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 08:17:35 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 08:17:34 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 08:17:35 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 08:17:35 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-06-17 08:17:34 +0000 UTC Reason: Message:}])
  I0617 08:17:39.951166 19 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 06/17/24 08:17:39.951
  I0617 08:17:39.963193 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1517" for this suite. @ 06/17/24 08:17:39.967
• [5.073 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 06/17/24 08:17:39.972
  I0617 08:17:39.972965 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename svcaccounts @ 06/17/24 08:17:39.974
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:17:39.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:17:39.989
  STEP: Creating a pod to test service account token:  @ 06/17/24 08:17:39.992
  E0617 08:17:39.999777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:41.000091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:42.000383      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:43.001150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:44.001916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:17:44.013
  I0617 08:17:44.016425 19 output.go:196] Trying to get logs from node ck-130-worker-2.novalocal pod test-pod-3ee2e2d6-f511-40ae-bb14-0761bb5e065c container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:17:44.033
  I0617 08:17:44.052522 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7583" for this suite. @ 06/17/24 08:17:44.06
• [4.094 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 06/17/24 08:17:44.067
  I0617 08:17:44.067440 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-runtime @ 06/17/24 08:17:44.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:17:44.079
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:17:44.082
  STEP: create the container @ 06/17/24 08:17:44.085
  W0617 08:17:44.093796      19 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 06/17/24 08:17:44.093
  E0617 08:17:45.002461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:46.002883      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:47.003695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 06/17/24 08:17:47.114
  STEP: the container should be terminated @ 06/17/24 08:17:47.118
  STEP: the termination message should be set @ 06/17/24 08:17:47.118
  I0617 08:17:47.118699 19 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 06/17/24 08:17:47.119
  I0617 08:17:47.132490 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9303" for this suite. @ 06/17/24 08:17:47.137
• [3.076 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 06/17/24 08:17:47.145
  I0617 08:17:47.145041 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename chunking @ 06/17/24 08:17:47.146
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:17:47.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:17:47.161
  STEP: creating a large number of resources @ 06/17/24 08:17:47.164
  E0617 08:17:48.004482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:49.005009      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:50.005627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:51.006312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:52.006919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:53.007878      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:54.008026      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:55.008363      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:56.009391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:57.009642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:58.010412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:17:59.010478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:00.011303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:01.012066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:02.012034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:03.012337      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:04.012722      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the first page @ 06/17/24 08:18:04.852
  I0617 08:18:04.904010 19 chunking.go:163] Retrieved 40/40 results with rv 40708 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page until the token expires @ 06/17/24 08:18:04.904
  E0617 08:18:05.013081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:06.013632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:07.013873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:08.014656      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:09.015067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:10.015393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:11.015575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:12.015931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:13.016565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:14.017415      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:15.017570      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:16.017958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:17.018648      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:18.019675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:19.019928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:20.020289      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:21.020495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:22.020799      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:23.021564      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:24.021670      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:18:24.910843 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:18:25.022679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:26.023078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:27.024015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:28.024839      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:29.024899      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:30.026220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:31.025473      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:32.025795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:33.025977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:34.026137      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:35.026850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:36.027275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:37.027876      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:38.028620      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:39.028982      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:40.029168      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:41.029376      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:42.029667      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:43.030538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:44.030932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:18:44.912443 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:18:45.031264      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:46.031718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:47.031764      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:48.033527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:49.033850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:50.034028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:51.034346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:52.034653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:53.034785      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:54.035228      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:55.035557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:56.035739      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:57.036320      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:58.037134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:18:59.037354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:00.037995      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:01.038352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:02.038420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:03.038896      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:04.039118      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:19:04.910375 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:19:05.040000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:06.040294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:07.040557      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:08.041066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:09.043891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:10.042642      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:11.042551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:12.043095      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:13.043849      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:14.044119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:15.044426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:16.044758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:17.045539      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:18.045664      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:19.046074      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:20.046214      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:21.046628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:22.047136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:23.047784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:24.048242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:19:24.911207 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:19:25.048619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:26.048842      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:27.049847      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:28.050741      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:29.051256      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:30.051453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:31.051745      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:32.052006      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:33.052585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:34.053351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:35.053679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:36.054003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:37.054796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:38.055599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:39.055900      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:40.056729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:41.057280      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:42.057728      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:43.058604      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:44.059025      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:19:44.913035 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:19:45.060021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:46.060420      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:47.061281      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:48.061708      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:49.062354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:50.062826      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:51.063645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:52.064472      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:53.064610      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:54.065294      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:55.065594      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:56.066036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:57.066724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:58.067485      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:19:59.067769      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:00.068085      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:01.068437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:02.068707      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:03.069227      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:04.069531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:20:04.912024 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:20:05.070477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:06.071432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:07.071953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:08.072758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:09.073061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:10.073562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:11.074035      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:12.074406      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:13.075047      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:14.075553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:15.076045      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:16.076343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:17.076983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:18.077678      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:19.078778      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:20.079119      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:21.079417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:22.079647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:23.080138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:24.080448      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:20:24.909912 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:20:25.080646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:26.081268      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:27.081734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:28.082370      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:29.082652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:30.082889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:31.083742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:32.083898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:33.084434      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:34.084796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:35.085003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:36.085418      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:37.085906      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:38.086674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:39.087232      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:40.087593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:41.087902      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:42.088215      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:43.088653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:44.089243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:20:44.913544 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:20:45.090086      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:46.090454      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:47.090994      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:48.091547      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:49.091879      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:50.092275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:51.092544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:52.092800      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:53.093697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:54.094027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:55.094379      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:56.094787      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:57.095646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:58.096157      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:20:59.096450      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:00.097081      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:01.097624      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:02.097929      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:03.098555      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:04.100065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:21:04.911595 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:21:05.099237      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:06.100266      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:07.099860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:08.100693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:09.101051      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:10.103028      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:11.102567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:12.102602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:13.103302      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:14.103602      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:15.103825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:16.104149      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:17.104869      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:18.105136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:19.105532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:20.105830      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:21.106120      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:22.106507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:23.107269      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:24.107471      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:21:24.911671 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:21:25.108067      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:26.108222      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:27.108775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:28.109351      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:29.110096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:30.110245      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:31.110677      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:32.111087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:33.111261      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:34.111550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:35.112408      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:36.112355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:37.113021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:38.113445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:39.113780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:40.114324      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:41.114366      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:42.114675      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:43.115103      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:44.115270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:21:44.912550 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:21:45.115758      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:46.116267      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:47.117000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:48.117774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:49.118352      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:50.118720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:51.119233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:52.119278      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:53.119736      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:54.120091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:55.120271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:56.120777      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:57.121673      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:58.122364      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:21:59.122652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:00.123243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:01.123335      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:02.123647      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:03.124553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:04.124784      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:22:04.916193 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:22:05.124931      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:06.125346      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:07.126015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:08.126633      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:09.126729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:10.127102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:11.127521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:12.127803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:13.128698      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:14.129084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:15.129556      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:16.129980      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:17.130894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:18.131627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:19.131932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:20.132321      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:21.132632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:22.132992      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:23.133516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:24.133793      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:22:24.912147 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:22:25.134605      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:26.134953      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:27.135731      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:28.135824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:29.136129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:30.136597      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:31.136924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:32.137243      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:33.137983      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:34.138297      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:35.138893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:36.139437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:37.140276      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:38.140855      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:39.141223      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:40.142230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:41.142537      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:42.142963      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:43.143682      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:44.144250      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:22:44.913870 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:22:45.144492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:46.144854      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:47.145696      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:48.146417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:49.146790      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:50.147160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:51.147506      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:52.147850      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:53.148367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:54.148482      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:55.148838      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:56.149342      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:57.150083      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:58.150729      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:22:59.151139      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:00.151300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:01.151581      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:02.151885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:03.152066      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:04.152326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:23:04.915095 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:23:05.152632      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:06.152771      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:07.153443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:08.153960      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:09.154279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:10.154378      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:11.154715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:12.155010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:13.155236      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:14.155734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:15.155924      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:16.156514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:17.157446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:18.157580      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:19.157923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:20.158393      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:21.158519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:22.158768      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:23.159396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:24.159516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:23:24.911615 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:23:25.160367      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:26.160760      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:27.161130      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:28.161873      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:29.162445      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:30.162780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:31.163107      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:32.163479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:33.163880      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:34.164230      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:35.165368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:36.165697      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:37.166345      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:38.166897      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:39.167242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:40.167567      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:41.167996      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:42.168436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:43.169144      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:44.169360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:23:44.915916 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:23:45.169446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:46.169808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:47.170443      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:48.170917      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:49.171331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:50.171824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:51.172100      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:52.172538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:53.173023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:54.174202      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:55.173658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:56.173945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:57.174601      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:58.175423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:23:59.175723      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:00.176036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:01.176413      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:02.176702      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:03.177544      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:04.178031      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:24:04.911306 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:24:05.178852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:06.179239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:07.179885      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:08.180692      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:09.181080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:10.181360      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:11.181734      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:12.182048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:13.183063      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:14.183423      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:15.184033      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:16.184542      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:17.185221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:18.185724      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:19.186027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:20.186358      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:21.186681      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:22.187115      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:23.187795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:24.188233      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:24:24.913460 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:24:25.189065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:26.189491      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:27.190034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:28.190652      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:29.191075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:30.191419      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:31.191711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:32.192061      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:33.192646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:34.192952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:35.193479      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:36.193721      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:37.194417      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:38.195000      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:39.195355      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:40.195669      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:41.195947      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:42.196200      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:43.196658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:44.196937      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:24:44.911008 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:24:45.197795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:46.198152      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:47.198860      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:48.199689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:49.200052      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:50.200390      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:51.200716      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:52.201004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:53.201766      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:54.202133      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:55.202619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:56.204981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:57.205529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:58.206034      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:24:59.206430      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:00.206852      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:01.207150      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:02.207501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:03.208216      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:04.208735      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:25:04.910974 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:25:05.209398      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:06.210023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:07.210426      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:08.210492      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:09.210695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:10.210786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:11.211147      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:12.211468      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:13.211674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:14.211962      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:15.212275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:16.212618      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:17.213054      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:18.214343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:19.214695      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:20.215015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:21.215343      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:22.215757      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:23.216394      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:24.216747      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:25:24.913932 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:25:25.217657      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:26.218015      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:27.218718      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:28.219368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:29.219679      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:30.219977      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:31.220452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:32.221270      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:33.221904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:34.222396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:35.222654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:36.223129      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:37.224292      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:38.224831      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:39.225253      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:40.225586      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:41.226089      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:42.226553      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:43.227140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:44.227484      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:25:44.912004 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:25:45.227824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:46.228234      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:47.228819      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:48.229333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:49.229742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:50.230140      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:51.230626      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:52.230834      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:53.230948      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:54.231208      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:55.232312      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:56.232691      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:57.233096      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:58.234010      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:25:59.234333      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:00.235109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:01.235674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:02.236356      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:03.237069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:04.237387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:26:04.911192 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:26:05.238024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:06.238432      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:07.238961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:08.239109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:09.239386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:10.239685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:11.240541      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:12.240818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:13.240923      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:14.241123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:15.241919      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:16.242102      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:17.242287      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:18.242720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:19.242866      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:20.243653      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:21.244030      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:22.244396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:23.244622      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:24.245072      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:26:24.911694 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:26:25.245257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:26.245495      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:27.245775      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:28.246530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:29.246888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:30.247003      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:31.247347      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:32.247706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:33.247861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:34.248279      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:35.249136      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:36.249457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:37.250493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:38.251206      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:39.251727      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:40.251719      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:41.252048      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:42.252627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:43.253387      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:44.253759      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:26:44.913451 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:26:45.254979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:46.255503      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:47.256388      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:48.257407      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:49.257686      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:50.258436      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:51.259077      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:52.259531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:53.260391      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:54.260561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:55.261036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:56.261466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:57.261993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:58.262888      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:26:59.263210      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:00.263511      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:01.263782      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:02.264138      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:03.264810      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:04.265514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:27:04.913843 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:27:05.266123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:06.267092      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:07.268036      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:08.268909      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:09.269405      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:10.269857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:11.270444      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:12.270786      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:13.271134      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:14.271477      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:15.271945      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:16.272689      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:17.273142      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:18.273315      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:19.273818      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:20.274099      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:21.274565      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:22.275239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:23.275676      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:24.276660      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:27:24.911352 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:27:25.276780      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:26.277496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:27.277628      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:28.277796      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:29.277949      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:30.278122      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:31.278828      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:32.279159      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:33.279726      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:34.280464      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:35.281621      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:36.281957      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:37.282457      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:38.282971      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:39.283334      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:40.283465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:41.284242      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:42.284500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:43.284981      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:44.285820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:27:44.913271 19 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDA3MDgsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9 has not expired yet
  E0617 08:27:45.286091      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:46.286501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:47.286991      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:48.287465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:49.287693      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:50.287944      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:51.288217      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:52.288465      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:53.288890      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:54.289437      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:55.290090      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:56.290299      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:57.291114      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:58.291820      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:27:59.292065      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:00.292446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:01.293452      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:02.292573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:03.293011      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:04.293411      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:04.909408 19 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0617 08:28:04.909487 19 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 06/17/24 08:28:04.909
  STEP: retrieving all remaining pages @ 06/17/24 08:28:04.914
  I0617 08:28:04.918817 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDExOVx1MDAwMCJ9
  I0617 08:28:04.923354 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE1OVx1MDAwMCJ9
  I0617 08:28:04.926994 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDE5OVx1MDAwMCJ9
  I0617 08:28:04.931391 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDIzOVx1MDAwMCJ9
  I0617 08:28:04.935453 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDI3OVx1MDAwMCJ9
  I0617 08:28:04.939520 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDMxOVx1MDAwMCJ9
  I0617 08:28:04.943481 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6NDE3MDQsInN0YXJ0IjoidGVtcGxhdGUtMDM1OVx1MDAwMCJ9
  I0617 08:28:04.947393 19 chunking.go:221] Retrieved 40/40 results with rv 41704 and continue 
  I0617 08:28:04.947703 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-4143" for this suite. @ 06/17/24 08:28:04.952
• [617.812 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 06/17/24 08:28:04.957
  I0617 08:28:04.957992 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename webhook @ 06/17/24 08:28:04.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:28:04.97
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:28:04.973
  STEP: Setting up server cert @ 06/17/24 08:28:04.99
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 06/17/24 08:28:05.233
  STEP: Deploying the webhook pod @ 06/17/24 08:28:05.242
  STEP: Wait for the deployment to be ready @ 06/17/24 08:28:05.259
  I0617 08:28:05.267211 19 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0617 08:28:05.294111      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:06.294946      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 06/17/24 08:28:07.275
  STEP: Verifying the service has paired with the endpoint @ 06/17/24 08:28:07.286
  E0617 08:28:07.295001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:08.287159 19 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0617 08:28:08.293577 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  E0617 08:28:08.295529      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-8662-crds.webhook.example.com via the AdmissionRegistration API @ 06/17/24 08:28:08.808
  STEP: Creating a custom resource that should be mutated by the webhook @ 06/17/24 08:28:08.827
  E0617 08:28:09.296528      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:10.296824      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:11.297001      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:11.422427 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7472" for this suite. @ 06/17/24 08:28:11.428
  STEP: Destroying namespace "webhook-markers-7113" for this suite. @ 06/17/24 08:28:11.434
• [6.482 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 06/17/24 08:28:11.441
  I0617 08:28:11.441234 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename daemonsets @ 06/17/24 08:28:11.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:28:11.454
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:28:11.457
  STEP: Creating a simple DaemonSet "daemon-set" @ 06/17/24 08:28:11.476
  STEP: Check that daemon pods launch on every node of the cluster. @ 06/17/24 08:28:11.48
  I0617 08:28:11.485562 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:28:11.490815 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 08:28:11.490864 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  E0617 08:28:12.298895      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:12.487068 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:28:12.492158 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0617 08:28:12.492361 19 fixtures.go:130] Node ck-130-worker-2.novalocal is running 0 daemon pod, expected 1
  E0617 08:28:13.298643      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:13.487459 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:28:13.492057 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 08:28:13.492121 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 06/17/24 08:28:13.494
  I0617 08:28:13.514020 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:28:13.519374 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0617 08:28:13.519433 19 fixtures.go:130] Node ck-130-worker-1.novalocal is running 0 daemon pod, expected 1
  E0617 08:28:14.300625      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:14.514027 19 fixtures.go:89] DaemonSet pods can't tolerate node ck-130-master.novalocal with taints [{Key:node-role.kubernetes.io/control-plane Value: Effect:NoSchedule TimeAdded:<nil>}], skip checking this node
  I0617 08:28:14.532142 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0617 08:28:14.532216 19 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 06/17/24 08:28:14.532
  STEP: Deleting DaemonSet "daemon-set" @ 06/17/24 08:28:14.549
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-7132, will wait for the garbage collector to delete the pods @ 06/17/24 08:28:14.549
  I0617 08:28:14.609507 19 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.296055ms
  I0617 08:28:14.710449 19 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.905087ms
  E0617 08:28:15.301024      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:16.301220      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:17.302306      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:17.519256 19 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0617 08:28:17.519507 19 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0617 08:28:17.523946 19 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"42311"},"items":null}

  I0617 08:28:17.529707 19 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"42311"},"items":null}

  I0617 08:28:17.550889 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-7132" for this suite. @ 06/17/24 08:28:17.555
• [6.119 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 06/17/24 08:28:17.561
  I0617 08:28:17.561450 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename gc @ 06/17/24 08:28:17.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:28:17.577
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:28:17.58
  STEP: create the rc1 @ 06/17/24 08:28:17.588
  STEP: create the rc2 @ 06/17/24 08:28:17.592
  E0617 08:28:18.302540      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:19.303711      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:20.304344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:21.308988      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:22.307508      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:23.307795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 06/17/24 08:28:23.603
  STEP: delete the rc simpletest-rc-to-be-deleted @ 06/17/24 08:28:24.129
  STEP: wait for the rc to be deleted @ 06/17/24 08:28:24.134
  E0617 08:28:24.308552      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:25.309396      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:26.309599      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:27.309765      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:28.310593      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:29.157026 19 garbage_collector.go:762] 70 pods remaining
  I0617 08:28:29.157099 19 garbage_collector.go:769] 70 pods has nil DeletionTimestamp
  I0617 08:28:29.157110 19 garbage_collector.go:770] 
  E0617 08:28:29.311575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:30.314027      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:31.313326      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:32.313942      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:33.315654      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 06/17/24 08:28:34.155
  E0617 08:28:34.315300      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:34.328203 19 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0617 08:28:34.328325 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2g99q" in namespace "gc-7286"
  I0617 08:28:34.346150 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2rjkw" in namespace "gc-7286"
  I0617 08:28:34.358952 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2wd7c" in namespace "gc-7286"
  I0617 08:28:34.371149 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4f8vn" in namespace "gc-7286"
  I0617 08:28:34.384862 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tz2z" in namespace "gc-7286"
  I0617 08:28:34.402506 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4xd2d" in namespace "gc-7286"
  I0617 08:28:34.415006 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4zpln" in namespace "gc-7286"
  I0617 08:28:34.422022 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-57z6b" in namespace "gc-7286"
  I0617 08:28:34.433263 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5hnwf" in namespace "gc-7286"
  I0617 08:28:34.443706 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-62tjb" in namespace "gc-7286"
  I0617 08:28:34.451197 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-64n7j" in namespace "gc-7286"
  I0617 08:28:34.459673 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-682zt" in namespace "gc-7286"
  I0617 08:28:34.470749 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-69jtr" in namespace "gc-7286"
  I0617 08:28:34.477714 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vnbz" in namespace "gc-7286"
  I0617 08:28:34.491803 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6vp49" in namespace "gc-7286"
  I0617 08:28:34.503591 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6zdjt" in namespace "gc-7286"
  I0617 08:28:34.515996 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7tj6h" in namespace "gc-7286"
  I0617 08:28:34.528949 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-82h6z" in namespace "gc-7286"
  I0617 08:28:34.544513 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8q9vp" in namespace "gc-7286"
  I0617 08:28:34.556137 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-92j9f" in namespace "gc-7286"
  I0617 08:28:34.570773 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9dqrq" in namespace "gc-7286"
  I0617 08:28:34.580743 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9xbzv" in namespace "gc-7286"
  I0617 08:28:34.589726 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-b4pxx" in namespace "gc-7286"
  I0617 08:28:34.603922 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bfq4d" in namespace "gc-7286"
  I0617 08:28:34.623149 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bj97p" in namespace "gc-7286"
  I0617 08:28:34.659985 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bppxq" in namespace "gc-7286"
  I0617 08:28:34.686772 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bvg55" in namespace "gc-7286"
  I0617 08:28:34.704847 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cjjxm" in namespace "gc-7286"
  I0617 08:28:34.718022 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-ckz5b" in namespace "gc-7286"
  I0617 08:28:34.736068 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cqwzl" in namespace "gc-7286"
  I0617 08:28:34.759629 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d2tw5" in namespace "gc-7286"
  I0617 08:28:34.778543 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d7kz2" in namespace "gc-7286"
  I0617 08:28:34.801550 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dqbpv" in namespace "gc-7286"
  I0617 08:28:34.826041 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dqld8" in namespace "gc-7286"
  I0617 08:28:34.851454 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dzgxw" in namespace "gc-7286"
  I0617 08:28:34.876202 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fg92n" in namespace "gc-7286"
  I0617 08:28:34.891930 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fkpm4" in namespace "gc-7286"
  I0617 08:28:34.925140 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fm99l" in namespace "gc-7286"
  I0617 08:28:34.941691 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fncqp" in namespace "gc-7286"
  I0617 08:28:34.961940 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-fq9m9" in namespace "gc-7286"
  I0617 08:28:34.981064 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gmwjw" in namespace "gc-7286"
  I0617 08:28:34.998448 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gvqqq" in namespace "gc-7286"
  I0617 08:28:35.017947 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-gz975" in namespace "gc-7286"
  I0617 08:28:35.054371 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hj6gs" in namespace "gc-7286"
  I0617 08:28:35.073362 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-hncxg" in namespace "gc-7286"
  I0617 08:28:35.085540 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jd9g6" in namespace "gc-7286"
  I0617 08:28:35.097627 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jj2kd" in namespace "gc-7286"
  I0617 08:28:35.114814 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jmpsp" in namespace "gc-7286"
  I0617 08:28:35.139392 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-jtpcm" in namespace "gc-7286"
  I0617 08:28:35.160048 19 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-k4hkc" in namespace "gc-7286"
  I0617 08:28:35.189081 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7286" for this suite. @ 06/17/24 08:28:35.216
• [17.665 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 06/17/24 08:28:35.229
  I0617 08:28:35.229417 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-probe @ 06/17/24 08:28:35.233
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:28:35.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:28:35.252
  STEP: Creating pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881 @ 06/17/24 08:28:35.255
  E0617 08:28:35.316164      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:36.327893      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 06/17/24 08:28:37.281
  I0617 08:28:37.284082 19 container_probe.go:1749] Initial restart count of pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d is 0
  I0617 08:28:37.286720 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:37.318742      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:38.318976      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:39.294517 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:39.319563      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:40.322549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:41.298565 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:41.321500      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:42.321754      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:43.303653 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:43.322720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:44.323344      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:45.308461 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:45.324449      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:46.324891      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:47.314026 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:47.325023      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:48.325776      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:49.319797 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:49.326845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:50.327004      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:51.324582 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:51.327461      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:52.328433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:53.328674      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:53.329384 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:54.328928      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:55.329246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:55.334306 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:28:56.330239      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:57.330938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:57.339138 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  I0617 08:28:57.339341 19 container_probe.go:1763] Restart count of pod container-probe-1881/liveness-88a87943-516a-444d-90f4-cbc7ba167d0d is now 1 (20.055188658s elapsed)
  E0617 08:28:58.331474      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:28:59.332427      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:28:59.343754 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:00.332715      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:01.333531      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:01.350423 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:02.334305      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:03.334920      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:03.355702 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:04.335507      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:05.335911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:05.360882 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:06.337078      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:07.337811      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:07.367741 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:08.337932      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:09.338433      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:09.373880 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:10.339117      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:11.339493      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:11.378886 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:12.339446      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:13.340075      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:13.388017 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:14.340659      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:15.340889      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:15.392280 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:16.341658      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:17.342354      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:17.397238 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  I0617 08:29:17.397334 19 container_probe.go:1763] Restart count of pod container-probe-1881/liveness-88a87943-516a-444d-90f4-cbc7ba167d0d is now 2 (40.113172863s elapsed)
  E0617 08:29:18.342530      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:19.342979      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:19.402442 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:20.343412      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:21.343690      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:21.408462 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:22.344368      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:23.345058      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:23.414626 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:24.345868      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:25.346386      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:25.419874 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:26.346665      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:27.347501      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:27.425512 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:28.347952      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:29.348961      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:29.429960 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:30.349843      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:31.350254      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:31.434087 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:32.350969      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:33.351650      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:33.439034 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:34.352080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:35.352646      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:35.444476 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:36.353527      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:37.354371      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:37.448914 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  I0617 08:29:37.449001 19 container_probe.go:1763] Restart count of pod container-probe-1881/liveness-88a87943-516a-444d-90f4-cbc7ba167d0d is now 3 (1m0.164859529s elapsed)
  E0617 08:29:38.354894      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:39.356021      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:39.453805 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:40.356439      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:41.356845      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:41.458738 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:42.357453      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:43.358127      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:43.464479 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:44.358908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:45.359538      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:45.469781 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:46.359700      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:47.359911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:47.475765 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:48.360020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:49.361020      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:49.480585 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:50.361438      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:51.362221      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:51.485750 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:52.362898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:53.363774      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:53.491319 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:54.364069      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:55.364585      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:55.496660 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:29:56.364584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:57.365458      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:57.501145 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  I0617 08:29:57.501253 19 container_probe.go:1763] Restart count of pod container-probe-1881/liveness-88a87943-516a-444d-90f4-cbc7ba167d0d is now 4 (1m20.217110835s elapsed)
  E0617 08:29:58.366043      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:29:59.366554      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:29:59.507600 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:00.366997      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:01.367316      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:01.512721 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:02.367584      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:03.368288      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:03.519094 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:04.368607      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:05.369141      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:05.524770 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:06.369685      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:07.371303      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:07.530916 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:08.370535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:09.370898      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:09.536638 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:10.371645      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:11.372014      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:11.542258 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:12.372907      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:13.373535      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:13.550441 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:14.374084      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:15.374619      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:15.556057 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:16.374916      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:17.375703      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:17.561688 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:18.375795      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:19.376275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:19.567240 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:20.376958      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:21.377298      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:21.571369 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:22.378080      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:23.378993      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:23.577149 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:24.379623      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:25.380575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:25.583794 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:26.381573      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:27.382098      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:27.588354 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:28.382532      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:29.383160      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:29.593487 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:30.384271      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:31.384627      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:31.603073 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:32.384684      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:33.385392      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:33.609840 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:34.385803      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:35.386323      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:35.615059 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:36.387732      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:37.387257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:37.620730 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:38.387516      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:39.387908      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:39.626073 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:40.388975      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:41.389275      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:41.631536 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:42.389304      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:43.389533      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:43.636855 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:44.389740      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:45.393808      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:45.643049 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:46.391551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:47.392362      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:47.648148 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:48.392549      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:49.393123      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:49.653263 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:50.394209      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:51.394562      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:51.658355 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:52.394755      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:53.395424      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:53.663563 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:54.395575      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:55.395911      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:55.668267 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  E0617 08:30:56.396257      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:57.396357      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:30:57.673434 19 container_probe.go:1759] Get pod liveness-88a87943-516a-444d-90f4-cbc7ba167d0d in namespace container-probe-1881
  I0617 08:30:57.673501 19 container_probe.go:1763] Restart count of pod container-probe-1881/liveness-88a87943-516a-444d-90f4-cbc7ba167d0d is now 5 (2m20.389359678s elapsed)
  STEP: deleting the pod @ 06/17/24 08:30:57.673
  I0617 08:30:57.695797 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-1881" for this suite. @ 06/17/24 08:30:57.701
• [142.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 06/17/24 08:30:57.712
  I0617 08:30:57.713007 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename secrets @ 06/17/24 08:30:57.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:30:57.729
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:30:57.733
  STEP: Creating secret with name secret-test-7ce0edb9-7fdc-4571-991a-393612324b3d @ 06/17/24 08:30:57.736
  STEP: Creating a pod to test consume secrets @ 06/17/24 08:30:57.74
  E0617 08:30:58.396526      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:30:59.396922      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:00.397478      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:01.397857      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:31:01.758
  I0617 08:31:01.761075 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-secrets-e73aeaf8-96c7-4c48-a9cd-6b7150523667 container secret-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 08:31:01.777
  I0617 08:31:01.792409 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-6576" for this suite. @ 06/17/24 08:31:01.797
• [4.090 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 06/17/24 08:31:01.803
  I0617 08:31:01.803706 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename endpointslice @ 06/17/24 08:31:01.805
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:01.816
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:01.819
  STEP: getting /apis @ 06/17/24 08:31:01.822
  STEP: getting /apis/discovery.k8s.io @ 06/17/24 08:31:01.827
  STEP: getting /apis/discovery.k8s.iov1 @ 06/17/24 08:31:01.828
  STEP: creating @ 06/17/24 08:31:01.829
  STEP: getting @ 06/17/24 08:31:01.841
  STEP: listing @ 06/17/24 08:31:01.844
  STEP: watching @ 06/17/24 08:31:01.846
  I0617 08:31:01.846573 19 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 06/17/24 08:31:01.847
  STEP: cluster-wide watching @ 06/17/24 08:31:01.85
  I0617 08:31:01.850600 19 endpointslice.go:459] starting watch
  STEP: patching @ 06/17/24 08:31:01.852
  STEP: updating @ 06/17/24 08:31:01.856
  I0617 08:31:01.864505 19 endpointslice.go:482] waiting for watch events with expected annotations
  I0617 08:31:01.864562 19 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 06/17/24 08:31:01.864
  STEP: deleting a collection @ 06/17/24 08:31:01.876
  I0617 08:31:01.888960 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8614" for this suite. @ 06/17/24 08:31:01.893
• [0.096 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 06/17/24 08:31:01.902
  I0617 08:31:01.902507 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename configmap @ 06/17/24 08:31:01.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:01.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:01.918
  STEP: Creating configMap with name configmap-test-volume-a75c34ca-42e2-48be-ae3e-28771112794e @ 06/17/24 08:31:01.921
  STEP: Creating a pod to test consume configMaps @ 06/17/24 08:31:01.925
  E0617 08:31:02.398132      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:03.398861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:04.399101      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:05.399087      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:31:05.947
  I0617 08:31:05.950630 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-configmaps-86d40c5d-40f2-4a41-9803-692b7f614389 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:31:05.959
  I0617 08:31:05.977049 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3960" for this suite. @ 06/17/24 08:31:05.982
• [4.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 06/17/24 08:31:05.987
  I0617 08:31:05.987927 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 06/17/24 08:31:05.989
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:06.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:06.007
  STEP: create the container to handle the HTTPGet hook request. @ 06/17/24 08:31:06.016
  E0617 08:31:06.399881      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:07.400395      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 06/17/24 08:31:08.035
  E0617 08:31:08.400466      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:09.400825      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 06/17/24 08:31:10.052
  E0617 08:31:10.401109      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:11.401519      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 06/17/24 08:31:12.065
  I0617 08:31:12.081209 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9149" for this suite. @ 06/17/24 08:31:12.085
• [6.102 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 06/17/24 08:31:12.094
  I0617 08:31:12.094801 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename runtimeclass @ 06/17/24 08:31:12.096
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:12.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:12.111
  I0617 08:31:12.121147 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5465" for this suite. @ 06/17/24 08:31:12.125
• [0.037 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 06/17/24 08:31:12.13
  I0617 08:31:12.130888 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename dns @ 06/17/24 08:31:12.132
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:12.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:12.144
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-811.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-811.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 06/17/24 08:31:12.147
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-811.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-811.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 06/17/24 08:31:12.147
  STEP: creating a pod to probe /etc/hosts @ 06/17/24 08:31:12.148
  STEP: submitting the pod to kubernetes @ 06/17/24 08:31:12.149
  E0617 08:31:12.401598      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:13.402514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 06/17/24 08:31:14.167
  STEP: looking for the results for each expected name from probers @ 06/17/24 08:31:14.172
  I0617 08:31:14.189393 19 dns_common.go:527] DNS probes using dns-811/dns-test-2325270f-fedb-4066-b69d-3be4ce2d3c6d succeeded

  STEP: deleting the pod @ 06/17/24 08:31:14.189
  I0617 08:31:14.202126 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-811" for this suite. @ 06/17/24 08:31:14.208
• [2.088 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 06/17/24 08:31:14.223
  I0617 08:31:14.223137 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename runtimeclass @ 06/17/24 08:31:14.228
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:14.251
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:14.255
  E0617 08:31:14.403550      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:15.403938      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:31:16.299731 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1958" for this suite. @ 06/17/24 08:31:16.306
• [2.090 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 06/17/24 08:31:16.313
  I0617 08:31:16.313419 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename ingressclass @ 06/17/24 08:31:16.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:16.33
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:16.335
  STEP: getting /apis @ 06/17/24 08:31:16.339
  STEP: getting /apis/networking.k8s.io @ 06/17/24 08:31:16.344
  STEP: getting /apis/networking.k8s.iov1 @ 06/17/24 08:31:16.345
  STEP: creating @ 06/17/24 08:31:16.347
  STEP: getting @ 06/17/24 08:31:16.361
  STEP: listing @ 06/17/24 08:31:16.363
  STEP: watching @ 06/17/24 08:31:16.365
  I0617 08:31:16.365914 19 ingressclass.go:348] starting watch
  STEP: patching @ 06/17/24 08:31:16.367
  STEP: updating @ 06/17/24 08:31:16.372
  I0617 08:31:16.377481 19 ingressclass.go:364] waiting for watch events with expected annotations
  I0617 08:31:16.377529 19 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 06/17/24 08:31:16.377
  STEP: deleting a collection @ 06/17/24 08:31:16.388
  E0617 08:31:16.404520      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:31:16.407406 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-578" for this suite. @ 06/17/24 08:31:16.426
• [0.126 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 06/17/24 08:31:16.439
  I0617 08:31:16.439860 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename validating-admission-policy @ 06/17/24 08:31:16.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:16.473
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:16.478
  STEP: creating a policy with variables @ 06/17/24 08:31:16.492
  STEP: waiting until the marker is denied @ 06/17/24 08:31:16.521
  STEP: testing a replicated Deployment to be allowed @ 06/17/24 08:31:17.028
  STEP: testing a non-replicated ReplicaSet not to be denied @ 06/17/24 08:31:17.043
  I0617 08:31:17.120564 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-1013" for this suite. @ 06/17/24 08:31:17.126
• [0.695 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 06/17/24 08:31:17.136
  I0617 08:31:17.136365 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename namespaces @ 06/17/24 08:31:17.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:17.152
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:17.156
  STEP: Read namespace status @ 06/17/24 08:31:17.159
  I0617 08:31:17.163287 19 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 06/17/24 08:31:17.163
  I0617 08:31:17.176557 19 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 06/17/24 08:31:17.176
  I0617 08:31:17.185802 19 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0617 08:31:17.185941 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7367" for this suite. @ 06/17/24 08:31:17.191
• [0.061 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 06/17/24 08:31:17.2
  I0617 08:31:17.200880 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename namespaces @ 06/17/24 08:31:17.202
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:17.214
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:17.218
  STEP: Creating namespace "e2e-ns-7vgjq" @ 06/17/24 08:31:17.221
  I0617 08:31:17.233859 19 namespace.go:411] Namespace "e2e-ns-7vgjq-4870" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-7vgjq-4870" @ 06/17/24 08:31:17.233
  I0617 08:31:17.241669 19 namespace.go:434] Namespace "e2e-ns-7vgjq-4870" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-7vgjq-4870" @ 06/17/24 08:31:17.241
  I0617 08:31:17.249711 19 namespace.go:463] Namespace "e2e-ns-7vgjq-4870" has []v1.FinalizerName{"kubernetes"}
  I0617 08:31:17.250111 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-8772" for this suite. @ 06/17/24 08:31:17.256
  STEP: Destroying namespace "e2e-ns-7vgjq-4870" for this suite. @ 06/17/24 08:31:17.261
• [0.067 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 06/17/24 08:31:17.268
  I0617 08:31:17.268209 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename pods @ 06/17/24 08:31:17.27
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:17.283
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:17.286
  I0617 08:31:17.289388 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: creating the pod @ 06/17/24 08:31:17.29
  STEP: submitting the pod to kubernetes @ 06/17/24 08:31:17.29
  E0617 08:31:17.405551      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:18.407496      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:31:19.350540 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-8562" for this suite. @ 06/17/24 08:31:19.354
• [2.092 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 06/17/24 08:31:19.359
  I0617 08:31:19.360009 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:31:19.361
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:19.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:19.374
  STEP: Creating configMap with name projected-configmap-test-volume-0903e151-9bb3-48bc-9cb1-5048cae5fc8e @ 06/17/24 08:31:19.379
  STEP: Creating a pod to test consume configMaps @ 06/17/24 08:31:19.382
  E0617 08:31:19.407861      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:20.408521      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:21.409246      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:22.409706      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:31:23.399
  I0617 08:31:23.402526 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-configmaps-36ce3629-78d6-410a-b36d-ac25f3177afa container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 06/17/24 08:31:23.407
  E0617 08:31:23.409901      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:31:23.418567 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7276" for this suite. @ 06/17/24 08:31:23.423
• [4.069 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 06/17/24 08:31:23.429
  I0617 08:31:23.429285 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename containers @ 06/17/24 08:31:23.433
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:23.447
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:23.45
  STEP: Creating a pod to test override command @ 06/17/24 08:31:23.454
  E0617 08:31:24.410514      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:25.410720      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:26.410904      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:27.411384      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:31:27.474
  I0617 08:31:27.477056 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod client-containers-3668c250-c062-4fbf-bf57-c2c1f176a816 container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:31:27.482
  I0617 08:31:27.497245 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-1221" for this suite. @ 06/17/24 08:31:27.501
• [4.078 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 06/17/24 08:31:27.508
  I0617 08:31:27.508647 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename emptydir @ 06/17/24 08:31:27.511
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:27.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:27.525
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 06/17/24 08:31:27.529
  E0617 08:31:28.412124      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:29.412331      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:30.412589      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:31.413226      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:31:31.553
  I0617 08:31:31.555412 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-c595d3e9-d8b4-4f4f-9850-c33b575f0be3 container test-container: <nil>
  STEP: delete the pod @ 06/17/24 08:31:31.56
  I0617 08:31:31.571776 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-8285" for this suite. @ 06/17/24 08:31:31.575
• [4.072 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 06/17/24 08:31:31.581
  I0617 08:31:31.581122 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename projected @ 06/17/24 08:31:31.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:31.596
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:31.599
  STEP: Creating configMap with name projected-configmap-test-volume-02e1c61e-0847-4b46-8365-cfd632ac688c @ 06/17/24 08:31:31.602
  STEP: Creating a pod to test consume configMaps @ 06/17/24 08:31:31.606
  E0617 08:31:32.413767      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:33.414007      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:34.414595      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:35.415032      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 06/17/24 08:31:35.626
  I0617 08:31:35.629822 19 output.go:196] Trying to get logs from node ck-130-worker-1.novalocal pod pod-projected-configmaps-5b84e0ff-8092-4b1c-ae44-f3f042205cda container agnhost-container: <nil>
  STEP: delete the pod @ 06/17/24 08:31:35.635
  I0617 08:31:35.651575 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2700" for this suite. @ 06/17/24 08:31:35.66
• [4.088 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 06/17/24 08:31:35.67
  I0617 08:31:35.670224 19 util.go:506] >>> kubeConfig: /tmp/kubeconfig-2400038241
  STEP: Building a namespace api object, basename init-container @ 06/17/24 08:31:35.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 06/17/24 08:31:35.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 06/17/24 08:31:35.689
  STEP: creating the pod @ 06/17/24 08:31:35.692
  I0617 08:31:35.692932 19 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0617 08:31:36.415349      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:37.415561      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0617 08:31:38.415986      19 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0617 08:31:38.656073 19 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-5059" for this suite. @ 06/17/24 08:31:38.66
• [2.996 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0617 08:31:38.668867 19 suites.go:34] Running AfterSuite actions on node 1
  I0617 08:31:38.668912 19 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
[ReportAfterSuite] PASSED [0.077 seconds]
------------------------------

Ran 402 of 7197 Specs in 6000.726 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 1h40m2.218939242s
Test Suite Passed
