  I0703 12:13:47.152647      21 e2e.go:109] Starting e2e run "1bfbf3f8-00da-47c6-ae6e-0b1d8103a11e" on Ginkgo node 1
Running Suite: Kubernetes e2e suite - /usr/local/bin
====================================================
Random Seed: 1720008825 - will randomize all specs

Will run 402 of 7197 specs
------------------------------
[ReportBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e_test.go:157
[ReportBeforeSuite] PASSED [0.000 seconds]
------------------------------
[SynchronizedBeforeSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:69
  I0703 12:13:47.618025 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:13:47.623024 21 helper.go:48] Waiting up to 30m0s for all (but 0) nodes to be schedulable
  I0703 12:13:47.710391 21 e2e.go:142] Waiting up to 5m0s for all daemonsets in namespace 'kube-system' to start
  I0703 12:13:47.717774 21 e2e.go:153] 3 / 3 pods ready in namespace 'kube-system' in daemonset 'canal' (0 seconds elapsed)
  I0703 12:13:47.717840 21 e2e.go:245] e2e test version: v1.30.2
  I0703 12:13:47.740329 21 e2e.go:254] kube-apiserver version: v1.30.2
  I0703 12:13:47.740461 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:13:47.745415 21 e2e.go:383] Cluster IP family: ipv4
[SynchronizedBeforeSuite] PASSED [0.128 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:209
  STEP: Creating a kubernetes client @ 07/03/24 12:13:48.426
  I0703 12:13:48.426194 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 12:13:48.427
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:13:48.485
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:13:48.508
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:13:48.53
  STEP: Saw pod success @ 07/03/24 12:14:02.848
  I0703 12:14:03.073950 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-f1763d04-bd2a-49c1-aab6-6b01037e3673 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:14:03.493
  I0703 12:14:03.729501 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4714" for this suite. @ 07/03/24 12:14:03.759
• [15.354 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:241
  STEP: Creating a kubernetes client @ 07/03/24 12:14:03.781
  I0703 12:14:03.781510 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 12:14:03.783
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:14:03.967
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:14:03.992
  STEP: Creating configMap with name cm-test-opt-del-e933bbcc-fdd8-40fd-8eb0-328948d250dc @ 07/03/24 12:14:04.043
  STEP: Creating configMap with name cm-test-opt-upd-fe09548e-05db-430b-829b-829e3f4370ff @ 07/03/24 12:14:04.109
  STEP: Creating the pod @ 07/03/24 12:14:04.372
  STEP: Deleting configmap cm-test-opt-del-e933bbcc-fdd8-40fd-8eb0-328948d250dc @ 07/03/24 12:14:08.607
  STEP: Updating configmap cm-test-opt-upd-fe09548e-05db-430b-829b-829e3f4370ff @ 07/03/24 12:14:08.618
  STEP: Creating configMap with name cm-test-opt-create-8f2e371d-38cc-481d-81b5-36cb3f038263 @ 07/03/24 12:14:08.632
  STEP: waiting to observe update in volume @ 07/03/24 12:14:08.637
  I0703 12:14:10.753727 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5885" for this suite. @ 07/03/24 12:14:10.767
• [7.015 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should create a PodDisruptionBudget [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:108
  STEP: Creating a kubernetes client @ 07/03/24 12:14:10.803
  I0703 12:14:10.803343 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename disruption @ 07/03/24 12:14:10.804
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:14:10.866
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:14:10.874
  STEP: creating the pdb @ 07/03/24 12:14:10.882
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:14:10.891
  STEP: updating the pdb @ 07/03/24 12:14:12.898
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:14:12.938
  STEP: patching the pdb @ 07/03/24 12:14:12.964
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:14:12.987
  STEP: Waiting for the pdb to be deleted @ 07/03/24 12:14:15
  I0703 12:14:15.004296 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3971" for this suite. @ 07/03/24 12:14:15.009
• [4.213 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support PriorityLevelConfiguration API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:514
  STEP: Creating a kubernetes client @ 07/03/24 12:14:15.018
  I0703 12:14:15.018463 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename apf @ 07/03/24 12:14:15.019
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:14:15.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:14:15.084
  STEP: getting /apis @ 07/03/24 12:14:15.091
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/03/24 12:14:15.1
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/03/24 12:14:15.103
  STEP: creating @ 07/03/24 12:14:15.109
  STEP: getting @ 07/03/24 12:14:15.202
  STEP: listing @ 07/03/24 12:14:15.22
  STEP: watching @ 07/03/24 12:14:15.292
  I0703 12:14:15.292607 21 flowcontrol.go:620] starting watch
  STEP: patching @ 07/03/24 12:14:15.351
  STEP: updating @ 07/03/24 12:14:15.381
  I0703 12:14:15.409945 21 flowcontrol.go:648] waiting for watch events with expected annotations
  STEP: getting /status @ 07/03/24 12:14:15.41
  STEP: patching /status @ 07/03/24 12:14:15.424
  STEP: updating /status @ 07/03/24 12:14:15.434
  STEP: deleting @ 07/03/24 12:14:15.509
  STEP: deleting a collection @ 07/03/24 12:14:15.58
  I0703 12:14:15.677813 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-6661" for this suite. @ 07/03/24 12:14:15.684
• [0.701 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:70
  STEP: Creating a kubernetes client @ 07/03/24 12:14:15.719
  I0703 12:14:15.719493 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 12:14:15.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:14:15.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:14:15.914
  I0703 12:14:15.946586 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: kubectl validation (kubectl create and apply) allows request with known and required properties @ 07/03/24 12:14:18.544
  I0703 12:14:18.545330 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 create -f -'
  I0703 12:14:18.989239 21 builder.go:146] stderr: ""
  I0703 12:14:18.989294 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1395-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0703 12:14:18.989349 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 delete e2e-test-crd-publish-openapi-1395-crds test-foo'
  I0703 12:14:19.396109 21 builder.go:146] stderr: ""
  I0703 12:14:19.396156 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1395-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  I0703 12:14:19.396255 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 apply -f -'
  I0703 12:14:19.639833 21 builder.go:146] stderr: ""
  I0703 12:14:19.639892 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1395-crd.crd-publish-openapi-test-foo.example.com/test-foo created\n"
  I0703 12:14:19.640040 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 delete e2e-test-crd-publish-openapi-1395-crds test-foo'
  I0703 12:14:19.803395 21 builder.go:146] stderr: ""
  I0703 12:14:19.803446 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-1395-crd.crd-publish-openapi-test-foo.example.com \"test-foo\" deleted\n"
  STEP: kubectl validation (kubectl create and apply) rejects request with value outside defined enum values @ 07/03/24 12:14:19.803
  I0703 12:14:19.803637 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 create -f -'
  I0703 12:14:19.938408 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request with unknown properties when disallowed by the schema @ 07/03/24 12:14:19.938
  I0703 12:14:19.938655 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 create -f -'
  I0703 12:14:20.195032 21 builder.go:135] rc: 1
  I0703 12:14:20.195142 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 apply -f -'
  I0703 12:14:20.432899 21 builder.go:135] rc: 1
  STEP: kubectl validation (kubectl create and apply) rejects request without required properties @ 07/03/24 12:14:20.433
  I0703 12:14:20.433748 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 create -f -'
  I0703 12:14:20.763862 21 builder.go:135] rc: 1
  I0703 12:14:20.763967 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 --namespace=crd-publish-openapi-1326 apply -f -'
  I0703 12:14:21.230942 21 builder.go:135] rc: 1
  STEP: kubectl explain works to explain CR properties @ 07/03/24 12:14:21.231
  I0703 12:14:21.231075 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 explain e2e-test-crd-publish-openapi-1395-crds'
  I0703 12:14:21.609124 21 builder.go:146] stderr: ""
  I0703 12:14:21.609202 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1395-crd\nVERSION:    v1\n\nDESCRIPTION:\n    Foo CRD for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Foo\n\n  status\t<Object>\n    Status of Foo\n\n\n"
  STEP: kubectl explain works to explain CR properties recursively @ 07/03/24 12:14:21.609
  I0703 12:14:21.609538 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 explain e2e-test-crd-publish-openapi-1395-crds.metadata'
  I0703 12:14:21.879322 21 builder.go:146] stderr: ""
  I0703 12:14:21.879493 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1395-crd\nVERSION:    v1\n\nFIELD: metadata <ObjectMeta>\n\n\nDESCRIPTION:\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n    ObjectMeta is metadata that all persisted resources must have, which\n    includes all objects users must create.\n    \nFIELDS:\n  annotations\t<map[string]string>\n    Annotations is an unstructured key value map stored with a resource that may\n    be set by external tools to store and retrieve arbitrary metadata. They are\n    not queryable and should be preserved when modifying objects. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations\n\n  creationTimestamp\t<string>\n    CreationTimestamp is a timestamp representing the server time when this\n    object was created. It is not guaranteed to be set in happens-before order\n    across separate operations. Clients may not set this value. It is\n    represented in RFC3339 form and is in UTC.\n    \n    Populated by the system. Read-only. Null for lists. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  deletionGracePeriodSeconds\t<integer>\n    Number of seconds allowed for this object to gracefully terminate before it\n    will be removed from the system. Only set when deletionTimestamp is also\n    set. May only be shortened. Read-only.\n\n  deletionTimestamp\t<string>\n    DeletionTimestamp is RFC 3339 date and time at which this resource will be\n    deleted. This field is set by the server when a graceful deletion is\n    requested by the user, and is not directly settable by a client. The\n    resource is expected to be deleted (no longer visible from resource lists,\n    and not reachable by name) after the time in this field, once the finalizers\n    list is empty. As long as the finalizers list contains items, deletion is\n    blocked. Once the deletionTimestamp is set, this value may not be unset or\n    be set further into the future, although it may be shortened or the resource\n    may be deleted prior to this time. For example, a user may request that a\n    pod is deleted in 30 seconds. The Kubelet will react by sending a graceful\n    termination signal to the containers in the pod. After that 30 seconds, the\n    Kubelet will send a hard termination signal (SIGKILL) to the container and\n    after cleanup, remove the pod from the API. In the presence of network\n    partitions, this object may still exist after this timestamp, until an\n    administrator or automated process can determine the resource is fully\n    terminated. If not set, graceful deletion of the object has not been\n    requested.\n    \n    Populated by the system when a graceful deletion is requested. Read-only.\n    More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  finalizers\t<[]string>\n    Must be empty before the object is deleted from the registry. Each entry is\n    an identifier for the responsible component that will remove the entry from\n    the list. If the deletionTimestamp of the object is non-nil, entries in this\n    list can only be removed. Finalizers may be processed and removed in any\n    order.  Order is NOT enforced because it introduces significant risk of\n    stuck finalizers. finalizers is a shared field, any actor with permission\n    can reorder it. If the finalizer list is processed in order, then this can\n    lead to a situation in which the component responsible for the first\n    finalizer in the list is waiting for a signal (field value, external system,\n    or other) produced by a component responsible for a finalizer later in the\n    list, resulting in a deadlock. Without enforced ordering finalizers are free\n    to order amongst themselves and are not vulnerable to ordering changes in\n    the list.\n\n  generateName\t<string>\n    GenerateName is an optional prefix, used by the server, to generate a unique\n    name ONLY IF the Name field has not been provided. If this field is used,\n    the name returned to the client will be different than the name passed. This\n    value will also be combined with a unique suffix. The provided value has the\n    same validation rules as the Name field, and may be truncated by the length\n    of the suffix required to make the value unique on the server.\n    \n    If this field is specified and the generated name exists, the server will\n    return a 409.\n    \n    Applied only if Name is not specified. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#idempotency\n\n  generation\t<integer>\n    A sequence number representing a specific generation of the desired state.\n    Populated by the system. Read-only.\n\n  labels\t<map[string]string>\n    Map of string keys and values that can be used to organize and categorize\n    (scope and select) objects. May match selectors of replication controllers\n    and services. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/labels\n\n  managedFields\t<[]ManagedFieldsEntry>\n    ManagedFields maps workflow-id and version to the set of fields that are\n    managed by that workflow. This is mostly for internal housekeeping, and\n    users typically shouldn't need to set or understand this field. A workflow\n    can be the user's name, a controller's name, or the name of a specific apply\n    path like \"ci-cd\". The set of fields is always in the version that the\n    workflow used when modifying the object.\n\n  name\t<string>\n    Name must be unique within a namespace. Is required when creating resources,\n    although some resources may allow a client to request the generation of an\n    appropriate name automatically. Name is primarily intended for creation\n    idempotence and configuration definition. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#names\n\n  namespace\t<string>\n    Namespace defines the space within which each name must be unique. An empty\n    namespace is equivalent to the \"default\" namespace, but \"default\" is the\n    canonical representation. Not all objects are required to be scoped to a\n    namespace - the value of this field for those objects will be empty.\n    \n    Must be a DNS_LABEL. Cannot be updated. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces\n\n  ownerReferences\t<[]OwnerReference>\n    List of objects depended by this object. If ALL objects in the list have\n    been deleted, this object will be garbage collected. If this object is\n    managed by a controller, then an entry in this list will point to this\n    controller, with the controller field set to true. There cannot be more than\n    one managing controller.\n\n  resourceVersion\t<string>\n    An opaque value that represents the internal version of this object that can\n    be used by clients to determine when objects have changed. May be used for\n    optimistic concurrency, change detection, and the watch operation on a\n    resource or set of resources. Clients must treat these values as opaque and\n    passed unmodified back to the server. They may only be valid for a\n    particular resource or set of resources.\n    \n    Populated by the system. Read-only. Value must be treated as opaque by\n    clients and . More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency\n\n  selfLink\t<string>\n    Deprecated: selfLink is a legacy read-only field that is no longer populated\n    by the system.\n\n  uid\t<string>\n    UID is the unique in time and space value for this object. It is typically\n    generated by the server on successful creation of a resource and is not\n    allowed to change on PUT operations.\n    \n    Populated by the system. Read-only. More info:\n    https://kubernetes.io/docs/concepts/overview/working-with-objects/names#uids\n\n\n"
  I0703 12:14:21.879742 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 explain e2e-test-crd-publish-openapi-1395-crds.spec'
  I0703 12:14:22.002531 21 builder.go:146] stderr: ""
  I0703 12:14:22.002595 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1395-crd\nVERSION:    v1\n\nFIELD: spec <Object>\n\n\nDESCRIPTION:\n    Specification of Foo\n    \nFIELDS:\n  bars\t<[]Object>\n    List of Bars and their specs.\n\n\n"
  I0703 12:14:22.002750 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 explain e2e-test-crd-publish-openapi-1395-crds.spec.bars'
  I0703 12:14:22.198182 21 builder.go:146] stderr: ""
  I0703 12:14:22.198335 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-foo.example.com\nKIND:       e2e-test-crd-publish-openapi-1395-crd\nVERSION:    v1\n\nFIELD: bars <[]Object>\n\n\nDESCRIPTION:\n    List of Bars and their specs.\n    \nFIELDS:\n  age\t<string>\n    Age of Bar.\n\n  bazs\t<[]string>\n    List of Bazs.\n\n  feeling\t<string>\n  enum: Great, Down\n    Whether Bar is feeling great.\n\n  name\t<string> -required-\n    Name of Bar.\n\n\n"
  STEP: kubectl explain works to return error when explain is called on property that doesn't exist @ 07/03/24 12:14:22.198
  I0703 12:14:22.198738 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-1326 explain e2e-test-crd-publish-openapi-1395-crds.spec.bars2'
  I0703 12:14:22.516596 21 builder.go:135] rc: 1
  I0703 12:14:27.678796 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-1326" for this suite. @ 07/03/24 12:14:27.704
• [11.995 seconds]
------------------------------
[sig-node] Probing container should have monotonically increasing restart count [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:199
  STEP: Creating a kubernetes client @ 07/03/24 12:14:27.715
  I0703 12:14:27.715166 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 12:14:27.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:14:27.846
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:14:27.898
  STEP: Creating pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015 @ 07/03/24 12:14:27.992
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 12:14:32.133
  I0703 12:14:32.161421 21 container_probe.go:1749] Initial restart count of pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 is 0
  I0703 12:14:32.172274 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:34.177677 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:36.182749 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:38.187644 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:40.196320 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:42.202216 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:44.209238 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:46.214593 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:48.219493 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:50.223818 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:50.224151 21 container_probe.go:1763] Restart count of pod container-probe-3015/liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 is now 1 (18.062686208s elapsed)
  I0703 12:14:52.228928 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:54.235450 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:56.262200 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:14:58.268388 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:00.275859 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:02.319247 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:04.325462 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:06.338027 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:08.344460 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:10.363760 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:10.363937 21 container_probe.go:1763] Restart count of pod container-probe-3015/liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 is now 2 (38.202472752s elapsed)
  I0703 12:15:12.427007 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:14.446554 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:16.454146 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:18.458689 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:20.462853 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:22.467563 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:24.471691 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:26.476908 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:28.490254 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:30.516154 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:30.516202 21 container_probe.go:1763] Restart count of pod container-probe-3015/liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 is now 3 (58.354738766s elapsed)
  I0703 12:15:32.526126 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:34.545684 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:36.553880 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:38.558542 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:40.569977 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:42.575396 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:44.579842 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:46.583072 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:48.588458 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:50.592272 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:50.592313 21 container_probe.go:1763] Restart count of pod container-probe-3015/liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 is now 4 (1m18.430850338s elapsed)
  I0703 12:15:52.601627 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:54.606174 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:56.610548 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:15:58.614932 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:00.619237 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:02.635603 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:04.644068 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:06.648629 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:08.656833 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:10.664627 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:12.690758 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:14.701748 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:16.706331 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:18.711037 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:20.717418 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:22.722201 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:24.733979 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:26.741432 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:28.745295 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:30.754886 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:32.761805 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:34.765875 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:36.771195 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:38.775267 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:40.795610 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:42.803352 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:44.808915 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:46.819360 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:48.832286 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:50.859084 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:52.872542 21 container_probe.go:1759] Get pod liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 in namespace container-probe-3015
  I0703 12:16:52.873256 21 container_probe.go:1763] Restart count of pod container-probe-3015/liveness-647b0abe-b2fc-456c-af62-ebd2f781f382 is now 5 (2m20.711789754s elapsed)
  STEP: deleting the pod @ 07/03/24 12:16:52.873
  I0703 12:16:52.922404 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-3015" for this suite. @ 07/03/24 12:16:52.942
• [145.245 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:303
  STEP: Creating a kubernetes client @ 07/03/24 12:16:52.968
  I0703 12:16:52.968053 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/03/24 12:16:52.969
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:16:53.108
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:16:53.12
  I0703 12:16:53.132297 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:16:56.716565 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-3129" for this suite. @ 07/03/24 12:16:56.722
• [3.764 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass without PodOverhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:106
  STEP: Creating a kubernetes client @ 07/03/24 12:16:56.733
  I0703 12:16:56.733087 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename runtimeclass @ 07/03/24 12:16:56.736
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:16:57.162
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:16:57.205
  I0703 12:16:57.438036 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-5836" for this suite. @ 07/03/24 12:16:57.471
• [0.771 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:251
  STEP: Creating a kubernetes client @ 07/03/24 12:16:57.505
  I0703 12:16:57.505310 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 12:16:57.506
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:16:57.686
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:16:57.699
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:16:57.708
  STEP: Saw pod success @ 07/03/24 12:17:03.814
  I0703 12:17:03.821219 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-b8e2af04-ada2-429e-9959-d2cb345f45b6 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:17:03.838
  I0703 12:17:03.858582 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6902" for this suite. @ 07/03/24 12:17:03.866
• [6.375 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:97
  STEP: Creating a kubernetes client @ 07/03/24 12:17:03.881
  I0703 12:17:03.881606 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 12:17:03.882
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:03.96
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:03.978
  STEP: creating secret secrets-1541/secret-test-4814cedc-a8b7-450e-ae0e-b717ecc4dcd3 @ 07/03/24 12:17:04.006
  STEP: Creating a pod to test consume secrets @ 07/03/24 12:17:04.018
  STEP: Saw pod success @ 07/03/24 12:17:10.094
  I0703 12:17:10.097796 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-25acaf97-0ca0-4454-9c99-73113ce9b07f container env-test: <nil>
  STEP: delete the pod @ 07/03/24 12:17:10.125
  I0703 12:17:10.175026 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1541" for this suite. @ 07/03/24 12:17:10.191
• [6.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a CR with unknown fields for CRD with no validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:289
  STEP: Creating a kubernetes client @ 07/03/24 12:17:10.203
  I0703 12:17:10.203469 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename field-validation @ 07/03/24 12:17:10.204
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:10.337
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:10.346
  I0703 12:17:10.350750 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:17:13.730078 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2815" for this suite. @ 07/03/24 12:17:13.741
• [3.558 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should support retrieving logs from the container over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:619
  STEP: Creating a kubernetes client @ 07/03/24 12:17:13.762
  I0703 12:17:13.762352 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 12:17:13.764
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:13.862
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:13.873
  I0703 12:17:13.891730 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: creating the pod @ 07/03/24 12:17:13.892
  STEP: submitting the pod to kubernetes @ 07/03/24 12:17:13.892
  I0703 12:17:18.071175 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3885" for this suite. @ 07/03/24 12:17:18.101
• [4.348 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert a non homogeneous list of CRs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:177
  STEP: Creating a kubernetes client @ 07/03/24 12:17:18.111
  I0703 12:17:18.111604 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-webhook @ 07/03/24 12:17:18.112
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:18.355
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:18.478
  STEP: Setting up server cert @ 07/03/24 12:17:18.62
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/03/24 12:17:19.036
  STEP: Deploying the custom resource conversion webhook pod @ 07/03/24 12:17:19.054
  STEP: Wait for the deployment to be ready @ 07/03/24 12:17:19.107
  I0703 12:17:19.132692 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  I0703 12:17:21.161524 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:17:23.192928 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:17:25.168148 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 17, 19, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:17:27.165
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:17:27.176
  I0703 12:17:28.177006 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0703 12:17:28.205950 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Creating a v1 custom resource @ 07/03/24 12:17:30.963
  STEP: Create a v2 custom resource @ 07/03/24 12:17:31.147
  STEP: List CRs in v1 @ 07/03/24 12:17:31.281
  STEP: List CRs in v2 @ 07/03/24 12:17:31.578
  I0703 12:17:32.389030 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-4563" for this suite. @ 07/03/24 12:17:32.394
• [14.326 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSliceMirroring should mirror a custom Endpoints resource through create update and delete [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslicemirroring.go:55
  STEP: Creating a kubernetes client @ 07/03/24 12:17:32.439
  I0703 12:17:32.439748 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename endpointslicemirroring @ 07/03/24 12:17:32.443
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:32.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:32.622
  STEP: mirroring a new custom Endpoint @ 07/03/24 12:17:32.833
  I0703 12:17:32.969941 21 endpointslicemirroring.go:96] Waiting for at least 1 EndpointSlice to exist, got 0
  STEP: mirroring an update to a custom Endpoint @ 07/03/24 12:17:35.075
  STEP: mirroring deletion of a custom Endpoint @ 07/03/24 12:17:35.165
  I0703 12:17:35.189808 21 endpointslicemirroring.go:194] Waiting for 0 EndpointSlices to exist, got 1
  I0703 12:17:37.193867 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslicemirroring-1476" for this suite. @ 07/03/24 12:17:37.197
• [4.767 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with absolute path [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:190
  STEP: Creating a kubernetes client @ 07/03/24 12:17:37.206
  I0703 12:17:37.206727 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 12:17:37.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:37.237
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:37.243
  I0703 12:17:39.304259 21 delete.go:62] Deleting pod "var-expansion-10aa2798-bad9-481c-a566-2190fb88ea19" in namespace "var-expansion-5287"
  I0703 12:17:39.331441 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-10aa2798-bad9-481c-a566-2190fb88ea19" to be fully deleted
  I0703 12:17:43.346191 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-5287" for this suite. @ 07/03/24 12:17:43.35
• [6.159 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] server version should find the server version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/server_version.go:41
  STEP: Creating a kubernetes client @ 07/03/24 12:17:43.386
  I0703 12:17:43.386402 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename server-version @ 07/03/24 12:17:43.387
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:43.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:43.447
  STEP: Request ServerVersion @ 07/03/24 12:17:43.456
  STEP: Confirm major version @ 07/03/24 12:17:43.458
  I0703 12:17:43.458084 21 server_version.go:52] Major version: 1
  STEP: Confirm minor version @ 07/03/24 12:17:43.458
  I0703 12:17:43.458854 21 server_version.go:58] cleanMinorVersion: 30
  I0703 12:17:43.458984 21 server_version.go:62] Minor version: 30
  I0703 12:17:43.459214 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "server-version-5230" for this suite. @ 07/03/24 12:17:43.474
• [0.102 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support proportional scaling [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:160
  STEP: Creating a kubernetes client @ 07/03/24 12:17:43.488
  I0703 12:17:43.488213 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 12:17:43.489
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:17:43.537
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:17:43.542
  I0703 12:17:43.553405 21 deployment.go:1196] Creating deployment "webserver-deployment"
  I0703 12:17:43.567232 21 deployment.go:1200] Waiting for observed generation 1
  I0703 12:17:45.577851 21 deployment.go:1205] Waiting for all required pods to come up
  I0703 12:17:45.584828 21 resource.go:87] Pod name httpd: Found 10 pods out of 10
  STEP: ensuring each pod is running @ 07/03/24 12:17:45.584
  I0703 12:18:11.855868 21 deployment.go:1209] Waiting for deployment "webserver-deployment" to complete
  I0703 12:18:11.865367 21 deployment.go:1218] Updating deployment "webserver-deployment" with a non-existent image
  I0703 12:18:11.880320 21 deployment.go:313] Updating deployment webserver-deployment
  I0703 12:18:11.880372 21 deployment.go:1224] Waiting for observed generation 2
  I0703 12:18:13.899039 21 deployment.go:1234] Waiting for the first rollout's replicaset to have .status.availableReplicas = 8
  I0703 12:18:13.901790 21 deployment.go:1239] Waiting for the first rollout's replicaset to have .spec.replicas = 8
  I0703 12:18:13.904981 21 deployment.go:1244] Waiting for the first rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0703 12:18:13.917071 21 deployment.go:1258] Verifying that the second rollout's replicaset has .status.availableReplicas = 0
  I0703 12:18:13.917264 21 deployment.go:1263] Waiting for the second rollout's replicaset to have .spec.replicas = 5
  I0703 12:18:13.926467 21 deployment.go:1268] Waiting for the second rollout's replicaset of deployment "webserver-deployment" to have desired number of replicas
  I0703 12:18:13.936399 21 deployment.go:1275] Verifying that deployment "webserver-deployment" has minimum required number of available replicas
  I0703 12:18:13.936640 21 deployment.go:1283] Scaling up the deployment "webserver-deployment" from 10 to 30
  I0703 12:18:13.955821 21 deployment.go:313] Updating deployment webserver-deployment
  I0703 12:18:13.955992 21 deployment.go:1289] Waiting for the replicasets of deployment "webserver-deployment" to have desired number of replicas
  I0703 12:18:13.976977 21 deployment.go:1297] Verifying that first rollout's replicaset has .spec.replicas = 20
  I0703 12:18:14.048201 21 deployment.go:1303] Verifying that second rollout's replicaset has .spec.replicas = 13
  I0703 12:18:14.418867 21 deployment.go:633] Deployment "webserver-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=20) "webserver-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "662069ab-6100-44b3-9c4e-45a200162d6d",
      ResourceVersion: (string) (len=4) "4476",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=635) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000160  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000170  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000180  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000190  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              000001a0  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001b0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001c0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001d0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001e0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001f0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              00000200  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000210  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000220  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000230  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000270  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=541) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 6e 61  |licas":{},"f:una|
              000001f0  76 61 69 6c 61 62 6c 65  52 65 70 6c 69 63 61 73  |vailableReplicas|
              00000200  22 3a 7b 7d 2c 22 66 3a  75 70 64 61 74 65 64 52  |":{},"f:updatedR|
              00000210  65 70 6c 69 63 61 73 22  3a 7b 7d 7d 7d           |eplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(30),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 2,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 3,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 3,
      Replicas: (int32) 13,
      UpdatedReplicas: (int32) 5,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      UnavailableReplicas: (int32) 25,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=60) "ReplicaSet \"webserver-deployment-67c89d485c\" is progressing."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0703 12:18:14.645455 21 deployment.go:39] New ReplicaSet "webserver-deployment-67c89d485c" of Deployment "webserver-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-67c89d485c",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
      ResourceVersion: (string) (len=4) "4461",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "662069ab-6100-44b3-9c4e-45a200162d6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 32 30 36 39  61 62 2d 36 31 30 30 2d  |\"662069ab-6100-|
              00000120  34 34 62 33 2d 39 63 34  65 2d 34 35 61 32 30 30  |44b3-9c4e-45a200|
              00000130  31 36 32 64 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |162d6d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(13),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=13) "webserver:404",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 5,
      FullyLabeledReplicas: (int32) 5,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 12:18:14.652588 21 deployment.go:44] All old ReplicaSets of Deployment "webserver-deployment":
  I0703 12:18:14.653070 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "webserver-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
      ResourceVersion: (string) (len=4) "4459",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=2) "30",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=2) "33"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=20) "webserver-deployment",
          UID: (types.UID) (len=36) "662069ab-6100-44b3-9c4e-45a200162d6d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 36 36 32 30 36 39  61 62 2d 36 31 30 30 2d  |\"662069ab-6100-|
              00000120  34 34 62 33 2d 39 63 34  65 2d 34 35 61 32 30 30  |44b3-9c4e-45a200|
              00000130  31 36 32 64 36 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |162d6d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(20),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 8,
      FullyLabeledReplicas: (int32) 8,
      ReadyReplicas: (int32) 8,
      AvailableReplicas: (int32) 8,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 12:18:14.972108 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-2hhjv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-2hhjv",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ebe3ec11-7539-4da7-b2ca-5693a0aefff7",
      ResourceVersion: (string) (len=4) "4482",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-swjvx",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-swjvx",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:14.973773 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-4k4mq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-4k4mq",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a75525ff-cf5a-4820-bf8a-5b95e3c3bfa9",
      ResourceVersion: (string) (len=4) "4481",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-mn4mw",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-mn4mw",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:14.978757 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-68rgr" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-68rgr",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8c426c0-12bb-45ba-ba17-de06121da619",
      ResourceVersion: (string) (len=4) "4455",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.15/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "45a89197fd7bc657fdae278659bce7ec485cf6e4c8dc90c05f888b3375e40746"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-9kz9r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-9kz9r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-137",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.137"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605892,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:14.981791 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-6r6tg" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-6r6tg",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "12140ea0-63d4-40ca-923f-c61d73fc4baf",
      ResourceVersion: (string) (len=4) "4449",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605892,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-wq5rc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-wq5rc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605892,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:14.984837 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-7qhtb" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7qhtb",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e906457b-b7db-4fbf-88d2-7983c9e62906",
      ResourceVersion: (string) (len=4) "4479",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-f2zkj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-f2zkj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-137",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.137"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:14.991816 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-7qzxc" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-7qzxc",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d08e1250-d9c1-4d49-81fe-6f9a21f79429",
      ResourceVersion: (string) (len=4) "4486",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hfqbn",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hfqbn",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:14.993393 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-g4tl7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-g4tl7",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b54f0e40-2c5c-40a1-a3f5-4e111afff2ee",
      ResourceVersion: (string) (len=4) "4483",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-zm5ll",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-zm5ll",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.004191 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-gf5l5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-gf5l5",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d45ad3bd-c9ad-4de4-b57c-d31adc84073d",
      ResourceVersion: (string) (len=4) "4447",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605892,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rlmkt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rlmkt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605892,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.010101 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-qxtvk" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-qxtvk",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b82b64b5-f627-4864-b25b-0135795f17d7",
      ResourceVersion: (string) (len=4) "4484",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ps2q5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ps2q5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.012535 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-sf5dp" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-sf5dp",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "520bcd87-7795-4d1c-b4c4-634325a91e5e",
      ResourceVersion: (string) (len=4) "4417",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-grf79",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-grf79",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.020054 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-wzlc4" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-wzlc4",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ed0e3e36-eea6-4de8-acd4-c8e4740f90a6",
      ResourceVersion: (string) (len=4) "4420",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605892,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-g7vfj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-g7vfj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605891,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605891,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=13) "webserver:404",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.032793 21 deployment.go:67] Pod "webserver-deployment-67c89d485c-xgqv7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-67c89d485c-xgqv7",
      GenerateName: (string) (len=32) "webserver-deployment-67c89d485c-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "71df3e1e-bf3a-4ce5-97b6-7ce37d7ffec8",
      ResourceVersion: (string) (len=4) "4478",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "67c89d485c"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-67c89d485c",
          UID: (types.UID) (len=36) "7f842872-d642-4863-b766-0b093df59c63",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 66  38 34 32 38 37 32 2d 64  |d\":\"7f842872-d|
              00000090  36 34 32 2d 34 38 36 33  2d 62 37 36 36 2d 30 62  |642-4863-b766-0b|
              000000a0  30 39 33 64 66 35 39 63  36 33 5c 22 7d 22 3a 7b  |093df59c63\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-5z4f7",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=13) "webserver:404",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-5z4f7",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.048588 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-2bq9l" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-2bq9l",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b0f890e9-dcb3-4b8b-8671-2ff8add03a1b",
      ResourceVersion: (string) (len=4) "4477",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-8drvz",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-8drvz",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.055157 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-7rgt8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-7rgt8",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "35d38f9f-7175-4e13-b97a-052d04b122c2",
      ResourceVersion: (string) (len=4) "4391",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9b18c5516a2dc04522b7367f599a5cce3428386b7da3fb64b4fa28bd78ae1bbe",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 34  5c 22 7d 22 3a 7b 22 2e  |.42.0.14\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jpg6r",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jpg6r",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-137",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.137"
        }
      },
      PodIP: (string) (len=10) "10.42.0.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605889,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://1997d8e3ed80032d583a33fa310754069fd0f342107b8a4e75f8166af4adcc9a",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.075431 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-blgbj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-blgbj",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6caecdfc-5683-4a5d-ba97-fcdeb92f0555",
      ResourceVersion: (string) (len=4) "4354",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f02793b9b9920e0be07310506271e9f78011a20c4c5ca99ecf0c00390aaf2bfa",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.15/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.15/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 35  5c 22 7d 22 3a 7b 22 2e  |.42.1.15\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-qsj6v",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-qsj6v",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=10) "10.42.1.15",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.15"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605879,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://bc9c2ec086f9e292fd38fe6679ff21b68e285a8bb614c85241fdd6c6a4a944d9",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.129325 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-cns59" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-cns59",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bd802a2e-dbcd-4549-b259-7f3268f0a6ed",
      ResourceVersion: (string) (len=4) "4491",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-z5qgr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-z5qgr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.139793 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-f2bzq" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-f2bzq",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "270c0529-8715-4b6d-9962-60d6195bb793",
      ResourceVersion: (string) (len=4) "4487",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-bbdrr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-bbdrr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.142641 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-hmrm9" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-hmrm9",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ad001348-748d-48eb-a5b5-05e6f3ca2253",
      ResourceVersion: (string) (len=4) "4340",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "7661c5bba26000617ea893a4259b76cf895b31488ac2e55e29bec9670bdf84bf",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.2.5/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.2.5/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 35 5c  22 7d 22 3a 7b 22 2e 22  |.42.2.5\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-ppbnp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-ppbnp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) (len=9) "10.42.2.5",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.42.2.5"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605878,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://cf0f0727cb5241027b8cf880ee6c569e7ccb30f6b2e2b06e910e346adb6ff173",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.187206 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-hs76n" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-hs76n",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5d5c8b1e-0ba6-4bdc-9d2a-0820294570dd",
      ResourceVersion: (string) (len=4) "4465",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605893,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605893,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hlbbt",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hlbbt",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.200952 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-l9jwk" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-l9jwk",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "86327660-8b2c-4125-8063-1f776d31477e",
      ResourceVersion: (string) (len=4) "4347",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "af392e0e2b450502686877448222683dbfde8c94f110dec87bbe9f74e1e98531",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.2.7/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.2.7/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 37 5c  22 7d 22 3a 7b 22 2e 22  |.42.2.7\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26z2n",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26z2n",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605879,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) (len=9) "10.42.2.7",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.42.2.7"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605878,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://a3b1ccd0732ce97c266b5b39ef3030212aed96a65a259ae3c8a9d4e600903d28",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.228465 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-mpw2t" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-mpw2t",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9bc85c08-6d1a-439f-8a45-c3268ffee70c",
      ResourceVersion: (string) (len=4) "4394",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "adeca6ced5b14bf0e09803ae1f5ce5f1586729f512e0e190b8c6c854335f6a68",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.13/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.13/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 33  5c 22 7d 22 3a 7b 22 2e  |.42.0.13\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v84np",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v84np",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-137",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.137"
        }
      },
      PodIP: (string) (len=10) "10.42.0.13",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.13"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605889,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://e1f588ce4a059e91e0c4f55bb2fc8867650dc9d32351c6a528a11d41705bc8b8",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.232302 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-n7d42" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-n7d42",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "3cdd8a60-8683-4a99-afa9-36692a59bde1",
      ResourceVersion: (string) (len=4) "4351",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d17eceb44d45bd2168dc619b68ce63854c2a070c9c018502a848e622edeb7d9e",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.14/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.14/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605867,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 34  5c 22 7d 22 3a 7b 22 2e  |.42.1.14\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-26bm5",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-26bm5",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605880,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=10) "10.42.1.14",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.14"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605878,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://f7155fff7e0941229e39ac72ec36cd19ea6d02bb6ad33bac0579896fd642e814",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.236017 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-rmqg7" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-rmqg7",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b61e65ef-1781-4cf4-9e12-868dca72e6b5",
      ResourceVersion: (string) (len=4) "4488",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4lfwr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4lfwr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.293719 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-svqcf" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-svqcf",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fe081d50-db14-4fd1-9cf1-4dcccd54e1d7",
      ResourceVersion: (string) (len=4) "4327",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "b0f1962c131cfa69cef43c62ef08fee5ec0248471b10ead9f2ec5f493ffe2750",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=12) "10.42.2.6/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=12) "10.42.2.6/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=658) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 36 5c  22 7d 22 3a 7b 22 2e 22  |.42.2.6\"}":{"."|
              00000270  3a 7b 7d 2c 22 66 3a 69  70 22 3a 7b 7d 7d 7d 2c  |:{},"f:ip":{}}},|
              00000280  22 66 3a 73 74 61 72 74  54 69 6d 65 22 3a 7b 7d  |"f:startTime":{}|
              00000290  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-v96gp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-v96gp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605878,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) (len=9) "10.42.2.6",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=9) "10.42.2.6"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605878,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://4b95ced07276b959f4310517ae9a6f80476fa1f397f1804021614fc037892676",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.305439 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-tb2n5" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-tb2n5",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fcf7b53b-7be4-4df9-8c1d-6c89e0e5d6f1",
      ResourceVersion: (string) (len=4) "4485",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-cmfsg",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-cmfsg",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=1) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.320131 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-x6zj6" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-x6zj6",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "324cce8b-f84c-4052-9c32-fc306c125583",
      ResourceVersion: (string) (len=4) "4388",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "2a0bd6ca3fcafd1bbc7b682d874d3974bfb8868b68f2781cd955642564364883",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.0.12/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.0.12/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605866,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 30 2e 31 32  5c 22 7d 22 3a 7b 22 2e  |.42.0.12\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-dzzh9",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-dzzh9",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-137",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605890,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605863,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.137",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.137"
        }
      },
      PodIP: (string) (len=10) "10.42.0.12",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.0.12"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605863,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855605889,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://6b7dd982e034ae534a7a10b9f775cee03a807fa5eefd0cca0295aefd6f4d4889",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.431233 21 deployment.go:67] Pod "webserver-deployment-77db57d8df-zhdjv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "webserver-deployment-77db57d8df-zhdjv",
      GenerateName: (string) (len=32) "webserver-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-1835",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e9676a2b-91d2-470a-b5be-a902ded0868d",
      ResourceVersion: (string) (len=4) "4480",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605894,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "webserver-deployment-77db57d8df",
          UID: (types.UID) (len=36) "f816bb7f-378d-4267-b09a-b0b7fde4ef27",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605894,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 38  31 36 62 62 37 66 2d 33  |d\":\"f816bb7f-3|
              00000090  37 38 64 2d 34 32 36 37  2d 62 30 39 61 2d 62 30  |78d-4267-b09a-b0|
              000000a0  62 37 66 64 65 34 65 66  32 37 5c 22 7d 22 3a 7b  |b7fde4ef27\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-hzqwh",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-hzqwh",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:18:15.433388 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-1835" for this suite. @ 07/03/24 12:18:15.874
• [32.635 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:69
  STEP: Creating a kubernetes client @ 07/03/24 12:18:16.124
  I0703 12:18:16.124442 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename subpath @ 07/03/24 12:18:16.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:18:16.839
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:18:17.007
  STEP: Setting up data @ 07/03/24 12:18:17.054
  STEP: Creating pod pod-subpath-test-configmap-tf7t @ 07/03/24 12:18:17.308
  STEP: Creating a pod to test atomic-volume-subpath @ 07/03/24 12:18:17.308
  STEP: Saw pod success @ 07/03/24 12:18:44.212
  I0703 12:18:44.218399 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-subpath-test-configmap-tf7t container test-container-subpath-configmap-tf7t: <nil>
  STEP: delete the pod @ 07/03/24 12:18:44.233
  STEP: Deleting pod pod-subpath-test-configmap-tf7t @ 07/03/24 12:18:44.281
  I0703 12:18:44.281078 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-tf7t" in namespace "subpath-2478"
  I0703 12:18:44.284374 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2478" for this suite. @ 07/03/24 12:18:44.29
• [28.173 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replicaset should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:144
  STEP: Creating a kubernetes client @ 07/03/24 12:18:44.297
  I0703 12:18:44.297823 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replicaset @ 07/03/24 12:18:44.299
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:18:44.345
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:18:44.371
  STEP: Creating replica set "test-rs" that asks for more than the allowed pod quota @ 07/03/24 12:18:44.383
  I0703 12:18:44.394391 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0703 12:18:49.431207 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/03/24 12:18:49.44
  STEP: getting scale subresource @ 07/03/24 12:18:49.44
  STEP: updating a scale subresource @ 07/03/24 12:18:49.503
  STEP: verifying the replicaset Spec.Replicas was modified @ 07/03/24 12:18:49.595
  STEP: Patch a scale subresource @ 07/03/24 12:18:49.662
  I0703 12:18:49.805332 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1967" for this suite. @ 07/03/24 12:18:49.856
• [5.618 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-instrumentation] Events API should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:207
  STEP: Creating a kubernetes client @ 07/03/24 12:18:49.916
  I0703 12:18:49.916769 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename events @ 07/03/24 12:18:49.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:18:50.068
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:18:50.086
  STEP: Create set of events @ 07/03/24 12:18:50.108
  STEP: get a list of Events with a label in the current namespace @ 07/03/24 12:18:50.199
  STEP: delete a list of events @ 07/03/24 12:18:50.214
  I0703 12:18:50.214255 21 events.go:224] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/03/24 12:18:50.299
  I0703 12:18:50.311118 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-8589" for this suite. @ 07/03/24 12:18:50.322
• [0.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny attaching pod [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:210
  STEP: Creating a kubernetes client @ 07/03/24 12:18:50.344
  I0703 12:18:50.344202 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:18:50.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:18:50.463
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:18:50.477
  STEP: Setting up server cert @ 07/03/24 12:18:50.746
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:18:51.834
  STEP: Deploying the webhook pod @ 07/03/24 12:18:51.843
  STEP: Wait for the deployment to be ready @ 07/03/24 12:18:51.861
  I0703 12:18:51.954681 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0703 12:18:53.973907 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 18, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:18:55.978108 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 18, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:18:57.979864 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 18, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 18, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:18:59.987
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:19:00.094
  I0703 12:19:01.096416 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/03/24 12:19:01.104
  STEP: create a pod @ 07/03/24 12:19:01.19
  STEP: 'kubectl attach' the pod, should be denied by the webhook @ 07/03/24 12:19:05.28
  I0703 12:19:05.281003 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=webhook-5744 attach --namespace=webhook-5744 to-be-attached-pod -i -c=container1'
  I0703 12:19:05.480109 21 builder.go:135] rc: 1
  I0703 12:19:05.640001 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5744" for this suite. @ 07/03/24 12:19:05.652
  STEP: Destroying namespace "webhook-markers-8567" for this suite. @ 07/03/24 12:19:05.688
• [15.373 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes volume on default medium should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:160
  STEP: Creating a kubernetes client @ 07/03/24 12:19:05.717
  I0703 12:19:05.717522 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 12:19:05.72
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:05.809
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:05.819
  STEP: Creating a pod to test emptydir volume type on node default medium @ 07/03/24 12:19:05.857
  STEP: Saw pod success @ 07/03/24 12:19:09.923
  I0703 12:19:09.929297 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-da26d3fa-b21e-4b60-8177-6b0129b3d7a1 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 12:19:09.947
  I0703 12:19:09.981250 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9449" for this suite. @ 07/03/24 12:19:09.998
• [4.297 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should allow expressions to refer variables. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:221
  STEP: Creating a kubernetes client @ 07/03/24 12:19:10.015
  I0703 12:19:10.015163 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/03/24 12:19:10.016
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:10.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:10.208
  STEP: creating a policy with variables @ 07/03/24 12:19:10.25
  STEP: waiting until the marker is denied @ 07/03/24 12:19:10.357
  STEP: testing a replicated Deployment to be allowed @ 07/03/24 12:19:11.478
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/03/24 12:19:11.567
  I0703 12:19:12.460359 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-8477" for this suite. @ 07/03/24 12:19:12.554
• [2.567 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:140
  STEP: Creating a kubernetes client @ 07/03/24 12:19:12.582
  I0703 12:19:12.582247 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 12:19:12.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:12.775
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:12.815
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/03/24 12:19:12.839
  STEP: Saw pod success @ 07/03/24 12:19:17.098
  I0703 12:19:17.102595 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-e63010a6-0bbb-465e-ba8f-2506a76a199c container test-container: <nil>
  STEP: delete the pod @ 07/03/24 12:19:17.127
  I0703 12:19:17.146115 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2487" for this suite. @ 07/03/24 12:19:17.155
• [4.581 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should verify changes to a daemon set status [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:875
  STEP: Creating a kubernetes client @ 07/03/24 12:19:17.164
  I0703 12:19:17.164511 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename daemonsets @ 07/03/24 12:19:17.165
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:17.243
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:17.251
  STEP: Creating simple DaemonSet "daemon-set" @ 07/03/24 12:19:17.354
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/03/24 12:19:17.364
  I0703 12:19:17.379862 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:19:17.380064 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:19:18.425787 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:19:18.426043 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:19:19.376965 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:19:19.377132 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:19:20.437594 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:19:20.437902 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  I0703 12:19:21.378810 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:19:21.379014 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  I0703 12:19:22.378126 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:19:22.378179 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  I0703 12:19:23.387110 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 12:19:23.387293 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Getting /status @ 07/03/24 12:19:23.391
  I0703 12:19:23.397874 21 daemon_set.go:912] Daemon Set daemon-set has Conditions: []
  STEP: updating the DaemonSet Status @ 07/03/24 12:19:23.398
  I0703 12:19:23.419440 21 daemon_set.go:932] updatedStatus.Conditions: []v1.DaemonSetCondition{v1.DaemonSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the daemon set status to be updated @ 07/03/24 12:19:23.419
  I0703 12:19:23.424953 21 daemon_set.go:957] Observed &DaemonSet event: ADDED
  I0703 12:19:23.425499 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.425927 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.426395 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.426713 21 daemon_set.go:957] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.426841 21 daemon_set.go:950] Found daemon set daemon-set in namespace daemonsets-9223 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0703 12:19:23.426956 21 daemon_set.go:961] Daemon set daemon-set has an updated status
  STEP: patching the DaemonSet Status @ 07/03/24 12:19:23.427
  STEP: watching for the daemon set status to be patched @ 07/03/24 12:19:23.466
  I0703 12:19:23.470765 21 daemon_set.go:1001] Observed &DaemonSet event: ADDED
  I0703 12:19:23.470898 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.470998 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.471200 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.471305 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.471477 21 daemon_set.go:997] Observed daemon set daemon-set in namespace daemonsets-9223 with annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0703 12:19:23.471611 21 daemon_set.go:1001] Observed &DaemonSet event: MODIFIED
  I0703 12:19:23.471640 21 daemon_set.go:994] Found daemon set daemon-set in namespace daemonsets-9223 with labels: map[daemonset-name:daemon-set] annotations: map[deprecated.daemonset.template.generation:1] & Conditions: [{StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }]
  I0703 12:19:23.471654 21 daemon_set.go:1005] Daemon set daemon-set has a patched status
  STEP: Deleting DaemonSet "daemon-set" @ 07/03/24 12:19:23.477
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-9223, will wait for the garbage collector to delete the pods @ 07/03/24 12:19:23.477
  I0703 12:19:23.568582 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 30.076696ms
  I0703 12:19:23.769201 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.612242ms
  I0703 12:19:28.179765 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:19:28.179816 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0703 12:19:28.184429 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"5440"},"items":null}

  I0703 12:19:28.188086 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"5440"},"items":null}

  I0703 12:19:28.213205 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-9223" for this suite. @ 07/03/24 12:19:28.225
• [11.096 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicyBinding API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:673
  STEP: Creating a kubernetes client @ 07/03/24 12:19:28.261
  I0703 12:19:28.261461 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/03/24 12:19:28.262
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:28.325
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:28.329
  STEP: getting /apis @ 07/03/24 12:19:28.38
  STEP: getting /apis/admissionregistration.k8s.io @ 07/03/24 12:19:28.386
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/03/24 12:19:28.392
  STEP: creating @ 07/03/24 12:19:28.393
  STEP: getting @ 07/03/24 12:19:28.425
  STEP: listing @ 07/03/24 12:19:28.437
  STEP: watching @ 07/03/24 12:19:28.441
  I0703 12:19:28.441507 21 validatingadmissionpolicy.go:768] starting watch
  STEP: patching @ 07/03/24 12:19:28.443
  STEP: updating @ 07/03/24 12:19:28.457
  I0703 12:19:28.488827 21 validatingadmissionpolicy.go:796] waiting for watch events with expected annotations
  STEP: deleting @ 07/03/24 12:19:28.49
  STEP: deleting a collection @ 07/03/24 12:19:28.564
  I0703 12:19:28.603376 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-577" for this suite. @ 07/03/24 12:19:28.615
• [0.372 seconds]
------------------------------
SSS
------------------------------
[sig-node] Kubelet when scheduling an agnhost Pod with hostAliases should write entries to /etc/hosts [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:147
  STEP: Creating a kubernetes client @ 07/03/24 12:19:28.634
  I0703 12:19:28.634229 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubelet-test @ 07/03/24 12:19:28.635
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:28.761
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:28.793
  STEP: Waiting for pod completion @ 07/03/24 12:19:28.83
  I0703 12:19:32.872418 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-3129" for this suite. @ 07/03/24 12:19:32.88
• [4.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:237
  STEP: Creating a kubernetes client @ 07/03/24 12:19:32.903
  I0703 12:19:32.904060 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 12:19:32.905
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:33.02
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:33.03
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:19:33.043
  STEP: Saw pod success @ 07/03/24 12:19:39.138
  I0703 12:19:39.148997 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-611f8792-c6d0-4d51-93a5-7a83003b39e4 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:19:39.17
  I0703 12:19:39.210980 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6809" for this suite. @ 07/03/24 12:19:39.221
• [6.332 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply a valid CR for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:168
  STEP: Creating a kubernetes client @ 07/03/24 12:19:39.236
  I0703 12:19:39.236419 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename field-validation @ 07/03/24 12:19:39.237
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:39.372
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:39.398
  I0703 12:19:39.438495 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  W0703 12:19:42.038204      21 warnings.go:70] unknown field "alpha"
  W0703 12:19:42.038390      21 warnings.go:70] unknown field "beta"
  W0703 12:19:42.038513      21 warnings.go:70] unknown field "delta"
  W0703 12:19:42.038675      21 warnings.go:70] unknown field "epsilon"
  W0703 12:19:42.038769      21 warnings.go:70] unknown field "gamma"
  I0703 12:19:42.788643 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-3390" for this suite. @ 07/03/24 12:19:42.809
• [3.597 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should adopt matching pods on creation [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:95
  STEP: Creating a kubernetes client @ 07/03/24 12:19:42.833
  I0703 12:19:42.833479 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replication-controller @ 07/03/24 12:19:42.836
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:43.116
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:43.154
  STEP: Given a Pod with a 'name' label pod-adoption is created @ 07/03/24 12:19:43.17
  STEP: When a replication controller with a matching selector is created @ 07/03/24 12:19:47.44
  STEP: Then the orphan pod is adopted @ 07/03/24 12:19:47.515
  I0703 12:19:48.616724 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-6425" for this suite. @ 07/03/24 12:19:48.62
• [5.798 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be able to mount in a volume regardless of a different secret existing with same name in different namespace [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:99
  STEP: Creating a kubernetes client @ 07/03/24 12:19:48.632
  I0703 12:19:48.632808 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 12:19:48.633
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:48.675
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:48.684
  STEP: Creating secret with name secret-test-423a82bb-9d93-47c8-ad74-f9a7bacdffdb @ 07/03/24 12:19:48.757
  STEP: Creating a pod to test consume secrets @ 07/03/24 12:19:48.769
  STEP: Saw pod success @ 07/03/24 12:19:52.803
  I0703 12:19:52.806532 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-5712981b-2c95-418e-a3d8-be71c66d7d3e container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 12:19:52.821
  I0703 12:19:52.847694 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8855" for this suite. @ 07/03/24 12:19:52.853
  STEP: Destroying namespace "secret-namespace-7446" for this suite. @ 07/03/24 12:19:52.862
• [4.282 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Deployment RecreateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:113
  STEP: Creating a kubernetes client @ 07/03/24 12:19:52.915
  I0703 12:19:52.915686 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 12:19:52.916
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:52.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:53.007
  I0703 12:19:53.012509 21 deployment.go:792] Creating deployment "test-recreate-deployment"
  I0703 12:19:53.019974 21 deployment.go:798] Waiting deployment "test-recreate-deployment" to be updated to revision 1
  I0703 12:19:53.042681 21 deployment.go:222] deployment "test-recreate-deployment" doesn't have the required revision set
  I0703 12:19:55.052079 21 deployment.go:802] Waiting deployment "test-recreate-deployment" to complete
  I0703 12:19:55.057028 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 19, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 19, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 19, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 19, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-recreate-deployment-6b6d9cd7b6\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:19:57.066185 21 deployment.go:807] Triggering a new rollout for deployment "test-recreate-deployment"
  I0703 12:19:57.087685 21 deployment.go:313] Updating deployment test-recreate-deployment
  I0703 12:19:57.087856 21 deployment.go:814] Watching deployment "test-recreate-deployment" to verify that new pods will not run with olds pods
  I0703 12:19:57.409152 21 deployment.go:633] Deployment "test-recreate-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-recreate-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4088",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "87761ace-47a1-493d-b459-4f6751df999d",
      ResourceVersion: (string) (len=4) "5759",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605993,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=570) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |":{"f:type":{}},|
              000000b0  22 66 3a 74 65 6d 70 6c  61 74 65 22 3a 7b 22 66  |"f:template":{"f|
              000000c0  3a 6d 65 74 61 64 61 74  61 22 3a 7b 22 66 3a 6c  |:metadata":{"f:l|
              000000d0  61 62 65 6c 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |abels":{".":{},"|
              000000e0  66 3a 6e 61 6d 65 22 3a  7b 7d 7d 7d 2c 22 66 3a  |f:name":{}}},"f:|
              000000f0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              00000100  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              00000110  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              00000120  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000130  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000140  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000150  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000160  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000170  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000180  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000190  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              000001a0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000001b0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000001c0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000001d0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000001e0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000001f0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              00000200  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000210  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000220  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000230  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=495) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 63 6f 6e 64 69 74 69  6f 6e 73 22 3a 7b 22 2e  |:conditions":{".|
              00000070  22 3a 7b 7d 2c 22 6b 3a  7b 5c 22 74 79 70 65 5c  |":{},"k:{\"type\|
              00000080  22 3a 5c 22 41 76 61 69  6c 61 62 6c 65 5c 22 7d  |":\"Available\"}|
              00000090  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |":{".":{},"f:las|
              000000a0  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              000000b0  3a 7b 7d 2c 22 66 3a 6c  61 73 74 55 70 64 61 74  |:{},"f:lastUpdat|
              000000c0  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6d 65 73  |eTime":{},"f:mes|
              000000d0  73 61 67 65 22 3a 7b 7d  2c 22 66 3a 72 65 61 73  |sage":{},"f:reas|
              000000e0  6f 6e 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |on":{},"f:status|
              000000f0  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000100  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000110  22 50 72 6f 67 72 65 73  73 69 6e 67 5c 22 7d 22  |"Progressing\"}"|
              00000120  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              00000130  54 72 61 6e 73 69 74 69  6f 6e 54 69 6d 65 22 3a  |TransitionTime":|
              00000140  7b 7d 2c 22 66 3a 6c 61  73 74 55 70 64 61 74 65  |{},"f:lastUpdate|
              00000150  54 69 6d 65 22 3a 7b 7d  2c 22 66 3a 6d 65 73 73  |Time":{},"f:mess|
              00000160  61 67 65 22 3a 7b 7d 2c  22 66 3a 72 65 61 73 6f  |age":{},"f:reaso|
              00000170  6e 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |n":{},"f:status"|
              00000180  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000190  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              000001a0  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              000001b0  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 75  |eplicas":{},"f:u|
              000001c0  6e 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |navailableReplic|
              000001d0  61 73 22 3a 7b 7d 2c 22  66 3a 75 70 64 61 74 65  |as":{},"f:update|
              000001e0  64 52 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 7d     |dReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=8) "Recreate",
        RollingUpdate: (*v1.RollingUpdateDeployment)(<nil>)
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 1,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=26) "MinimumReplicasUnavailable",
          Message: (string) (len=46) "Deployment does not have minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605993,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=17) "ReplicaSetUpdated",
          Message: (string) (len=64) "ReplicaSet \"test-recreate-deployment-66b65d9f8f\" is progressing."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0703 12:19:57.429050 21 deployment.go:39] New ReplicaSet "test-recreate-deployment-66b65d9f8f" of Deployment "test-recreate-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4088",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "e7bf518e-b937-4512-a889-2b6ea537794f",
      ResourceVersion: (string) (len=4) "5756",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605997,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "87761ace-47a1-493d-b459-4f6751df999d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 37 37 36 31 61  63 65 2d 34 37 61 31 2d  |\"87761ace-47a1-|
              00000120  34 39 33 64 2d 62 34 35  39 2d 34 66 36 37 35 31  |493d-b459-4f6751|
              00000130  64 66 39 39 39 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |df999d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=84) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  66 75 6c 6c 79 4c 61 62  65 6c 65 64 52 65 70 6c  |fullyLabeledRepl|
              00000020  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |icas":{},"f:obse|
              00000030  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              00000040  7b 7d 2c 22 66 3a 72 65  70 6c 69 63 61 73 22 3a  |{},"f:replicas":|
              00000050  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 12:19:57.432088 21 deployment.go:44] All old ReplicaSets of Deployment "test-recreate-deployment":
  I0703 12:19:57.432588 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-recreate-deployment-6b6d9cd7b6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-4088",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6138bd4b-d46f-435a-b940-ff223c8c877c",
      ResourceVersion: (string) (len=4) "5746",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605993,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "1",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-recreate-deployment",
          UID: (types.UID) (len=36) "87761ace-47a1-493d-b459-4f6751df999d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 38 37 37 36 31 61  63 65 2d 34 37 61 31 2d  |\"87761ace-47a1-|
              00000120  34 39 33 64 2d 62 34 35  39 2d 34 66 36 37 35 31  |493d-b459-4f6751|
              00000130  64 66 39 39 39 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |df999d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "sample-pod-3",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "sample-pod-3",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b6d9cd7b6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 12:19:57.439646 21 deployment.go:67] Pod "test-recreate-deployment-66b65d9f8f-n5htx" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-recreate-deployment-66b65d9f8f-n5htx",
      GenerateName: (string) (len=36) "test-recreate-deployment-66b65d9f8f-",
      Namespace: (string) (len=15) "deployment-4088",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ca75c9e5-3c9e-4b4f-a82b-f3516a0e98fb",
      ResourceVersion: (string) (len=4) "5758",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605997,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "sample-pod-3",
        (string) (len=17) "pod-template-hash": (string) (len=10) "66b65d9f8f"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-recreate-deployment-66b65d9f8f",
          UID: (types.UID) (len=36) "e7bf518e-b937-4512-a889-2b6ea537794f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 65 37  62 66 35 31 38 65 2d 62  |d\":\"e7bf518e-b|
              00000090  39 33 37 2d 34 35 31 32  2d 61 38 38 39 2d 32 62  |937-4512-a889-2b|
              000000a0  36 65 61 35 33 37 37 39  34 66 5c 22 7d 22 3a 7b  |6ea537794f\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-4fljr",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-4fljr",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855605997,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855605997,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:19:57.445822 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-4088" for this suite. @ 07/03/24 12:19:57.453
• [4.555 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:137
  STEP: Creating a kubernetes client @ 07/03/24 12:19:57.474
  I0703 12:19:57.474864 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/03/24 12:19:57.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:19:57.564
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:19:57.59
  STEP: create the container to handle the HTTPGet hook request. @ 07/03/24 12:19:57.626
  STEP: create the pod with lifecycle hook @ 07/03/24 12:20:13.824
  STEP: check poststart hook @ 07/03/24 12:20:23.952
  STEP: delete the pod with lifecycle hook @ 07/03/24 12:20:23.983
  I0703 12:20:26.026800 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-2713" for this suite. @ 07/03/24 12:20:26.031
• [28.566 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl run pod should create a pod from an image when restart is Never [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1759
  STEP: Creating a kubernetes client @ 07/03/24 12:20:26.038
  I0703 12:20:26.038549 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 12:20:26.039
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:20:26.067
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:20:26.1
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/03/24 12:20:26.115
  I0703 12:20:26.115986 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-3746 run e2e-test-httpd-pod --restart=Never --pod-running-timeout=2m0s --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4'
  I0703 12:20:26.271561 21 builder.go:146] stderr: ""
  I0703 12:20:26.271611 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/03/24 12:20:26.271
  I0703 12:20:26.290724 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-3746 delete pods e2e-test-httpd-pod'
  I0703 12:20:29.325534 21 builder.go:146] stderr: ""
  I0703 12:20:29.325579 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0703 12:20:29.325684 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3746" for this suite. @ 07/03/24 12:20:29.331
• [3.302 seconds]
------------------------------
S
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers if init containers fail on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:335
  STEP: Creating a kubernetes client @ 07/03/24 12:20:29.34
  I0703 12:20:29.340415 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename init-container @ 07/03/24 12:20:29.341
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:20:29.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:20:29.439
  STEP: creating the pod @ 07/03/24 12:20:29.451
  I0703 12:20:29.451533 21 init_container.go:374] PodSpec: initContainers in spec.initContainers
  I0703 12:21:17.584132 21 init_container.go:432] init container has failed twice: &v1.Pod{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"pod-init-18d63cf9-b853-4463-a0ae-01ba0254d3f4", GenerateName:"", Namespace:"init-container-1768", SelfLink:"", UID:"a9d2a670-3de0-4b94-883d-ad0568cf133f", ResourceVersion:"6089", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 12, 20, 29, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"name":"foo", "time":"451517152"}, Annotations:map[string]string{"cni.projectcalico.org/containerID":"e25002c65ef68f129efde14f2d5085f6e43241bc63c124bf1bd55352ed7f070b", "cni.projectcalico.org/podIP":"10.42.1.38/32", "cni.projectcalico.org/podIPs":"10.42.1.38/32"}, OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 12, 20, 29, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e35b90), Subresource:""}, v1.ManagedFieldsEntry{Manager:"calico", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 12, 20, 30, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e35bf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kubelet", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 12, 21, 17, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc000e35c38), Subresource:"status"}}}, Spec:v1.PodSpec{Volumes:[]v1.Volume{v1.Volume{Name:"kube-api-access-clkr8", VolumeSource:v1.VolumeSource{HostPath:(*v1.HostPathVolumeSource)(nil), EmptyDir:(*v1.EmptyDirVolumeSource)(nil), GCEPersistentDisk:(*v1.GCEPersistentDiskVolumeSource)(nil), AWSElasticBlockStore:(*v1.AWSElasticBlockStoreVolumeSource)(nil), GitRepo:(*v1.GitRepoVolumeSource)(nil), Secret:(*v1.SecretVolumeSource)(nil), NFS:(*v1.NFSVolumeSource)(nil), ISCSI:(*v1.ISCSIVolumeSource)(nil), Glusterfs:(*v1.GlusterfsVolumeSource)(nil), PersistentVolumeClaim:(*v1.PersistentVolumeClaimVolumeSource)(nil), RBD:(*v1.RBDVolumeSource)(nil), FlexVolume:(*v1.FlexVolumeSource)(nil), Cinder:(*v1.CinderVolumeSource)(nil), CephFS:(*v1.CephFSVolumeSource)(nil), Flocker:(*v1.FlockerVolumeSource)(nil), DownwardAPI:(*v1.DownwardAPIVolumeSource)(nil), FC:(*v1.FCVolumeSource)(nil), AzureFile:(*v1.AzureFileVolumeSource)(nil), ConfigMap:(*v1.ConfigMapVolumeSource)(nil), VsphereVolume:(*v1.VsphereVirtualDiskVolumeSource)(nil), Quobyte:(*v1.QuobyteVolumeSource)(nil), AzureDisk:(*v1.AzureDiskVolumeSource)(nil), PhotonPersistentDisk:(*v1.PhotonPersistentDiskVolumeSource)(nil), Projected:(*v1.ProjectedVolumeSource)(0xc00461eb20), PortworxVolume:(*v1.PortworxVolumeSource)(nil), ScaleIO:(*v1.ScaleIOVolumeSource)(nil), StorageOS:(*v1.StorageOSVolumeSource)(nil), CSI:(*v1.CSIVolumeSource)(nil), Ephemeral:(*v1.EphemeralVolumeSource)(nil)}}}, InitContainers:[]v1.Container{v1.Container{Name:"init1", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/false"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-clkr8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}, v1.Container{Name:"init2", Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", Command:[]string{"/bin/true"}, Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList(nil), Requests:v1.ResourceList(nil), Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-clkr8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, Containers:[]v1.Container{v1.Container{Name:"run1", Image:"registry.k8s.io/pause:3.9", Command:[]string(nil), Args:[]string(nil), WorkingDir:"", Ports:[]v1.ContainerPort(nil), EnvFrom:[]v1.EnvFromSource(nil), Env:[]v1.EnvVar(nil), Resources:v1.ResourceRequirements{Limits:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Requests:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:100, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"100m", Format:"DecimalSI"}}, Claims:[]v1.ResourceClaim(nil)}, ResizePolicy:[]v1.ContainerResizePolicy(nil), RestartPolicy:(*v1.ContainerRestartPolicy)(nil), VolumeMounts:[]v1.VolumeMount{v1.VolumeMount{Name:"kube-api-access-clkr8", ReadOnly:true, RecursiveReadOnly:(*v1.RecursiveReadOnlyMode)(nil), MountPath:"/var/run/secrets/kubernetes.io/serviceaccount", SubPath:"", MountPropagation:(*v1.MountPropagationMode)(nil), SubPathExpr:""}}, VolumeDevices:[]v1.VolumeDevice(nil), LivenessProbe:(*v1.Probe)(nil), ReadinessProbe:(*v1.Probe)(nil), StartupProbe:(*v1.Probe)(nil), Lifecycle:(*v1.Lifecycle)(nil), TerminationMessagePath:"/dev/termination-log", TerminationMessagePolicy:"File", ImagePullPolicy:"IfNotPresent", SecurityContext:(*v1.SecurityContext)(nil), Stdin:false, StdinOnce:false, TTY:false}}, EphemeralContainers:[]v1.EphemeralContainer(nil), RestartPolicy:"Always", TerminationGracePeriodSeconds:(*int64)(0xc002360698), ActiveDeadlineSeconds:(*int64)(nil), DNSPolicy:"ClusterFirst", NodeSelector:map[string]string(nil), ServiceAccountName:"default", DeprecatedServiceAccount:"default", AutomountServiceAccountToken:(*bool)(nil), NodeName:"ip-172-31-5-183", HostNetwork:false, HostPID:false, HostIPC:false, ShareProcessNamespace:(*bool)(nil), SecurityContext:(*v1.PodSecurityContext)(0xc001203d00), ImagePullSecrets:[]v1.LocalObjectReference(nil), Hostname:"", Subdomain:"", Affinity:(*v1.Affinity)(nil), SchedulerName:"default-scheduler", Tolerations:[]v1.Toleration{v1.Toleration{Key:"node.kubernetes.io/not-ready", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002360720)}, v1.Toleration{Key:"node.kubernetes.io/unreachable", Operator:"Exists", Value:"", Effect:"NoExecute", TolerationSeconds:(*int64)(0xc002360740)}}, HostAliases:[]v1.HostAlias(nil), PriorityClassName:"", Priority:(*int32)(0xc002360748), DNSConfig:(*v1.PodDNSConfig)(nil), ReadinessGates:[]v1.PodReadinessGate(nil), RuntimeClassName:(*string)(nil), EnableServiceLinks:(*bool)(0xc00236074c), PreemptionPolicy:(*v1.PreemptionPolicy)(0xc004690870), Overhead:v1.ResourceList(nil), TopologySpreadConstraints:[]v1.TopologySpreadConstraint(nil), SetHostnameAsFQDN:(*bool)(nil), OS:(*v1.PodOS)(nil), HostUsers:(*bool)(nil), SchedulingGates:[]v1.PodSchedulingGate(nil), ResourceClaims:[]v1.PodResourceClaim(nil)}, Status:v1.PodStatus{Phase:"Pending", Conditions:[]v1.PodCondition{v1.PodCondition{Type:"PodReadyToStartContainers", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 3, 12, 20, 31, 0, time.Local), Reason:"", Message:""}, v1.PodCondition{Type:"Initialized", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 3, 12, 20, 29, 0, time.Local), Reason:"ContainersNotInitialized", Message:"containers with incomplete status: [init1 init2]"}, v1.PodCondition{Type:"Ready", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 3, 12, 20, 29, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"ContainersReady", Status:"False", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 3, 12, 20, 29, 0, time.Local), Reason:"ContainersNotReady", Message:"containers with unready status: [run1]"}, v1.PodCondition{Type:"PodScheduled", Status:"True", LastProbeTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(2024, time.July, 3, 12, 20, 29, 0, time.Local), Reason:"", Message:""}}, Message:"", Reason:"", NominatedNodeName:"", HostIP:"172.31.5.183", HostIPs:[]v1.HostIP{v1.HostIP{IP:"172.31.5.183"}}, PodIP:"10.42.1.38", PodIPs:[]v1.PodIP{v1.PodIP{IP:"10.42.1.38"}}, StartTime:time.Date(2024, time.July, 3, 12, 20, 29, 0, time.Local), InitContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"init1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002e7340)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(0xc0002e73b0)}, Ready:false, RestartCount:3, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"docker-pullable://registry.k8s.io/e2e-test-images/busybox@sha256:a9155b13325b2abef48e71de77bb8ac015412a566829f621d06bfae5c699b1b9", ContainerID:"docker://25a37e11a68dca00639f90d8f4ab7463733181bba5851730d4119241880c10cf", Started:(*bool)(0xc0023607ea), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}, v1.ContainerStatus{Name:"init2", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00461eb80), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/e2e-test-images/busybox:1.36.1-1", ImageID:"", ContainerID:"", Started:(*bool)(0xc0023607ff), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, ContainerStatuses:[]v1.ContainerStatus{v1.ContainerStatus{Name:"run1", State:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(0xc00461eb60), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, LastTerminationState:v1.ContainerState{Waiting:(*v1.ContainerStateWaiting)(nil), Running:(*v1.ContainerStateRunning)(nil), Terminated:(*v1.ContainerStateTerminated)(nil)}, Ready:false, RestartCount:0, Image:"registry.k8s.io/pause:3.9", ImageID:"", ContainerID:"", Started:(*bool)(0xc0023607cf), AllocatedResources:v1.ResourceList(nil), Resources:(*v1.ResourceRequirements)(nil), VolumeMounts:[]v1.VolumeMountStatus(nil)}}, QOSClass:"Burstable", EphemeralContainerStatuses:[]v1.ContainerStatus(nil), Resize:"", ResourceClaimStatuses:[]v1.PodResourceClaimStatus(nil)}}
  I0703 12:21:17.584590 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1768" for this suite. @ 07/03/24 12:21:17.602
• [48.276 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet Replace and Patch tests [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:155
  STEP: Creating a kubernetes client @ 07/03/24 12:21:17.619
  I0703 12:21:17.619556 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replicaset @ 07/03/24 12:21:17.62
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:21:17.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:21:17.786
  I0703 12:21:17.964691 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  I0703 12:21:22.969620 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/03/24 12:21:22.969
  STEP: Scaling up "test-rs" replicaset @ 07/03/24 12:21:22.969
  I0703 12:21:22.980033 21 replicaset.go:44] Updating replica set "test-rs"
  STEP: patching the ReplicaSet @ 07/03/24 12:21:22.98
  I0703 12:21:23.030732 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1074 with ReadyReplicas 1, AvailableReplicas 1
  I0703 12:21:23.052853 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1074 with ReadyReplicas 1, AvailableReplicas 1
  I0703 12:21:23.114671 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1074 with ReadyReplicas 1, AvailableReplicas 1
  I0703 12:21:23.149968 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1074 with ReadyReplicas 1, AvailableReplicas 1
  I0703 12:21:24.539442 21 replica_set.go:542] observed ReplicaSet test-rs in namespace replicaset-1074 with ReadyReplicas 2, AvailableReplicas 2
  I0703 12:21:28.227685 21 replica_set.go:545] observed Replicaset test-rs in namespace replicaset-1074 with ReadyReplicas 3 found true
  I0703 12:21:28.228318 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-1074" for this suite. @ 07/03/24 12:21:28.232
• [10.631 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-instrumentation] Events should delete a collection of events [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:176
  STEP: Creating a kubernetes client @ 07/03/24 12:21:28.266
  I0703 12:21:28.266933 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename events @ 07/03/24 12:21:28.275
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:21:28.347
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:21:28.361
  STEP: Create set of events @ 07/03/24 12:21:28.368
  I0703 12:21:28.389700 21 core_events.go:198] created test-event-1
  I0703 12:21:28.401712 21 core_events.go:198] created test-event-2
  I0703 12:21:28.424852 21 core_events.go:198] created test-event-3
  STEP: get a list of Events with a label in the current namespace @ 07/03/24 12:21:28.425
  STEP: delete collection of events @ 07/03/24 12:21:28.444
  I0703 12:21:28.444877 21 core_events.go:213] requesting DeleteCollection of events
  STEP: check that the list of events matches the requested quantity @ 07/03/24 12:21:28.556
  I0703 12:21:28.557117 21 core_events.go:230] requesting list of events to confirm quantity
  I0703 12:21:28.573358 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-7818" for this suite. @ 07/03/24 12:21:28.604
• [0.364 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with readOnlyRootFilesystem should run the container with writable rootfs when readOnlyRootFilesystem=false [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:489
  STEP: Creating a kubernetes client @ 07/03/24 12:21:28.631
  I0703 12:21:28.631669 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename security-context-test @ 07/03/24 12:21:28.632
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:21:28.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:21:28.898
  I0703 12:21:33.125081 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4446" for this suite. @ 07/03/24 12:21:33.13
• [4.510 seconds]
------------------------------
SS
------------------------------
[sig-auth] ServiceAccounts should update a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:810
  STEP: Creating a kubernetes client @ 07/03/24 12:21:33.156
  I0703 12:21:33.156309 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svcaccounts @ 07/03/24 12:21:33.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:21:33.227
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:21:33.233
  STEP: Creating ServiceAccount "e2e-sa-7bwl8"  @ 07/03/24 12:21:33.242
  I0703 12:21:33.286954 21 service_accounts.go:825] AutomountServiceAccountToken: false
  STEP: Updating ServiceAccount "e2e-sa-7bwl8"  @ 07/03/24 12:21:33.288
  I0703 12:21:33.345048 21 service_accounts.go:839] AutomountServiceAccountToken: true
  I0703 12:21:33.345390 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4393" for this suite. @ 07/03/24 12:21:33.373
• [0.254 seconds]
------------------------------
S
------------------------------
[sig-storage] ConfigMap binary data should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:176
  STEP: Creating a kubernetes client @ 07/03/24 12:21:33.42
  I0703 12:21:33.420343 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 12:21:33.431
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:21:33.655
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:21:33.705
  STEP: Creating configMap with name configmap-test-upd-23ccd032-7495-444b-9e04-b606d793050d @ 07/03/24 12:21:33.729
  STEP: Creating the pod @ 07/03/24 12:21:33.76
  STEP: Waiting for pod with text data @ 07/03/24 12:21:37.934
  STEP: Waiting for pod with binary data @ 07/03/24 12:21:37.97
  I0703 12:21:37.981273 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9801" for this suite. @ 07/03/24 12:21:37.985
• [4.576 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should delete old replica sets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:122
  STEP: Creating a kubernetes client @ 07/03/24 12:21:37.996
  I0703 12:21:37.997572 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 12:21:37.998
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:21:38.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:21:38.027
  I0703 12:21:38.046028 21 resource.go:87] Pod name cleanup-pod: Found 0 pods out of 1
  I0703 12:21:43.060167 21 resource.go:87] Pod name cleanup-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/03/24 12:21:43.06
  I0703 12:21:43.060437 21 deployment.go:841] Creating deployment test-cleanup-deployment
  STEP: Waiting for deployment test-cleanup-deployment history to be cleaned up @ 07/03/24 12:21:43.078
  I0703 12:21:43.114609 21 deployment.go:633] Deployment "test-cleanup-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d5b9db4a-ebc7-4480-90fc-6b8511b674d5",
      ResourceVersion: (string) (len=4) "6365",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(0),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 0,
      Replicas: (int32) 0,
      UpdatedReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) <nil>,
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0703 12:21:43.157835 21 deployment.go:39] New ReplicaSet "test-cleanup-deployment-7c4d497584" of Deployment "test-cleanup-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "abaf8d9f-ca7a-4049-a39d-16826e1f7994",
      ResourceVersion: (string) (len=4) "6367",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d5b9db4a-ebc7-4480-90fc-6b8511b674d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 35 62 39 64 62  34 61 2d 65 62 63 37 2d  |\"d5b9db4a-ebc7-|
              00000120  34 34 38 30 2d 39 30 66  63 2d 36 62 38 35 31 31  |4480-90fc-6b8511|
              00000130  62 36 37 34 64 35 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |b674d5\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 0,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 12:21:43.159577 21 deployment.go:44] All old ReplicaSets of Deployment "test-cleanup-deployment":
  I0703 12:21:43.160011 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=23) "test-cleanup-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fba4b4f-58cc-44a0-906c-ec40b58a171f",
      ResourceVersion: (string) (len=4) "6366",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=23) "test-cleanup-deployment",
          UID: (types.UID) (len=36) "d5b9db4a-ebc7-4480-90fc-6b8511b674d5",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=483) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000050  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000060  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000070  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000080  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000090  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              000000a0  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000b0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000c0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000d0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000e0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000f0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000100  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000110  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000120  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000130  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000140  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000160  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000170  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000180  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000190  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000001a0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001b0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001c0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001d0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001e0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=103) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000020  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              00000030  22 75 69 64 5c 22 3a 5c  22 64 35 62 39 64 62 34  |"uid\":\"d5b9db4|
              00000040  61 2d 65 62 63 37 2d 34  34 38 30 2d 39 30 66 63  |a-ebc7-4480-90fc|
              00000050  2d 36 62 38 35 31 31 62  36 37 34 64 35 5c 22 7d  |-6b8511b674d5\"}|
              00000060  22 3a 7b 7d 7d 7d 7d                              |":{}}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=11) "cleanup-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=11) "cleanup-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 12:21:43.185630 21 deployment.go:67] Pod "test-cleanup-controller-bb5w4" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=29) "test-cleanup-controller-bb5w4",
      GenerateName: (string) (len=24) "test-cleanup-controller-",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "6938ff58-e973-43ae-bfc5-e89325b2bd7e",
      ResourceVersion: (string) (len=4) "6353",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=3) "pod": (string) (len=5) "httpd",
        (string) (len=4) "name": (string) (len=11) "cleanup-pod"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "97d1f1e029ef7e0010fa49cb96323b594cde12fab4be5d1edf1c0d289a671978",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.18/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.18/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=23) "test-cleanup-controller",
          UID: (types.UID) (len=36) "2fba4b4f-58cc-44a0-906c-ec40b58a171f",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=500) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 2c 22 66  |},"f:pod":{}},"f|
              00000050  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000060  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000070  75 69 64 5c 22 3a 5c 22  32 66 62 61 34 62 34 66  |uid\":\"2fba4b4f|
              00000080  2d 35 38 63 63 2d 34 34  61 30 2d 39 30 36 63 2d  |-58cc-44a0-906c-|
              00000090  65 63 34 30 62 35 38 61  31 37 31 66 5c 22 7d 22  |ec40b58a171f\"}"|
              000000a0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000b0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000c0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              000000d0  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              000000e0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              000000f0  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000100  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000110  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000120  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000130  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000140  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000150  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000160  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              00000170  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              00000180  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              00000190  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001a0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001b0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001c0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              000001d0  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              000001e0  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              000001f0  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 31 38  5c 22 7d 22 3a 7b 22 2e  |.42.2.18\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-kvx2w",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-kvx2w",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)(<nil>),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606099,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606098,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) (len=10) "10.42.2.18",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.18"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606098,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855606099,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://86c33b47f1ee568c067cb7ed830237ff95bf13875d985448f1be0303d5308f97",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:21:43.190637 21 deployment.go:67] Pod "test-cleanup-deployment-7c4d497584-rwzfz" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=40) "test-cleanup-deployment-7c4d497584-rwzfz",
      GenerateName: (string) (len=35) "test-cleanup-deployment-7c4d497584-",
      Namespace: (string) (len=14) "deployment-590",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "073d213b-8288-47c1-a07c-aa9d4849911a",
      ResourceVersion: (string) (len=4) "6368",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606103,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=11) "cleanup-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "7c4d497584"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=34) "test-cleanup-deployment-7c4d497584",
          UID: (types.UID) (len=36) "abaf8d9f-ca7a-4049-a39d-16826e1f7994",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=1) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606103,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 61 62  61 66 38 64 39 66 2d 63  |d\":\"abaf8d9f-c|
              00000090  61 37 61 2d 34 30 34 39  2d 61 33 39 64 2d 31 36  |a7a-4049-a39d-16|
              000000a0  38 32 36 65 31 66 37 39  39 34 5c 22 7d 22 3a 7b  |826e1f7994\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6pwb4",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6pwb4",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) "",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) <nil>,
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) "",
      HostIPs: ([]v1.HostIP) <nil>,
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)(<nil>),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) <nil>,
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:21:43.191986 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-590" for this suite. @ 07/03/24 12:21:43.233
• [5.269 seconds]
------------------------------
SS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates basic preemption works [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:130
  STEP: Creating a kubernetes client @ 07/03/24 12:21:43.265
  I0703 12:21:43.265078 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-preemption @ 07/03/24 12:21:43.266
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:21:43.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:21:43.365
  I0703 12:21:43.571864 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0703 12:22:43.577679 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/03/24 12:22:43.581
  I0703 12:22:43.654402 21 preemption.go:178] Created pod: pod0-0-sched-preemption-low-priority
  I0703 12:22:43.718180 21 preemption.go:178] Created pod: pod0-1-sched-preemption-medium-priority
  I0703 12:22:43.997186 21 preemption.go:178] Created pod: pod1-0-sched-preemption-medium-priority
  I0703 12:22:44.124407 21 preemption.go:178] Created pod: pod1-1-sched-preemption-medium-priority
  I0703 12:22:44.384409 21 preemption.go:178] Created pod: pod2-0-sched-preemption-medium-priority
  I0703 12:22:44.409056 21 preemption.go:178] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/03/24 12:22:44.409
  STEP: Run a high priority pod that has same requirements as that of lower priority pod @ 07/03/24 12:22:50.557
  I0703 12:22:56.750209 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-7484" for this suite. @ 07/03/24 12:22:56.754
• [73.509 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Lease lease API should be available [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lease.go:73
  STEP: Creating a kubernetes client @ 07/03/24 12:22:56.774
  I0703 12:22:56.774871 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename lease-test @ 07/03/24 12:22:56.775
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:22:56.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:22:56.886
  I0703 12:22:57.315720 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "lease-test-5489" for this suite. @ 07/03/24 12:22:57.321
• [0.570 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:205
  STEP: Creating a kubernetes client @ 07/03/24 12:22:57.355
  I0703 12:22:57.355786 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 12:22:57.357
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:22:57.413
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:22:57.426
  STEP: Creating secret with name s-test-opt-del-732c5c53-a1ce-4896-8b3e-720756034cde @ 07/03/24 12:22:57.468
  STEP: Creating secret with name s-test-opt-upd-3422bcc6-562b-48c0-b594-52f03c7ea0db @ 07/03/24 12:22:57.492
  STEP: Creating the pod @ 07/03/24 12:22:57.545
  STEP: Deleting secret s-test-opt-del-732c5c53-a1ce-4896-8b3e-720756034cde @ 07/03/24 12:23:01.763
  STEP: Updating secret s-test-opt-upd-3422bcc6-562b-48c0-b594-52f03c7ea0db @ 07/03/24 12:23:01.809
  STEP: Creating secret with name s-test-opt-create-9e621a1a-2f64-4b13-b2a3-da0f02312069 @ 07/03/24 12:23:01.881
  STEP: waiting to observe update in volume @ 07/03/24 12:23:01.941
  I0703 12:24:28.990816 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2713" for this suite. @ 07/03/24 12:24:28.995
• [91.652 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 should proxy through a service and a pod [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:101
  STEP: Creating a kubernetes client @ 07/03/24 12:24:29.012
  I0703 12:24:29.012926 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename proxy @ 07/03/24 12:24:29.014
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:29.048
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:29.065
  STEP: starting an echo server on multiple ports @ 07/03/24 12:24:29.123
  STEP: creating replication controller proxy-service-m4fqr in namespace proxy-8341 @ 07/03/24 12:24:29.123
  I0703 12:24:29.175673      21 runners.go:198] Created replication controller with name: proxy-service-m4fqr, namespace: proxy-8341, replica count: 1
  I0703 12:24:30.227781      21 runners.go:198] proxy-service-m4fqr Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 12:24:31.228854      21 runners.go:198] proxy-service-m4fqr Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 12:24:32.230380      21 runners.go:198] proxy-service-m4fqr Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0703 12:24:33.231964      21 runners.go:198] proxy-service-m4fqr Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0703 12:24:34.233005      21 runners.go:198] proxy-service-m4fqr Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0703 12:24:35.234923      21 runners.go:198] proxy-service-m4fqr Pods: 1 out of 1 created, 0 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 1 runningButNotReady 
  I0703 12:24:36.235967      21 runners.go:198] proxy-service-m4fqr Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 12:24:36.239105 21 proxy.go:230] setup took 7.16393326s, starting test cases
  STEP: running 16 cases, 20 attempts per case, 320 total attempts @ 07/03/24 12:24:36.239
  I0703 12:24:36.269456 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 28.865653ms)
  I0703 12:24:36.277369 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 36.895515ms)
  I0703 12:24:36.305135 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 63.014672ms)
  I0703 12:24:36.307745 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 67.647693ms)
  I0703 12:24:36.307860 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 68.298402ms)
  I0703 12:24:36.312234 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 72.806102ms)
  I0703 12:24:36.312381 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 72.203663ms)
  I0703 12:24:36.312477 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 72.075026ms)
  I0703 12:24:36.312548 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 72.830015ms)
  I0703 12:24:36.312634 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 72.982834ms)
  I0703 12:24:36.312715 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 72.454748ms)
  I0703 12:24:36.312781 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 73.00182ms)
  I0703 12:24:36.328618 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 88.751137ms)
  I0703 12:24:36.335323 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 95.393307ms)
  I0703 12:24:36.335443 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 95.112655ms)
  I0703 12:24:36.335631 21 proxy.go:558] (0) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 95.100472ms)
  I0703 12:24:36.376564 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 40.036134ms)
  I0703 12:24:36.377316 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 41.376079ms)
  I0703 12:24:36.377569 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 41.358179ms)
  I0703 12:24:36.377773 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 41.439123ms)
  I0703 12:24:36.377910 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 41.029673ms)
  I0703 12:24:36.393762 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 56.942014ms)
  I0703 12:24:36.393994 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 57.362483ms)
  I0703 12:24:36.394044 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 57.591982ms)
  I0703 12:24:36.394069 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 57.79882ms)
  I0703 12:24:36.394086 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 57.508068ms)
  I0703 12:24:36.394103 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 58.296312ms)
  I0703 12:24:36.394122 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 57.979475ms)
  I0703 12:24:36.394223 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 58.171032ms)
  I0703 12:24:36.399667 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 63.269682ms)
  I0703 12:24:36.402646 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 65.703761ms)
  I0703 12:24:36.402806 21 proxy.go:558] (1) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 66.12094ms)
  I0703 12:24:36.480193 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 76.310192ms)
  I0703 12:24:36.494652 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 90.567733ms)
  I0703 12:24:36.494808 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 90.523902ms)
  I0703 12:24:36.494833 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 90.606533ms)
  I0703 12:24:36.494866 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 90.688935ms)
  I0703 12:24:36.494904 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 90.879475ms)
  I0703 12:24:36.494918 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 90.58365ms)
  I0703 12:24:36.494943 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 91.116347ms)
  I0703 12:24:36.500198 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 96.559435ms)
  I0703 12:24:36.500383 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 95.972644ms)
  I0703 12:24:36.502675 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 98.694147ms)
  I0703 12:24:36.502852 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 99.355797ms)
  I0703 12:24:36.503183 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 99.413196ms)
  I0703 12:24:36.505296 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 101.367384ms)
  I0703 12:24:36.505436 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 101.310898ms)
  I0703 12:24:36.505466 21 proxy.go:558] (2) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 101.763414ms)
  I0703 12:24:36.560203 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 53.521795ms)
  I0703 12:24:36.561533 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 55.291718ms)
  I0703 12:24:36.561954 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 55.422487ms)
  I0703 12:24:36.562262 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 56.272793ms)
  I0703 12:24:36.563079 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 56.455266ms)
  I0703 12:24:36.563244 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 56.342669ms)
  I0703 12:24:36.563647 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 57.466875ms)
  I0703 12:24:36.563730 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 57.371639ms)
  I0703 12:24:36.563777 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 57.003574ms)
  I0703 12:24:36.563805 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 57.384961ms)
  I0703 12:24:36.563823 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 57.75982ms)
  I0703 12:24:36.563848 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 57.273733ms)
  I0703 12:24:36.563862 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 57.388374ms)
  I0703 12:24:36.563877 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 58.121622ms)
  I0703 12:24:36.566417 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 60.295643ms)
  I0703 12:24:36.566563 21 proxy.go:558] (3) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 59.837991ms)
  I0703 12:24:36.615221 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 48.117293ms)
  I0703 12:24:36.647145 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 80.144779ms)
  I0703 12:24:36.647541 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 80.001159ms)
  I0703 12:24:36.647683 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 79.881416ms)
  I0703 12:24:36.648397 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 80.932087ms)
  I0703 12:24:36.649400 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 81.997703ms)
  I0703 12:24:36.649608 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 82.266026ms)
  I0703 12:24:36.649759 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 82.589635ms)
  I0703 12:24:36.649956 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 82.729788ms)
  I0703 12:24:36.650792 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 83.145463ms)
  I0703 12:24:36.651074 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 83.32473ms)
  I0703 12:24:36.657370 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 89.667462ms)
  I0703 12:24:36.664836 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 97.23549ms)
  I0703 12:24:36.665025 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 97.741126ms)
  I0703 12:24:36.665096 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 98.412526ms)
  I0703 12:24:36.665129 21 proxy.go:558] (4) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 97.26882ms)
  I0703 12:24:36.767938 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 101.730184ms)
  I0703 12:24:36.807446 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 141.461987ms)
  I0703 12:24:36.807499 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 140.679718ms)
  I0703 12:24:36.835034 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 168.265564ms)
  I0703 12:24:36.858076 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 191.950286ms)
  I0703 12:24:36.858076 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 191.702909ms)
  I0703 12:24:36.894226 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 227.583954ms)
  I0703 12:24:36.894367 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 228.431192ms)
  I0703 12:24:36.920695 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 253.720206ms)
  I0703 12:24:36.937631 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 270.473384ms)
  I0703 12:24:36.950685 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 283.458452ms)
  I0703 12:24:36.971433 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 304.854655ms)
  I0703 12:24:36.972067 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 305.565272ms)
  I0703 12:24:36.980213 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 313.118415ms)
  I0703 12:24:36.980245 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 313.54918ms)
  I0703 12:24:36.981687 21 proxy.go:558] (5) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 314.657931ms)
  I0703 12:24:37.057813 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 75.962862ms)
  I0703 12:24:37.064930 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 82.864432ms)
  I0703 12:24:37.072270 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 90.278691ms)
  I0703 12:24:37.090536 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 108.186426ms)
  I0703 12:24:37.091337 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 108.874752ms)
  I0703 12:24:37.099835 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 117.631298ms)
  I0703 12:24:37.105594 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 122.871052ms)
  I0703 12:24:37.110712 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 127.811408ms)
  I0703 12:24:37.111406 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 128.750039ms)
  I0703 12:24:37.122590 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 139.80685ms)
  I0703 12:24:37.130725 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 147.824667ms)
  I0703 12:24:37.133116 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 150.581255ms)
  I0703 12:24:37.133147 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 150.155196ms)
  I0703 12:24:37.133170 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 150.961496ms)
  I0703 12:24:37.133190 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 150.596381ms)
  I0703 12:24:37.164098 21 proxy.go:558] (6) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 181.145351ms)
  I0703 12:24:37.195183 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 30.66477ms)
  I0703 12:24:37.195286 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 30.743372ms)
  I0703 12:24:37.195362 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 30.79653ms)
  I0703 12:24:37.197487 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 33.219372ms)
  I0703 12:24:37.197526 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 33.320106ms)
  I0703 12:24:37.197836 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 33.537778ms)
  I0703 12:24:37.199372 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 34.754526ms)
  I0703 12:24:37.199471 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 35.30973ms)
  I0703 12:24:37.199982 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 35.502345ms)
  I0703 12:24:37.200297 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 35.63441ms)
  I0703 12:24:37.213119 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 48.788239ms)
  I0703 12:24:37.241362 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 76.675375ms)
  I0703 12:24:37.267920 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 103.482073ms)
  I0703 12:24:37.267969 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 103.560311ms)
  I0703 12:24:37.269475 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 104.875316ms)
  I0703 12:24:37.269519 21 proxy.go:558] (7) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 105.14909ms)
  I0703 12:24:37.288762 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 17.686638ms)
  I0703 12:24:37.336775 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 65.11283ms)
  I0703 12:24:37.336826 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 65.52562ms)
  I0703 12:24:37.336849 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 65.442259ms)
  I0703 12:24:37.406255 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 134.527304ms)
  I0703 12:24:37.406752 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 135.226199ms)
  I0703 12:24:37.406794 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 135.201071ms)
  I0703 12:24:37.406817 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 135.598823ms)
  I0703 12:24:37.433586 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 161.801281ms)
  I0703 12:24:37.452227 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 180.393577ms)
  I0703 12:24:37.452286 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 180.411657ms)
  I0703 12:24:37.458532 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 186.492053ms)
  I0703 12:24:37.458587 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 186.503974ms)
  I0703 12:24:37.458607 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 186.627546ms)
  I0703 12:24:37.458621 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 186.693519ms)
  I0703 12:24:37.458637 21 proxy.go:558] (8) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 186.495925ms)
  I0703 12:24:37.495716 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 27.896422ms)
  I0703 12:24:37.498436 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 30.520768ms)
  I0703 12:24:37.507360 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 39.947765ms)
  I0703 12:24:37.508340 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 33.83909ms)
  I0703 12:24:37.510340 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 42.302067ms)
  I0703 12:24:37.510340 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 41.989664ms)
  I0703 12:24:37.510658 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 42.949215ms)
  I0703 12:24:37.511387 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 36.458215ms)
  I0703 12:24:37.511673 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 36.82723ms)
  I0703 12:24:37.511932 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 32.680882ms)
  I0703 12:24:37.511936 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 37.251658ms)
  I0703 12:24:37.512716 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 38.394312ms)
  I0703 12:24:37.516910 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 42.143263ms)
  I0703 12:24:37.517449 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 38.301039ms)
  I0703 12:24:37.517809 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 38.839232ms)
  I0703 12:24:37.517842 21 proxy.go:558] (9) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 43.255386ms)
  I0703 12:24:37.566324 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 48.035417ms)
  I0703 12:24:37.568003 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 49.994537ms)
  I0703 12:24:37.568059 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 49.389318ms)
  I0703 12:24:37.568084 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 50.139584ms)
  I0703 12:24:37.568103 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 49.586403ms)
  I0703 12:24:37.568120 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 49.995249ms)
  I0703 12:24:37.568146 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 49.822026ms)
  I0703 12:24:37.588460 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 69.761291ms)
  I0703 12:24:37.598532 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 80.340025ms)
  I0703 12:24:37.598559 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 80.135092ms)
  I0703 12:24:37.598753 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 80.04073ms)
  I0703 12:24:37.598586 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 79.843209ms)
  I0703 12:24:37.598635 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 80.004124ms)
  I0703 12:24:37.598652 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 79.891895ms)
  I0703 12:24:37.598705 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 80.214615ms)
  I0703 12:24:37.598721 21 proxy.go:558] (10) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 80.347544ms)
  I0703 12:24:37.642239 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 42.570147ms)
  I0703 12:24:37.642244 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 42.665656ms)
  I0703 12:24:37.642464 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 42.769531ms)
  I0703 12:24:37.642480 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 43.067108ms)
  I0703 12:24:37.643014 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 44.03239ms)
  I0703 12:24:37.643058 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 43.692521ms)
  I0703 12:24:37.653919 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 54.291813ms)
  I0703 12:24:37.654517 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 55.227965ms)
  I0703 12:24:37.654613 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 55.425675ms)
  I0703 12:24:37.654650 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 55.413381ms)
  I0703 12:24:37.654676 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 54.936607ms)
  I0703 12:24:37.654738 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 55.62411ms)
  I0703 12:24:37.654848 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 55.51758ms)
  I0703 12:24:37.659687 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 60.187587ms)
  I0703 12:24:37.660011 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 60.559839ms)
  I0703 12:24:37.660642 21 proxy.go:558] (11) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 61.104491ms)
  I0703 12:24:37.707694 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 46.967464ms)
  I0703 12:24:37.709046 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 48.200696ms)
  I0703 12:24:37.720130 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 59.399564ms)
  I0703 12:24:37.724210 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 63.320837ms)
  I0703 12:24:37.724244 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 63.435796ms)
  I0703 12:24:37.724262 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 63.301434ms)
  I0703 12:24:37.724320 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 63.033995ms)
  I0703 12:24:37.724350 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 63.025863ms)
  I0703 12:24:37.724373 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 63.124174ms)
  I0703 12:24:37.724381 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 63.380715ms)
  I0703 12:24:37.724397 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 63.248551ms)
  I0703 12:24:37.730921 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 70.013078ms)
  I0703 12:24:37.743914 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 82.693748ms)
  I0703 12:24:37.747867 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 86.827666ms)
  I0703 12:24:37.748036 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 87.101992ms)
  I0703 12:24:37.748115 21 proxy.go:558] (12) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 86.8967ms)
  I0703 12:24:37.778527 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 29.997537ms)
  I0703 12:24:37.778570 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 29.369106ms)
  I0703 12:24:37.778589 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 29.668467ms)
  I0703 12:24:37.778610 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 29.47908ms)
  I0703 12:24:37.778640 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 29.77143ms)
  I0703 12:24:37.778673 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 29.949666ms)
  I0703 12:24:37.778694 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 29.616949ms)
  I0703 12:24:37.789531 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 40.26472ms)
  I0703 12:24:37.790041 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 40.731066ms)
  I0703 12:24:37.801699 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 52.313754ms)
  I0703 12:24:37.813386 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 63.899331ms)
  I0703 12:24:37.813396 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 63.940285ms)
  I0703 12:24:37.813439 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 64.632256ms)
  I0703 12:24:37.814191 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 65.216143ms)
  I0703 12:24:37.814196 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 65.171486ms)
  I0703 12:24:37.814218 21 proxy.go:558] (13) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 65.832883ms)
  I0703 12:24:37.829842 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 15.347139ms)
  I0703 12:24:37.895181 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 80.484713ms)
  I0703 12:24:37.895404 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 80.545726ms)
  I0703 12:24:37.896780 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 81.60253ms)
  I0703 12:24:37.908564 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 92.807218ms)
  I0703 12:24:37.917998 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 102.406632ms)
  I0703 12:24:37.918014 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 102.291662ms)
  I0703 12:24:37.918118 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 102.27807ms)
  I0703 12:24:37.920172 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 104.377163ms)
  I0703 12:24:37.921415 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 106.168049ms)
  I0703 12:24:37.927935 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 112.291032ms)
  I0703 12:24:37.928571 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 113.137426ms)
  I0703 12:24:37.928644 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 113.258323ms)
  I0703 12:24:37.930048 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 114.757808ms)
  I0703 12:24:37.930595 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 115.250995ms)
  I0703 12:24:37.930976 21 proxy.go:558] (14) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 115.498819ms)
  I0703 12:24:37.950227 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 18.434217ms)
  I0703 12:24:37.950964 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 19.116191ms)
  I0703 12:24:37.951000 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 19.244833ms)
  I0703 12:24:37.951072 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 19.897238ms)
  I0703 12:24:37.951100 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 19.232095ms)
  I0703 12:24:37.951138 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 19.990529ms)
  I0703 12:24:37.951164 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 20.144675ms)
  I0703 12:24:37.951183 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 19.286157ms)
  I0703 12:24:37.966328 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 34.609144ms)
  I0703 12:24:37.966645 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 35.124708ms)
  I0703 12:24:37.966789 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 35.560528ms)
  I0703 12:24:37.966910 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 35.346016ms)
  I0703 12:24:37.967026 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 35.378312ms)
  I0703 12:24:37.967140 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 35.327984ms)
  I0703 12:24:37.984054 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 52.427444ms)
  I0703 12:24:37.984416 21 proxy.go:558] (15) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 52.7404ms)
  I0703 12:24:38.023336 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 37.818613ms)
  I0703 12:24:38.023396 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 38.19064ms)
  I0703 12:24:38.025257 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 39.563293ms)
  I0703 12:24:38.026647 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 36.508256ms)
  I0703 12:24:38.026990 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 37.193423ms)
  I0703 12:24:38.027102 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 41.344896ms)
  I0703 12:24:38.049845 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 59.820833ms)
  I0703 12:24:38.050095 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 64.454621ms)
  I0703 12:24:38.050631 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 59.507019ms)
  I0703 12:24:38.054716 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 69.449277ms)
  I0703 12:24:38.054788 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 69.406102ms)
  I0703 12:24:38.054880 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 68.689654ms)
  I0703 12:24:38.054906 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 69.340169ms)
  I0703 12:24:38.054924 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 69.474246ms)
  I0703 12:24:38.054966 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 64.081129ms)
  I0703 12:24:38.055048 21 proxy.go:558] (16) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 64.544968ms)
  I0703 12:24:38.082924 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 27.826867ms)
  I0703 12:24:38.083052 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 27.832975ms)
  I0703 12:24:38.103444 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 48.095639ms)
  I0703 12:24:38.115384 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 59.274351ms)
  I0703 12:24:38.115803 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 59.765875ms)
  I0703 12:24:38.115808 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 59.023603ms)
  I0703 12:24:38.116197 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 60.214204ms)
  I0703 12:24:38.115829 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 60.270051ms)
  I0703 12:24:38.118263 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 62.574393ms)
  I0703 12:24:38.118741 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 62.761989ms)
  I0703 12:24:38.119417 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 62.752104ms)
  I0703 12:24:38.119619 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 63.026037ms)
  I0703 12:24:38.119722 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 64.09696ms)
  I0703 12:24:38.120117 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 64.689308ms)
  I0703 12:24:38.120250 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 64.389154ms)
  I0703 12:24:38.120278 21 proxy.go:558] (17) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 63.549252ms)
  I0703 12:24:38.162661 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 41.545201ms)
  I0703 12:24:38.174703 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 52.338856ms)
  I0703 12:24:38.174864 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 53.724849ms)
  I0703 12:24:38.174964 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 52.378588ms)
  I0703 12:24:38.180642 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 58.021568ms)
  I0703 12:24:38.180587 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 57.853896ms)
  I0703 12:24:38.181052 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 58.505043ms)
  I0703 12:24:38.181121 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 60.22043ms)
  I0703 12:24:38.181145 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 60.207928ms)
  I0703 12:24:38.181482 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 58.95919ms)
  I0703 12:24:38.187967 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 66.916668ms)
  I0703 12:24:38.188171 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 67.100346ms)
  I0703 12:24:38.188197 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 67.192444ms)
  I0703 12:24:38.188253 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 65.55507ms)
  I0703 12:24:38.191310 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 68.664207ms)
  I0703 12:24:38.191375 21 proxy.go:558] (18) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 68.704574ms)
  I0703 12:24:38.214471 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:460/proxy/: tls baz (200; 23.04995ms)
  I0703 12:24:38.221100 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj/proxy/rewriteme">test</a> (200; 29.128014ms)
  I0703 12:24:38.221157 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:443/proxy/tlsrewritem... (200; 28.871815ms)
  I0703 12:24:38.221465 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">... (200; 29.428073ms)
  I0703 12:24:38.229407 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 37.17771ms)
  I0703 12:24:38.229426 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:162/proxy/: bar (200; 37.261773ms)
  I0703 12:24:38.229892 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/https:proxy-service-m4fqr-v8qfj:462/proxy/: tls qux (200; 38.329541ms)
  I0703 12:24:38.237619 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname1/proxy/: foo (200; 45.947553ms)
  I0703 12:24:38.241962 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 49.84177ms)
  I0703 12:24:38.242079 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/services/proxy-service-m4fqr:portname2/proxy/: bar (200; 50.248835ms)
  I0703 12:24:38.243164 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname1/proxy/: tls baz (200; 51.252875ms)
  I0703 12:24:38.243233 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname1/proxy/: foo (200; 50.88887ms)
  I0703 12:24:38.243252 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/http:proxy-service-m4fqr-v8qfj:160/proxy/: foo (200; 50.778652ms)
  I0703 12:24:38.243291 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/services/http:proxy-service-m4fqr:portname2/proxy/: bar (200; 50.758343ms)
  I0703 12:24:38.243318 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/: <a href="/api/v1/namespaces/proxy-8341/pods/proxy-service-m4fqr-v8qfj:1080/proxy/rewriteme">test<... (200; 50.907578ms)
  I0703 12:24:38.243373 21 proxy.go:558] (19) /api/v1/namespaces/proxy-8341/services/https:proxy-service-m4fqr:tlsportname2/proxy/: tls qux (200; 50.772983ms)
  STEP: deleting ReplicationController proxy-service-m4fqr in namespace proxy-8341, will wait for the garbage collector to delete the pods @ 07/03/24 12:24:38.243
  I0703 12:24:38.324138 21 resources.go:139] Deleting ReplicationController proxy-service-m4fqr took: 17.04354ms
  I0703 12:24:38.426133 21 resources.go:163] Terminating ReplicationController proxy-service-m4fqr pods took: 102.08911ms
  I0703 12:24:40.445332 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-8341" for this suite. @ 07/03/24 12:24:40.477
• [11.503 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] EndpointSlice should create and delete Endpoints and EndpointSlices for a Service with a selector specified [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:105
  STEP: Creating a kubernetes client @ 07/03/24 12:24:40.516
  I0703 12:24:40.516314 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename endpointslice @ 07/03/24 12:24:40.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:40.649
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:40.683
  I0703 12:24:42.869839 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-8787" for this suite. @ 07/03/24 12:24:42.874
• [2.368 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] Daemon set [Serial] should retry creating failed daemon pods [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:305
  STEP: Creating a kubernetes client @ 07/03/24 12:24:42.896
  I0703 12:24:42.896879 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename daemonsets @ 07/03/24 12:24:42.897
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:43.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:43.048
  STEP: Creating a simple DaemonSet "daemon-set" @ 07/03/24 12:24:43.205
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/03/24 12:24:43.217
  I0703 12:24:43.231863 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:24:43.232111 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:24:44.249163 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:24:44.249218 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:24:45.224747 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:24:45.224784 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:24:46.241353 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 12:24:46.241595 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Set a daemon pod's phase to 'Failed', check that the daemon pod is revived. @ 07/03/24 12:24:46.247
  I0703 12:24:46.497213 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:24:46.497388 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  I0703 12:24:47.349428 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:24:47.349479 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  I0703 12:24:48.380926 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:24:48.381740 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  I0703 12:24:49.361362 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 12:24:49.361411 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Wait for the failed daemon pod to be completely deleted. @ 07/03/24 12:24:49.361
  STEP: Deleting DaemonSet "daemon-set" @ 07/03/24 12:24:49.377
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5503, will wait for the garbage collector to delete the pods @ 07/03/24 12:24:49.381
  I0703 12:24:49.461624 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 18.947724ms
  I0703 12:24:49.662693 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 201.068408ms
  I0703 12:24:52.069939 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:24:52.070017 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0703 12:24:52.092255 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7205"},"items":null}

  I0703 12:24:52.096309 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7205"},"items":null}

  I0703 12:24:52.124953 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5503" for this suite. @ 07/03/24 12:24:52.129
• [9.248 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should delete a collection of services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3572
  STEP: Creating a kubernetes client @ 07/03/24 12:24:52.146
  I0703 12:24:52.146105 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 12:24:52.149
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:52.297
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:52.32
  STEP: creating a collection of services @ 07/03/24 12:24:52.334
  I0703 12:24:52.335102 21 service.go:3608] Creating e2e-svc-a-f8xwm
  I0703 12:24:52.396190 21 service.go:3608] Creating e2e-svc-b-9wn9d
  I0703 12:24:52.450798 21 service.go:3608] Creating e2e-svc-c-pmvkz
  STEP: deleting service collection @ 07/03/24 12:24:52.512
  I0703 12:24:52.657501 21 service.go:3643] Collection of services has been deleted
  I0703 12:24:52.657619 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3361" for this suite. @ 07/03/24 12:24:52.672
• [0.545 seconds]
------------------------------
SSSS
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a deleted RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:158
  STEP: Creating a kubernetes client @ 07/03/24 12:24:52.691
  I0703 12:24:52.691365 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename runtimeclass @ 07/03/24 12:24:52.692
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:52.83
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:52.871
  STEP: Deleting RuntimeClass runtimeclass-1214-delete-me @ 07/03/24 12:24:52.888
  STEP: Waiting for the RuntimeClass to disappear @ 07/03/24 12:24:52.904
  I0703 12:24:52.917261 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-1214" for this suite. @ 07/03/24 12:24:52.934
• [0.263 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] RuntimeClass should support RuntimeClasses API operations [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:191
  STEP: Creating a kubernetes client @ 07/03/24 12:24:52.963
  I0703 12:24:52.963501 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename runtimeclass @ 07/03/24 12:24:52.964
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:53.041
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:53.053
  STEP: getting /apis @ 07/03/24 12:24:53.059
  STEP: getting /apis/node.k8s.io @ 07/03/24 12:24:53.074
  STEP: getting /apis/node.k8s.io/v1 @ 07/03/24 12:24:53.092
  STEP: creating @ 07/03/24 12:24:53.094
  STEP: watching @ 07/03/24 12:24:53.124
  I0703 12:24:53.124737 21 runtimeclass.go:275] starting watch
  STEP: getting @ 07/03/24 12:24:53.139
  STEP: listing @ 07/03/24 12:24:53.152
  STEP: patching @ 07/03/24 12:24:53.174
  STEP: updating @ 07/03/24 12:24:53.191
  I0703 12:24:53.222654 21 runtimeclass.go:305] waiting for watch events with expected annotations
  STEP: deleting @ 07/03/24 12:24:53.222
  STEP: deleting a collection @ 07/03/24 12:24:53.302
  I0703 12:24:53.359918 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-9442" for this suite. @ 07/03/24 12:24:53.365
• [0.432 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment Deployment should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:150
  STEP: Creating a kubernetes client @ 07/03/24 12:24:53.398
  I0703 12:24:53.398458 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 12:24:53.403
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:53.451
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:53.484
  I0703 12:24:53.554690 21 deployment.go:1645] Creating simple deployment test-new-deployment
  I0703 12:24:53.603235 21 deployment.go:222] new replicaset for deployment "test-new-deployment" is yet to be created
  I0703 12:24:55.630745 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 24, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 24, 53, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 24, 53, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 24, 53, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-new-deployment-77db57d8df\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: getting scale subresource @ 07/03/24 12:24:57.693
  STEP: updating a scale subresource @ 07/03/24 12:24:57.717
  STEP: verifying the deployment Spec.Replicas was modified @ 07/03/24 12:24:57.744
  STEP: Patch a scale subresource @ 07/03/24 12:24:57.752
  I0703 12:24:57.851839 21 deployment.go:633] Deployment "test-new-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=19) "test-new-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ef654099-bd14-426d-88fa-666435f9ffb8",
      ResourceVersion: (string) (len=4) "7322",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606293,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)(<nil>),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=28) {
              00000000  7b 22 66 3a 73 70 65 63  22 3a 7b 22 66 3a 72 65  |{"f:spec":{"f:re|
              00000010  70 6c 69 63 61 73 22 3a  7b 7d 7d 7d              |plicas":{}}}|
            }
          }),
          Subresource: (string) (len=5) "scale"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=619) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |onds":{},"f:revi|
              00000060  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000070  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              00000090  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000a0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000b0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000c0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000d0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000e0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              000000f0  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000100  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000110  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000120  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000130  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000140  6d 65 5c 22 3a 5c 22 68  74 74 70 64 5c 22 7d 22  |me\":\"httpd\"}"|
              00000150  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000160  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000170  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000180  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000190  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              000001a0  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              000001b0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001c0  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000001d0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000001e0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000001f0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              00000200  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              00000210  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              00000220  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000230  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000240  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000250  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000260  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(4),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=72) "ReplicaSet \"test-new-deployment-77db57d8df\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0703 12:24:57.891173 21 deployment.go:39] New ReplicaSet "test-new-deployment-77db57d8df" of Deployment "test-new-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-new-deployment-77db57d8df",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-5694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "7818b03c-5d78-45a0-b5c9-e3d1d797e139",
      ResourceVersion: (string) (len=4) "7328",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606293,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=19) "test-new-deployment",
          UID: (types.UID) (len=36) "ef654099-bd14-426d-88fa-666435f9ffb8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=781) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 65 66 36 35 34 30  39 39 2d 62 64 31 34 2d  |\"ef654099-bd14-|
              00000120  34 32 36 64 2d 38 38 66  61 2d 36 36 36 34 33 35  |426d-88fa-666435|
              00000130  66 39 66 66 62 38 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |f9ffb8\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 68 74 74 70 64 5c 22  |name\":\"httpd\"|
              000001f0  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000200  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000210  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000220  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000230  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000240  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000250  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000260  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000270  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000280  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000290  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000002a0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000002b0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000002c0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000002d0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000002e0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              000002f0  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000300  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=5) "httpd",
            (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 12:24:57.963209 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-7nxnv" is not available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-7nxnv",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "26792e9c-20ee-494e-9a77-eb45577d786d",
      ResourceVersion: (string) (len=4) "7329",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606297,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) <nil>,
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "7818b03c-5d78-45a0-b5c9-e3d1d797e139",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 38  31 38 62 30 33 63 2d 35  |d\":\"7818b03c-5|
              00000090  64 37 38 2d 34 35 61 30  2d 62 35 63 39 2d 65 33  |d78-45a0-b5c9-e3|
              000000a0  64 31 64 37 39 37 65 31  33 39 5c 22 7d 22 3a 7b  |d1d797e139\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=624) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 6d 65 73 73 61 67  |me":{},"f:messag|
              00000080  65 22 3a 7b 7d 2c 22 66  3a 72 65 61 73 6f 6e 22  |e":{},"f:reason"|
              00000090  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              000000a0  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000000b0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 49 6e  |k:{\"type\":\"In|
              000000c0  69 74 69 61 6c 69 7a 65  64 5c 22 7d 22 3a 7b 22  |itialized\"}":{"|
              000000d0  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 50 72 6f  |.":{},"f:lastPro|
              000000e0  62 65 54 69 6d 65 22 3a  7b 7d 2c 22 66 3a 6c 61  |beTime":{},"f:la|
              000000f0  73 74 54 72 61 6e 73 69  74 69 6f 6e 54 69 6d 65  |stTransitionTime|
              00000100  22 3a 7b 7d 2c 22 66 3a  73 74 61 74 75 73 22 3a  |":{},"f:status":|
              00000110  7b 7d 2c 22 66 3a 74 79  70 65 22 3a 7b 7d 7d 2c  |{},"f:type":{}},|
              00000120  22 6b 3a 7b 5c 22 74 79  70 65 5c 22 3a 5c 22 50  |"k:{\"type\":\"P|
              00000130  6f 64 52 65 61 64 79 54  6f 53 74 61 72 74 43 6f  |odReadyToStartCo|
              00000140  6e 74 61 69 6e 65 72 73  5c 22 7d 22 3a 7b 22 2e  |ntainers\"}":{".|
              00000150  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 50 72 6f 62  |":{},"f:lastProb|
              00000160  65 54 69 6d 65 22 3a 7b  7d 2c 22 66 3a 6c 61 73  |eTime":{},"f:las|
              00000170  74 54 72 61 6e 73 69 74  69 6f 6e 54 69 6d 65 22  |tTransitionTime"|
              00000180  3a 7b 7d 2c 22 66 3a 73  74 61 74 75 73 22 3a 7b  |:{},"f:status":{|
              00000190  7d 2c 22 66 3a 74 79 70  65 22 3a 7b 7d 7d 2c 22  |},"f:type":{}},"|
              000001a0  6b 3a 7b 5c 22 74 79 70  65 5c 22 3a 5c 22 52 65  |k:{\"type\":\"Re|
              000001b0  61 64 79 5c 22 7d 22 3a  7b 22 2e 22 3a 7b 7d 2c  |ady\"}":{".":{},|
              000001c0  22 66 3a 6c 61 73 74 50  72 6f 62 65 54 69 6d 65  |"f:lastProbeTime|
              000001d0  22 3a 7b 7d 2c 22 66 3a  6c 61 73 74 54 72 61 6e  |":{},"f:lastTran|
              000001e0  73 69 74 69 6f 6e 54 69  6d 65 22 3a 7b 7d 2c 22  |sitionTime":{},"|
              000001f0  66 3a 6d 65 73 73 61 67  65 22 3a 7b 7d 2c 22 66  |f:message":{},"f|
              00000200  3a 72 65 61 73 6f 6e 22  3a 7b 7d 2c 22 66 3a 73  |:reason":{},"f:s|
              00000210  74 61 74 75 73 22 3a 7b  7d 2c 22 66 3a 74 79 70  |tatus":{},"f:typ|
              00000220  65 22 3a 7b 7d 7d 7d 2c  22 66 3a 63 6f 6e 74 61  |e":{}}},"f:conta|
              00000230  69 6e 65 72 53 74 61 74  75 73 65 73 22 3a 7b 7d  |inerStatuses":{}|
              00000240  2c 22 66 3a 68 6f 73 74  49 50 22 3a 7b 7d 2c 22  |,"f:hostIP":{},"|
              00000250  66 3a 68 6f 73 74 49 50  73 22 3a 7b 7d 2c 22 66  |f:hostIPs":{},"f|
              00000260  3a 73 74 61 72 74 54 69  6d 65 22 3a 7b 7d 7d 7d  |:startTime":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-6q66j",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-6q66j",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Pending",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=5) "False",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=18) "ContainersNotReady",
          Message: (string) (len=39) "containers with unready status: [httpd]"
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606297,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) "",
      PodIPs: ([]v1.PodIP) <nil>,
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606297,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)({
              Reason: (string) (len=17) "ContainerCreating",
              Message: (string) ""
            }),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) false,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) "",
          ContainerID: (string) "",
          Started: (*bool)(false),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:24:57.978010 21 deployment.go:67] Pod "test-new-deployment-77db57d8df-qtk7b" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=36) "test-new-deployment-77db57d8df-qtk7b",
      GenerateName: (string) (len=31) "test-new-deployment-77db57d8df-",
      Namespace: (string) (len=15) "deployment-5694",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a1d847de-6d89-4e38-ae68-ab37537e3c2a",
      ResourceVersion: (string) (len=4) "7289",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606293,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=10) "77db57d8df"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "13d3b81c739fa2fb8df54b6cc1f2a194a54145608b87d000de3dc2df15dd179c",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.46/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.46/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=30) "test-new-deployment-77db57d8df",
          UID: (types.UID) (len=36) "7818b03c-5d78-45a0-b5c9-e3d1d797e139",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=537) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 37 38  31 38 62 30 33 63 2d 35  |d\":\"7818b03c-5|
              00000090  64 37 38 2d 34 35 61 30  2d 62 35 63 39 2d 65 33  |d78-45a0-b5c9-e3|
              000000a0  64 31 64 37 39 37 65 31  33 39 5c 22 7d 22 3a 7b  |d1d797e139\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              000000e0  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              000000f0  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000100  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              00000110  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              00000120  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              00000130  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              00000140  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              00000150  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              00000160  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000170  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000180  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000190  69 63 79 22 3a 7b 7d 2c  22 66 3a 65 6e 61 62 6c  |icy":{},"f:enabl|
              000001a0  65 53 65 72 76 69 63 65  4c 69 6e 6b 73 22 3a 7b  |eServiceLinks":{|
              000001b0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000001c0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000001d0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              000001e0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001f0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000200  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000210  6e 64 73 22 3a 7b 7d 7d  7d                       |nds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606294,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 34 36  5c 22 7d 22 3a 7b 22 2e  |.42.1.46\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-w8n59",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-w8n59",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606296,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855606293,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=10) "10.42.1.46",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.46"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855606293,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855606295,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://9e0f5e8ef38d68e3c394edf9442d84b07816e71a8549d6f095107888d16ca271",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 12:24:57.985659 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-5694" for this suite. @ 07/03/24 12:24:58.039
• [4.678 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should update pod when spec was updated and update strategy is RollingUpdate [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:385
  STEP: Creating a kubernetes client @ 07/03/24 12:24:58.076
  I0703 12:24:58.076321 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename daemonsets @ 07/03/24 12:24:58.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:24:58.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:24:58.426
  I0703 12:24:58.608457 21 daemon_set.go:388] Creating simple daemon set daemon-set
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/03/24 12:24:58.614
  I0703 12:24:58.647130 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:24:58.647298 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:24:59.655591 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:24:59.655762 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:25:00.716237 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:25:00.716416 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:25:01.837220 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:25:01.837271 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:25:02.633521 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:25:02.634202 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:25:03.660736 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 12:25:03.660901 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Update daemon pods image. @ 07/03/24 12:25:03.696
  STEP: Check that daemon pods images are updated. @ 07/03/24 12:25:03.74
  I0703 12:25:03.751610 21 daemon_set.go:1178] Wrong image for pod: daemon-set-7sqcl. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:03.751721 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:03.751782 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:04.745155 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:04.745228 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:05.749552 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:05.749594 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:06.751695 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:06.751937 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:07.768613 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:07.773822 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:07.775074 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:08.796466 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:08.798737 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:08.798983 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:09.744432 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:09.744994 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:09.745258 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:10.745051 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:10.745779 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:10.746125 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:11.746746 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:11.746818 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:11.746831 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:12.749429 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:12.749471 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:12.749484 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:13.745415 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:13.745582 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:13.745643 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:14.761720 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:14.761793 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:14.761822 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:15.748559 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:15.748625 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:15.748637 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:16.744868 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:16.744911 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:16.744925 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:17.745506 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:17.745553 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:17.745567 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:18.747394 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:18.747500 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:18.747513 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:19.753189 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:19.753253 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:19.753266 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:20.803460 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:20.803524 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:20.803536 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:21.744505 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:21.744554 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kzzs7. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:21.744567 21 daemon_set.go:1183] Pod daemon-set-rtfvp is not available
  I0703 12:25:22.745443 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:23.750096 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:23.750560 21 daemon_set.go:1183] Pod daemon-set-n8tkb is not available
  I0703 12:25:24.745577 21 daemon_set.go:1178] Wrong image for pod: daemon-set-kbwsd. Expected: registry.k8s.io/e2e-test-images/agnhost:2.47, got: registry.k8s.io/e2e-test-images/httpd:2.4.38-4.
  I0703 12:25:24.745959 21 daemon_set.go:1183] Pod daemon-set-n8tkb is not available
  I0703 12:25:26.750083 21 daemon_set.go:1183] Pod daemon-set-t9rx5 is not available
  STEP: Check that daemon pods are still running on every node of the cluster. @ 07/03/24 12:25:26.759
  I0703 12:25:26.775110 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:25:26.775299 21 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I0703 12:25:27.771835 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:25:27.772062 21 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  I0703 12:25:28.792574 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 12:25:28.792614 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/03/24 12:25:28.87
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5842, will wait for the garbage collector to delete the pods @ 07/03/24 12:25:28.87
  I0703 12:25:28.938303 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 7.033737ms
  I0703 12:25:29.138652 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.327108ms
  I0703 12:25:31.556258 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:25:31.556383 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0703 12:25:31.567189 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"7584"},"items":null}

  I0703 12:25:31.587948 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"7584"},"items":null}

  I0703 12:25:31.652961 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5842" for this suite. @ 07/03/24 12:25:31.663
• [33.597 seconds]
------------------------------
[sig-apps] CronJob should not schedule new jobs when ForbidConcurrent [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:125
  STEP: Creating a kubernetes client @ 07/03/24 12:25:31.673
  I0703 12:25:31.673815 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename cronjob @ 07/03/24 12:25:31.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:25:31.716
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:25:31.723
  STEP: Creating a ForbidConcurrent cronjob @ 07/03/24 12:25:31.729
  STEP: Ensuring a job is scheduled @ 07/03/24 12:25:31.755
  STEP: Ensuring exactly one is scheduled @ 07/03/24 12:26:01.794
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/03/24 12:26:01.805
  STEP: Ensuring no more jobs are scheduled @ 07/03/24 12:26:01.81
  STEP: Removing cronjob @ 07/03/24 12:26:01.888
  I0703 12:26:01.923505 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-5152" for this suite. @ 07/03/24 12:26:01.956
• [30.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition creating/deleting custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:59
  STEP: Creating a kubernetes client @ 07/03/24 12:26:02
  I0703 12:26:02.000717 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/03/24 12:26:02.003
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:26:02.15
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:26:02.242
  I0703 12:26:02.256526 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:26:03.448640 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-1005" for this suite. @ 07/03/24 12:26:03.47
• [1.497 seconds]
------------------------------
S
------------------------------
[sig-node] Probing container with readiness probe that fails should never be ready and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:108
  STEP: Creating a kubernetes client @ 07/03/24 12:26:03.511
  I0703 12:26:03.511682 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 12:26:03.518
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:26:03.599
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:26:03.607
  I0703 12:27:03.726193 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-4615" for this suite. @ 07/03/24 12:27:03.729
• [60.234 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should adopt matching orphans and release non-matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:697
  STEP: Creating a kubernetes client @ 07/03/24 12:27:03.749
  I0703 12:27:03.749745 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename job @ 07/03/24 12:27:03.76
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:27:03.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:27:03.903
  STEP: Creating a job @ 07/03/24 12:27:03.906
  STEP: Ensuring active pods == parallelism @ 07/03/24 12:27:03.917
  STEP: Orphaning one of the Job's Pods @ 07/03/24 12:27:07.924
  I0703 12:27:08.451704 21 pod_client.go:141] Successfully updated pod "adopt-release-4r82h"
  STEP: Checking that the Job readopts the Pod @ 07/03/24 12:27:08.452
  STEP: Removing the labels from the Job's Pod @ 07/03/24 12:27:10.482
  I0703 12:27:11.018475 21 pod_client.go:141] Successfully updated pod "adopt-release-4r82h"
  STEP: Checking that the Job releases the Pod @ 07/03/24 12:27:11.018
  I0703 12:27:13.038574 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-5626" for this suite. @ 07/03/24 12:27:13.057
• [9.327 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a container with runAsUser should run the container with uid 65534 [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:350
  STEP: Creating a kubernetes client @ 07/03/24 12:27:13.076
  I0703 12:27:13.076738 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename security-context-test @ 07/03/24 12:27:13.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:27:13.144
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:27:13.196
  I0703 12:27:17.295276 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-4614" for this suite. @ 07/03/24 12:27:17.306
• [4.244 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] ReplicaSet should adopt matching pods on creation and release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:132
  STEP: Creating a kubernetes client @ 07/03/24 12:27:17.321
  I0703 12:27:17.321263 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replicaset @ 07/03/24 12:27:17.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:27:17.424
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:27:17.429
  STEP: Given a Pod with a 'name' label pod-adoption-release is created @ 07/03/24 12:27:17.443
  STEP: When a replicaset with a matching selector is created @ 07/03/24 12:27:21.475
  STEP: Then the orphan pod is adopted @ 07/03/24 12:27:21.483
  STEP: When the matched label of one of its pods change @ 07/03/24 12:27:22.51
  I0703 12:27:22.525035 21 resource.go:87] Pod name pod-adoption-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/03/24 12:27:22.592
  I0703 12:27:23.635648 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-788" for this suite. @ 07/03/24 12:27:23.647
• [6.333 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition getting/updating/patching custom resource definition status sub-resource works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:146
  STEP: Creating a kubernetes client @ 07/03/24 12:27:23.655
  I0703 12:27:23.655451 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/03/24 12:27:23.656
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:27:23.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:27:23.763
  I0703 12:27:23.779148 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:27:24.425484 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-66" for this suite. @ 07/03/24 12:27:24.441
• [0.926 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should be able to update and delete ResourceQuota. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:889
  STEP: Creating a kubernetes client @ 07/03/24 12:27:24.582
  I0703 12:27:24.582783 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 12:27:24.584
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:27:24.742
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:27:24.782
  STEP: Creating a ResourceQuota @ 07/03/24 12:27:24.808
  STEP: Getting a ResourceQuota @ 07/03/24 12:27:24.843
  STEP: Updating a ResourceQuota @ 07/03/24 12:27:24.886
  STEP: Verifying a ResourceQuota was modified @ 07/03/24 12:27:24.901
  STEP: Deleting a ResourceQuota @ 07/03/24 12:27:24.954
  STEP: Verifying the deleted ResourceQuota @ 07/03/24 12:27:24.974
  I0703 12:27:24.991326 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8183" for this suite. @ 07/03/24 12:27:25.045
• [0.504 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should support continue listing from the last key if the original version has been compacted away, though the list is inconsistent [Slow] [Conformance] [sig-api-machinery, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:144
  STEP: Creating a kubernetes client @ 07/03/24 12:27:25.087
  I0703 12:27:25.087830 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename chunking @ 07/03/24 12:27:25.089
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:27:25.248
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:27:25.284
  STEP: creating a large number of resources @ 07/03/24 12:27:25.311
  I0703 12:27:40.818228      21 request.go:697] Waited for 1.003697935s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-7911/podtemplates
  STEP: retrieving the first page @ 07/03/24 12:27:42.86
  I0703 12:27:42.908554 21 chunking.go:163] Retrieved 40/40 results with rv 8630 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0
  STEP: retrieving the second page until the token expires @ 07/03/24 12:27:42.908
  I0703 12:28:02.915776 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:28:22.915477 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:28:42.917897 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:29:02.930366 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:29:22.917065 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:29:42.918086 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:30:02.938103 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:30:22.917865 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:30:42.916472 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:31:02.920387 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:31:22.915878 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:31:42.913375 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:32:02.926806 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:32:22.921709 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:32:42.915085 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:33:02.917467 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:33:22.917019 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:33:42.917628 21 chunking.go:171] Token eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6ODYzMCwic3RhcnQiOiJ0ZW1wbGF0ZS0wMDM5XHUwMDAwIn0 has not expired yet
  I0703 12:34:02.927956 21 chunking.go:177] got error The provided continue parameter is too old to display a consistent list result. You can start a new list without the continue parameter, or use the continue token in this response to retrieve the remainder of the results. Continuing with the provided token results in an inconsistent list - objects that were created, modified, or deleted between the time the first chunk was returned and now may show up in the list.
  I0703 12:34:02.928000 21 chunking.go:186] Retrieved inconsistent continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6LTEsInN0YXJ0IjoidGVtcGxhdGUtMDAzOVx1MDAwMCJ9
  STEP: retrieving the second page again with the token received with the error message @ 07/03/24 12:34:02.928
  STEP: retrieving all remaining pages @ 07/03/24 12:34:02.944
  I0703 12:34:02.957821 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM4Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTE5XHUwMDAwIn0
  I0703 12:34:02.981558 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM4Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTU5XHUwMDAwIn0
  I0703 12:34:02.997310 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM4Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMTk5XHUwMDAwIn0
  I0703 12:34:03.023746 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM4Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjM5XHUwMDAwIn0
  I0703 12:34:03.035685 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM4Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMjc5XHUwMDAwIn0
  I0703 12:34:03.050665 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM4Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzE5XHUwMDAwIn0
  I0703 12:34:03.056572 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6OTM4Nywic3RhcnQiOiJ0ZW1wbGF0ZS0wMzU5XHUwMDAwIn0
  I0703 12:34:03.066858 21 chunking.go:221] Retrieved 40/40 results with rv 9387 and continue 
  I0703 12:34:03.067032 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-7911" for this suite. @ 07/03/24 12:34:03.084
• [398.035 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:237
  STEP: Creating a kubernetes client @ 07/03/24 12:34:03.13
  I0703 12:34:03.131072 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:34:03.145
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:34:03.291
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:34:03.325
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:34:03.345
  STEP: Saw pod success @ 07/03/24 12:34:07.486
  I0703 12:34:07.492324 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-35bc67b3-fcb4-419d-9810-f1352ce69685 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:34:07.534
  I0703 12:34:07.563140 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3400" for this suite. @ 07/03/24 12:34:07.569
• [4.481 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:90
  STEP: Creating a kubernetes client @ 07/03/24 12:34:07.612
  I0703 12:34:07.612969 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:34:07.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:34:07.678
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:34:07.71
  STEP: Creating configMap with name projected-configmap-test-volume-map-841cfdbb-190c-4761-9e54-cfc63c6b611a @ 07/03/24 12:34:07.774
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:34:07.791
  STEP: Saw pod success @ 07/03/24 12:34:11.879
  I0703 12:34:11.887547 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-configmaps-0b0b4081-22a7-4cf9-991f-c293a712351c container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:34:11.907
  I0703 12:34:11.964061 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6058" for this suite. @ 07/03/24 12:34:11.98
• [4.380 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:132
  STEP: Creating a kubernetes client @ 07/03/24 12:34:11.993
  I0703 12:34:11.993794 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:34:11.994
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:34:12.058
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:34:12.082
  STEP: Creating the pod @ 07/03/24 12:34:12.101
  I0703 12:34:16.697942 21 pod_client.go:141] Successfully updated pod "labelsupdate623f25ba-e3fc-44ff-b850-b13a4c0224e7"
  I0703 12:34:18.738626 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8890" for this suite. @ 07/03/24 12:34:18.746
• [6.776 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should create a LimitRange with defaults and ensure pod has those defaults applied. [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:62
  STEP: Creating a kubernetes client @ 07/03/24 12:34:18.8
  I0703 12:34:18.800767 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename limitrange @ 07/03/24 12:34:18.803
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:34:18.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:34:18.924
  STEP: Creating a LimitRange @ 07/03/24 12:34:18.933
  STEP: Setting up watch @ 07/03/24 12:34:18.933
  STEP: Submitting a LimitRange @ 07/03/24 12:34:19.038
  STEP: Verifying LimitRange creation was observed @ 07/03/24 12:34:19.059
  STEP: Fetching the LimitRange to ensure it has proper values @ 07/03/24 12:34:19.06
  I0703 12:34:19.068815 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0703 12:34:19.068871 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with no resource requirements @ 07/03/24 12:34:19.068
  STEP: Ensuring Pod has resource requirements applied from LimitRange @ 07/03/24 12:34:19.077
  I0703 12:34:19.082836 21 limit_range.go:355] Verifying requests: expected map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}] with actual map[cpu:{{100 -3} {<nil>} 100m DecimalSI} ephemeral-storage:{{214748364800 0} {<nil>}  BinarySI} memory:{{209715200 0} {<nil>}  BinarySI}]
  I0703 12:34:19.083175 21 limit_range.go:360] Verifying limits: expected map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{500 -3} {<nil>} 500m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Creating a Pod with partial resource requirements @ 07/03/24 12:34:19.083
  STEP: Ensuring Pod has merged resource requirements applied from LimitRange @ 07/03/24 12:34:19.109
  I0703 12:34:19.129024 21 limit_range.go:355] Verifying requests: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{161061273600 0} {<nil>} 150Gi BinarySI} memory:{{157286400 0} {<nil>} 150Mi BinarySI}]
  I0703 12:34:19.129237 21 limit_range.go:360] Verifying limits: expected map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}] with actual map[cpu:{{300 -3} {<nil>} 300m DecimalSI} ephemeral-storage:{{536870912000 0} {<nil>} 500Gi BinarySI} memory:{{524288000 0} {<nil>} 500Mi BinarySI}]
  STEP: Failing to create a Pod with less than min resources @ 07/03/24 12:34:19.129
  STEP: Failing to create a Pod with more than max resources @ 07/03/24 12:34:19.136
  STEP: Updating a LimitRange @ 07/03/24 12:34:19.145
  STEP: Verifying LimitRange updating is effective @ 07/03/24 12:34:19.161
  STEP: Creating a Pod with less than former min resources @ 07/03/24 12:34:21.171
  STEP: Failing to create a Pod with more than max resources @ 07/03/24 12:34:21.191
  STEP: Deleting a LimitRange @ 07/03/24 12:34:21.212
  STEP: Verifying the LimitRange was deleted @ 07/03/24 12:34:21.238
  I0703 12:34:26.243655 21 limit_range.go:211] limitRange is already deleted
  STEP: Creating a Pod with more than former max resources @ 07/03/24 12:34:26.243
  I0703 12:34:26.262224 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-582" for this suite. @ 07/03/24 12:34:26.279
• [7.494 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2218
  STEP: Creating a kubernetes client @ 07/03/24 12:34:26.294
  I0703 12:34:26.294690 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 12:34:26.295
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:34:26.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:34:26.462
  STEP: creating service in namespace services-7878 @ 07/03/24 12:34:26.481
  STEP: creating service affinity-nodeport in namespace services-7878 @ 07/03/24 12:34:26.482
  STEP: creating replication controller affinity-nodeport in namespace services-7878 @ 07/03/24 12:34:26.527
  I0703 12:34:26.581719      21 runners.go:198] Created replication controller with name: affinity-nodeport, namespace: services-7878, replica count: 3
  I0703 12:34:29.632995      21 runners.go:198] affinity-nodeport Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 12:34:29.696042 21 resource.go:361] Creating new exec pod
  I0703 12:34:34.809246 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-7878 exec execpod-affinityfctqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport 80'
  I0703 12:34:37.543155 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport 80\n+ echo hostName\nConnection to affinity-nodeport 80 port [tcp/http] succeeded!\n"
  I0703 12:34:37.543215 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 12:34:37.543306 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-7878 exec execpod-affinityfctqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.164.225 80'
  I0703 12:34:38.018118 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.164.225 80\nConnection to 10.43.164.225 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0703 12:34:38.018175 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 12:34:38.018263 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-7878 exec execpod-affinityfctqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.183 32369'
  I0703 12:34:38.441581 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.183 32369\nConnection to 172.31.5.183 32369 port [tcp/*] succeeded!\n"
  I0703 12:34:38.442361 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 12:34:38.442470 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-7878 exec execpod-affinityfctqs -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.210 32369'
  I0703 12:34:38.686829 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.210 32369\nConnection to 172.31.4.210 32369 port [tcp/*] succeeded!\n"
  I0703 12:34:38.686889 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 12:34:38.687025 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-7878 exec execpod-affinityfctqs -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.4.137:32369/ ; done'
  I0703 12:34:39.208704 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32369/\n"
  I0703 12:34:39.208762 21 builder.go:147] stdout: "\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc\naffinity-nodeport-mnqsc"
  I0703 12:34:39.208785 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208800 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208812 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208821 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208834 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208844 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208855 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208865 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208876 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208891 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208902 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208913 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208922 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208932 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208943 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.208955 21 service.go:242] Received response from host: affinity-nodeport-mnqsc
  I0703 12:34:39.209169 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport in namespace services-7878, will wait for the garbage collector to delete the pods @ 07/03/24 12:34:39.236
  I0703 12:34:39.304006 21 resources.go:139] Deleting ReplicationController affinity-nodeport took: 5.631913ms
  I0703 12:34:39.405166 21 resources.go:163] Terminating ReplicationController affinity-nodeport pods took: 101.158104ms
  I0703 12:34:42.880455 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7878" for this suite. @ 07/03/24 12:34:42.894
• [16.617 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should support ValidatingAdmissionPolicy API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:406
  STEP: Creating a kubernetes client @ 07/03/24 12:34:42.912
  I0703 12:34:42.913032 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/03/24 12:34:42.913
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:34:42.969
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:34:42.979
  STEP: getting /apis @ 07/03/24 12:34:43.075
  STEP: getting /apis/admissionregistration.k8s.io @ 07/03/24 12:34:43.087
  STEP: getting /apis/admissionregistration.k8s.io/v1 @ 07/03/24 12:34:43.096
  STEP: creating @ 07/03/24 12:34:43.118
  STEP: getting @ 07/03/24 12:34:43.226
  STEP: listing @ 07/03/24 12:34:43.261
  STEP: watching @ 07/03/24 12:34:43.283
  I0703 12:34:43.283282 21 validatingadmissionpolicy.go:523] starting watch
  STEP: patching @ 07/03/24 12:34:43.318
  STEP: updating @ 07/03/24 12:34:43.41
  I0703 12:34:43.585914 21 validatingadmissionpolicy.go:552] waiting for watch events with expected annotations
  STEP: getting /status @ 07/03/24 12:34:43.586
  STEP: patching /status @ 07/03/24 12:34:43.604
  STEP: updating /status @ 07/03/24 12:34:43.686
  STEP: deleting @ 07/03/24 12:34:43.752
  STEP: deleting a collection @ 07/03/24 12:34:43.79
  I0703 12:34:43.875185 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-5909" for this suite. @ 07/03/24 12:34:43.952
• [1.060 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts ServiceAccountIssuerDiscovery should support OIDC discovery of service account issuer [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:531
  STEP: Creating a kubernetes client @ 07/03/24 12:34:43.974
  I0703 12:34:43.974702 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svcaccounts @ 07/03/24 12:34:43.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:34:44.062
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:34:44.082
  I0703 12:34:44.189369 21 service_accounts.go:618] created pod
  STEP: Saw pod success @ 07/03/24 12:34:52.258
  I0703 12:35:22.283001 21 service_accounts.go:624] polling logs
  I0703 12:35:22.314902 21 service_accounts.go:634] Pod logs: 
  I0703 12:34:45.513936       1 log.go:245] OK: Got token
  I0703 12:34:45.514043       1 log.go:245] validating with in-cluster discovery
  I0703 12:34:45.514512       1 log.go:245] OK: got issuer https://18.225.56.123:6443
  I0703 12:34:45.514553       1 log.go:245] Full, not-validated claims: 
  openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.225.56.123:6443", Subject:"system:serviceaccount:svcaccounts-7020:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc00042ef20), NotBefore:(*jwt.NumericDate)(0xc00042f010), IssuedAt:(*jwt.NumericDate)(0xc00042ef30), ID:"9007c646-0e5c-41ba-995e-12ab638eca0e"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7020", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"63d37a72-e959-4e22-980c-ba5f5b1349f5"}}}
  I0703 12:34:48.562596       1 log.go:245] OK: Constructed OIDC provider for issuer https://18.225.56.123:6443
  I0703 12:34:48.590928       1 log.go:245] OK: Validated signature on JWT
  I0703 12:34:48.591184       1 log.go:245] OK: Got valid claims from token!
  I0703 12:34:48.591223       1 log.go:245] Full, validated claims: 
  &openidmetadata.claims{Claims:jwt.Claims{Issuer:"https://18.225.56.123:6443", Subject:"system:serviceaccount:svcaccounts-7020:default", Audience:jwt.Audience{"oidc-discovery-test"}, Expiry:(*jwt.NumericDate)(0xc0003c2e58), NotBefore:(*jwt.NumericDate)(0xc0003c2e80), IssuedAt:(*jwt.NumericDate)(0xc0003c2e60), ID:"9007c646-0e5c-41ba-995e-12ab638eca0e"}, Kubernetes:openidmetadata.kubeClaims{Namespace:"svcaccounts-7020", ServiceAccount:openidmetadata.kubeName{Name:"default", UID:"63d37a72-e959-4e22-980c-ba5f5b1349f5"}}}

  I0703 12:35:22.315766 21 service_accounts.go:638] completed pod
  I0703 12:35:22.326392 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7020" for this suite. @ 07/03/24 12:35:22.334
• [38.368 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with configmap pod with mountPath of existing file [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:79
  STEP: Creating a kubernetes client @ 07/03/24 12:35:22.345
  I0703 12:35:22.345853 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename subpath @ 07/03/24 12:35:22.347
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:35:22.475
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:35:22.506
  STEP: Setting up data @ 07/03/24 12:35:22.536
  STEP: Creating pod pod-subpath-test-configmap-pnj4 @ 07/03/24 12:35:22.57
  STEP: Creating a pod to test atomic-volume-subpath @ 07/03/24 12:35:22.57
  STEP: Saw pod success @ 07/03/24 12:35:46.76
  I0703 12:35:46.765982 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-subpath-test-configmap-pnj4 container test-container-subpath-configmap-pnj4: <nil>
  STEP: delete the pod @ 07/03/24 12:35:46.816
  STEP: Deleting pod pod-subpath-test-configmap-pnj4 @ 07/03/24 12:35:46.861
  I0703 12:35:46.874500 21 delete.go:62] Deleting pod "pod-subpath-test-configmap-pnj4" in namespace "subpath-2954"
  I0703 12:35:46.881140 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-2954" for this suite. @ 07/03/24 12:35:46.892
• [24.584 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context When creating a pod with privileged should run the container as unprivileged when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:531
  STEP: Creating a kubernetes client @ 07/03/24 12:35:46.933
  I0703 12:35:46.933242 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename security-context-test @ 07/03/24 12:35:46.935
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:35:47.029
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:35:47.05
  I0703 12:35:51.191009 21 security_context.go:538] Got logs for pod "busybox-privileged-false-25a88f7e-8517-40f8-b633-c4f82cc7a310": "ip: RTNETLINK answers: Operation not permitted\n"
  I0703 12:35:51.191157 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7685" for this suite. @ 07/03/24 12:35:51.195
• [4.282 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all pods are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:245
  STEP: Creating a kubernetes client @ 07/03/24 12:35:51.215
  I0703 12:35:51.215770 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename namespaces @ 07/03/24 12:35:51.217
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:35:51.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:35:51.315
  STEP: Creating a test namespace @ 07/03/24 12:35:51.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:35:51.426
  STEP: Creating a pod in the namespace @ 07/03/24 12:35:51.49
  STEP: Waiting for the pod to have running status @ 07/03/24 12:35:51.558
  STEP: Deleting the namespace @ 07/03/24 12:35:55.591
  STEP: Waiting for the namespace to be removed. @ 07/03/24 12:35:55.606
  STEP: Recreating the namespace @ 07/03/24 12:36:06.621
  STEP: Verifying there are no pods in the namespace @ 07/03/24 12:36:06.671
  I0703 12:36:06.688615 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7734" for this suite. @ 07/03/24 12:36:06.702
  STEP: Destroying namespace "nsdeletetest-4173" for this suite. @ 07/03/24 12:36:06.713
  I0703 12:36:06.733487 21 framework.go:370] Namespace nsdeletetest-4173 was already deleted
  STEP: Destroying namespace "nsdeletetest-4119" for this suite. @ 07/03/24 12:36:06.733
• [15.545 seconds]
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:56
  STEP: Creating a kubernetes client @ 07/03/24 12:36:06.76
  I0703 12:36:06.760323 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:36:06.761
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:36:06.957
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:36:06.996
  STEP: Creating projection with secret that has name projected-secret-test-a7b0bc50-f898-45d5-9bad-10ea42489e03 @ 07/03/24 12:36:07.009
  STEP: Creating a pod to test consume secrets @ 07/03/24 12:36:07.046
  STEP: Saw pod success @ 07/03/24 12:36:11.133
  I0703 12:36:11.137344 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-3a243dbd-002f-4fd9-85ce-a345d5c14864 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 12:36:11.166
  I0703 12:36:11.236916 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8149" for this suite. @ 07/03/24 12:36:11.241
• [4.499 seconds]
------------------------------
SSSSS
------------------------------
[sig-cli] Kubectl logs logs should be able to retrieve and filter logs [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/logs.go:114
  STEP: Creating a kubernetes client @ 07/03/24 12:36:11.259
  I0703 12:36:11.259858 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl-logs @ 07/03/24 12:36:11.271
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:36:11.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:36:11.403
  STEP: creating an pod @ 07/03/24 12:36:11.416
  I0703 12:36:11.417084 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 run logs-generator --image=registry.k8s.io/e2e-test-images/agnhost:2.47 --restart=Never --pod-running-timeout=2m0s -- logs-generator --log-lines-total 100 --run-duration 20s'
  I0703 12:36:11.834070 21 builder.go:146] stderr: ""
  I0703 12:36:11.834116 21 builder.go:147] stdout: "pod/logs-generator created\n"
  STEP: Waiting for log generator to start. @ 07/03/24 12:36:11.834
  I0703 12:36:11.834270 21 resource.go:413] Waiting up to 5m0s for 1 pods to be running and ready, or succeeded: [logs-generator]
  I0703 12:36:13.866053 21 resource.go:435] Wanted all 1 pods to be running and ready, or succeeded. Result: true. Pods: [logs-generator]
  STEP: checking for a matching strings @ 07/03/24 12:36:13.866
  I0703 12:36:13.866192 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 logs logs-generator logs-generator'
  I0703 12:36:14.170463 21 builder.go:146] stderr: ""
  I0703 12:36:14.170529 21 builder.go:147] stdout: "I0703 12:36:12.989902       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/587 300\nI0703 12:36:13.190052       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/czd 267\nI0703 12:36:13.390610       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/s5j 380\nI0703 12:36:13.590952       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/5xnn 200\nI0703 12:36:13.790265       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/jff9 241\nI0703 12:36:13.990653       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/t84 534\n"
  STEP: limiting log lines @ 07/03/24 12:36:14.17
  I0703 12:36:14.170629 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 logs logs-generator logs-generator --tail=1'
  I0703 12:36:14.378447 21 builder.go:146] stderr: ""
  I0703 12:36:14.378495 21 builder.go:147] stdout: "I0703 12:36:14.189904       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/zsf 485\n"
  I0703 12:36:14.378512 21 logs.go:127] got output "I0703 12:36:14.189904       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/zsf 485\n"
  STEP: limiting log bytes @ 07/03/24 12:36:14.378
  I0703 12:36:14.378604 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 logs logs-generator logs-generator --limit-bytes=1'
  I0703 12:36:14.534330 21 builder.go:146] stderr: ""
  I0703 12:36:14.534378 21 builder.go:147] stdout: "I"
  I0703 12:36:14.534393 21 logs.go:133] got output "I"
  STEP: exposing timestamps @ 07/03/24 12:36:14.534
  I0703 12:36:14.534475 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 logs logs-generator logs-generator --tail=1 --timestamps'
  I0703 12:36:14.750994 21 builder.go:146] stderr: ""
  I0703 12:36:14.751040 21 builder.go:147] stdout: "2024-07-03T12:36:14.590911343Z I0703 12:36:14.590709       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/vqf 557\n"
  I0703 12:36:14.751060 21 logs.go:139] got output "2024-07-03T12:36:14.590911343Z I0703 12:36:14.590709       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/vqf 557\n"
  STEP: restricting to a time range @ 07/03/24 12:36:14.751
  I0703 12:36:17.252064 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 logs logs-generator logs-generator --since=1s'
  I0703 12:36:17.465672 21 builder.go:146] stderr: ""
  I0703 12:36:17.465728 21 builder.go:147] stdout: "I0703 12:36:16.590066       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/4sv 449\nI0703 12:36:16.790501       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/q5p 325\nI0703 12:36:16.990711       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/6nj 454\nI0703 12:36:17.190021       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/24qr 582\nI0703 12:36:17.391836       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/gwp 269\n"
  I0703 12:36:17.465787 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 logs logs-generator logs-generator --since=24h'
  I0703 12:36:17.664345 21 builder.go:146] stderr: ""
  I0703 12:36:17.664439 21 builder.go:147] stdout: "I0703 12:36:12.989902       1 logs_generator.go:76] 0 PUT /api/v1/namespaces/kube-system/pods/587 300\nI0703 12:36:13.190052       1 logs_generator.go:76] 1 PUT /api/v1/namespaces/ns/pods/czd 267\nI0703 12:36:13.390610       1 logs_generator.go:76] 2 POST /api/v1/namespaces/kube-system/pods/s5j 380\nI0703 12:36:13.590952       1 logs_generator.go:76] 3 PUT /api/v1/namespaces/default/pods/5xnn 200\nI0703 12:36:13.790265       1 logs_generator.go:76] 4 PUT /api/v1/namespaces/kube-system/pods/jff9 241\nI0703 12:36:13.990653       1 logs_generator.go:76] 5 GET /api/v1/namespaces/ns/pods/t84 534\nI0703 12:36:14.189904       1 logs_generator.go:76] 6 PUT /api/v1/namespaces/kube-system/pods/zsf 485\nI0703 12:36:14.390382       1 logs_generator.go:76] 7 GET /api/v1/namespaces/ns/pods/6wgb 237\nI0703 12:36:14.590709       1 logs_generator.go:76] 8 POST /api/v1/namespaces/default/pods/vqf 557\nI0703 12:36:14.789999       1 logs_generator.go:76] 9 GET /api/v1/namespaces/ns/pods/zsrp 287\nI0703 12:36:14.990378       1 logs_generator.go:76] 10 POST /api/v1/namespaces/default/pods/rdpn 461\nI0703 12:36:15.190662       1 logs_generator.go:76] 11 PUT /api/v1/namespaces/kube-system/pods/hb6f 270\nI0703 12:36:15.390917       1 logs_generator.go:76] 12 GET /api/v1/namespaces/ns/pods/h4cn 564\nI0703 12:36:15.590271       1 logs_generator.go:76] 13 PUT /api/v1/namespaces/default/pods/n6d 574\nI0703 12:36:15.790592       1 logs_generator.go:76] 14 PUT /api/v1/namespaces/kube-system/pods/p5sv 590\nI0703 12:36:15.990948       1 logs_generator.go:76] 15 POST /api/v1/namespaces/default/pods/pwz2 578\nI0703 12:36:16.190293       1 logs_generator.go:76] 16 PUT /api/v1/namespaces/kube-system/pods/fjw9 545\nI0703 12:36:16.391790       1 logs_generator.go:76] 17 POST /api/v1/namespaces/ns/pods/d2ww 421\nI0703 12:36:16.590066       1 logs_generator.go:76] 18 POST /api/v1/namespaces/ns/pods/4sv 449\nI0703 12:36:16.790501       1 logs_generator.go:76] 19 PUT /api/v1/namespaces/default/pods/q5p 325\nI0703 12:36:16.990711       1 logs_generator.go:76] 20 GET /api/v1/namespaces/kube-system/pods/6nj 454\nI0703 12:36:17.190021       1 logs_generator.go:76] 21 GET /api/v1/namespaces/ns/pods/24qr 582\nI0703 12:36:17.391836       1 logs_generator.go:76] 22 POST /api/v1/namespaces/default/pods/gwp 269\nI0703 12:36:17.589969       1 logs_generator.go:76] 23 POST /api/v1/namespaces/kube-system/pods/pqt 415\n"
  I0703 12:36:17.665152 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-logs-9750 delete pod logs-generator'
  I0703 12:36:19.571802 21 builder.go:146] stderr: ""
  I0703 12:36:19.571906 21 builder.go:147] stdout: "pod \"logs-generator\" deleted\n"
  I0703 12:36:19.572024 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-logs-9750" for this suite. @ 07/03/24 12:36:19.576
• [8.331 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny pod and configmap creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:199
  STEP: Creating a kubernetes client @ 07/03/24 12:36:19.591
  I0703 12:36:19.591103 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:36:19.592
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:36:19.65
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:36:19.683
  STEP: Setting up server cert @ 07/03/24 12:36:19.934
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:36:21.102
  STEP: Deploying the webhook pod @ 07/03/24 12:36:21.123
  STEP: Wait for the deployment to be ready @ 07/03/24 12:36:21.144
  I0703 12:36:21.169925 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0703 12:36:23.181148 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:36:25.213814 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:36:27.192576 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 36, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:36:29.185
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:36:29.197
  I0703 12:36:30.199132 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the webhook via the AdmissionRegistration API @ 07/03/24 12:36:30.215
  STEP: create a pod that should be denied by the webhook @ 07/03/24 12:36:30.25
  STEP: create a pod that causes the webhook to hang @ 07/03/24 12:36:30.303
  STEP: create a configmap that should be denied by the webhook @ 07/03/24 12:36:40.313
  STEP: create a configmap that should be admitted by the webhook @ 07/03/24 12:36:40.471
  STEP: update (PUT) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/03/24 12:36:40.494
  STEP: update (PATCH) the admitted configmap to a non-compliant one should be rejected by the webhook @ 07/03/24 12:36:40.511
  STEP: create a namespace that bypass the webhook @ 07/03/24 12:36:40.521
  STEP: create a configmap that violates the webhook policy but is in a whitelisted namespace @ 07/03/24 12:36:40.598
  I0703 12:36:40.943099 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7771" for this suite. @ 07/03/24 12:36:40.987
  STEP: Destroying namespace "webhook-markers-4170" for this suite. @ 07/03/24 12:36:41.01
  STEP: Destroying namespace "exempted-namespace-8708" for this suite. @ 07/03/24 12:36:41.037
• [21.472 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Servers with support for API chunking should return chunks of results for list calls [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/chunking.go:83
  STEP: Creating a kubernetes client @ 07/03/24 12:36:41.064
  I0703 12:36:41.064914 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename chunking @ 07/03/24 12:36:41.065
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:36:41.117
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:36:41.14
  STEP: creating a large number of resources @ 07/03/24 12:36:41.178
  I0703 12:36:47.534372      21 request.go:697] Waited for 1.006703857s due to client-side throttling, not priority and fairness, request: POST:https://10.43.0.1:443/api/v1/namespaces/chunking-440/podtemplates
  STEP: retrieving those results in paged fashion several times @ 07/03/24 12:36:58.774
  I0703 12:36:58.824113 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0703 12:36:58.871104 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0703 12:36:58.920869 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0703 12:36:58.975511 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0703 12:36:59.021072 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0703 12:36:59.072139 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0703 12:36:59.134171 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0703 12:36:59.171365 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0703 12:36:59.222969 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0703 12:36:59.273185 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0703 12:36:59.322056 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0703 12:36:59.372122 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0703 12:36:59.420431 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0703 12:36:59.475158 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0703 12:36:59.527064 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0703 12:36:59.571378 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0703 12:36:59.622906 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0703 12:36:59.677910 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0703 12:36:59.719386 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0703 12:36:59.773213 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0703 12:36:59.824701 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0703 12:36:59.892800 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0703 12:36:59.925503 21 chunking.go:98] Retrieved 17/17 results with rv 11186 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExODYsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0703 12:36:59.974338 21 chunking.go:98] Retrieved 9/17 results with rv 11186 and continue 
  I0703 12:37:00.059839 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0703 12:37:00.099416 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0703 12:37:00.138674 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0703 12:37:00.177861 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0703 12:37:00.221147 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0703 12:37:00.270257 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0703 12:37:00.323638 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0703 12:37:00.369626 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0703 12:37:00.425259 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0703 12:37:00.486780 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0703 12:37:00.526609 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0703 12:37:00.570639 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0703 12:37:00.620529 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0703 12:37:00.670948 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0703 12:37:00.722168 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0703 12:37:00.771299 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0703 12:37:00.825152 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0703 12:37:00.870931 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0703 12:37:00.919975 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0703 12:37:00.970931 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0703 12:37:01.021061 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0703 12:37:01.074071 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0703 12:37:01.122637 21 chunking.go:98] Retrieved 17/17 results with rv 11190 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTAsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0703 12:37:01.169696 21 chunking.go:98] Retrieved 9/17 results with rv 11190 and continue 
  I0703 12:37:01.225295 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDAxNlx1MDAwMCJ9
  I0703 12:37:01.273354 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDAzM1x1MDAwMCJ9
  I0703 12:37:01.326195 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDA1MFx1MDAwMCJ9
  I0703 12:37:01.382316 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDA2N1x1MDAwMCJ9
  I0703 12:37:01.441276 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDA4NFx1MDAwMCJ9
  I0703 12:37:01.480244 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDEwMVx1MDAwMCJ9
  I0703 12:37:01.522088 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDExOFx1MDAwMCJ9
  I0703 12:37:01.572768 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDEzNVx1MDAwMCJ9
  I0703 12:37:01.655131 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDE1Mlx1MDAwMCJ9
  I0703 12:37:01.702654 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDE2OVx1MDAwMCJ9
  I0703 12:37:01.720503 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDE4Nlx1MDAwMCJ9
  I0703 12:37:01.771820 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDIwM1x1MDAwMCJ9
  I0703 12:37:01.823676 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDIyMFx1MDAwMCJ9
  I0703 12:37:01.871241 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDIzN1x1MDAwMCJ9
  I0703 12:37:01.923154 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDI1NFx1MDAwMCJ9
  I0703 12:37:01.970064 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDI3MVx1MDAwMCJ9
  I0703 12:37:02.028049 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDI4OFx1MDAwMCJ9
  I0703 12:37:02.071708 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDMwNVx1MDAwMCJ9
  I0703 12:37:02.155380 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDMyMlx1MDAwMCJ9
  I0703 12:37:02.199310 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDMzOVx1MDAwMCJ9
  I0703 12:37:02.263105 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDM1Nlx1MDAwMCJ9
  I0703 12:37:02.285898 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDM3M1x1MDAwMCJ9
  I0703 12:37:02.336623 21 chunking.go:98] Retrieved 17/17 results with rv 11192 and continue eyJ2IjoibWV0YS5rOHMuaW8vdjEiLCJydiI6MTExOTIsInN0YXJ0IjoidGVtcGxhdGUtMDM5MFx1MDAwMCJ9
  I0703 12:37:02.394205 21 chunking.go:98] Retrieved 9/17 results with rv 11192 and continue 
  STEP: retrieving those results all at once @ 07/03/24 12:37:02.394
  I0703 12:37:02.470324 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "chunking-440" for this suite. @ 07/03/24 12:37:02.474
• [21.459 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] Watchers should observe add, update, and delete watch notifications on configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:60
  STEP: Creating a kubernetes client @ 07/03/24 12:37:02.524
  I0703 12:37:02.525112 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename watch @ 07/03/24 12:37:02.526
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:37:02.595
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:37:02.614
  STEP: creating a watch on configmaps with label A @ 07/03/24 12:37:02.652
  STEP: creating a watch on configmaps with label B @ 07/03/24 12:37:02.657
  STEP: creating a watch on configmaps with label A or B @ 07/03/24 12:37:02.69
  STEP: creating a configmap with label A and ensuring the correct watchers observe the notification @ 07/03/24 12:37:02.706
  I0703 12:37:02.714890 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11205 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:37:02.715165 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11205 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A and ensuring the correct watchers observe the notification @ 07/03/24 12:37:02.715
  I0703 12:37:02.740902 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11207 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:37:02.744260 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11207 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying configmap A again and ensuring the correct watchers observe the notification @ 07/03/24 12:37:02.744
  I0703 12:37:02.777234 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11208 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:37:02.783525 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11208 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap A and ensuring the correct watchers observe the notification @ 07/03/24 12:37:02.783
  I0703 12:37:02.795147 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11209 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:37:02.795350 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-a  watch-194  5bf8aaa4-4afd-4415-b44d-8d505c39bb97 11209 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-A] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: creating a configmap with label B and ensuring the correct watchers observe the notification @ 07/03/24 12:37:02.795
  I0703 12:37:02.826961 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-194  b00c65f8-8fe3-48e1-8401-20a230c30ede 11210 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:37:02.827524 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-194  b00c65f8-8fe3-48e1-8401-20a230c30ede 11210 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: deleting configmap B and ensuring the correct watchers observe the notification @ 07/03/24 12:37:12.846
  I0703 12:37:12.863011 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-194  b00c65f8-8fe3-48e1-8401-20a230c30ede 11635 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:37:12.863097 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-configmap-b  watch-194  b00c65f8-8fe3-48e1-8401-20a230c30ede 11635 0 2024-07-03 12:37:02 +0000 UTC <nil> <nil> map[watch-this-configmap:multiple-watchers-B] map[] [] [] [{e2e.test Update v1 2024-07-03 12:37:02 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:37:22.863354 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-194" for this suite. @ 07/03/24 12:37:22.868
• [20.352 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group and version but different kinds [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:358
  STEP: Creating a kubernetes client @ 07/03/24 12:37:22.878
  I0703 12:37:22.878592 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 12:37:22.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:37:22.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:37:22.984
  STEP: CRs in the same group and version but different kinds (two CRDs) show up in OpenAPI documentation @ 07/03/24 12:37:22.989
  I0703 12:37:22.990090 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:37:24.763221 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:37:34.951325 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6919" for this suite. @ 07/03/24 12:37:34.981
• [12.110 seconds]
------------------------------
SSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:117
  STEP: Creating a kubernetes client @ 07/03/24 12:37:34.989
  I0703 12:37:34.989032 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename field-validation @ 07/03/24 12:37:34.99
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:37:35.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:37:35.235
  STEP: apply creating a deployment @ 07/03/24 12:37:35.279
  I0703 12:37:35.410944 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-56" for this suite. @ 07/03/24 12:37:35.466
• [0.507 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of different groups [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:277
  STEP: Creating a kubernetes client @ 07/03/24 12:37:35.497
  I0703 12:37:35.497680 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 12:37:35.499
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:37:35.607
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:37:35.658
  STEP: CRs in different groups (two CRDs) show up in OpenAPI documentation @ 07/03/24 12:37:35.722
  I0703 12:37:35.727040 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:37:38.554708 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:37:48.018769 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4826" for this suite. @ 07/03/24 12:37:48.082
• [12.625 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl replace should update a single-container pod's image [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1793
  STEP: Creating a kubernetes client @ 07/03/24 12:37:48.125
  I0703 12:37:48.125929 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 12:37:48.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:37:48.278
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:37:48.317
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/03/24 12:37:48.385
  I0703 12:37:48.385420 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-5335 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0703 12:37:48.558227 21 builder.go:146] stderr: ""
  I0703 12:37:48.558301 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: verifying the pod e2e-test-httpd-pod is running @ 07/03/24 12:37:48.558
  STEP: verifying the pod e2e-test-httpd-pod was created @ 07/03/24 12:37:53.61
  I0703 12:37:53.610424 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-5335 get pod e2e-test-httpd-pod -o json'
  I0703 12:37:53.852258 21 builder.go:146] stderr: ""
  I0703 12:37:53.852428 21 builder.go:147] stdout: "{\n    \"apiVersion\": \"v1\",\n    \"kind\": \"Pod\",\n    \"metadata\": {\n        \"annotations\": {\n            \"cni.projectcalico.org/containerID\": \"b1ab9601834fa015e1ff85914bb5ff557354180db71d3c5f0bc556e4d917c7f4\",\n            \"cni.projectcalico.org/podIP\": \"10.42.1.68/32\",\n            \"cni.projectcalico.org/podIPs\": \"10.42.1.68/32\"\n        },\n        \"creationTimestamp\": \"2024-07-03T12:37:48Z\",\n        \"labels\": {\n            \"run\": \"e2e-test-httpd-pod\"\n        },\n        \"name\": \"e2e-test-httpd-pod\",\n        \"namespace\": \"kubectl-5335\",\n        \"resourceVersion\": \"11796\",\n        \"uid\": \"a2deb574-e1ca-48ca-b944-e98f006c7390\"\n    },\n    \"spec\": {\n        \"containers\": [\n            {\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imagePullPolicy\": \"IfNotPresent\",\n                \"name\": \"e2e-test-httpd-pod\",\n                \"resources\": {},\n                \"terminationMessagePath\": \"/dev/termination-log\",\n                \"terminationMessagePolicy\": \"File\",\n                \"volumeMounts\": [\n                    {\n                        \"mountPath\": \"/var/run/secrets/kubernetes.io/serviceaccount\",\n                        \"name\": \"kube-api-access-8lbtl\",\n                        \"readOnly\": true\n                    }\n                ]\n            }\n        ],\n        \"dnsPolicy\": \"ClusterFirst\",\n        \"enableServiceLinks\": true,\n        \"nodeName\": \"ip-172-31-5-183\",\n        \"preemptionPolicy\": \"PreemptLowerPriority\",\n        \"priority\": 0,\n        \"restartPolicy\": \"Always\",\n        \"schedulerName\": \"default-scheduler\",\n        \"securityContext\": {},\n        \"serviceAccount\": \"default\",\n        \"serviceAccountName\": \"default\",\n        \"terminationGracePeriodSeconds\": 30,\n        \"tolerations\": [\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/not-ready\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            },\n            {\n                \"effect\": \"NoExecute\",\n                \"key\": \"node.kubernetes.io/unreachable\",\n                \"operator\": \"Exists\",\n                \"tolerationSeconds\": 300\n            }\n        ],\n        \"volumes\": [\n            {\n                \"name\": \"kube-api-access-8lbtl\",\n                \"projected\": {\n                    \"defaultMode\": 420,\n                    \"sources\": [\n                        {\n                            \"serviceAccountToken\": {\n                                \"expirationSeconds\": 3607,\n                                \"path\": \"token\"\n                            }\n                        },\n                        {\n                            \"configMap\": {\n                                \"items\": [\n                                    {\n                                        \"key\": \"ca.crt\",\n                                        \"path\": \"ca.crt\"\n                                    }\n                                ],\n                                \"name\": \"kube-root-ca.crt\"\n                            }\n                        },\n                        {\n                            \"downwardAPI\": {\n                                \"items\": [\n                                    {\n                                        \"fieldRef\": {\n                                            \"apiVersion\": \"v1\",\n                                            \"fieldPath\": \"metadata.namespace\"\n                                        },\n                                        \"path\": \"namespace\"\n                                    }\n                                ]\n                            }\n                        }\n                    ]\n                }\n            }\n        ]\n    },\n    \"status\": {\n        \"conditions\": [\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-03T12:37:51Z\",\n                \"status\": \"True\",\n                \"type\": \"PodReadyToStartContainers\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-03T12:37:48Z\",\n                \"status\": \"True\",\n                \"type\": \"Initialized\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-03T12:37:51Z\",\n                \"status\": \"True\",\n                \"type\": \"Ready\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-03T12:37:51Z\",\n                \"status\": \"True\",\n                \"type\": \"ContainersReady\"\n            },\n            {\n                \"lastProbeTime\": null,\n                \"lastTransitionTime\": \"2024-07-03T12:37:48Z\",\n                \"status\": \"True\",\n                \"type\": \"PodScheduled\"\n            }\n        ],\n        \"containerStatuses\": [\n            {\n                \"containerID\": \"docker://e5f9226f4b3868c43c0dd5752c659f759b18da63c2e76c34432c0304103b3fb6\",\n                \"image\": \"registry.k8s.io/e2e-test-images/httpd:2.4.38-4\",\n                \"imageID\": \"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22\",\n                \"lastState\": {},\n                \"name\": \"e2e-test-httpd-pod\",\n                \"ready\": true,\n                \"restartCount\": 0,\n                \"started\": true,\n                \"state\": {\n                    \"running\": {\n                        \"startedAt\": \"2024-07-03T12:37:50Z\"\n                    }\n                }\n            }\n        ],\n        \"hostIP\": \"172.31.5.183\",\n        \"hostIPs\": [\n            {\n                \"ip\": \"172.31.5.183\"\n            }\n        ],\n        \"phase\": \"Running\",\n        \"podIP\": \"10.42.1.68\",\n        \"podIPs\": [\n            {\n                \"ip\": \"10.42.1.68\"\n            }\n        ],\n        \"qosClass\": \"BestEffort\",\n        \"startTime\": \"2024-07-03T12:37:48Z\"\n    }\n}\n"
  STEP: replace the image in the pod @ 07/03/24 12:37:53.852
  I0703 12:37:53.852531 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-5335 replace -f -'
  I0703 12:37:54.150991 21 builder.go:146] stderr: ""
  I0703 12:37:54.151040 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod replaced\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/busybox:1.36.1-1 @ 07/03/24 12:37:54.151
  I0703 12:37:54.163912 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-5335 delete pods e2e-test-httpd-pod'
  I0703 12:37:56.466649 21 builder.go:146] stderr: ""
  I0703 12:37:56.466699 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0703 12:37:56.466814 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-5335" for this suite. @ 07/03/24 12:37:56.471
• [8.353 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply a finalizer to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:400
  STEP: Creating a kubernetes client @ 07/03/24 12:37:56.479
  I0703 12:37:56.479134 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename namespaces @ 07/03/24 12:37:56.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:37:56.58
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:37:56.603
  STEP: Creating namespace "e2e-ns-kp6bg" @ 07/03/24 12:37:56.653
  I0703 12:37:56.727220 21 namespace.go:411] Namespace "e2e-ns-kp6bg-1902" has []v1.FinalizerName{"kubernetes"}
  STEP: Adding e2e finalizer to namespace "e2e-ns-kp6bg-1902" @ 07/03/24 12:37:56.727
  I0703 12:37:56.751624 21 namespace.go:434] Namespace "e2e-ns-kp6bg-1902" has []v1.FinalizerName{"kubernetes", "e2e.example.com/fakeFinalizer"}
  STEP: Removing e2e finalizer from namespace "e2e-ns-kp6bg-1902" @ 07/03/24 12:37:56.751
  I0703 12:37:56.797938 21 namespace.go:463] Namespace "e2e-ns-kp6bg-1902" has []v1.FinalizerName{"kubernetes"}
  I0703 12:37:56.798569 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-6829" for this suite. @ 07/03/24 12:37:56.809
  STEP: Destroying namespace "e2e-ns-kp6bg-1902" for this suite. @ 07/03/24 12:37:56.853
• [0.404 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:58
  STEP: Creating a kubernetes client @ 07/03/24 12:37:56.9
  I0703 12:37:56.900672 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:37:56.902
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:37:56.972
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:37:57.027
  STEP: Creating configMap with name projected-configmap-test-volume-8e15cdac-f2a3-4df5-aff0-82a856c50703 @ 07/03/24 12:37:57.05
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:37:57.072
  STEP: Saw pod success @ 07/03/24 12:38:01.129
  I0703 12:38:01.135709 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-configmaps-65669571-3a3c-4ee3-aa57-2dfd0ac477d7 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:38:01.155
  I0703 12:38:01.184868 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1643" for this suite. @ 07/03/24 12:38:01.192
• [4.306 seconds]
------------------------------
S
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from log output if TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:216
  STEP: Creating a kubernetes client @ 07/03/24 12:38:01.206
  I0703 12:38:01.206681 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-runtime @ 07/03/24 12:38:01.207
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:01.319
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:01.394
  STEP: create the container @ 07/03/24 12:38:01.409
  W0703 12:38:01.449355      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Failed @ 07/03/24 12:38:01.449
  STEP: get the container status @ 07/03/24 12:38:05.556
  STEP: the container should be terminated @ 07/03/24 12:38:05.563
  STEP: the termination message should be set @ 07/03/24 12:38:05.563
  I0703 12:38:05.563508 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/03/24 12:38:05.563
  I0703 12:38:05.603735 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-2075" for this suite. @ 07/03/24 12:38:05.621
• [4.430 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate configmap [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:250
  STEP: Creating a kubernetes client @ 07/03/24 12:38:05.636
  I0703 12:38:05.636495 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:38:05.637
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:05.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:05.845
  STEP: Setting up server cert @ 07/03/24 12:38:06.164
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:38:07.145
  STEP: Deploying the webhook pod @ 07/03/24 12:38:07.16
  STEP: Wait for the deployment to be ready @ 07/03/24 12:38:07.197
  I0703 12:38:07.241038 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0703 12:38:09.255745 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:38:11.264810 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 7, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:38:13.263
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:38:13.287
  I0703 12:38:14.299489 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating configmap webhook via the AdmissionRegistration API @ 07/03/24 12:38:14.304
  STEP: create a configmap that should be updated by the webhook @ 07/03/24 12:38:14.325
  I0703 12:38:14.447830 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9221" for this suite. @ 07/03/24 12:38:14.463
  STEP: Destroying namespace "webhook-markers-389" for this suite. @ 07/03/24 12:38:14.472
• [8.849 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with terminating scopes. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:695
  STEP: Creating a kubernetes client @ 07/03/24 12:38:14.486
  I0703 12:38:14.486045 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 12:38:14.487
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:14.555
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:14.597
  STEP: Creating a ResourceQuota with terminating scope @ 07/03/24 12:38:14.624
  STEP: Ensuring ResourceQuota status is calculated @ 07/03/24 12:38:14.635
  STEP: Creating a ResourceQuota with not terminating scope @ 07/03/24 12:38:16.638
  STEP: Ensuring ResourceQuota status is calculated @ 07/03/24 12:38:16.643
  STEP: Creating a long running pod @ 07/03/24 12:38:18.646
  STEP: Ensuring resource quota with not terminating scope captures the pod usage @ 07/03/24 12:38:18.665
  STEP: Ensuring resource quota with terminating scope ignored the pod usage @ 07/03/24 12:38:20.682
  STEP: Deleting the pod @ 07/03/24 12:38:22.688
  STEP: Ensuring resource quota status released the pod usage @ 07/03/24 12:38:22.734
  STEP: Creating a terminating pod @ 07/03/24 12:38:24.737
  STEP: Ensuring resource quota with terminating scope captures the pod usage @ 07/03/24 12:38:24.756
  STEP: Ensuring resource quota with not terminating scope ignored the pod usage @ 07/03/24 12:38:26.761
  STEP: Deleting the pod @ 07/03/24 12:38:28.768
  STEP: Ensuring resource quota status released the pod usage @ 07/03/24 12:38:28.823
  I0703 12:38:30.826807 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8648" for this suite. @ 07/03/24 12:38:30.834
• [16.368 seconds]
------------------------------
SSSS
------------------------------
[sig-instrumentation] Events should manage the lifecycle of an event [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/core_events.go:58
  STEP: Creating a kubernetes client @ 07/03/24 12:38:30.854
  I0703 12:38:30.854576 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename events @ 07/03/24 12:38:30.855
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:30.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:30.963
  STEP: creating a test event @ 07/03/24 12:38:30.968
  STEP: listing all events in all namespaces @ 07/03/24 12:38:30.975
  STEP: patching the test event @ 07/03/24 12:38:31.01
  STEP: fetching the test event @ 07/03/24 12:38:31.067
  STEP: updating the test event @ 07/03/24 12:38:31.082
  STEP: getting the test event @ 07/03/24 12:38:31.117
  STEP: deleting the test event @ 07/03/24 12:38:31.122
  STEP: listing all events in all namespaces @ 07/03/24 12:38:31.171
  I0703 12:38:31.265027 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-654" for this suite. @ 07/03/24 12:38:31.27
• [0.431 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with pruning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:332
  STEP: Creating a kubernetes client @ 07/03/24 12:38:31.285
  I0703 12:38:31.285945 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:38:31.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:31.387
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:31.431
  STEP: Setting up server cert @ 07/03/24 12:38:31.595
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:38:33.077
  STEP: Deploying the webhook pod @ 07/03/24 12:38:33.088
  STEP: Wait for the deployment to be ready @ 07/03/24 12:38:33.121
  I0703 12:38:33.170164 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0703 12:38:35.180258 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:38:37.184927 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 38, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:38:39.186
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:38:39.21
  I0703 12:38:40.211517 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0703 12:38:40.219363 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-9338-crds.webhook.example.com via the AdmissionRegistration API @ 07/03/24 12:38:40.771
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/03/24 12:38:40.802
  I0703 12:38:43.718408 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5782" for this suite. @ 07/03/24 12:38:43.754
  STEP: Destroying namespace "webhook-markers-9661" for this suite. @ 07/03/24 12:38:43.846
• [12.592 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (cpu) as default cpu limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:251
  STEP: Creating a kubernetes client @ 07/03/24 12:38:43.878
  I0703 12:38:43.878890 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:38:43.879
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:44.121
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:44.128
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:38:44.143
  STEP: Saw pod success @ 07/03/24 12:38:48.362
  I0703 12:38:48.367817 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-647ecc2b-ccbc-4c95-97d7-6743d3fb38f9 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:38:48.396
  I0703 12:38:48.530052 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9192" for this suite. @ 07/03/24 12:38:48.534
• [4.676 seconds]
------------------------------
SSS
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] will start an ephemeral container in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:51
  STEP: Creating a kubernetes client @ 07/03/24 12:38:48.557
  I0703 12:38:48.565738 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/03/24 12:38:48.571
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:48.713
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:48.732
  STEP: creating a target pod @ 07/03/24 12:38:48.75
  STEP: adding an ephemeral container @ 07/03/24 12:38:50.897
  STEP: checking pod container endpoints @ 07/03/24 12:38:54.965
  I0703 12:38:54.965740 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6037 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:38:54.965841 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:38:54.979538 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:38:54.979736 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-6037/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0703 12:38:55.126997 21 exec_util.go:106] Exec stderr: ""
  I0703 12:38:55.138749 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6037" for this suite. @ 07/03/24 12:38:55.152
• [6.605 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ExternalName to ClusterIP [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1420
  STEP: Creating a kubernetes client @ 07/03/24 12:38:55.163
  I0703 12:38:55.163224 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 12:38:55.164
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:38:55.205
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:38:55.218
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-4276 @ 07/03/24 12:38:55.255
  STEP: changing the ExternalName service to type=ClusterIP @ 07/03/24 12:38:55.287
  STEP: creating replication controller externalname-service in namespace services-4276 @ 07/03/24 12:38:55.337
  I0703 12:38:55.363967      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-4276, replica count: 2
  I0703 12:38:58.418648      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 12:38:58.418682 21 resource.go:361] Creating new exec pod
  I0703 12:39:03.504675 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-4276 exec execpodpmhql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0703 12:39:03.958842 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0703 12:39:03.959489 21 builder.go:147] stdout: ""
  I0703 12:39:04.505012 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-4276 exec execpodpmhql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0703 12:39:05.837810 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0703 12:39:05.837867 21 builder.go:147] stdout: "externalname-service-946nn"
  I0703 12:39:05.837996 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-4276 exec execpodpmhql -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.184.70 80'
  I0703 12:39:06.367310 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.184.70 80\nConnection to 10.43.184.70 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0703 12:39:06.367432 21 builder.go:147] stdout: "externalname-service-z8w69"
  I0703 12:39:06.367528 21 service.go:1429] Cleaning up the ExternalName to ClusterIP test service
  I0703 12:39:06.493694 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-4276" for this suite. @ 07/03/24 12:39:06.505
• [11.426 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Pods should be submitted and removed [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:227
  STEP: Creating a kubernetes client @ 07/03/24 12:39:06.589
  I0703 12:39:06.589180 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 12:39:06.59
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:39:06.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:39:06.783
  STEP: creating the pod @ 07/03/24 12:39:06.817
  STEP: setting up watch @ 07/03/24 12:39:06.817
  STEP: submitting the pod to kubernetes @ 07/03/24 12:39:06.927
  STEP: verifying the pod is in kubernetes @ 07/03/24 12:39:07.023
  STEP: verifying pod creation was observed @ 07/03/24 12:39:07.049
  STEP: deleting the pod gracefully @ 07/03/24 12:39:11.116
  STEP: verifying pod deletion was observed @ 07/03/24 12:39:11.129
  I0703 12:39:12.576780 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-1676" for this suite. @ 07/03/24 12:39:12.587
• [6.009 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:58
  STEP: Creating a kubernetes client @ 07/03/24 12:39:12.607
  I0703 12:39:12.608019 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 12:39:12.609
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:39:12.654
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:39:12.677
  STEP: Creating configMap with name configmap-test-volume-f341c6cb-e628-482f-b3f2-d0431add0cb1 @ 07/03/24 12:39:12.696
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:39:12.712
  STEP: Saw pod success @ 07/03/24 12:39:18.801
  I0703 12:39:18.817982 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-b2727269-45f6-4e20-a489-bd8fd98ead31 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:39:18.837
  I0703 12:39:18.877318 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-4261" for this suite. @ 07/03/24 12:39:18.884
• [6.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: udp [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:96
  STEP: Creating a kubernetes client @ 07/03/24 12:39:18.92
  I0703 12:39:18.920576 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pod-network-test @ 07/03/24 12:39:18.922
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:39:18.983
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:39:18.998
  STEP: Performing setup for networking test in namespace pod-network-test-9011 @ 07/03/24 12:39:19.058
  STEP: creating a selector @ 07/03/24 12:39:19.058
  STEP: Creating the service pods in kubernetes @ 07/03/24 12:39:19.059
  I0703 12:39:19.068212 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/03/24 12:39:41.692
  I0703 12:39:45.791020 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0703 12:39:45.791065 21 networking.go:42] Breadth first check of 10.42.0.29 on host 172.31.4.137...
  I0703 12:39:45.793943 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.79:9080/dial?request=hostname&protocol=udp&host=10.42.0.29&port=8081&tries=1'] Namespace:pod-network-test-9011 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:39:45.798521 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:39:45.807843 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:39:45.808159 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.29%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0703 12:39:50.959953 21 utils.go:331] Waiting for responses: map[netserver-0:{}]
  I0703 12:39:52.962733 21 utils.go:258] 
  Output of kubectl describe pod pod-network-test-9011/netserver-0:

  I0703 12:39:52.962991 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=pod-network-test-9011 describe pod netserver-0 --namespace=pod-network-test-9011'
  I0703 12:39:53.086808 21 builder.go:146] stderr: ""
  I0703 12:39:53.086904 21 builder.go:147] stdout: "Name:             netserver-0\nNamespace:        pod-network-test-9011\nPriority:         0\nService Account:  default\nNode:             ip-172-31-4-137/172.31.4.137\nStart Time:       Wed, 03 Jul 2024 12:39:19 +0000\nLabels:           selector-f4b9d19e-b284-4908-a437-d5550cf3bf4a=true\nAnnotations:      cni.projectcalico.org/containerID: c33c405029ea64e2ee38009ea55cd43a627df2cdbbbeb9f1642a254f5353e43d\n                  cni.projectcalico.org/podIP: 10.42.0.29/32\n                  cni.projectcalico.org/podIPs: 10.42.0.29/32\nStatus:           Running\nIP:               10.42.0.29\nIPs:\n  IP:  10.42.0.29\nContainers:\n  webserver:\n    Container ID:  docker://e55f5846a562b0c4bf47443007d8df8f6f77d97eaac28908f1d5756f93115bf3\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 03 Jul 2024 12:39:20 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-h5hg9 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-h5hg9:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-4-137\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-9011/netserver-0 to ip-172-31-4-137\n  Normal  Pulled     33s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    33s   kubelet            Created container webserver\n  Normal  Started    33s   kubelet            Started container webserver\n"
  I0703 12:39:53.086926 21 utils.go:261] Name:             netserver-0
  Namespace:        pod-network-test-9011
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-4-137/172.31.4.137
  Start Time:       Wed, 03 Jul 2024 12:39:19 +0000
  Labels:           selector-f4b9d19e-b284-4908-a437-d5550cf3bf4a=true
  Annotations:      cni.projectcalico.org/containerID: c33c405029ea64e2ee38009ea55cd43a627df2cdbbbeb9f1642a254f5353e43d
                    cni.projectcalico.org/podIP: 10.42.0.29/32
                    cni.projectcalico.org/podIPs: 10.42.0.29/32
  Status:           Running
  IP:               10.42.0.29
  IPs:
    IP:  10.42.0.29
  Containers:
    webserver:
      Container ID:  docker://e55f5846a562b0c4bf47443007d8df8f6f77d97eaac28908f1d5756f93115bf3
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 03 Jul 2024 12:39:20 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-h5hg9 (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-h5hg9:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-4-137
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-9011/netserver-0 to ip-172-31-4-137
    Normal  Pulled     33s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    33s   kubelet            Created container webserver
    Normal  Started    33s   kubelet            Started container webserver

  I0703 12:39:53.087223 21 utils.go:258] 
  Output of kubectl describe pod pod-network-test-9011/netserver-1:

  I0703 12:39:53.087305 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=pod-network-test-9011 describe pod netserver-1 --namespace=pod-network-test-9011'
  I0703 12:39:53.279869 21 builder.go:146] stderr: ""
  I0703 12:39:53.279976 21 builder.go:147] stdout: "Name:             netserver-1\nNamespace:        pod-network-test-9011\nPriority:         0\nService Account:  default\nNode:             ip-172-31-4-210/172.31.4.210\nStart Time:       Wed, 03 Jul 2024 12:39:19 +0000\nLabels:           selector-f4b9d19e-b284-4908-a437-d5550cf3bf4a=true\nAnnotations:      cni.projectcalico.org/containerID: cfbd321ac867ec8f1f23e74fec315be674d69b935753aee02fe0f058922080a4\n                  cni.projectcalico.org/podIP: 10.42.2.31/32\n                  cni.projectcalico.org/podIPs: 10.42.2.31/32\nStatus:           Running\nIP:               10.42.2.31\nIPs:\n  IP:  10.42.2.31\nContainers:\n  webserver:\n    Container ID:  docker://69312f6bd3ef2695e3db67e3294a72277a773baaea790dabf351ef5a69651eb1\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 03 Jul 2024 12:39:21 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8pcqz (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-8pcqz:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-4-210\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-9011/netserver-1 to ip-172-31-4-210\n  Normal  Pulled     33s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    33s   kubelet            Created container webserver\n  Normal  Started    32s   kubelet            Started container webserver\n"
  I0703 12:39:53.279999 21 utils.go:261] Name:             netserver-1
  Namespace:        pod-network-test-9011
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-4-210/172.31.4.210
  Start Time:       Wed, 03 Jul 2024 12:39:19 +0000
  Labels:           selector-f4b9d19e-b284-4908-a437-d5550cf3bf4a=true
  Annotations:      cni.projectcalico.org/containerID: cfbd321ac867ec8f1f23e74fec315be674d69b935753aee02fe0f058922080a4
                    cni.projectcalico.org/podIP: 10.42.2.31/32
                    cni.projectcalico.org/podIPs: 10.42.2.31/32
  Status:           Running
  IP:               10.42.2.31
  IPs:
    IP:  10.42.2.31
  Containers:
    webserver:
      Container ID:  docker://69312f6bd3ef2695e3db67e3294a72277a773baaea790dabf351ef5a69651eb1
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 03 Jul 2024 12:39:21 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-8pcqz (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-8pcqz:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-4-210
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-9011/netserver-1 to ip-172-31-4-210
    Normal  Pulled     33s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    33s   kubelet            Created container webserver
    Normal  Started    32s   kubelet            Started container webserver

  I0703 12:39:53.280212 21 utils.go:258] 
  Output of kubectl describe pod pod-network-test-9011/netserver-2:

  I0703 12:39:53.280269 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=pod-network-test-9011 describe pod netserver-2 --namespace=pod-network-test-9011'
  I0703 12:39:53.427622 21 builder.go:146] stderr: ""
  I0703 12:39:53.427897 21 builder.go:147] stdout: "Name:             netserver-2\nNamespace:        pod-network-test-9011\nPriority:         0\nService Account:  default\nNode:             ip-172-31-5-183/172.31.5.183\nStart Time:       Wed, 03 Jul 2024 12:39:19 +0000\nLabels:           selector-f4b9d19e-b284-4908-a437-d5550cf3bf4a=true\nAnnotations:      cni.projectcalico.org/containerID: 39888dfa5954b92ca1cff1e262c7390af84cc21261379989d42459cc649fa502\n                  cni.projectcalico.org/podIP: 10.42.1.78/32\n                  cni.projectcalico.org/podIPs: 10.42.1.78/32\nStatus:           Running\nIP:               10.42.1.78\nIPs:\n  IP:  10.42.1.78\nContainers:\n  webserver:\n    Container ID:  docker://ccfc8ec2e47c77faaac265bf5e770189ed6b9512fcd02c5791cc6db1ff8be3cc\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 03 Jul 2024 12:39:21 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-p6z7q (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-p6z7q:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-5-183\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-9011/netserver-2 to ip-172-31-5-183\n  Normal  Pulled     33s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    32s   kubelet            Created container webserver\n  Normal  Started    32s   kubelet            Started container webserver\n"
  I0703 12:39:53.427963 21 utils.go:261] Name:             netserver-2
  Namespace:        pod-network-test-9011
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-5-183/172.31.5.183
  Start Time:       Wed, 03 Jul 2024 12:39:19 +0000
  Labels:           selector-f4b9d19e-b284-4908-a437-d5550cf3bf4a=true
  Annotations:      cni.projectcalico.org/containerID: 39888dfa5954b92ca1cff1e262c7390af84cc21261379989d42459cc649fa502
                    cni.projectcalico.org/podIP: 10.42.1.78/32
                    cni.projectcalico.org/podIPs: 10.42.1.78/32
  Status:           Running
  IP:               10.42.1.78
  IPs:
    IP:  10.42.1.78
  Containers:
    webserver:
      Container ID:  docker://ccfc8ec2e47c77faaac265bf5e770189ed6b9512fcd02c5791cc6db1ff8be3cc
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 03 Jul 2024 12:39:21 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-p6z7q (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-p6z7q:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-5-183
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  33s   default-scheduler  Successfully assigned pod-network-test-9011/netserver-2 to ip-172-31-5-183
    Normal  Pulled     33s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    32s   kubelet            Created container webserver
    Normal  Started    32s   kubelet            Started container webserver

  I0703 12:39:53.429054 21 utils.go:345] encountered error during dial (did not find expected responses... 
  Tries 1
  Command curl -g -q -s 'http://10.42.1.79:9080/dial?request=hostname&protocol=udp&host=10.42.0.29&port=8081&tries=1'
  retrieved map[]
  expected map[netserver-0:{}])
  I0703 12:39:53.429124 21 networking.go:48] ...failed...will try again in next pass
  I0703 12:39:53.429139 21 networking.go:42] Breadth first check of 10.42.2.31 on host 172.31.4.210...
  I0703 12:39:53.431995 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.79:9080/dial?request=hostname&protocol=udp&host=10.42.2.31&port=8081&tries=1'] Namespace:pod-network-test-9011 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:39:53.432030 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:39:53.432820 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:39:53.432894 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.2.31%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0703 12:39:53.756777 21 utils.go:331] Waiting for responses: map[]
  I0703 12:39:53.756818 21 utils.go:335] reached 10.42.2.31 after 0/1 tries
  I0703 12:39:53.756832 21 networking.go:42] Breadth first check of 10.42.1.78 on host 172.31.5.183...
  I0703 12:39:53.767026 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.79:9080/dial?request=hostname&protocol=udp&host=10.42.1.78&port=8081&tries=1'] Namespace:pod-network-test-9011 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:39:53.767070 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:39:53.767858 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:39:53.767935 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.1.78%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0703 12:39:54.199716 21 utils.go:331] Waiting for responses: map[]
  I0703 12:39:54.200039 21 utils.go:335] reached 10.42.1.78 after 0/1 tries
  I0703 12:39:54.200131 21 networking.go:53] Going to retry 1 out of 3 pods....
  I0703 12:39:54.200212 21 networking.go:55] Doublechecking 1 pods in host 172.31.4.137 which weren't seen the first time.
  I0703 12:39:54.200291 21 networking.go:57] Now attempting to probe pod [[[ 10.42.0.29 ]]]
  I0703 12:39:54.205265 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.79:9080/dial?request=hostname&protocol=udp&host=10.42.0.29&port=8081&tries=1'] Namespace:pod-network-test-9011 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:39:54.205562 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:39:54.206738 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:39:54.206965 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-9011/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.79%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dudp%26host%3D10.42.0.29%26port%3D8081%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0703 12:39:54.419069 21 utils.go:331] Waiting for responses: map[]
  I0703 12:39:54.419111 21 utils.go:335] reached 10.42.0.29 after 0/39 tries
  I0703 12:39:54.419127 21 networking.go:61] Was able to reach 10.42.0.29 on 172.31.4.137 
  I0703 12:39:54.419139 21 networking.go:63] ... Done probing pod [[[ 10.42.0.29 ]]]
  I0703 12:39:54.419153 21 networking.go:65] succeeded at polling 3 out of 3 connections
  I0703 12:39:54.419242 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-9011" for this suite. @ 07/03/24 12:39:54.424
• [35.536 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should run the lifecycle of a Deployment [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:185
  STEP: Creating a kubernetes client @ 07/03/24 12:39:54.463
  I0703 12:39:54.463237 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 12:39:54.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:39:54.556
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:39:54.562
  STEP: creating a Deployment @ 07/03/24 12:39:54.58
  STEP: waiting for Deployment to be created @ 07/03/24 12:39:54.6
  STEP: waiting for all Replicas to be Ready @ 07/03/24 12:39:54.609
  I0703 12:39:54.613472 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:54.614915 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:54.708335 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:54.708520 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:54.802821 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:54.802986 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:54.895251 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:54.895446 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0 and labels map[test-deployment-static:true]
  I0703 12:39:56.708361 21 deployment.go:246] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0703 12:39:56.708408 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1 and labels map[test-deployment-static:true]
  I0703 12:39:56.928156 21 deployment.go:248] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2 and labels map[test-deployment-static:true]
  STEP: patching the Deployment @ 07/03/24 12:39:56.928
  I0703 12:39:56.978705 21 deployment.go:290] observed event type ADDED
  STEP: waiting for Replicas to scale @ 07/03/24 12:39:56.978
  I0703 12:39:57.018900 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.018972 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.018992 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.019004 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.019127 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.019139 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.019467 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.019498 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 0
  I0703 12:39:57.019514 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:39:57.019645 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:39:57.019736 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.019818 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.019909 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.020056 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.043055 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.043095 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.150925 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.150964 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:57.236234 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:39:57.236273 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:39:57.276464 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:39:57.276641 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:39:59.780333 21 deployment.go:309] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:59.780374 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:39:59.820544 21 deployment.go:311] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  STEP: listing Deployments @ 07/03/24 12:39:59.82
  I0703 12:39:59.850645 21 deployment.go:327] Found test-deployment with labels: map[test-deployment:patched test-deployment-static:true]
  STEP: updating the Deployment @ 07/03/24 12:39:59.85
  I0703 12:40:00.087064 21 deployment.go:360] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  STEP: fetching the DeploymentStatus @ 07/03/24 12:40:00.087
  I0703 12:40:00.248534 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:00.271478 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:00.271677 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:00.360952 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:00.569987 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:04.169164 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:04.373792 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:04.445775 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:04.660546 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:04.763605 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2 and labels map[test-deployment:updated test-deployment-static:true]
  I0703 12:40:07.122547 21 deployment.go:389] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 3 and labels map[test-deployment:updated test-deployment-static:true]
  STEP: patching the DeploymentStatus @ 07/03/24 12:40:07.268
  STEP: fetching the DeploymentStatus @ 07/03/24 12:40:07.355
  I0703 12:40:07.437273 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:40:07.439988 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:40:07.440152 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:40:07.449910 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:40:07.450120 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 1
  I0703 12:40:07.451677 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:40:07.451862 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:40:07.452216 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:40:07.452319 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:40:07.452424 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 2
  I0703 12:40:07.452707 21 deployment.go:449] observed Deployment test-deployment in namespace deployment-7278 with ReadyReplicas 3
  STEP: deleting the Deployment @ 07/03/24 12:40:07.452
  I0703 12:40:07.591061 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.591110 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.591124 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.602787 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.602840 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.602859 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603003 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603023 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603038 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603315 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603336 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603350 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603453 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.603469 21 deployment.go:475] observed event type MODIFIED
  I0703 12:40:07.629243 21 deployment.go:650] Log out all the ReplicaSets if there is no deployment created
  I0703 12:40:07.646875 21 deployment.go:657] ReplicaSet "test-deployment-5bf4984755":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-5bf4984755",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d16a9413-b3ef-4276-9195-3818b9d747d5",
      ResourceVersion: (string) (len=5) "12765",
      Generation: (int64) 3,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607194,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d5717c1d-cc02-40df-a20e-ad8837e14ee8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 35 37 31  37 63 31 64 2d 63 63 30  |":\"d5717c1d-cc0|
              00000130  32 2d 34 30 64 66 2d 61  32 30 65 2d 61 64 38 38  |2-40df-a20e-ad88|
              00000140  33 37 65 31 34 65 65 38  5c 22 7d 22 3a 7b 7d 7d  |37e14ee8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=22) "test-deployment-static": (string) (len=4) "true",
            (string) (len=17) "pod-template-hash": (string) (len=10) "5bf4984755"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 3,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0703 12:40:07.660166 21 deployment.go:657] ReplicaSet "test-deployment-65fbf5b65d":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-65fbf5b65d",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "b8f75f7d-62a2-4dea-ba83-8cc686034759",
      ResourceVersion: (string) (len=5) "12901",
      Generation: (int64) 4,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607197,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d5717c1d-cc02-40df-a20e-ad8837e14ee8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 35 37 31  37 63 31 64 2d 63 63 30  |":\"d5717c1d-cc0|
              00000130  32 2d 34 30 64 66 2d 61  32 30 65 2d 61 64 38 38  |2-40df-a20e-ad88|
              00000140  33 37 65 31 34 65 65 38  5c 22 7d 22 3a 7b 7d 7d  |37e14ee8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607207,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
          (string) (len=22) "test-deployment-static": (string) (len=4) "true"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=25) "registry.k8s.io/pause:3.9",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(2),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 4,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0703 12:40:07.691088 21 deployment.go:669] pod: "test-deployment-65fbf5b65d-jhxnr":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-65fbf5b65d-jhxnr",
      GenerateName: (string) (len=27) "test-deployment-65fbf5b65d-",
      Namespace: (string) (len=15) "deployment-7278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "312892f3-e3f1-43c7-b5d7-a6d4cf014b30",
      ResourceVersion: (string) (len=5) "12906",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607197,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607209,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(2),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "65fbf5b65d",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "5ae6e4def59ef8cf52ae42fc184f50fda358aa0679561e37e23fdad1865b6ecc",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) "",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) ""
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-65fbf5b65d",
          UID: (types.UID) (len=36) "b8f75f7d-62a2-4dea-ba83-8cc686034759",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607197,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  62 38 66 37 35 66 37 64  |uid\":\"b8f75f7d|
              000000a0  2d 36 32 61 32 2d 34 64  65 61 2d 62 61 38 33 2d  |-62a2-4dea-ba83-|
              000000b0  38 63 63 36 38 36 30 33  34 37 35 39 5c 22 7d 22  |8cc686034759\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 31  5c 22 7d 22 3a 7b 22 2e  |.42.1.81\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607207,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-k7pxc",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-k7pxc",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(2),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607197,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607199,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607197,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=10) "10.42.1.81",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.81"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607197,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855607199,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=25) "registry.k8s.io/pause:3.9",
          ImageID: (string) (len=111) "docker-pullable://registry.k8s.io/pause@sha256:7031c1b283388d2c2e09b57badb803c05ebed362dc88d84b480cc47f72a21097",
          ContainerID: (string) (len=73) "docker://5dc05e0ffc01553b2ab895b0c5a72fa1f9050893f9e8c1dc697700443dfa1f49",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0703 12:40:07.693959 21 deployment.go:657] ReplicaSet "test-deployment-6b9f8f4d48":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=26) "test-deployment-6b9f8f4d48",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-7278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "13671d3e-75b0-4539-9067-58edb1cdf5a0",
      ResourceVersion: (string) (len=5) "12889",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "3",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "2",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "3"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=15) "test-deployment",
          UID: (types.UID) (len=36) "d5717c1d-cc02-40df-a20e-ad8837e14ee8",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=827) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              000000d0  65 2d 68 61 73 68 22 3a  7b 7d 2c 22 66 3a 74 65  |e-hash":{},"f:te|
              000000e0  73 74 2d 64 65 70 6c 6f  79 6d 65 6e 74 2d 73 74  |st-deployment-st|
              000000f0  61 74 69 63 22 3a 7b 7d  7d 2c 22 66 3a 6f 77 6e  |atic":{}},"f:own|
              00000100  65 72 52 65 66 65 72 65  6e 63 65 73 22 3a 7b 22  |erReferences":{"|
              00000110  2e 22 3a 7b 7d 2c 22 6b  3a 7b 5c 22 75 69 64 5c  |.":{},"k:{\"uid\|
              00000120  22 3a 5c 22 64 35 37 31  37 63 31 64 2d 63 63 30  |":\"d5717c1d-cc0|
              00000130  32 2d 34 30 64 66 2d 61  32 30 65 2d 61 64 38 38  |2-40df-a20e-ad88|
              00000140  33 37 65 31 34 65 65 38  5c 22 7d 22 3a 7b 7d 7d  |37e14ee8\"}":{}}|
              00000150  7d 2c 22 66 3a 73 70 65  63 22 3a 7b 22 66 3a 72  |},"f:spec":{"f:r|
              00000160  65 70 6c 69 63 61 73 22  3a 7b 7d 2c 22 66 3a 73  |eplicas":{},"f:s|
              00000170  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 74  |elector":{},"f:t|
              00000180  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000190  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              000001a0  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 70 6f  |s":{".":{},"f:po|
              000001b0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001c0  3a 7b 7d 2c 22 66 3a 74  65 73 74 2d 64 65 70 6c  |:{},"f:test-depl|
              000001d0  6f 79 6d 65 6e 74 2d 73  74 61 74 69 63 22 3a 7b  |oyment-static":{|
              000001e0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000200  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 74 65 73  |:{\"name\":\"tes|
              00000210  74 2d 64 65 70 6c 6f 79  6d 65 6e 74 5c 22 7d 22  |t-deployment\"}"|
              00000220  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 69 6d 61 67  |:{".":{},"f:imag|
              00000230  65 22 3a 7b 7d 2c 22 66  3a 69 6d 61 67 65 50 75  |e":{},"f:imagePu|
              00000240  6c 6c 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |llPolicy":{},"f:|
              00000250  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 72 65 73 6f  |name":{},"f:reso|
              00000260  75 72 63 65 73 22 3a 7b  7d 2c 22 66 3a 73 65 63  |urces":{},"f:sec|
              00000270  75 72 69 74 79 43 6f 6e  74 65 78 74 22 3a 7b 7d  |urityContext":{}|
              00000280  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000290  65 73 73 61 67 65 50 61  74 68 22 3a 7b 7d 2c 22  |essagePath":{},"|
              000002a0  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 4d 65 73  |f:terminationMes|
              000002b0  73 61 67 65 50 6f 6c 69  63 79 22 3a 7b 7d 7d 7d  |sagePolicy":{}}}|
              000002c0  2c 22 66 3a 64 6e 73 50  6f 6c 69 63 79 22 3a 7b  |,"f:dnsPolicy":{|
              000002d0  7d 2c 22 66 3a 72 65 73  74 61 72 74 50 6f 6c 69  |},"f:restartPoli|
              000002e0  63 79 22 3a 7b 7d 2c 22  66 3a 73 63 68 65 64 75  |cy":{},"f:schedu|
              000002f0  6c 65 72 4e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 73  |lerName":{},"f:s|
              00000300  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000310  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000320  6e 47 72 61 63 65 50 65  72 69 6f 64 53 65 63 6f  |nGracePeriodSeco|
              00000330  6e 64 73 22 3a 7b 7d 7d  7d 7d 7d                 |nds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(2),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=22) "test-deployment-static": (string) (len=4) "true",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
            (string) (len=22) "test-deployment-static": (string) (len=4) "true"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=15) "test-deployment",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(1),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 2,
      FullyLabeledReplicas: (int32) 2,
      ReadyReplicas: (int32) 2,
      AvailableReplicas: (int32) 2,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }


  I0703 12:40:07.751666 21 deployment.go:669] pod: "test-deployment-6b9f8f4d48-gll9r":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-gll9r",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-7278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "bc04c16c-3f45-4fe4-8ee9-434ca3dc6cba",
      ResourceVersion: (string) (len=5) "12910",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607208,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "f3489f9c4865bfa642c38468e2c618b37e8ae28b8b08b47741ec96c38b102137",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.1.82/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.1.82/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "13671d3e-75b0-4539-9067-58edb1cdf5a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 33 36 37 31 64 33 65  |uid\":\"13671d3e|
              000000a0  2d 37 35 62 30 2d 34 35  33 39 2d 39 30 36 37 2d  |-75b0-4539-9067-|
              000000b0  35 38 65 64 62 31 63 64  66 35 61 30 5c 22 7d 22  |58edb1cdf5a0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607203,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 38 32  5c 22 7d 22 3a 7b 22 2e  |.42.1.82\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-nl22c",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-nl22c",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607200,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=10) "10.42.1.82",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.1.82"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607200,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855607203,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://7deddbee54e168e17ddfa4a4dee123d32604aec02d8cbc040885132f0c3b49cb",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0703 12:40:07.754758 21 deployment.go:669] pod: "test-deployment-6b9f8f4d48-r42bb":
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=32) "test-deployment-6b9f8f4d48-r42bb",
      GenerateName: (string) (len=27) "test-deployment-6b9f8f4d48-",
      Namespace: (string) (len=15) "deployment-7278",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "5ea2dd2f-c0d3-47c3-9d38-540f0a659d33",
      ResourceVersion: (string) (len=5) "12911",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607204,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607208,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      DeletionGracePeriodSeconds: (*int64)(1),
      Labels: (map[string]string) (len=2) {
        (string) (len=17) "pod-template-hash": (string) (len=10) "6b9f8f4d48",
        (string) (len=22) "test-deployment-static": (string) (len=4) "true"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "9085d7003bbd23163157c6f5f032e5568d7f12a810ba51b6d66b2926926ff99a",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.34/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.34/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=26) "test-deployment-6b9f8f4d48",
          UID: (types.UID) (len=36) "13671d3e-75b0-4539-9067-58edb1cdf5a0",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=565) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 70 6f 64 2d 74 65 6d  |.":{},"f:pod-tem|
              00000040  70 6c 61 74 65 2d 68 61  73 68 22 3a 7b 7d 2c 22  |plate-hash":{},"|
              00000050  66 3a 74 65 73 74 2d 64  65 70 6c 6f 79 6d 65 6e  |f:test-deploymen|
              00000060  74 2d 73 74 61 74 69 63  22 3a 7b 7d 7d 2c 22 66  |t-static":{}},"f|
              00000070  3a 6f 77 6e 65 72 52 65  66 65 72 65 6e 63 65 73  |:ownerReferences|
              00000080  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 6b 3a 7b 5c 22  |":{".":{},"k:{\"|
              00000090  75 69 64 5c 22 3a 5c 22  31 33 36 37 31 64 33 65  |uid\":\"13671d3e|
              000000a0  2d 37 35 62 30 2d 34 35  33 39 2d 39 30 36 37 2d  |-75b0-4539-9067-|
              000000b0  35 38 65 64 62 31 63 64  66 35 61 30 5c 22 7d 22  |58edb1cdf5a0\"}"|
              000000c0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000000d0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000000e0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 74  |"k:{\"name\":\"t|
              000000f0  65 73 74 2d 64 65 70 6c  6f 79 6d 65 6e 74 5c 22  |est-deployment\"|
              00000100  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000110  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000120  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000130  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              00000140  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              00000150  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              00000160  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000170  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              00000180  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              00000190  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              000001a0  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              000001b0  3a 7b 7d 2c 22 66 3a 65  6e 61 62 6c 65 53 65 72  |:{},"f:enableSer|
              000001c0  76 69 63 65 4c 69 6e 6b  73 22 3a 7b 7d 2c 22 66  |viceLinks":{},"f|
              000001d0  3a 72 65 73 74 61 72 74  50 6f 6c 69 63 79 22 3a  |:restartPolicy":|
              000001e0  7b 7d 2c 22 66 3a 73 63  68 65 64 75 6c 65 72 4e  |{},"f:schedulerN|
              000001f0  61 6d 65 22 3a 7b 7d 2c  22 66 3a 73 65 63 75 72  |ame":{},"f:secur|
              00000200  69 74 79 43 6f 6e 74 65  78 74 22 3a 7b 7d 2c 22  |ityContext":{},"|
              00000210  66 3a 74 65 72 6d 69 6e  61 74 69 6f 6e 47 72 61  |f:terminationGra|
              00000220  63 65 50 65 72 69 6f 64  53 65 63 6f 6e 64 73 22  |cePeriodSeconds"|
              00000230  3a 7b 7d 7d 7d                                    |:{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607205,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 33 34  5c 22 7d 22 3a 7b 22 2e  |.42.2.34\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-jhr84",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=15) "test-deployment",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-jhr84",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(1),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607206,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855607204,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) (len=10) "10.42.2.34",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.34"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855607204,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=15) "test-deployment",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855607206,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://ec3664993a2acfba30f434ad59f0ac6d6d4c398bb0c97568c43580e5fb08aa16",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }


  I0703 12:40:07.757043 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-7278" for this suite. @ 07/03/24 12:40:07.829
• [13.386 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service ProxyWithPath [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:286
  STEP: Creating a kubernetes client @ 07/03/24 12:40:07.85
  I0703 12:40:07.850086 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename proxy @ 07/03/24 12:40:07.851
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:40:08.053
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:40:08.061
  I0703 12:40:08.077840 21 proxy.go:293] Creating pod...
  I0703 12:40:12.170678 21 proxy.go:317] Creating service...
  I0703 12:40:12.185465 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/pods/agnhost/proxy/some/path/with/DELETE
  I0703 12:40:27.489855 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0703 12:40:27.489916 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/pods/agnhost/proxy/some/path/with/GET
  I0703 12:40:27.493212 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0703 12:40:27.493272 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/pods/agnhost/proxy/some/path/with/HEAD
  I0703 12:40:27.498763 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0703 12:40:27.498808 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/pods/agnhost/proxy/some/path/with/OPTIONS
  I0703 12:40:27.508290 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0703 12:40:27.508439 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/pods/agnhost/proxy/some/path/with/PATCH
  I0703 12:40:27.512568 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0703 12:40:27.512616 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/pods/agnhost/proxy/some/path/with/POST
  I0703 12:40:27.516439 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0703 12:40:27.516491 21 proxy.go:354] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/pods/agnhost/proxy/some/path/with/PUT
  I0703 12:40:27.536952 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0703 12:40:27.537008 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/services/test-service/proxy/some/path/with/DELETE
  I0703 12:40:27.545534 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0703 12:40:27.545647 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/services/test-service/proxy/some/path/with/GET
  I0703 12:40:27.555685 21 proxy.go:530] http.Client request:GET | StatusCode:200 | Response:foo | Method:GET
  I0703 12:40:27.555740 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/services/test-service/proxy/some/path/with/HEAD
  I0703 12:40:27.562244 21 proxy.go:517] http.Client request:HEAD | StatusCode:200
  I0703 12:40:27.562322 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/services/test-service/proxy/some/path/with/OPTIONS
  I0703 12:40:27.567683 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0703 12:40:27.567729 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/services/test-service/proxy/some/path/with/PATCH
  I0703 12:40:27.572127 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0703 12:40:27.572199 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/services/test-service/proxy/some/path/with/POST
  I0703 12:40:27.580764 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0703 12:40:27.580821 21 proxy.go:365] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-7060/services/test-service/proxy/some/path/with/PUT
  I0703 12:40:27.592988 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0703 12:40:27.593116 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-7060" for this suite. @ 07/03/24 12:40:27.599
• [19.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:169
  STEP: Creating a kubernetes client @ 07/03/24 12:40:27.616
  I0703 12:40:27.616448 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 12:40:27.617
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:40:27.717
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:40:27.751
  STEP: Creating pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988 @ 07/03/24 12:40:27.768
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 12:40:31.851
  I0703 12:40:31.855763 21 container_probe.go:1749] Initial restart count of pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 is 0
  I0703 12:40:31.869372 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:33.879456 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:35.885633 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:37.890714 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:39.894640 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:41.900774 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:43.905379 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:45.935085 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:47.939055 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:49.944102 21 container_probe.go:1759] Get pod liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 in namespace container-probe-7988
  I0703 12:40:49.944153 21 container_probe.go:1763] Restart count of pod container-probe-7988/liveness-937f1636-5d07-49c3-91f7-5f788cfc6ae0 is now 1 (18.088350212s elapsed)
  STEP: deleting the pod @ 07/03/24 12:40:49.944
  I0703 12:40:49.963138 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7988" for this suite. @ 07/03/24 12:40:49.969
• [22.358 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:120
  STEP: Creating a kubernetes client @ 07/03/24 12:40:49.974
  I0703 12:40:49.974894 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 12:40:49.975
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:40:50.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:40:50.006
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/03/24 12:40:50.012
  STEP: Saw pod success @ 07/03/24 12:40:56.046
  I0703 12:40:56.057267 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-c65afba8-bd1b-474b-94b7-d040ab77eb5f container test-container: <nil>
  STEP: delete the pod @ 07/03/24 12:40:56.077
  I0703 12:40:56.103848 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-427" for this suite. @ 07/03/24 12:40:56.11
• [6.142 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:75
  STEP: Creating a kubernetes client @ 07/03/24 12:40:56.124
  I0703 12:40:56.124717 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:40:56.125
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:40:56.168
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:40:56.172
  STEP: Creating configMap with name projected-configmap-test-volume-89378a3f-6c16-49c9-8cfb-072930dc07aa @ 07/03/24 12:40:56.182
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:40:56.189
  STEP: Saw pod success @ 07/03/24 12:41:00.222
  I0703 12:41:00.259766 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-configmaps-a3e3e928-290c-4f96-b464-44fda4127c0e container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:41:00.29
  I0703 12:41:00.341270 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-8936" for this suite. @ 07/03/24 12:41:00.362
• [4.268 seconds]
------------------------------
SS
------------------------------
[sig-node] Pods should run through the lifecycle of Pods and PodStatus [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:897
  STEP: Creating a kubernetes client @ 07/03/24 12:41:00.44
  I0703 12:41:00.440301 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 12:41:00.442
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:00.598
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:00.62
  STEP: creating a Pod with a static label @ 07/03/24 12:41:00.699
  STEP: watching for Pod to be ready @ 07/03/24 12:41:00.743
  I0703 12:41:00.754136 21 pods.go:945] observed Pod pod-test in namespace pods-2805 in phase Pending with labels: map[test-pod-static:true] & conditions []
  I0703 12:41:00.761497 21 pods.go:945] observed Pod pod-test in namespace pods-2805 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  }]
  I0703 12:41:00.835329 21 pods.go:945] observed Pod pod-test in namespace pods-2805 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  }]
  I0703 12:41:02.473078 21 pods.go:945] observed Pod pod-test in namespace pods-2805 in phase Pending with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC ContainersNotReady containers with unready status: [pod-test]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  }]
  I0703 12:41:03.238814 21 pods.go:948] Found Pod pod-test in namespace pods-2805 in phase Running with labels: map[test-pod-static:true] & conditions [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:03 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  } {Ready True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:03 +0000 UTC  } {ContainersReady True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:03 +0000 UTC  } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 12:41:00 +0000 UTC  }]
  STEP: patching the Pod with a new Label and updated data @ 07/03/24 12:41:03.252
  STEP: getting the Pod and ensuring that it's patched @ 07/03/24 12:41:03.356
  STEP: replacing the Pod's status Ready condition to False @ 07/03/24 12:41:03.362
  STEP: check the Pod again to ensure its Ready conditions are False @ 07/03/24 12:41:03.401
  STEP: deleting the Pod via a Collection with a LabelSelector @ 07/03/24 12:41:03.401
  STEP: watching for the Pod to be deleted @ 07/03/24 12:41:03.432
  I0703 12:41:03.467244 21 pods.go:1058] observed event type MODIFIED
  I0703 12:41:05.264216 21 pods.go:1058] observed event type MODIFIED
  I0703 12:41:05.817534 21 pods.go:1058] observed event type MODIFIED
  I0703 12:41:06.291228 21 pods.go:1058] observed event type MODIFIED
  I0703 12:41:06.394467 21 pods.go:1058] observed event type MODIFIED
  I0703 12:41:06.601181 21 pods.go:1058] observed event type MODIFIED
  I0703 12:41:06.664991 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-2805" for this suite. @ 07/03/24 12:41:06.673
• [6.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] KubeletManagedEtcHosts should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet_etc_hosts.go:64
  STEP: Creating a kubernetes client @ 07/03/24 12:41:06.697
  I0703 12:41:06.697489 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename e2e-kubelet-etc-hosts @ 07/03/24 12:41:06.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:06.827
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:06.842
  STEP: Setting up the test @ 07/03/24 12:41:06.855
  STEP: Creating hostNetwork=false pod @ 07/03/24 12:41:06.855
  STEP: Creating hostNetwork=true pod @ 07/03/24 12:41:11.007
  STEP: Running the test @ 07/03/24 12:41:15.069
  STEP: Verifying /etc/hosts of container is kubelet-managed for pod with hostNetwork=false @ 07/03/24 12:41:15.069
  I0703 12:41:15.069782 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:15.069963 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:15.071384 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:15.071757 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0703 12:41:15.237522 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:15.237727 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:15.237832 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:15.238619 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:15.238691 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0703 12:41:15.408918 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:15.409115 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:15.409161 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:15.409622 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:15.409693 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0703 12:41:15.623573 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:15.623817 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:15.623837 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:15.624883 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:15.624959 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0703 12:41:15.762720 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts of container is not kubelet-managed since container specifies /etc/hosts mount @ 07/03/24 12:41:15.762
  I0703 12:41:15.763034 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:15.768251 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:15.769541 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:15.772448 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0703 12:41:16.005174 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:16.006332 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-pod ContainerName:busybox-3 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:16.007035 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:16.009511 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:16.010015 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-3&container=busybox-3&stderr=true&stdout=true)
  I0703 12:41:16.186469 21 exec_util.go:106] Exec stderr: ""
  STEP: Verifying /etc/hosts content of container is not kubelet-managed for pod with hostNetwork=true @ 07/03/24 12:41:16.186
  I0703 12:41:16.186968 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:16.187053 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:16.187843 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:16.188002 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0703 12:41:16.407841 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:16.407918 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-host-network-pod ContainerName:busybox-1 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:16.407933 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:16.408750 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:16.408862 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-1&container=busybox-1&stderr=true&stdout=true)
  I0703 12:41:16.641720 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:16.642422 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:16.642920 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:16.651180 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:16.651545 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0703 12:41:16.809833 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:16.809925 21 exec_util.go:55] ExecWithOptions {Command:[cat /etc/hosts-original] Namespace:e2e-kubelet-etc-hosts-4465 PodName:test-host-network-pod ContainerName:busybox-2 Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:41:16.809939 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:41:16.810608 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:41:16.810684 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/e2e-kubelet-etc-hosts-4465/pods/test-host-network-pod/exec?command=cat&command=%2Fetc%2Fhosts-original&container=busybox-2&container=busybox-2&stderr=true&stdout=true)
  I0703 12:41:16.975846 21 exec_util.go:106] Exec stderr: ""
  I0703 12:41:16.976113 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "e2e-kubelet-etc-hosts-4465" for this suite. @ 07/03/24 12:41:17
• [10.331 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] Garbage collector should not be blocked by dependency circle [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:818
  STEP: Creating a kubernetes client @ 07/03/24 12:41:17.035
  I0703 12:41:17.035883 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename gc @ 07/03/24 12:41:17.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:17.125
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:17.136
  I0703 12:41:17.369253 21 garbage_collector.go:840] pod1.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod3", UID:"70e0b3e4-3fcf-4812-ac68-ac214349bb77", Controller:(*bool)(0xc0028b83b6), BlockOwnerDeletion:(*bool)(0xc0028b83b7)}}
  I0703 12:41:17.402720 21 garbage_collector.go:844] pod2.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod1", UID:"290b1f27-5645-419e-903f-ba974735f7cd", Controller:(*bool)(0xc0029ae07e), BlockOwnerDeletion:(*bool)(0xc0029ae07f)}}
  I0703 12:41:17.431069 21 garbage_collector.go:848] pod3.ObjectMeta.OwnerReferences=[]v1.OwnerReference{v1.OwnerReference{APIVersion:"v1", Kind:"Pod", Name:"pod2", UID:"615f869a-6e88-4822-b0cc-e8bb19e715df", Controller:(*bool)(0xc0029ae2ae), BlockOwnerDeletion:(*bool)(0xc0029ae2af)}}
  I0703 12:41:22.542594 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6369" for this suite. @ 07/03/24 12:41:22.569
• [5.615 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Should recreate evicted statefulset [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:793
  STEP: Creating a kubernetes client @ 07/03/24 12:41:22.669
  I0703 12:41:22.670044 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 12:41:22.674
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:22.756
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:22.822
  STEP: Creating service test in namespace statefulset-5758 @ 07/03/24 12:41:22.834
  STEP: Looking for a node to schedule stateful set and pod @ 07/03/24 12:41:22.85
  STEP: Creating pod with conflicting port in namespace statefulset-5758 @ 07/03/24 12:41:22.875
  STEP: Waiting until pod test-pod will start running in namespace statefulset-5758 @ 07/03/24 12:41:22.912
  STEP: Creating statefulset with conflicting port in namespace statefulset-5758 @ 07/03/24 12:41:24.952
  STEP: Waiting until stateful pod ss-0 will be recreated and deleted at least once in namespace statefulset-5758 @ 07/03/24 12:41:24.969
  I0703 12:41:25.002935 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-5758, name: ss-0, uid: ab30ba84-d98f-4b18-a557-514cf9b74de7, status phase: Pending. Waiting for statefulset controller to delete.
  I0703 12:41:25.058502 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-5758, name: ss-0, uid: ab30ba84-d98f-4b18-a557-514cf9b74de7, status phase: Failed. Waiting for statefulset controller to delete.
  I0703 12:41:25.083509 21 statefulset.go:866] Observed stateful pod in namespace: statefulset-5758, name: ss-0, uid: ab30ba84-d98f-4b18-a557-514cf9b74de7, status phase: Failed. Waiting for statefulset controller to delete.
  I0703 12:41:25.094194 21 statefulset.go:860] Observed delete event for stateful pod ss-0 in namespace statefulset-5758
  STEP: Removing pod with conflicting port in namespace statefulset-5758 @ 07/03/24 12:41:25.102
  STEP: Waiting when stateful pod ss-0 will be recreated in namespace statefulset-5758 and will be in running state @ 07/03/24 12:41:25.125
  I0703 12:41:29.154752 21 statefulset.go:135] Deleting all statefulset in ns statefulset-5758
  I0703 12:41:29.163840 21 rest.go:150] Scaling statefulset ss to 0
  I0703 12:41:39.191122 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 12:41:39.194379 21 rest.go:88] Deleting statefulset ss
  I0703 12:41:39.239427 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5758" for this suite. @ 07/03/24 12:41:39.25
• [16.614 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to start watching from a specific resource version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:142
  STEP: Creating a kubernetes client @ 07/03/24 12:41:39.282
  I0703 12:41:39.282887 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename watch @ 07/03/24 12:41:39.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:39.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:39.409
  STEP: creating a new configmap @ 07/03/24 12:41:39.419
  STEP: modifying the configmap once @ 07/03/24 12:41:39.426
  STEP: modifying the configmap a second time @ 07/03/24 12:41:39.459
  STEP: deleting the configmap @ 07/03/24 12:41:39.483
  STEP: creating a watch on configmaps from the resource version returned by the first update @ 07/03/24 12:41:39.496
  STEP: Expecting to observe notifications for all changes to the configmap after the first update @ 07/03/24 12:41:39.508
  I0703 12:41:39.508471 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2624  4a2f08bd-22ec-416c-9c2d-91e82e82e38f 13533 0 2024-07-03 12:41:39 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-03 12:41:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:41:39.508834 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-resource-version  watch-2624  4a2f08bd-22ec-416c-9c2d-91e82e82e38f 13535 0 2024-07-03 12:41:39 +0000 UTC <nil> <nil> map[watch-this-configmap:from-resource-version] map[] [] [] [{e2e.test Update v1 2024-07-03 12:41:39 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 12:41:39.509074 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-2624" for this suite. @ 07/03/24 12:41:39.526
• [0.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command and arguments [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:89
  STEP: Creating a kubernetes client @ 07/03/24 12:41:39.581
  I0703 12:41:39.581319 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename containers @ 07/03/24 12:41:39.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:39.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:39.67
  STEP: Creating a pod to test override all @ 07/03/24 12:41:39.698
  STEP: Saw pod success @ 07/03/24 12:41:43.849
  I0703 12:41:43.858204 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod client-containers-6e8e3fd0-62c2-4127-8d5c-ca66c38e9ca1 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:41:43.87
  I0703 12:41:43.899588 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-4048" for this suite. @ 07/03/24 12:41:43.909
• [4.355 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] EndpointSlice should have Endpoints and EndpointSlices pointing to API Server [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:69
  STEP: Creating a kubernetes client @ 07/03/24 12:41:43.936
  I0703 12:41:43.936943 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename endpointslice @ 07/03/24 12:41:43.938
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:43.976
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:44.002
  I0703 12:41:44.020248 21 endpointslice.go:1045] Endpoints addresses: [172.31.4.137] , ports: [6443]
  I0703 12:41:44.020413 21 endpointslice.go:1075] EndpointSlices addresses: [172.31.4.137] , ports: [6443]
  I0703 12:41:44.020579 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3297" for this suite. @ 07/03/24 12:41:44.026
• [0.103 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:48
  STEP: Creating a kubernetes client @ 07/03/24 12:41:44.046
  I0703 12:41:44.046739 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:41:44.047
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:44.127
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:44.155
  STEP: Creating configMap with name projected-configmap-test-volume-c056d3e1-63ad-4391-ad60-49d698c9d3f4 @ 07/03/24 12:41:44.165
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:41:44.192
  STEP: Saw pod success @ 07/03/24 12:41:48.312
  I0703 12:41:48.354267 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-configmaps-f522732b-0a01-43f8-b3e4-dba5889278f9 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:41:48.372
  I0703 12:41:48.398760 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3811" for this suite. @ 07/03/24 12:41:48.405
• [4.370 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should locate the groupVersion and a resource within each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:172
  STEP: Creating a kubernetes client @ 07/03/24 12:41:48.423
  I0703 12:41:48.423801 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename discovery @ 07/03/24 12:41:48.425
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:48.522
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:48.571
  STEP: Setting up server cert @ 07/03/24 12:41:48.601
  STEP: Requesting APIResourceList from "/api/v1" @ 07/03/24 12:41:48.992
  STEP: Requesting APIResourceList from "/apis/admissionregistration.k8s.io/v1" @ 07/03/24 12:41:48.999
  STEP: Requesting APIResourceList from "/apis/apiextensions.k8s.io/v1" @ 07/03/24 12:41:49.001
  STEP: Requesting APIResourceList from "/apis/apiregistration.k8s.io/v1" @ 07/03/24 12:41:49.002
  STEP: Requesting APIResourceList from "/apis/apps/v1" @ 07/03/24 12:41:49.005
  STEP: Requesting APIResourceList from "/apis/authentication.k8s.io/v1" @ 07/03/24 12:41:49.007
  STEP: Requesting APIResourceList from "/apis/authorization.k8s.io/v1" @ 07/03/24 12:41:49.019
  STEP: Requesting APIResourceList from "/apis/autoscaling/v1" @ 07/03/24 12:41:49.021
  STEP: Requesting APIResourceList from "/apis/autoscaling/v2" @ 07/03/24 12:41:49.027
  STEP: Requesting APIResourceList from "/apis/batch/v1" @ 07/03/24 12:41:49.028
  STEP: Requesting APIResourceList from "/apis/certificates.k8s.io/v1" @ 07/03/24 12:41:49.03
  STEP: Requesting APIResourceList from "/apis/coordination.k8s.io/v1" @ 07/03/24 12:41:49.032
  STEP: Requesting APIResourceList from "/apis/discovery.k8s.io/v1" @ 07/03/24 12:41:49.049
  STEP: Requesting APIResourceList from "/apis/events.k8s.io/v1" @ 07/03/24 12:41:49.056
  STEP: Requesting APIResourceList from "/apis/networking.k8s.io/v1" @ 07/03/24 12:41:49.065
  STEP: Requesting APIResourceList from "/apis/node.k8s.io/v1" @ 07/03/24 12:41:49.099
  STEP: Requesting APIResourceList from "/apis/policy/v1" @ 07/03/24 12:41:49.161
  STEP: Requesting APIResourceList from "/apis/scheduling.k8s.io/v1" @ 07/03/24 12:41:49.184
  STEP: Requesting APIResourceList from "/apis/storage.k8s.io/v1" @ 07/03/24 12:41:49.207
  I0703 12:41:49.215463 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-3717" for this suite. @ 07/03/24 12:41:49.244
• [0.855 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController Listing PodDisruptionBudgets for all namespaces should list and delete a collection of PodDisruptionBudgets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:87
  STEP: Creating a kubernetes client @ 07/03/24 12:41:49.282
  I0703 12:41:49.282362 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename disruption @ 07/03/24 12:41:49.283
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:49.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:49.429
  STEP: Creating a kubernetes client @ 07/03/24 12:41:49.456
  I0703 12:41:49.456259 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename disruption-2 @ 07/03/24 12:41:49.457
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:49.588
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:49.648
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:41:49.699
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:41:51.727
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:41:53.779
  STEP: listing a collection of PDBs across all namespaces @ 07/03/24 12:41:55.785
  STEP: listing a collection of PDBs in namespace disruption-4944 @ 07/03/24 12:41:55.788
  STEP: deleting a collection of PDBs @ 07/03/24 12:41:55.792
  STEP: Waiting for the PDB collection to be deleted @ 07/03/24 12:41:55.808
  I0703 12:41:55.816905 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-2-4589" for this suite. @ 07/03/24 12:41:55.823
  I0703 12:41:55.831972 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-4944" for this suite. @ 07/03/24 12:41:55.846
• [6.572 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should block an eviction until the PDB is updated to allow it [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:348
  STEP: Creating a kubernetes client @ 07/03/24 12:41:55.857
  I0703 12:41:55.858035 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename disruption @ 07/03/24 12:41:55.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:41:55.9
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:41:55.916
  STEP: Creating a pdb that targets all three pods in a test replica set @ 07/03/24 12:41:55.925
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:41:55.942
  STEP: First trying to evict a pod which shouldn't be evictable @ 07/03/24 12:41:57.957
  STEP: Waiting for all pods to be running @ 07/03/24 12:41:57.958
  I0703 12:41:57.962485 21 disruption.go:567] pods: 0 < 3
  I0703 12:41:59.966117 21 disruption.go:578] running pods: 0 < 3
  STEP: locating a running pod @ 07/03/24 12:42:02.157
  STEP: Updating the pdb to allow a pod to be evicted @ 07/03/24 12:42:02.478
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:42:02.573
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/03/24 12:42:04.582
  STEP: Waiting for all pods to be running @ 07/03/24 12:42:04.582
  STEP: Waiting for the pdb to observed all healthy pods @ 07/03/24 12:42:04.59
  STEP: Patching the pdb to disallow a pod to be evicted @ 07/03/24 12:42:04.639
  STEP: Waiting for the pdb to be processed @ 07/03/24 12:42:04.71
  STEP: Waiting for all pods to be running @ 07/03/24 12:42:06.73
  I0703 12:42:06.741119 21 disruption.go:578] running pods: 2 < 3
  STEP: locating a running pod @ 07/03/24 12:42:08.736
  STEP: Deleting the pdb to allow a pod to be evicted @ 07/03/24 12:42:08.744
  STEP: Waiting for the pdb to be deleted @ 07/03/24 12:42:08.753
  STEP: Trying to evict the same pod we tried earlier which should now be evictable @ 07/03/24 12:42:08.76
  STEP: Waiting for all pods to be running @ 07/03/24 12:42:08.76
  I0703 12:42:08.789438 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-8597" for this suite. @ 07/03/24 12:42:08.816
• [13.059 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartAlways pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:256
  STEP: Creating a kubernetes client @ 07/03/24 12:42:08.932
  I0703 12:42:08.932887 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename init-container @ 07/03/24 12:42:08.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:42:09.142
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:42:09.173
  STEP: creating the pod @ 07/03/24 12:42:09.313
  I0703 12:42:09.313344 21 init_container.go:294] PodSpec: initContainers in spec.initContainers
  I0703 12:42:13.875071 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9041" for this suite. @ 07/03/24 12:42:13.888
• [4.965 seconds]
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:110
  STEP: Creating a kubernetes client @ 07/03/24 12:42:13.898
  I0703 12:42:13.898293 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 12:42:13.899
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:42:13.997
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:42:14.002
  STEP: Creating configMap with name configmap-test-volume-map-27bd3a69-3540-4ff0-941e-9a207f1bb6f9 @ 07/03/24 12:42:14.014
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:42:14.023
  STEP: Saw pod success @ 07/03/24 12:42:18.066
  I0703 12:42:18.082688 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-679d41ff-720f-44d3-9933-2bfd39e70bd4 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:42:18.093
  I0703 12:42:18.111062 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5014" for this suite. @ 07/03/24 12:42:18.117
• [4.231 seconds]
------------------------------
[sig-network] Services should be able to change the type from ExternalName to NodePort [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1459
  STEP: Creating a kubernetes client @ 07/03/24 12:42:18.128
  I0703 12:42:18.128933 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 12:42:18.129
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:42:18.19
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:42:18.236
  STEP: creating a service externalname-service with the type=ExternalName in namespace services-469 @ 07/03/24 12:42:18.251
  STEP: changing the ExternalName service to type=NodePort @ 07/03/24 12:42:18.28
  STEP: creating replication controller externalname-service in namespace services-469 @ 07/03/24 12:42:18.38
  I0703 12:42:18.424995      21 runners.go:198] Created replication controller with name: externalname-service, namespace: services-469, replica count: 2
  I0703 12:42:21.477776      21 runners.go:198] externalname-service Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 12:42:21.477824 21 resource.go:361] Creating new exec pod
  I0703 12:42:26.523110 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-469 exec execpod9r557 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0703 12:42:29.368688 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 externalname-service 80\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0703 12:42:29.368745 21 builder.go:147] stdout: ""
  I0703 12:42:29.368808 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-469 exec execpod9r557 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 externalname-service 80'
  I0703 12:42:30.772650 21 builder.go:146] stderr: "+ nc -v -t -w 2 externalname-service 80\n+ echo hostName\nConnection to externalname-service 80 port [tcp/http] succeeded!\n"
  I0703 12:42:30.772719 21 builder.go:147] stdout: "externalname-service-frh47"
  I0703 12:42:30.772805 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-469 exec execpod9r557 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.177.222 80'
  I0703 12:42:31.026375 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.177.222 80\nConnection to 10.43.177.222 80 port [tcp/http] succeeded!\n"
  I0703 12:42:31.026442 21 builder.go:147] stdout: "externalname-service-frh47"
  I0703 12:42:31.026542 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-469 exec execpod9r557 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.137 32262'
  I0703 12:42:31.598797 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.137 32262\nConnection to 172.31.4.137 32262 port [tcp/*] succeeded!\n"
  I0703 12:42:31.598844 21 builder.go:147] stdout: "externalname-service-pr57q"
  I0703 12:42:31.598935 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-469 exec execpod9r557 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.183 32262'
  I0703 12:42:31.999113 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.5.183 32262\nConnection to 172.31.5.183 32262 port [tcp/*] succeeded!\n+ echo hostName\n"
  I0703 12:42:31.999164 21 builder.go:147] stdout: ""
  I0703 12:42:32.599076 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-469 exec execpod9r557 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.183 32262'
  I0703 12:42:33.223388 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.5.183 32262\nConnection to 172.31.5.183 32262 port [tcp/*] succeeded!\n+ echo hostName\n"
  I0703 12:42:33.223459 21 builder.go:147] stdout: ""
  I0703 12:42:33.599541 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-469 exec execpod9r557 -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.183 32262'
  I0703 12:42:34.057147 21 builder.go:146] stderr: "+ nc -v -t -w 2 172.31.5.183 32262\n+ echo hostName\nConnection to 172.31.5.183 32262 port [tcp/*] succeeded!\n"
  I0703 12:42:34.057192 21 builder.go:147] stdout: "externalname-service-frh47"
  I0703 12:42:34.057423 21 service.go:1468] Cleaning up the ExternalName to NodePort test service
  I0703 12:42:34.108136 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-469" for this suite. @ 07/03/24 12:42:34.133
• [16.048 seconds]
------------------------------
[sig-apps] Job should manage the lifecycle of a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:927
  STEP: Creating a kubernetes client @ 07/03/24 12:42:34.176
  I0703 12:42:34.176945 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename job @ 07/03/24 12:42:34.177
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:42:34.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:42:34.344
  STEP: Creating a suspended job @ 07/03/24 12:42:34.356
  STEP: Patching the Job @ 07/03/24 12:42:34.392
  STEP: Watching for Job to be patched @ 07/03/24 12:42:34.506
  I0703 12:42:34.514203 21 job.go:1109] Event ADDED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw] and annotations: map[]
  I0703 12:42:34.514420 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw] and annotations: map[]
  I0703 12:42:34.514542 21 job.go:1112] Event MODIFIED found for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[]
  STEP: Updating the job @ 07/03/24 12:42:34.514
  STEP: Watching for Job to be updated @ 07/03/24 12:42:34.539
  I0703 12:42:34.564250 21 job.go:1112] Event MODIFIED found for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:34.568360 21 job.go:1005] Found Job annotations: map[string]string{"updated":"true"}
  STEP: Listing all Jobs with LabelSelector @ 07/03/24 12:42:34.568
  I0703 12:42:34.618663 21 job.go:1012] Job: e2e-qlmtw as labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched]
  STEP: Waiting for job to complete @ 07/03/24 12:42:34.621
  STEP: Delete a job collection with a labelselector @ 07/03/24 12:42:48.645
  STEP: Watching for Job to be deleted @ 07/03/24 12:42:48.655
  I0703 12:42:48.669334 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:48.669384 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:48.669404 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:48.669705 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:48.669740 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:48.669780 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:48.669930 21 job.go:1109] Event MODIFIED observed for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  I0703 12:42:48.669956 21 job.go:1112] Event DELETED found for Job e2e-qlmtw in namespace job-4435 with labels: map[e2e-job-label:e2e-qlmtw e2e-qlmtw:patched] and annotations: map[updated:true]
  STEP: Relist jobs to confirm deletion @ 07/03/24 12:42:48.67
  I0703 12:42:48.703955 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4435" for this suite. @ 07/03/24 12:42:48.725
• [14.600 seconds]
------------------------------
S
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: udp [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:125
  STEP: Creating a kubernetes client @ 07/03/24 12:42:48.776
  I0703 12:42:48.776996 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pod-network-test @ 07/03/24 12:42:48.789
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:42:48.898
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:42:48.909
  STEP: Performing setup for networking test in namespace pod-network-test-1913 @ 07/03/24 12:42:48.931
  STEP: creating a selector @ 07/03/24 12:42:48.931
  STEP: Creating the service pods in kubernetes @ 07/03/24 12:42:48.931
  I0703 12:42:48.931494 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/03/24 12:43:11.376
  I0703 12:43:15.499933 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0703 12:43:15.500023 21 utils.go:472] Going to poll 10.42.0.31 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0703 12:43:15.512315 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.0.31 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1913 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:43:15.512379 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:43:15.513163 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:43:15.513282 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1913/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.0.31+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0703 12:43:16.799314 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0703 12:43:16.799371 21 utils.go:472] Going to poll 10.42.2.41 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0703 12:43:16.803764 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.2.41 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1913 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:43:16.803812 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:43:16.804421 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:43:16.804489 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1913/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.2.41+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0703 12:43:18.021771 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0703 12:43:18.021848 21 utils.go:472] Going to poll 10.42.1.99 on port 8081 at least 0 times, with a maximum of 39 tries before failing
  I0703 12:43:18.029559 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostName | nc -w 1 -u 10.42.1.99 8081 | grep -v '^\s*$'] Namespace:pod-network-test-1913 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:43:18.029764 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:43:18.030648 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:43:18.030838 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-1913/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostName+%7C+nc+-w+1+-u+10.42.1.99+8081+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0703 12:43:19.303217 21 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0703 12:43:19.303590 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-1913" for this suite. @ 07/03/24 12:43:19.309
• [30.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should run through the lifecycle of a PV and a PVC [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:430
  STEP: Creating a kubernetes client @ 07/03/24 12:43:19.321
  I0703 12:43:19.321604 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pv @ 07/03/24 12:43:19.322
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:19.375
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:19.379
  STEP: Creating initial PV and PVC @ 07/03/24 12:43:19.383
  I0703 12:43:19.383504 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-2811" @ 07/03/24 12:43:19.425
  STEP: Listing PVCs in namespace "pv-2811" @ 07/03/24 12:43:19.436
  STEP: Patching the PV "pv-2811-rgqbc" @ 07/03/24 12:43:19.45
  STEP: Patching the PVC "pvc-ljbw4" @ 07/03/24 12:43:19.501
  STEP: Getting PV "pv-2811-rgqbc" @ 07/03/24 12:43:19.52
  STEP: Getting PVC "pvc-ljbw4" @ 07/03/24 12:43:19.529
  STEP: Deleting PVC "pvc-ljbw4" @ 07/03/24 12:43:19.535
  STEP: Confirm deletion of PVC "pvc-ljbw4" @ 07/03/24 12:43:19.55
  STEP: Deleting PV "pv-2811-rgqbc" @ 07/03/24 12:43:21.571
  STEP: Confirm deletion of PV "pv-2811-rgqbc" @ 07/03/24 12:43:21.578
  STEP: Recreating another PV & PVC @ 07/03/24 12:43:23.6
  I0703 12:43:23.600415 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Updating the PV "pv-2811-k5d44" @ 07/03/24 12:43:23.656
  STEP: Updating the PVC "pvc-f7qn4" @ 07/03/24 12:43:23.809
  STEP: Listing PVCs in all namespaces with the labelSelector: "pvc-f7qn4=updated" @ 07/03/24 12:43:23.897
  STEP: Deleting PVC "pvc-f7qn4" via DeleteCollection @ 07/03/24 12:43:23.903
  STEP: Confirm deletion of PVC "pvc-f7qn4" @ 07/03/24 12:43:23.917
  STEP: Deleting PV "pv-2811-k5d44" via DeleteCollection @ 07/03/24 12:43:25.962
  STEP: Confirm deletion of PV "pv-2811-k5d44" @ 07/03/24 12:43:25.98
  I0703 12:43:26.010883 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0703 12:43:26.010919 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-f7qn4"
  I0703 12:43:26.021722 21 pv.go:189] Deleting PersistentVolume "pv-2811-k5d44"
  I0703 12:43:26.025667 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-2811" for this suite. @ 07/03/24 12:43:26.054
• [6.757 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Discovery should validate PreferredVersion for each APIGroup [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/discovery.go:126
  STEP: Creating a kubernetes client @ 07/03/24 12:43:26.078
  I0703 12:43:26.079039 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename discovery @ 07/03/24 12:43:26.083
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:26.174
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:26.194
  STEP: Setting up server cert @ 07/03/24 12:43:26.205
  I0703 12:43:27.398435 21 discovery.go:139] Checking APIGroup: apiregistration.k8s.io
  I0703 12:43:27.404969 21 discovery.go:147] PreferredVersion.GroupVersion: apiregistration.k8s.io/v1
  I0703 12:43:27.405029 21 discovery.go:148] Versions found [{apiregistration.k8s.io/v1 v1}]
  I0703 12:43:27.405042 21 discovery.go:154] apiregistration.k8s.io/v1 matches apiregistration.k8s.io/v1
  I0703 12:43:27.405052 21 discovery.go:139] Checking APIGroup: apps
  I0703 12:43:27.406830 21 discovery.go:147] PreferredVersion.GroupVersion: apps/v1
  I0703 12:43:27.406878 21 discovery.go:148] Versions found [{apps/v1 v1}]
  I0703 12:43:27.406888 21 discovery.go:154] apps/v1 matches apps/v1
  I0703 12:43:27.406898 21 discovery.go:139] Checking APIGroup: events.k8s.io
  I0703 12:43:27.408314 21 discovery.go:147] PreferredVersion.GroupVersion: events.k8s.io/v1
  I0703 12:43:27.408344 21 discovery.go:148] Versions found [{events.k8s.io/v1 v1}]
  I0703 12:43:27.408355 21 discovery.go:154] events.k8s.io/v1 matches events.k8s.io/v1
  I0703 12:43:27.408366 21 discovery.go:139] Checking APIGroup: authentication.k8s.io
  I0703 12:43:27.409851 21 discovery.go:147] PreferredVersion.GroupVersion: authentication.k8s.io/v1
  I0703 12:43:27.409882 21 discovery.go:148] Versions found [{authentication.k8s.io/v1 v1}]
  I0703 12:43:27.409893 21 discovery.go:154] authentication.k8s.io/v1 matches authentication.k8s.io/v1
  I0703 12:43:27.409904 21 discovery.go:139] Checking APIGroup: authorization.k8s.io
  I0703 12:43:27.411169 21 discovery.go:147] PreferredVersion.GroupVersion: authorization.k8s.io/v1
  I0703 12:43:27.411198 21 discovery.go:148] Versions found [{authorization.k8s.io/v1 v1}]
  I0703 12:43:27.411208 21 discovery.go:154] authorization.k8s.io/v1 matches authorization.k8s.io/v1
  I0703 12:43:27.411219 21 discovery.go:139] Checking APIGroup: autoscaling
  I0703 12:43:27.412318 21 discovery.go:147] PreferredVersion.GroupVersion: autoscaling/v2
  I0703 12:43:27.412343 21 discovery.go:148] Versions found [{autoscaling/v2 v2} {autoscaling/v1 v1}]
  I0703 12:43:27.412353 21 discovery.go:154] autoscaling/v2 matches autoscaling/v2
  I0703 12:43:27.412363 21 discovery.go:139] Checking APIGroup: batch
  I0703 12:43:27.413949 21 discovery.go:147] PreferredVersion.GroupVersion: batch/v1
  I0703 12:43:27.413973 21 discovery.go:148] Versions found [{batch/v1 v1}]
  I0703 12:43:27.413987 21 discovery.go:154] batch/v1 matches batch/v1
  I0703 12:43:27.413999 21 discovery.go:139] Checking APIGroup: certificates.k8s.io
  I0703 12:43:27.415045 21 discovery.go:147] PreferredVersion.GroupVersion: certificates.k8s.io/v1
  I0703 12:43:27.415068 21 discovery.go:148] Versions found [{certificates.k8s.io/v1 v1}]
  I0703 12:43:27.415079 21 discovery.go:154] certificates.k8s.io/v1 matches certificates.k8s.io/v1
  I0703 12:43:27.415089 21 discovery.go:139] Checking APIGroup: networking.k8s.io
  I0703 12:43:27.416069 21 discovery.go:147] PreferredVersion.GroupVersion: networking.k8s.io/v1
  I0703 12:43:27.416091 21 discovery.go:148] Versions found [{networking.k8s.io/v1 v1}]
  I0703 12:43:27.416102 21 discovery.go:154] networking.k8s.io/v1 matches networking.k8s.io/v1
  I0703 12:43:27.416115 21 discovery.go:139] Checking APIGroup: policy
  I0703 12:43:27.417001 21 discovery.go:147] PreferredVersion.GroupVersion: policy/v1
  I0703 12:43:27.417028 21 discovery.go:148] Versions found [{policy/v1 v1}]
  I0703 12:43:27.417041 21 discovery.go:154] policy/v1 matches policy/v1
  I0703 12:43:27.417052 21 discovery.go:139] Checking APIGroup: rbac.authorization.k8s.io
  I0703 12:43:27.418305 21 discovery.go:147] PreferredVersion.GroupVersion: rbac.authorization.k8s.io/v1
  I0703 12:43:27.418327 21 discovery.go:148] Versions found [{rbac.authorization.k8s.io/v1 v1}]
  I0703 12:43:27.418346 21 discovery.go:154] rbac.authorization.k8s.io/v1 matches rbac.authorization.k8s.io/v1
  I0703 12:43:27.418355 21 discovery.go:139] Checking APIGroup: storage.k8s.io
  I0703 12:43:27.419921 21 discovery.go:147] PreferredVersion.GroupVersion: storage.k8s.io/v1
  I0703 12:43:27.419943 21 discovery.go:148] Versions found [{storage.k8s.io/v1 v1}]
  I0703 12:43:27.419954 21 discovery.go:154] storage.k8s.io/v1 matches storage.k8s.io/v1
  I0703 12:43:27.419965 21 discovery.go:139] Checking APIGroup: admissionregistration.k8s.io
  I0703 12:43:27.422542 21 discovery.go:147] PreferredVersion.GroupVersion: admissionregistration.k8s.io/v1
  I0703 12:43:27.422565 21 discovery.go:148] Versions found [{admissionregistration.k8s.io/v1 v1}]
  I0703 12:43:27.422575 21 discovery.go:154] admissionregistration.k8s.io/v1 matches admissionregistration.k8s.io/v1
  I0703 12:43:27.422613 21 discovery.go:139] Checking APIGroup: apiextensions.k8s.io
  I0703 12:43:27.424793 21 discovery.go:147] PreferredVersion.GroupVersion: apiextensions.k8s.io/v1
  I0703 12:43:27.445614 21 discovery.go:148] Versions found [{apiextensions.k8s.io/v1 v1}]
  I0703 12:43:27.445954 21 discovery.go:154] apiextensions.k8s.io/v1 matches apiextensions.k8s.io/v1
  I0703 12:43:27.445975 21 discovery.go:139] Checking APIGroup: scheduling.k8s.io
  I0703 12:43:27.457837 21 discovery.go:147] PreferredVersion.GroupVersion: scheduling.k8s.io/v1
  I0703 12:43:27.457886 21 discovery.go:148] Versions found [{scheduling.k8s.io/v1 v1}]
  I0703 12:43:27.457896 21 discovery.go:154] scheduling.k8s.io/v1 matches scheduling.k8s.io/v1
  I0703 12:43:27.457906 21 discovery.go:139] Checking APIGroup: coordination.k8s.io
  I0703 12:43:27.470039 21 discovery.go:147] PreferredVersion.GroupVersion: coordination.k8s.io/v1
  I0703 12:43:27.470188 21 discovery.go:148] Versions found [{coordination.k8s.io/v1 v1}]
  I0703 12:43:27.470273 21 discovery.go:154] coordination.k8s.io/v1 matches coordination.k8s.io/v1
  I0703 12:43:27.470456 21 discovery.go:139] Checking APIGroup: node.k8s.io
  I0703 12:43:27.482844 21 discovery.go:147] PreferredVersion.GroupVersion: node.k8s.io/v1
  I0703 12:43:27.484981 21 discovery.go:148] Versions found [{node.k8s.io/v1 v1}]
  I0703 12:43:27.488381 21 discovery.go:154] node.k8s.io/v1 matches node.k8s.io/v1
  I0703 12:43:27.488504 21 discovery.go:139] Checking APIGroup: discovery.k8s.io
  I0703 12:43:27.490106 21 discovery.go:147] PreferredVersion.GroupVersion: discovery.k8s.io/v1
  I0703 12:43:27.490365 21 discovery.go:148] Versions found [{discovery.k8s.io/v1 v1}]
  I0703 12:43:27.490443 21 discovery.go:154] discovery.k8s.io/v1 matches discovery.k8s.io/v1
  I0703 12:43:27.490684 21 discovery.go:139] Checking APIGroup: flowcontrol.apiserver.k8s.io
  I0703 12:43:27.492830 21 discovery.go:147] PreferredVersion.GroupVersion: flowcontrol.apiserver.k8s.io/v1
  I0703 12:43:27.493090 21 discovery.go:148] Versions found [{flowcontrol.apiserver.k8s.io/v1 v1} {flowcontrol.apiserver.k8s.io/v1beta3 v1beta3}]
  I0703 12:43:27.493189 21 discovery.go:154] flowcontrol.apiserver.k8s.io/v1 matches flowcontrol.apiserver.k8s.io/v1
  I0703 12:43:27.493288 21 discovery.go:139] Checking APIGroup: catalog.cattle.io
  I0703 12:43:27.494539 21 discovery.go:147] PreferredVersion.GroupVersion: catalog.cattle.io/v1
  I0703 12:43:27.494648 21 discovery.go:148] Versions found [{catalog.cattle.io/v1 v1}]
  I0703 12:43:27.495783 21 discovery.go:154] catalog.cattle.io/v1 matches catalog.cattle.io/v1
  I0703 12:43:27.495888 21 discovery.go:139] Checking APIGroup: crd.projectcalico.org
  I0703 12:43:27.497806 21 discovery.go:147] PreferredVersion.GroupVersion: crd.projectcalico.org/v1
  I0703 12:43:27.497927 21 discovery.go:148] Versions found [{crd.projectcalico.org/v1 v1}]
  I0703 12:43:27.498024 21 discovery.go:154] crd.projectcalico.org/v1 matches crd.projectcalico.org/v1
  I0703 12:43:27.498258 21 discovery.go:139] Checking APIGroup: ui.cattle.io
  I0703 12:43:27.504051 21 discovery.go:147] PreferredVersion.GroupVersion: ui.cattle.io/v1
  I0703 12:43:27.504109 21 discovery.go:148] Versions found [{ui.cattle.io/v1 v1}]
  I0703 12:43:27.504119 21 discovery.go:154] ui.cattle.io/v1 matches ui.cattle.io/v1
  I0703 12:43:27.504131 21 discovery.go:139] Checking APIGroup: cluster.cattle.io
  I0703 12:43:27.512773 21 discovery.go:147] PreferredVersion.GroupVersion: cluster.cattle.io/v3
  I0703 12:43:27.516454 21 discovery.go:148] Versions found [{cluster.cattle.io/v3 v3}]
  I0703 12:43:27.517131 21 discovery.go:154] cluster.cattle.io/v3 matches cluster.cattle.io/v3
  I0703 12:43:27.517175 21 discovery.go:139] Checking APIGroup: management.cattle.io
  I0703 12:43:27.527391 21 discovery.go:147] PreferredVersion.GroupVersion: management.cattle.io/v3
  I0703 12:43:27.534635 21 discovery.go:148] Versions found [{management.cattle.io/v3 v3}]
  I0703 12:43:27.535225 21 discovery.go:154] management.cattle.io/v3 matches management.cattle.io/v3
  I0703 12:43:27.535393 21 discovery.go:139] Checking APIGroup: metrics.k8s.io
  I0703 12:43:27.543860 21 discovery.go:147] PreferredVersion.GroupVersion: metrics.k8s.io/v1beta1
  I0703 12:43:27.544343 21 discovery.go:148] Versions found [{metrics.k8s.io/v1beta1 v1beta1}]
  I0703 12:43:27.544443 21 discovery.go:154] metrics.k8s.io/v1beta1 matches metrics.k8s.io/v1beta1
  I0703 12:43:27.547905 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "discovery-7868" for this suite. @ 07/03/24 12:43:27.573
• [1.502 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect duplicates in a CR when preserving unknown fields [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:622
  STEP: Creating a kubernetes client @ 07/03/24 12:43:27.582
  I0703 12:43:27.582197 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename field-validation @ 07/03/24 12:43:27.583
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:27.637
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:27.649
  I0703 12:43:27.660657 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  W0703 12:43:30.399174      21 warnings.go:70] unknown field "alpha"
  W0703 12:43:30.399203      21 warnings.go:70] unknown field "beta"
  W0703 12:43:30.399209      21 warnings.go:70] unknown field "delta"
  W0703 12:43:30.399216      21 warnings.go:70] unknown field "epsilon"
  W0703 12:43:30.399221      21 warnings.go:70] unknown field "gamma"
  I0703 12:43:31.422738 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-9574" for this suite. @ 07/03/24 12:43:31.468
• [3.935 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] Simple CustomResourceDefinition listing custom resource definition objects works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:86
  STEP: Creating a kubernetes client @ 07/03/24 12:43:31.517
  I0703 12:43:31.517646 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/03/24 12:43:31.547
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:31.643
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:31.684
  I0703 12:43:31.709113 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:43:39.016897 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-4146" for this suite. @ 07/03/24 12:43:39.032
• [7.522 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should run through a ConfigMap lifecycle [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:171
  STEP: Creating a kubernetes client @ 07/03/24 12:43:39.04
  I0703 12:43:39.041182 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 12:43:39.042
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:39.104
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:39.111
  STEP: creating a ConfigMap @ 07/03/24 12:43:39.123
  STEP: fetching the ConfigMap @ 07/03/24 12:43:39.135
  STEP: patching the ConfigMap @ 07/03/24 12:43:39.148
  STEP: listing all ConfigMaps in all namespaces with a label selector @ 07/03/24 12:43:39.194
  STEP: deleting the ConfigMap by collection with a label selector @ 07/03/24 12:43:39.212
  STEP: listing all ConfigMaps in test namespace @ 07/03/24 12:43:39.227
  I0703 12:43:39.233133 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-7280" for this suite. @ 07/03/24 12:43:39.252
• [0.234 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:47
  STEP: Creating a kubernetes client @ 07/03/24 12:43:39.275
  I0703 12:43:39.275603 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 12:43:39.276
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:39.426
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:39.455
  STEP: Creating secret with name secret-test-5607f66b-fde8-44b1-a530-08d74c56425b @ 07/03/24 12:43:39.462
  STEP: Creating a pod to test consume secrets @ 07/03/24 12:43:39.469
  STEP: Saw pod success @ 07/03/24 12:43:45.6
  I0703 12:43:45.605653 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-e4533ba4-fb0a-4db6-86bf-371683aff49d container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 12:43:45.622
  I0703 12:43:45.651567 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9294" for this suite. @ 07/03/24 12:43:45.655
• [6.394 seconds]
------------------------------
S
------------------------------
[sig-apps] Job should create pods for an Indexed job with completion indexes and specified hostname [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:420
  STEP: Creating a kubernetes client @ 07/03/24 12:43:45.669
  I0703 12:43:45.670015 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename job @ 07/03/24 12:43:45.671
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:45.764
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:45.8
  STEP: Creating Indexed job @ 07/03/24 12:43:45.806
  STEP: Ensuring job reaches completions @ 07/03/24 12:43:45.82
  STEP: Ensuring pods with index for job exist @ 07/03/24 12:43:57.842
  I0703 12:43:57.867577 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-7526" for this suite. @ 07/03/24 12:43:57.887
• [12.256 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:469
  STEP: Creating a kubernetes client @ 07/03/24 12:43:57.927
  I0703 12:43:57.927126 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-pred @ 07/03/24 12:43:57.927
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:43:58.009
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:43:58.031
  I0703 12:43:58.047329 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0703 12:43:58.060268 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0703 12:43:58.076146 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-137 before test
  I0703 12:43:58.104225 21 predicates.go:887] fleet-agent-0 from cattle-fleet-system started at 2024-07-03 12:03:04 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.104358 21 predicates.go:889] 	Container fleet-agent ready: true, restart count 0
  I0703 12:43:58.104377 21 predicates.go:889] 	Container fleet-agent-clusterstatus ready: true, restart count 0
  I0703 12:43:58.104395 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-dmpfp from cattle-system started at 2024-07-03 12:04:09 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104408 21 predicates.go:889] 	Container cluster-register ready: true, restart count 0
  I0703 12:43:58.104420 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-rf45l from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104432 21 predicates.go:889] 	Container cluster-register ready: true, restart count 2
  I0703 12:43:58.104600 21 predicates.go:887] cattle-node-agent-xv2b5 from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104610 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 12:43:58.104653 21 predicates.go:887] helm-operation-8jjt9 from cattle-system started at 2024-07-03 12:03:15 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.104672 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0703 12:43:58.104683 21 predicates.go:889] 	Container proxy ready: false, restart count 0
  I0703 12:43:58.104696 21 predicates.go:887] kube-api-auth-n7vdq from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104730 21 predicates.go:889] 	Container kube-api-auth ready: true, restart count 0
  I0703 12:43:58.104742 21 predicates.go:887] rancher-webhook-7b5476cb6c-999r2 from cattle-system started at 2024-07-03 12:03:53 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104752 21 predicates.go:889] 	Container rancher-webhook ready: true, restart count 0
  I0703 12:43:58.104764 21 predicates.go:887] calico-kube-controllers-5b878c8d6f-n9qtc from kube-system started at 2024-07-03 12:00:56 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104775 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0703 12:43:58.104812 21 predicates.go:887] canal-zpdht from kube-system started at 2024-07-03 12:00:56 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.104822 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 12:43:58.104833 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 12:43:58.104844 21 predicates.go:887] coredns-878dbb559-4hhd8 from kube-system started at 2024-07-03 12:01:07 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104852 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 12:43:58.104864 21 predicates.go:887] metrics-server-85f57469bf-dkb2p from kube-system started at 2024-07-03 12:01:23 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104899 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0703 12:43:58.104911 21 predicates.go:887] rke-coredns-addon-deploy-job-hv82g from kube-system started at 2024-07-03 12:09:41 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104922 21 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0703 12:43:58.104941 21 predicates.go:887] rke-metrics-addon-deploy-job-htp6z from kube-system started at 2024-07-03 12:01:19 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104951 21 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0703 12:43:58.104987 21 predicates.go:887] rke-network-plugin-deploy-job-6jb2q from kube-system started at 2024-07-03 12:00:53 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.104998 21 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0703 12:43:58.105014 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-64nlg from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.105027 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 12:43:58.105037 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 12:43:58.105072 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-210 before test
  I0703 12:43:58.114998 21 predicates.go:887] cattle-node-agent-pnp4l from cattle-system started at 2024-07-03 12:04:27 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.115038 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 12:43:58.115051 21 predicates.go:887] helm-operation-77vnc from cattle-system started at 2024-07-03 12:09:29 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.115062 21 predicates.go:889] 	Container helm ready: false, restart count 0
  I0703 12:43:58.115071 21 predicates.go:889] 	Container proxy ready: false, restart count 0
  I0703 12:43:58.115081 21 predicates.go:887] canal-9xtzz from kube-system started at 2024-07-03 12:04:27 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.115091 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 12:43:58.115101 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 12:43:58.115114 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-03 12:12:47 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.115123 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0703 12:43:58.115137 21 predicates.go:887] sonobuoy-e2e-job-f9e006a160674f6c from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.115157 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0703 12:43:58.115168 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 12:43:58.115184 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-jz9sc from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.115201 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 12:43:58.115212 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 12:43:58.115223 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I0703 12:43:58.127404 21 predicates.go:887] cattle-node-agent-9qwcl from cattle-system started at 2024-07-03 12:04:10 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.127443 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 12:43:58.127455 21 predicates.go:887] indexed-job-0-j544z from job-7526 started at 2024-07-03 12:43:45 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.127466 21 predicates.go:889] 	Container c ready: false, restart count 0
  I0703 12:43:58.127476 21 predicates.go:887] indexed-job-1-z2szj from job-7526 started at 2024-07-03 12:43:45 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.127485 21 predicates.go:889] 	Container c ready: false, restart count 0
  I0703 12:43:58.127495 21 predicates.go:887] indexed-job-2-8psvs from job-7526 started at 2024-07-03 12:43:51 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.127503 21 predicates.go:889] 	Container c ready: false, restart count 0
  I0703 12:43:58.127514 21 predicates.go:887] indexed-job-3-hw7w5 from job-7526 started at 2024-07-03 12:43:51 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.127523 21 predicates.go:889] 	Container c ready: false, restart count 0
  I0703 12:43:58.127533 21 predicates.go:887] canal-qtmst from kube-system started at 2024-07-03 12:04:10 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.127542 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 12:43:58.127552 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 12:43:58.127561 21 predicates.go:887] coredns-878dbb559-svq7f from kube-system started at 2024-07-03 12:04:18 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.127569 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 12:43:58.127581 21 predicates.go:887] coredns-autoscaler-56d494f878-l795t from kube-system started at 2024-07-03 12:09:46 +0000 UTC (1 container statuses recorded)
  I0703 12:43:58.127685 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0703 12:43:58.127700 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-qwqrq from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 12:43:58.127709 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 12:43:58.127720 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/03/24 12:43:58.127
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/03/24 12:44:02.333
  STEP: Trying to apply a random label on the found node. @ 07/03/24 12:44:02.354
  STEP: verifying the node has the label kubernetes.io/e2e-b2c6d2fe-977e-4243-9bdb-7316baa52e3e 42 @ 07/03/24 12:44:02.401
  STEP: Trying to relaunch the pod, now with labels. @ 07/03/24 12:44:02.416
  STEP: removing the label kubernetes.io/e2e-b2c6d2fe-977e-4243-9bdb-7316baa52e3e off the node ip-172-31-5-183 @ 07/03/24 12:44:06.587
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-b2c6d2fe-977e-4243-9bdb-7316baa52e3e @ 07/03/24 12:44:06.656
  I0703 12:44:06.687873 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-7079" for this suite. @ 07/03/24 12:44:06.698
• [8.782 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:110
  STEP: Creating a kubernetes client @ 07/03/24 12:44:06.713
  I0703 12:44:06.713698 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 12:44:06.715
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:44:06.772
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:44:06.804
  STEP: Creating a pod to test emptydir 0666 on tmpfs @ 07/03/24 12:44:06.829
  STEP: Saw pod success @ 07/03/24 12:44:11
  I0703 12:44:11.007817 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-4a0a60e2-46ce-4112-8506-bf2c3592dc55 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 12:44:11.024
  I0703 12:44:11.044071 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6618" for this suite. @ 07/03/24 12:44:11.055
• [4.356 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's args [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:96
  STEP: Creating a kubernetes client @ 07/03/24 12:44:11.079
  I0703 12:44:11.079557 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 12:44:11.08
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:44:11.179
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:44:11.198
  STEP: Creating a pod to test substitution in container's args @ 07/03/24 12:44:11.218
  STEP: Saw pod success @ 07/03/24 12:44:17.3
  I0703 12:44:17.305911 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod var-expansion-66dcb454-ed78-4b28-826d-c3d54c755fab container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 12:44:17.337
  I0703 12:44:17.401704 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-1556" for this suite. @ 07/03/24 12:44:17.427
• [6.376 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should delete a job [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:668
  STEP: Creating a kubernetes client @ 07/03/24 12:44:17.475
  I0703 12:44:17.475862 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename job @ 07/03/24 12:44:17.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:44:17.597
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:44:17.617
  STEP: Creating a job @ 07/03/24 12:44:17.627
  STEP: Ensuring active pods == parallelism @ 07/03/24 12:44:17.664
  STEP: delete a job @ 07/03/24 12:44:21.677
  STEP: deleting Job.batch foo in namespace job-1675, will wait for the garbage collector to delete the pods @ 07/03/24 12:44:21.677
  I0703 12:44:21.745136 21 resources.go:139] Deleting Job.batch foo took: 9.92297ms
  I0703 12:44:21.846128 21 resources.go:163] Terminating Job.batch foo pods took: 100.990054ms
  STEP: Ensuring job was deleted @ 07/03/24 12:44:24.846
  I0703 12:44:24.849476 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-1675" for this suite. @ 07/03/24 12:44:24.853
• [7.385 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's memory limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:209
  STEP: Creating a kubernetes client @ 07/03/24 12:44:24.862
  I0703 12:44:24.862852 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:44:24.863
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:44:24.904
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:44:24.911
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:44:24.916
  STEP: Saw pod success @ 07/03/24 12:44:29
  I0703 12:44:29.003849 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-b4676926-91f7-4137-8bfb-f8cd5a7e0818 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:44:29.03
  I0703 12:44:29.077920 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5506" for this suite. @ 07/03/24 12:44:29.095
• [4.274 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-apps] CronJob should schedule multiple jobs concurrently [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:70
  STEP: Creating a kubernetes client @ 07/03/24 12:44:29.137
  I0703 12:44:29.137559 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename cronjob @ 07/03/24 12:44:29.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:44:29.262
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:44:29.299
  STEP: Creating a cronjob @ 07/03/24 12:44:29.322
  STEP: Ensuring more than one job is running at a time @ 07/03/24 12:44:29.342
  STEP: Ensuring at least two running jobs exists by listing jobs explicitly @ 07/03/24 12:46:01.357
  STEP: Removing cronjob @ 07/03/24 12:46:01.366
  I0703 12:46:01.375218 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7552" for this suite. @ 07/03/24 12:46:01.386
• [92.296 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:200
  STEP: Creating a kubernetes client @ 07/03/24 12:46:01.433
  I0703 12:46:01.433740 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 12:46:01.434
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:46:01.784
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:46:01.814
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/03/24 12:46:01.824
  STEP: Saw pod success @ 07/03/24 12:46:05.976
  I0703 12:46:05.981079 21 output.go:196] Trying to get logs from node ip-172-31-4-210 pod pod-77719767-9963-4b63-b098-985b05685b68 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 12:46:06.019
  I0703 12:46:06.044902 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1422" for this suite. @ 07/03/24 12:46:06.049
• [4.624 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should be possible to delete [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:134
  STEP: Creating a kubernetes client @ 07/03/24 12:46:06.058
  I0703 12:46:06.058363 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubelet-test @ 07/03/24 12:46:06.059
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:46:06.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:46:06.22
  I0703 12:46:06.343716 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-6160" for this suite. @ 07/03/24 12:46:06.384
• [0.339 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] HostPort validates that there is no conflict between pods with same hostPort but different hostIP and protocol [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/hostport.go:63
  STEP: Creating a kubernetes client @ 07/03/24 12:46:06.409
  I0703 12:46:06.409827 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename hostport @ 07/03/24 12:46:06.423
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:46:06.496
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:46:06.517
  STEP: Trying to create a pod(pod1) with hostport 54323 and hostIP 127.0.0.1 and expect scheduled @ 07/03/24 12:46:06.597
  STEP: Trying to create another pod(pod2) with hostport 54323 but hostIP 172.31.5.183 on the node which pod1 resides and expect scheduled @ 07/03/24 12:46:18.751
  STEP: Trying to create a third pod(pod3) with hostport 54323, hostIP 172.31.5.183 but use UDP protocol on the node which pod2 resides @ 07/03/24 12:46:22.802
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 127.0.0.1, port: 54323 @ 07/03/24 12:46:32.883
  I0703 12:46:32.883776 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 --interface 172.31.5.183 http://127.0.0.1:54323/hostname] Namespace:hostport-7770 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:46:32.883800 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:46:32.884349 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:46:32.884416 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-7770/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+--interface+172.31.5.183+http%3A%2F%2F127.0.0.1%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.5.183, port: 54323 @ 07/03/24 12:46:33.143
  I0703 12:46:33.143462 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g --connect-timeout 5 http://172.31.5.183:54323/hostname] Namespace:hostport-7770 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:46:33.143486 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:46:33.144166 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:46:33.144260 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-7770/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+--connect-timeout+5+http%3A%2F%2F172.31.5.183%3A54323%2Fhostname&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  STEP: checking connectivity from pod e2e-host-exec to serverIP: 172.31.5.183, port: 54323 UDP @ 07/03/24 12:46:33.502
  I0703 12:46:33.502523 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c echo hostname | nc -u -w 5 172.31.5.183 54323] Namespace:hostport-7770 PodName:e2e-host-exec ContainerName:e2e-host-exec Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:46:33.502651 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:46:33.503639 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:46:33.503835 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/hostport-7770/pods/e2e-host-exec/exec?command=%2Fbin%2Fsh&command=-c&command=echo+hostname+%7C+nc+-u+-w+5+172.31.5.183+54323&container=e2e-host-exec&container=e2e-host-exec&stderr=true&stdout=true)
  I0703 12:46:38.683736 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "hostport-7770" for this suite. @ 07/03/24 12:46:38.692
• [32.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for node-pod communication: http [LinuxOnly] [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:108
  STEP: Creating a kubernetes client @ 07/03/24 12:46:38.71
  I0703 12:46:38.710341 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pod-network-test @ 07/03/24 12:46:38.711
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:46:38.796
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:46:38.813
  STEP: Performing setup for networking test in namespace pod-network-test-6154 @ 07/03/24 12:46:38.819
  STEP: creating a selector @ 07/03/24 12:46:38.819
  STEP: Creating the service pods in kubernetes @ 07/03/24 12:46:38.819
  I0703 12:46:38.819233 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  STEP: Creating test pods @ 07/03/24 12:47:01.074
  I0703 12:47:05.157923 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0703 12:47:05.158168 21 utils.go:472] Going to poll 10.42.0.32 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0703 12:47:05.161596 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.0.32:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6154 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:47:05.161763 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:47:05.162671 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:47:05.162881 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6154/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.0.32%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0703 12:47:05.346571 21 utils.go:489] Found all 1 expected endpoints: [netserver-0]
  I0703 12:47:05.347189 21 utils.go:472] Going to poll 10.42.2.43 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0703 12:47:05.350515 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.2.43:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6154 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:47:05.350546 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:47:05.351512 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:47:05.351648 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6154/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.2.43%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0703 12:47:05.600305 21 utils.go:489] Found all 1 expected endpoints: [netserver-1]
  I0703 12:47:05.600353 21 utils.go:472] Going to poll 10.42.1.118 on port 8083 at least 0 times, with a maximum of 39 tries before failing
  I0703 12:47:05.603602 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s --max-time 15 --connect-timeout 1 http://10.42.1.118:8083/hostName | grep -v '^\s*$'] Namespace:pod-network-test-6154 PodName:host-test-container-pod ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 12:47:05.603644 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:47:05.604483 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 12:47:05.604626 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-6154/pods/host-test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+--max-time+15+--connect-timeout+1+http%3A%2F%2F10.42.1.118%3A8083%2FhostName+%7C+grep+-v+%27%5E%5Cs%2A%24%27&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0703 12:47:05.820299 21 utils.go:489] Found all 1 expected endpoints: [netserver-2]
  I0703 12:47:05.820927 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-6154" for this suite. @ 07/03/24 12:47:05.824
• [27.122 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context when creating containers with AllowPrivilegeEscalation should not allow privilege escalation when false [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/security_context.go:612
  STEP: Creating a kubernetes client @ 07/03/24 12:47:05.833
  I0703 12:47:05.833660 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename security-context-test @ 07/03/24 12:47:05.835
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:47:05.89
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:47:05.909
  I0703 12:47:14.053934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-test-7634" for this suite. @ 07/03/24 12:47:14.099
• [8.293 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate pod and apply defaults after mutation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:261
  STEP: Creating a kubernetes client @ 07/03/24 12:47:14.126
  I0703 12:47:14.126974 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:47:14.127
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:47:14.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:47:14.364
  STEP: Setting up server cert @ 07/03/24 12:47:14.721
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:47:15.17
  STEP: Deploying the webhook pod @ 07/03/24 12:47:15.196
  STEP: Wait for the deployment to be ready @ 07/03/24 12:47:15.223
  I0703 12:47:15.244909 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  I0703 12:47:17.300908 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:47:19.314162 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:47:21.308881 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 47, 15, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:47:23.329
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:47:23.367
  I0703 12:47:24.368168 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the mutating pod webhook via the AdmissionRegistration API @ 07/03/24 12:47:24.394
  STEP: create a pod that should be updated by the webhook @ 07/03/24 12:47:24.452
  I0703 12:47:24.674239 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6376" for this suite. @ 07/03/24 12:47:24.687
  STEP: Destroying namespace "webhook-markers-6846" for this suite. @ 07/03/24 12:47:24.696
• [10.581 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a secret. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:163
  STEP: Creating a kubernetes client @ 07/03/24 12:47:24.711
  I0703 12:47:24.711202 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 12:47:24.712
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:47:24.813
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:47:24.818
  STEP: Discovering how many secrets are in namespace by default @ 07/03/24 12:47:24.822
  STEP: Counting existing ResourceQuota @ 07/03/24 12:47:29.842
  STEP: Creating a ResourceQuota @ 07/03/24 12:47:34.846
  STEP: Ensuring resource quota status is calculated @ 07/03/24 12:47:34.86
  STEP: Creating a Secret @ 07/03/24 12:47:36.865
  STEP: Ensuring resource quota status captures secret creation @ 07/03/24 12:47:36.88
  STEP: Deleting a secret @ 07/03/24 12:47:38.886
  STEP: Ensuring resource quota status released usage @ 07/03/24 12:47:38.893
  I0703 12:47:40.898064 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-9945" for this suite. @ 07/03/24 12:47:40.901
• [16.204 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:215
  STEP: Creating a kubernetes client @ 07/03/24 12:47:40.932
  I0703 12:47:40.932269 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:47:40.933
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:47:40.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:47:40.963
  STEP: Creating secret with name s-test-opt-del-28b83821-6603-4e56-83da-bee192c0c5f3 @ 07/03/24 12:47:40.98
  STEP: Creating secret with name s-test-opt-upd-ea9cefc5-7c6e-43aa-b906-39e559009db2 @ 07/03/24 12:47:40.994
  STEP: Creating the pod @ 07/03/24 12:47:41.011
  STEP: Deleting secret s-test-opt-del-28b83821-6603-4e56-83da-bee192c0c5f3 @ 07/03/24 12:47:45.126
  STEP: Updating secret s-test-opt-upd-ea9cefc5-7c6e-43aa-b906-39e559009db2 @ 07/03/24 12:47:45.135
  STEP: Creating secret with name s-test-opt-create-827d3b07-da7c-43e9-802c-2849bf144ea1 @ 07/03/24 12:47:45.143
  STEP: waiting to observe update in volume @ 07/03/24 12:47:45.154
  I0703 12:48:47.840407 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2957" for this suite. @ 07/03/24 12:48:47.847
• [66.932 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ValidatingAdmissionPolicy [Privileged:ClusterAdmin] should validate against a Deployment [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/validatingadmissionpolicy.go:77
  STEP: Creating a kubernetes client @ 07/03/24 12:48:47.865
  I0703 12:48:47.865109 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename validating-admission-policy @ 07/03/24 12:48:47.865
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:48:47.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:48:47.956
  STEP: creating the policy @ 07/03/24 12:48:48.113
  STEP: waiting until the marker is denied @ 07/03/24 12:48:48.217
  STEP: testing a replicated Deployment to be allowed @ 07/03/24 12:48:48.907
  STEP: testing a non-replicated ReplicaSet not to be denied @ 07/03/24 12:48:49.114
  I0703 12:48:49.492001 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "validating-admission-policy-3185" for this suite. @ 07/03/24 12:48:49.533
• [1.696 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should use the image defaults if command and args are blank [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:41
  STEP: Creating a kubernetes client @ 07/03/24 12:48:49.562
  I0703 12:48:49.562361 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename containers @ 07/03/24 12:48:49.563
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:48:49.621
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:48:49.639
  I0703 12:48:53.793803 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-9951" for this suite. @ 07/03/24 12:48:53.798
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:376
  STEP: Creating a kubernetes client @ 07/03/24 12:48:53.809
  I0703 12:48:53.809978 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:48:53.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:48:53.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:48:53.943
  STEP: Creating configMap with name projected-configmap-test-volume-04f2f985-c79b-4b36-a757-a68d062806ae @ 07/03/24 12:48:53.954
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:48:54.01
  STEP: Saw pod success @ 07/03/24 12:48:58.232
  I0703 12:48:58.242460 21 output.go:196] Trying to get logs from node ip-172-31-4-210 pod pod-projected-configmaps-688efc3b-1780-466d-9878-5bb07826b514 container projected-configmap-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 12:48:58.263
  I0703 12:48:58.318973 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3087" for this suite. @ 07/03/24 12:48:58.323
• [4.528 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply changes to a namespace status [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:305
  STEP: Creating a kubernetes client @ 07/03/24 12:48:58.338
  I0703 12:48:58.339034 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename namespaces @ 07/03/24 12:48:58.339
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:48:58.466
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:48:58.515
  STEP: Read namespace status @ 07/03/24 12:48:58.533
  I0703 12:48:58.541190 21 namespace.go:318] Status: v1.NamespaceStatus{Phase:"Active", Conditions:[]v1.NamespaceCondition(nil)}
  STEP: Patch namespace status @ 07/03/24 12:48:58.541
  I0703 12:48:58.577899 21 namespace.go:338] Status.Condition: v1.NamespaceCondition{Type:"StatusPatch", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Patched by an e2e test"}
  STEP: Update namespace status @ 07/03/24 12:48:58.577
  I0703 12:48:58.703877 21 namespace.go:363] Status.Condition: v1.NamespaceCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Updated by an e2e test"}
  I0703 12:48:58.704264 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-7957" for this suite. @ 07/03/24 12:48:58.732
• [0.417 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Guestbook application should create and stop a working application [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:397
  STEP: Creating a kubernetes client @ 07/03/24 12:48:58.756
  I0703 12:48:58.756449 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 12:48:58.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:48:58.812
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:48:58.845
  STEP: creating all guestbook components @ 07/03/24 12:48:58.862
  I0703 12:48:58.862911 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-replica
    labels:
      app: agnhost
      role: replica
      tier: backend
  spec:
    ports:
    - port: 6379
    selector:
      app: agnhost
      role: replica
      tier: backend

  I0703 12:48:58.864201 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 create -f -'
  I0703 12:48:59.331716 21 builder.go:146] stderr: ""
  I0703 12:48:59.331767 21 builder.go:147] stdout: "service/agnhost-replica created\n"
  I0703 12:48:59.331817 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: agnhost-primary
    labels:
      app: agnhost
      role: primary
      tier: backend
  spec:
    ports:
    - port: 6379
      targetPort: 6379
    selector:
      app: agnhost
      role: primary
      tier: backend

  I0703 12:48:59.331990 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 create -f -'
  I0703 12:48:59.955965 21 builder.go:146] stderr: ""
  I0703 12:48:59.956020 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  I0703 12:48:59.956079 21 kubectl.go:403] apiVersion: v1
  kind: Service
  metadata:
    name: frontend
    labels:
      app: guestbook
      tier: frontend
  spec:
    # if your cluster supports it, uncomment the following to automatically create
    # an external load-balanced IP for the frontend service.
    # type: LoadBalancer
    ports:
    - port: 80
    selector:
      app: guestbook
      tier: frontend

  I0703 12:48:59.956940 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 create -f -'
  I0703 12:49:00.733677 21 builder.go:146] stderr: ""
  I0703 12:49:00.733776 21 builder.go:147] stdout: "service/frontend created\n"
  I0703 12:49:00.733920 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: frontend
  spec:
    replicas: 3
    selector:
      matchLabels:
        app: guestbook
        tier: frontend
    template:
      metadata:
        labels:
          app: guestbook
          tier: frontend
      spec:
        containers:
        - name: guestbook-frontend
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--backend-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 80

  I0703 12:49:00.734245 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 create -f -'
  I0703 12:49:01.000732 21 builder.go:146] stderr: ""
  I0703 12:49:01.000774 21 builder.go:147] stdout: "deployment.apps/frontend created\n"
  I0703 12:49:01.000842 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-primary
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: agnhost
        role: primary
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: primary
          tier: backend
      spec:
        containers:
        - name: primary
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0703 12:49:01.001000 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 create -f -'
  I0703 12:49:01.223738 21 builder.go:146] stderr: ""
  I0703 12:49:01.224164 21 builder.go:147] stdout: "deployment.apps/agnhost-primary created\n"
  I0703 12:49:01.224242 21 kubectl.go:403] apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: agnhost-replica
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: agnhost
        role: replica
        tier: backend
    template:
      metadata:
        labels:
          app: agnhost
          role: replica
          tier: backend
      spec:
        containers:
        - name: replica
          image: registry.k8s.io/e2e-test-images/agnhost:2.47
          args: [ "guestbook", "--replicaof", "agnhost-primary", "--http-port", "6379" ]
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          ports:
          - containerPort: 6379

  I0703 12:49:01.224391 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 create -f -'
  I0703 12:49:01.992405 21 builder.go:146] stderr: ""
  I0703 12:49:01.992454 21 builder.go:147] stdout: "deployment.apps/agnhost-replica created\n"
  STEP: validating guestbook app @ 07/03/24 12:49:01.992
  I0703 12:49:01.992504 21 kubectl.go:2271] Waiting for all frontend pods to be Running.
  I0703 12:49:07.045639 21 kubectl.go:2275] Waiting for frontend to serve content.
  I0703 12:49:10.084030 21 kubectl.go:2280] Trying to add a new entry to the guestbook.
  I0703 12:49:10.096181 21 kubectl.go:2285] Verifying that added entry can be retrieved.
  I0703 12:49:10.110323 21 kubectl.go:2298] Failed to get response from guestbook. err: <nil>, response: {"data":""}
  STEP: using delete to clean up resources @ 07/03/24 12:49:15.126
  I0703 12:49:15.127122 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 delete --grace-period=0 --force -f -'
  I0703 12:49:15.422122 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 12:49:15.422174 21 builder.go:147] stdout: "service \"agnhost-replica\" force deleted\n"
  STEP: using delete to clean up resources @ 07/03/24 12:49:15.422
  I0703 12:49:15.422331 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 delete --grace-period=0 --force -f -'
  I0703 12:49:15.651709 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 12:49:15.651762 21 builder.go:147] stdout: "service \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/03/24 12:49:15.651
  I0703 12:49:15.651897 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 delete --grace-period=0 --force -f -'
  I0703 12:49:15.864993 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 12:49:15.865044 21 builder.go:147] stdout: "service \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/03/24 12:49:15.865
  I0703 12:49:15.865199 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 delete --grace-period=0 --force -f -'
  I0703 12:49:15.992789 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 12:49:15.992837 21 builder.go:147] stdout: "deployment.apps \"frontend\" force deleted\n"
  STEP: using delete to clean up resources @ 07/03/24 12:49:15.992
  I0703 12:49:15.992988 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 delete --grace-period=0 --force -f -'
  I0703 12:49:16.213340 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 12:49:16.213386 21 builder.go:147] stdout: "deployment.apps \"agnhost-primary\" force deleted\n"
  STEP: using delete to clean up resources @ 07/03/24 12:49:16.213
  I0703 12:49:16.213534 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8624 delete --grace-period=0 --force -f -'
  I0703 12:49:16.348820 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 12:49:16.348870 21 builder.go:147] stdout: "deployment.apps \"agnhost-replica\" force deleted\n"
  I0703 12:49:16.349079 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8624" for this suite. @ 07/03/24 12:49:16.362
• [17.620 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via environment variable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:47
  STEP: Creating a kubernetes client @ 07/03/24 12:49:16.377
  I0703 12:49:16.377785 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 12:49:16.379
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:49:16.495
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:49:16.516
  STEP: Creating configMap configmap-2082/configmap-test-5ba1803e-bce7-4576-bf86-6502b6f8f969 @ 07/03/24 12:49:16.535
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:49:16.554
  STEP: Saw pod success @ 07/03/24 12:49:22.638
  I0703 12:49:22.640983 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-e450c130-3ba4-4702-843b-1c53032d5438 container env-test: <nil>
  STEP: delete the pod @ 07/03/24 12:49:22.671
  I0703 12:49:22.703084 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2082" for this suite. @ 07/03/24 12:49:22.712
• [6.349 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Pods Extended Pods Set QOS Class should be set on Pods with matching resource requests and limits for memory and cpu [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pods.go:163
  STEP: Creating a kubernetes client @ 07/03/24 12:49:22.727
  I0703 12:49:22.727930 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 12:49:22.729
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:49:22.801
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:49:22.817
  STEP: creating the pod @ 07/03/24 12:49:22.825
  STEP: submitting the pod to kubernetes @ 07/03/24 12:49:22.825
  STEP: verifying QOS class is set on the pod @ 07/03/24 12:49:22.845
  I0703 12:49:22.883587 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-943" for this suite. @ 07/03/24 12:49:22.901
• [0.208 seconds]
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:110
  STEP: Creating a kubernetes client @ 07/03/24 12:49:22.936
  I0703 12:49:22.936130 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:49:22.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:49:23.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:49:23.038
  STEP: Creating configMap with name projected-configmap-test-volume-map-2b09736c-870a-48fc-9046-0d8e139ed1a6 @ 07/03/24 12:49:23.051
  STEP: Creating a pod to test consume configMaps @ 07/03/24 12:49:23.062
  STEP: Saw pod success @ 07/03/24 12:49:29.102
  I0703 12:49:29.106426 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-configmaps-8fcc59c5-22f6-402d-8db3-a9a7c9ec5069 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 12:49:29.116
  I0703 12:49:29.165938 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9623" for this suite. @ 07/03/24 12:49:29.17
• [6.263 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PreemptionExecutionPath runs ReplicaSets to verify preemption running path [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:624
  STEP: Creating a kubernetes client @ 07/03/24 12:49:29.199
  I0703 12:49:29.199755 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-preemption @ 07/03/24 12:49:29.201
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:49:29.307
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:49:29.313
  I0703 12:49:29.347011 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  I0703 12:50:29.352567 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/03/24 12:50:29.359
  I0703 12:50:29.359598 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/03/24 12:50:29.36
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:50:29.396
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:50:29.422
  STEP: Finding an available node @ 07/03/24 12:50:29.447
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/03/24 12:50:29.453
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/03/24 12:50:33.508
  I0703 12:50:33.530927 21 preemption.go:583] found a healthy node: ip-172-31-5-183
  I0703 12:50:45.734863 21 preemption.go:706] pods created so far: [1 1 1]
  I0703 12:50:45.734920 21 preemption.go:707] length of pods created so far: 3
  I0703 12:50:47.746508 21 preemption.go:724] pods created so far: [2 2 1]
  I0703 12:50:54.933901 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-4966" for this suite. @ 07/03/24 12:50:54.944
  I0703 12:50:54.958774 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-9118" for this suite. @ 07/03/24 12:50:54.972
• [85.787 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should include webhook resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:119
  STEP: Creating a kubernetes client @ 07/03/24 12:50:54.987
  I0703 12:50:54.987413 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:50:54.988
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:50:55.063
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:50:55.086
  STEP: Setting up server cert @ 07/03/24 12:50:55.157
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:50:55.519
  STEP: Deploying the webhook pod @ 07/03/24 12:50:55.531
  STEP: Wait for the deployment to be ready @ 07/03/24 12:50:55.602
  I0703 12:50:55.628323 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0703 12:50:57.646383 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:50:59.652387 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 50, 55, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:51:01.66
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:51:01.767
  I0703 12:51:02.768995 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: fetching the /apis discovery document @ 07/03/24 12:51:02.783
  STEP: finding the admissionregistration.k8s.io API group in the /apis discovery document @ 07/03/24 12:51:02.79
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis discovery document @ 07/03/24 12:51:02.79
  STEP: fetching the /apis/admissionregistration.k8s.io discovery document @ 07/03/24 12:51:02.79
  STEP: finding the admissionregistration.k8s.io/v1 API group/version in the /apis/admissionregistration.k8s.io discovery document @ 07/03/24 12:51:02.802
  STEP: fetching the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/03/24 12:51:02.819
  STEP: finding mutatingwebhookconfigurations and validatingwebhookconfigurations resources in the /apis/admissionregistration.k8s.io/v1 discovery document @ 07/03/24 12:51:02.825
  I0703 12:51:03.002608 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1180" for this suite. @ 07/03/24 12:51:03.022
  STEP: Destroying namespace "webhook-markers-2851" for this suite. @ 07/03/24 12:51:03.073
• [8.117 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should honor timeout [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:371
  STEP: Creating a kubernetes client @ 07/03/24 12:51:03.119
  I0703 12:51:03.119453 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:51:03.121
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:51:03.301
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:51:03.316
  STEP: Setting up server cert @ 07/03/24 12:51:03.731
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:51:04.938
  STEP: Deploying the webhook pod @ 07/03/24 12:51:04.952
  STEP: Wait for the deployment to be ready @ 07/03/24 12:51:05.002
  I0703 12:51:05.039390 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  I0703 12:51:07.049117 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:51:09.054308 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:51:11.054408 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:51:13.054444 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  I0703 12:51:15.053595 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 51, 5, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  STEP: Deploying the webhook service @ 07/03/24 12:51:17.054
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:51:17.073
  I0703 12:51:18.074683 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Setting timeout (1s) shorter than webhook latency (5s) @ 07/03/24 12:51:18.087
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/03/24 12:51:18.087
  STEP: Request fails when timeout (1s) is shorter than slow webhook latency (5s) @ 07/03/24 12:51:18.12
  STEP: Having no error when timeout is shorter than webhook latency and failure policy is ignore @ 07/03/24 12:51:19.139
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/03/24 12:51:19.139
  STEP: Having no error when timeout is longer than webhook latency @ 07/03/24 12:51:20.222
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/03/24 12:51:20.222
  STEP: Having no error when timeout is empty (defaulted to 10s in v1) @ 07/03/24 12:51:25.303
  STEP: Registering slow webhook via the AdmissionRegistration API @ 07/03/24 12:51:25.303
  I0703 12:51:30.624119 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-24" for this suite. @ 07/03/24 12:51:30.641
  STEP: Destroying namespace "webhook-markers-3155" for this suite. @ 07/03/24 12:51:30.664
• [27.564 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery request for CRDs [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:194
  STEP: Creating a kubernetes client @ 07/03/24 12:51:30.685
  I0703 12:51:30.685719 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/03/24 12:51:30.686
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:51:30.762
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:51:30.767
  I0703 12:51:30.785078 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 12:51:34.201888 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-7763" for this suite. @ 07/03/24 12:51:34.273
• [3.626 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Subdomain [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:286
  STEP: Creating a kubernetes client @ 07/03/24 12:51:34.317
  I0703 12:51:34.318072 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 12:51:34.325
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:51:34.399
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:51:34.408
  STEP: Creating a test headless service @ 07/03/24 12:51:34.422
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service-2.dns-4274.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service-2.dns-4274.svc.cluster.local;sleep 1; done
   @ 07/03/24 12:51:34.439
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local;check="$$(dig +notcp +noall +answer +search dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service-2.dns-4274.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service-2.dns-4274.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service-2.dns-4274.svc.cluster.local;sleep 1; done
   @ 07/03/24 12:51:34.445
  STEP: creating a pod to probe DNS @ 07/03/24 12:51:34.445
  STEP: submitting the pod to kubernetes @ 07/03/24 12:51:34.445
  STEP: retrieving the pod @ 07/03/24 12:52:12.87
  STEP: looking for the results for each expected name from probers @ 07/03/24 12:52:12.873
  I0703 12:52:12.896241 21 dns_common.go:478] Unable to read wheezy_udp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local from pod dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5: the server could not find the requested resource (get pods dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5)
  I0703 12:52:12.918511 21 dns_common.go:478] Unable to read wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local from pod dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5: the server could not find the requested resource (get pods dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5)
  I0703 12:52:12.939830 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service-2.dns-4274.svc.cluster.local from pod dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5: the server could not find the requested resource (get pods dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5)
  I0703 12:52:12.953999 21 dns_common.go:478] Unable to read jessie_tcp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local from pod dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5: the server could not find the requested resource (get pods dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5)
  I0703 12:52:12.965788 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service-2.dns-4274.svc.cluster.local from pod dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5: the server could not find the requested resource (get pods dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5)
  I0703 12:52:12.981139 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service-2.dns-4274.svc.cluster.local from pod dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5: the server could not find the requested resource (get pods dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5)
  I0703 12:52:12.981478 21 dns_common.go:489] Lookups using dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5 failed for: [wheezy_udp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local wheezy_tcp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local wheezy_tcp@dns-test-service-2.dns-4274.svc.cluster.local jessie_tcp@dns-querier-2.dns-test-service-2.dns-4274.svc.cluster.local jessie_udp@dns-test-service-2.dns-4274.svc.cluster.local jessie_tcp@dns-test-service-2.dns-4274.svc.cluster.local]

  I0703 12:52:13.022877 21 dns_common.go:495] Pod client logs for webserver: 
  I0703 12:52:13.042505 21 dns_common.go:495] Pod client logs for querier: 
  I0703 12:52:13.055595 21 dns_common.go:495] Pod client logs for jessie-querier: 
  I0703 12:52:17.972439 21 dns_common.go:527] DNS probes using dns-4274/dns-test-0515c3d4-1319-44af-a42d-a9ecfe7d3fb5 succeeded

  STEP: deleting the pod @ 07/03/24 12:52:17.972
  STEP: deleting the test headless service @ 07/03/24 12:52:18.053
  I0703 12:52:18.080355 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4274" for this suite. @ 07/03/24 12:52:18.098
• [43.815 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PreStop should call prestop when killing a pod [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/pre_stop.go:169
  STEP: Creating a kubernetes client @ 07/03/24 12:52:18.136
  I0703 12:52:18.136802 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename prestop @ 07/03/24 12:52:18.138
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:52:18.203
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:52:18.207
  STEP: Creating server pod server in namespace prestop-8041 @ 07/03/24 12:52:18.213
  STEP: Waiting for pods to come up. @ 07/03/24 12:52:18.239
  STEP: Creating tester pod tester in namespace prestop-8041 @ 07/03/24 12:52:22.372
  STEP: Deleting pre-stop pod @ 07/03/24 12:52:26.461
  I0703 12:52:31.510104 21 pre_stop.go:140] Saw: {
  	"Hostname": "server",
  	"Sent": null,
  	"Received": {
  		"prestop": 1
  	},
  	"Errors": null,
  	"Log": [
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up.",
  		"default/nettest has 0 endpoints ([]), which is less than 8 as expected. Waiting for all endpoints to come up."
  	],
  	"StillContactingPeers": true
  }
  STEP: Deleting the server pod @ 07/03/24 12:52:31.511
  I0703 12:52:31.536234 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "prestop-8041" for this suite. @ 07/03/24 12:52:31.555
• [13.450 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should patch a secret [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:156
  STEP: Creating a kubernetes client @ 07/03/24 12:52:31.611
  I0703 12:52:31.611533 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 12:52:31.612
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:52:31.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:52:31.76
  STEP: creating a secret @ 07/03/24 12:52:31.781
  STEP: listing secrets in all namespaces to ensure that there are more than zero @ 07/03/24 12:52:31.806
  STEP: patching the secret @ 07/03/24 12:52:31.846
  STEP: deleting the secret using a LabelSelector @ 07/03/24 12:52:31.915
  STEP: listing secrets in all namespaces, searching for label name and value in patch @ 07/03/24 12:52:31.948
  I0703 12:52:31.965298 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3693" for this suite. @ 07/03/24 12:52:31.971
• [0.391 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should list and delete a collection of DaemonSets [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:836
  STEP: Creating a kubernetes client @ 07/03/24 12:52:32.001
  I0703 12:52:32.001108 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename daemonsets @ 07/03/24 12:52:32.001
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:52:32.099
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:52:32.113
  STEP: Creating simple DaemonSet "daemon-set" @ 07/03/24 12:52:32.265
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/03/24 12:52:32.316
  I0703 12:52:32.349063 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:52:32.349110 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:52:33.343775 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:52:33.343817 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:52:34.335569 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 12:52:34.335731 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:52:35.358965 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 12:52:35.359208 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 12:52:36.335493 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 12:52:36.335734 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: listing all DaemonSets @ 07/03/24 12:52:36.338
  STEP: DeleteCollection of the DaemonSets @ 07/03/24 12:52:36.341
  STEP: Verify that ReplicaSets have been deleted @ 07/03/24 12:52:36.346
  I0703 12:52:36.386802 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"17666"},"items":null}

  I0703 12:52:36.390764 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"17666"},"items":[{"metadata":{"name":"daemon-set-5kppx","generateName":"daemon-set-","namespace":"daemonsets-6936","uid":"bc488023-572d-428b-8bad-c8c521695570","resourceVersion":"17655","creationTimestamp":"2024-07-03T12:52:32Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"5977d083f0b4604a2cf631c77575371213e7905ef7d36bd004ea81bfc0f0a8dd","cni.projectcalico.org/podIP":"10.42.1.137/32","cni.projectcalico.org/podIPs":"10.42.1.137/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b6232132-ed9a-4423-9f63-9c2535dc813a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b6232132-ed9a-4423-9f63-9c2535dc813a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.1.137\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-vb7n5","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-vb7n5","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-5-183","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-5-183"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:34Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:34Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:34Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:32Z"}],"hostIP":"172.31.5.183","hostIPs":[{"ip":"172.31.5.183"}],"podIP":"10.42.1.137","podIPs":[{"ip":"10.42.1.137"}],"startTime":"2024-07-03T12:52:32Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-03T12:52:33Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://f702a3106ce49118d8de4041fa401a08018d7d737e259599b054b1eb158b27b0","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-h4hcf","generateName":"daemon-set-","namespace":"daemonsets-6936","uid":"24c4468c-9497-4c78-8653-a5eb5926e3e4","resourceVersion":"17659","creationTimestamp":"2024-07-03T12:52:32Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"a3234c34e9c7221b8496b4907d9840ba6042b17d6f2e6359345bee79e490a370","cni.projectcalico.org/podIP":"10.42.2.50/32","cni.projectcalico.org/podIPs":"10.42.2.50/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b6232132-ed9a-4423-9f63-9c2535dc813a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b6232132-ed9a-4423-9f63-9c2535dc813a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:33Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.2.50\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-mbdvs","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-mbdvs","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-4-210","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-4-210"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:34Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:34Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:34Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:32Z"}],"hostIP":"172.31.4.210","hostIPs":[{"ip":"172.31.4.210"}],"podIP":"10.42.2.50","podIPs":[{"ip":"10.42.2.50"}],"startTime":"2024-07-03T12:52:32Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-03T12:52:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://b601e8796db878c698186b40b3fc66d9a06e65525551e2e52c7a85e476e99c8e","started":true}],"qosClass":"BestEffort"}},{"metadata":{"name":"daemon-set-lwxmx","generateName":"daemon-set-","namespace":"daemonsets-6936","uid":"f3effcca-debb-4d5b-98f4-7198ade49335","resourceVersion":"17663","creationTimestamp":"2024-07-03T12:52:32Z","labels":{"controller-revision-hash":"7d79bd845c","daemonset-name":"daemon-set","pod-template-generation":"1"},"annotations":{"cni.projectcalico.org/containerID":"fc7f5fbe9cd10b9e2d83bc0bdd2c4cace6d1af5b0e931af34bee8fe33686a83b","cni.projectcalico.org/podIP":"10.42.0.34/32","cni.projectcalico.org/podIPs":"10.42.0.34/32"},"ownerReferences":[{"apiVersion":"apps/v1","kind":"DaemonSet","name":"daemon-set","uid":"b6232132-ed9a-4423-9f63-9c2535dc813a","controller":true,"blockOwnerDeletion":true}],"managedFields":[{"manager":"kube-controller-manager","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:32Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:generateName":{},"f:labels":{".":{},"f:controller-revision-hash":{},"f:daemonset-name":{},"f:pod-template-generation":{}},"f:ownerReferences":{".":{},"k:{\"uid\":\"b6232132-ed9a-4423-9f63-9c2535dc813a\"}":{}}},"f:spec":{"f:affinity":{".":{},"f:nodeAffinity":{".":{},"f:requiredDuringSchedulingIgnoredDuringExecution":{}}},"f:containers":{"k:{\"name\":\"app\"}":{".":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:ports":{".":{},"k:{\"containerPort\":9376,\"protocol\":\"TCP\"}":{".":{},"f:containerPort":{},"f:protocol":{}}},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{},"f:tolerations":{}}}},{"manager":"calico","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:34Z","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:annotations":{".":{},"f:cni.projectcalico.org/containerID":{},"f:cni.projectcalico.org/podIP":{},"f:cni.projectcalico.org/podIPs":{}}}},"subresource":"status"},{"manager":"kubelet","operation":"Update","apiVersion":"v1","time":"2024-07-03T12:52:35Z","fieldsType":"FieldsV1","fieldsV1":{"f:status":{"f:conditions":{"k:{\"type\":\"ContainersReady\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Initialized\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"PodReadyToStartContainers\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}},"k:{\"type\":\"Ready\"}":{".":{},"f:lastProbeTime":{},"f:lastTransitionTime":{},"f:status":{},"f:type":{}}},"f:containerStatuses":{},"f:hostIP":{},"f:hostIPs":{},"f:phase":{},"f:podIP":{},"f:podIPs":{".":{},"k:{\"ip\":\"10.42.0.34\"}":{".":{},"f:ip":{}}},"f:startTime":{}}},"subresource":"status"}]},"spec":{"volumes":[{"name":"kube-api-access-g8p9d","projected":{"sources":[{"serviceAccountToken":{"expirationSeconds":3607,"path":"token"}},{"configMap":{"name":"kube-root-ca.crt","items":[{"key":"ca.crt","path":"ca.crt"}]}},{"downwardAPI":{"items":[{"path":"namespace","fieldRef":{"apiVersion":"v1","fieldPath":"metadata.namespace"}}]}}],"defaultMode":420}}],"containers":[{"name":"app","image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","ports":[{"containerPort":9376,"protocol":"TCP"}],"resources":{},"volumeMounts":[{"name":"kube-api-access-g8p9d","readOnly":true,"mountPath":"/var/run/secrets/kubernetes.io/serviceaccount"}],"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File","imagePullPolicy":"IfNotPresent","securityContext":{}}],"restartPolicy":"Always","terminationGracePeriodSeconds":30,"dnsPolicy":"ClusterFirst","serviceAccountName":"default","serviceAccount":"default","nodeName":"ip-172-31-4-137","securityContext":{},"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchFields":[{"key":"metadata.name","operator":"In","values":["ip-172-31-4-137"]}]}]}}},"schedulerName":"default-scheduler","tolerations":[{"key":"node.kubernetes.io/not-ready","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/unreachable","operator":"Exists","effect":"NoExecute"},{"key":"node.kubernetes.io/disk-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/memory-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/pid-pressure","operator":"Exists","effect":"NoSchedule"},{"key":"node.kubernetes.io/unschedulable","operator":"Exists","effect":"NoSchedule"}],"priority":0,"enableServiceLinks":true,"preemptionPolicy":"PreemptLowerPriority"},"status":{"phase":"Running","conditions":[{"type":"PodReadyToStartContainers","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:35Z"},{"type":"Initialized","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:32Z"},{"type":"Ready","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:35Z"},{"type":"ContainersReady","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:35Z"},{"type":"PodScheduled","status":"True","lastProbeTime":null,"lastTransitionTime":"2024-07-03T12:52:32Z"}],"hostIP":"172.31.4.137","hostIPs":[{"ip":"172.31.4.137"}],"podIP":"10.42.0.34","podIPs":[{"ip":"10.42.0.34"}],"startTime":"2024-07-03T12:52:32Z","containerStatuses":[{"name":"app","state":{"running":{"startedAt":"2024-07-03T12:52:34Z"}},"lastState":{},"ready":true,"restartCount":0,"image":"registry.k8s.io/e2e-test-images/httpd:2.4.38-4","imageID":"docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22","containerID":"docker://2d3b6c25794a49adf6cbb4c5ab4854587c77ba762abbec4f6130dac53ad82b74","started":true}],"qosClass":"BestEffort"}}]}

  I0703 12:52:36.577149 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-6936" for this suite. @ 07/03/24 12:52:36.591
• [4.605 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] removes definition from spec when one version gets changed to not be served [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:443
  STEP: Creating a kubernetes client @ 07/03/24 12:52:36.606
  I0703 12:52:36.606633 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 12:52:36.607
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:52:36.662
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:52:36.683
  STEP: set up a multi version CRD @ 07/03/24 12:52:36.718
  I0703 12:52:36.719056 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: mark a version not serverd @ 07/03/24 12:52:43.738
  STEP: check the unserved version gets removed @ 07/03/24 12:52:43.806
  STEP: check the other version is not changed @ 07/03/24 12:52:46.772
  I0703 12:52:53.465443 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-6059" for this suite. @ 07/03/24 12:52:53.581
• [17.003 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] updates the published spec when one version gets renamed [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:392
  STEP: Creating a kubernetes client @ 07/03/24 12:52:53.612
  I0703 12:52:53.612275 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 12:52:53.613
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:52:53.733
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:52:53.769
  STEP: set up a multi version CRD @ 07/03/24 12:52:53.794
  I0703 12:52:53.802229 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: rename a version @ 07/03/24 12:53:00.692
  STEP: check the new version name is served @ 07/03/24 12:53:00.875
  STEP: check the old version name is removed @ 07/03/24 12:53:04.526
  STEP: check the other version is not changed @ 07/03/24 12:53:06.13
  I0703 12:53:11.277983 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9566" for this suite. @ 07/03/24 12:53:11.311
• [17.708 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should manage the lifecycle of a ResourceQuota [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:948
  STEP: Creating a kubernetes client @ 07/03/24 12:53:11.321
  I0703 12:53:11.321615 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 12:53:11.324
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:11.386
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:11.406
  STEP: Creating a ResourceQuota @ 07/03/24 12:53:11.439
  STEP: Getting a ResourceQuota @ 07/03/24 12:53:11.445
  STEP: Listing all ResourceQuotas with LabelSelector @ 07/03/24 12:53:11.464
  STEP: Patching the ResourceQuota @ 07/03/24 12:53:11.469
  STEP: Deleting a Collection of ResourceQuotas @ 07/03/24 12:53:11.496
  STEP: Verifying the deleted ResourceQuota @ 07/03/24 12:53:11.523
  I0703 12:53:11.543454 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4900" for this suite. @ 07/03/24 12:53:11.553
• [0.253 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should ensure that all services are removed when a namespace is deleted [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:254
  STEP: Creating a kubernetes client @ 07/03/24 12:53:11.584
  I0703 12:53:11.584739 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename namespaces @ 07/03/24 12:53:11.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:11.641
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:11.656
  STEP: Creating a test namespace @ 07/03/24 12:53:11.665
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:11.718
  STEP: Creating a service in the namespace @ 07/03/24 12:53:11.75
  STEP: Deleting the namespace @ 07/03/24 12:53:11.772
  STEP: Waiting for the namespace to be removed. @ 07/03/24 12:53:11.861
  STEP: Recreating the namespace @ 07/03/24 12:53:17.864
  STEP: Verifying there is no service in the namespace @ 07/03/24 12:53:17.93
  I0703 12:53:17.935617 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5180" for this suite. @ 07/03/24 12:53:17.939
  STEP: Destroying namespace "nsdeletetest-9813" for this suite. @ 07/03/24 12:53:18
  I0703 12:53:18.027989 21 framework.go:370] Namespace nsdeletetest-9813 was already deleted
  STEP: Destroying namespace "nsdeletetest-5258" for this suite. @ 07/03/24 12:53:18.028
• [6.462 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from ClusterIP to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1497
  STEP: Creating a kubernetes client @ 07/03/24 12:53:18.066
  I0703 12:53:18.089050 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 12:53:18.101
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:18.166
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:18.184
  STEP: creating a service clusterip-service with the type=ClusterIP in namespace services-7898 @ 07/03/24 12:53:18.214
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/03/24 12:53:18.263
  STEP: creating service externalsvc in namespace services-7898 @ 07/03/24 12:53:18.264
  STEP: creating replication controller externalsvc in namespace services-7898 @ 07/03/24 12:53:18.334
  I0703 12:53:18.365687      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-7898, replica count: 2
  I0703 12:53:21.424401      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the ClusterIP service to type=ExternalName @ 07/03/24 12:53:21.437
  I0703 12:53:21.469298 21 resource.go:361] Creating new exec pod
  I0703 12:53:25.533493 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-7898 exec execpod2t2cq -- /bin/sh -x -c nslookup clusterip-service.services-7898.svc.cluster.local'
  I0703 12:53:31.039846 21 builder.go:146] stderr: "+ nslookup clusterip-service.services-7898.svc.cluster.local\n"
  I0703 12:53:31.039914 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nclusterip-service.services-7898.svc.cluster.local\tcanonical name = externalsvc.services-7898.svc.cluster.local.\nName:\texternalsvc.services-7898.svc.cluster.local\nAddress: 10.43.190.102\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-7898, will wait for the garbage collector to delete the pods @ 07/03/24 12:53:31.04
  I0703 12:53:31.107865 21 resources.go:139] Deleting ReplicationController externalsvc took: 6.556077ms
  I0703 12:53:31.208481 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 100.611786ms
  I0703 12:53:34.294023 21 service.go:1506] Cleaning up the ClusterIP to ExternalName test service
  I0703 12:53:34.316562 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-7898" for this suite. @ 07/03/24 12:53:34.334
• [16.287 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support proxy with --port 0 [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1833
  STEP: Creating a kubernetes client @ 07/03/24 12:53:34.348
  I0703 12:53:34.348136 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 12:53:34.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:34.492
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:34.539
  STEP: starting the proxy server @ 07/03/24 12:53:34.592
  I0703 12:53:34.592980 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-8644 proxy -p 0 --disable-filter'
  STEP: curling proxy /api/ output @ 07/03/24 12:53:34.79
  I0703 12:53:34.809184 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-8644" for this suite. @ 07/03/24 12:53:34.813
  I0703 12:53:34.813547 21 kubectl.go:2228] kubectl proxy stderr: W0703 12:53:34.787122     324 proxy.go:177] Request filter disabled, your proxy is vulnerable to XSRF attacks, please be cautious

  I0703 12:53:34.813610 21 kubectl.go:2223] kubectl proxy stdout: Starting to serve on 127.0.0.1:35981

• [0.473 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:223
  STEP: Creating a kubernetes client @ 07/03/24 12:53:34.82
  I0703 12:53:34.820701 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 12:53:34.821
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:34.918
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:34.933
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:53:34.941
  STEP: Saw pod success @ 07/03/24 12:53:39.002
  I0703 12:53:39.005330 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-29183b17-8cd7-402a-bf67-28047c096d3a container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:53:39.012
  I0703 12:53:39.032460 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-2199" for this suite. @ 07/03/24 12:53:39.045
• [4.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should guarantee kube-root-ca.crt exist in any namespace [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:742
  STEP: Creating a kubernetes client @ 07/03/24 12:53:39.084
  I0703 12:53:39.084793 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svcaccounts @ 07/03/24 12:53:39.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:39.163
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:39.174
  I0703 12:53:39.185707 21 service_accounts.go:754] Got root ca configmap in namespace "svcaccounts-6706"
  I0703 12:53:39.210627 21 service_accounts.go:757] Deleted root ca configmap in namespace "svcaccounts-6706"
  STEP: waiting for a new root ca configmap created @ 07/03/24 12:53:39.711
  I0703 12:53:39.717388 21 service_accounts.go:771] Recreated root ca configmap in namespace "svcaccounts-6706"
  I0703 12:53:39.738983 21 service_accounts.go:782] Updated root ca configmap in namespace "svcaccounts-6706"
  STEP: waiting for the root ca configmap reconciled @ 07/03/24 12:53:40.239
  I0703 12:53:40.262826 21 service_accounts.go:800] Reconciled root ca configmap in namespace "svcaccounts-6706"
  I0703 12:53:40.262942 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6706" for this suite. @ 07/03/24 12:53:40.28
• [1.227 seconds]
------------------------------
SSSS
------------------------------
[sig-auth] Certificates API [Privileged:ClusterAdmin] should support CSR API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/certificates.go:200
  STEP: Creating a kubernetes client @ 07/03/24 12:53:40.311
  I0703 12:53:40.311929 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename certificates @ 07/03/24 12:53:40.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:40.434
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:40.444
  STEP: getting /apis @ 07/03/24 12:53:41.922
  STEP: getting /apis/certificates.k8s.io @ 07/03/24 12:53:41.927
  STEP: getting /apis/certificates.k8s.io/v1 @ 07/03/24 12:53:41.928
  STEP: creating @ 07/03/24 12:53:41.93
  STEP: getting @ 07/03/24 12:53:41.952
  STEP: listing @ 07/03/24 12:53:41.955
  STEP: watching @ 07/03/24 12:53:41.961
  I0703 12:53:41.961850 21 certificates.go:316] starting watch
  STEP: patching @ 07/03/24 12:53:41.963
  STEP: updating @ 07/03/24 12:53:41.974
  I0703 12:53:41.990646 21 certificates.go:332] waiting for watch events with expected annotations
  I0703 12:53:41.994877 21 certificates.go:345] saw patched and updated annotations
  STEP: getting /approval @ 07/03/24 12:53:41.995
  STEP: patching /approval @ 07/03/24 12:53:41.998
  STEP: updating /approval @ 07/03/24 12:53:42.008
  STEP: getting /status @ 07/03/24 12:53:42.022
  STEP: patching /status @ 07/03/24 12:53:42.025
  STEP: updating /status @ 07/03/24 12:53:42.037
  STEP: deleting @ 07/03/24 12:53:42.05
  STEP: deleting a collection @ 07/03/24 12:53:42.077
  I0703 12:53:42.102179 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "certificates-1206" for this suite. @ 07/03/24 12:53:42.105
• [1.808 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:528
  STEP: Creating a kubernetes client @ 07/03/24 12:53:42.12
  I0703 12:53:42.120546 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 12:53:42.122
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:53:42.193
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:53:42.231
  STEP: Creating pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767 @ 07/03/24 12:53:42.262
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 12:53:46.375
  I0703 12:53:46.377907 21 container_probe.go:1749] Initial restart count of pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 is 0
  I0703 12:53:46.380735 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:53:48.388404 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:53:50.394645 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:53:52.399848 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:53:54.409690 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:53:56.416712 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:53:58.421712 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:00.426824 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:02.431021 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:04.442453 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:06.462977 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:08.470129 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:10.484167 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:12.488258 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:14.504196 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:16.513976 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:18.528587 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:20.532794 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:22.538155 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:24.542795 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:26.547204 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:28.552572 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:30.559463 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:32.566168 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:34.571246 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:36.587923 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:38.591961 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:40.603888 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:42.609087 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:44.615303 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:46.620338 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:48.626893 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:50.635835 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:52.640343 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:54.649972 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:56.661210 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:54:58.667394 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:00.671379 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:02.687683 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:04.694015 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:06.705196 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:08.719732 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:10.725688 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:12.731035 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:14.735325 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:16.756191 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:18.774983 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:20.802854 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:22.807870 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:24.812389 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:26.821363 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:28.828691 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:30.833966 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:32.863938 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:34.876753 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:36.881332 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:38.922858 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:40.927551 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:42.934502 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:44.942627 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:46.982510 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:48.995162 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:51.000846 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:53.010705 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:55.026600 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:57.034696 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:55:59.047001 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:01.061853 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:03.069639 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:05.077735 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:07.081951 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:09.086041 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:11.090998 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:13.095668 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:15.113923 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:17.119981 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:19.125545 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:21.131599 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:23.139767 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:25.144197 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:27.149847 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:29.154926 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:31.159895 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:33.168179 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:35.174249 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:37.181953 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:39.187029 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:41.190240 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:43.194945 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:45.226015 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:47.236448 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:49.250466 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:51.265297 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:53.271809 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:55.275669 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:57.293819 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:56:59.299319 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:01.306729 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:03.313144 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:05.323027 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:07.327192 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:09.333989 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:11.338721 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:13.358919 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:15.369564 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:17.380940 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:19.385998 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:21.413693 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:23.420782 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:25.425278 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:27.437068 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:29.442422 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:31.453650 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:33.477365 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:35.514568 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:37.525495 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:39.530805 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:41.561975 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:43.568088 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  I0703 12:57:45.575724 21 container_probe.go:1759] Get pod test-grpc-d91e5f89-6dd7-4219-bfc2-640d45d58566 in namespace container-probe-7767
  STEP: deleting the pod @ 07/03/24 12:57:47.58
  I0703 12:57:47.636174 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-7767" for this suite. @ 07/03/24 12:57:47.674
• [245.570 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown metadata fields in both the root and embedded object of a CR [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:474
  STEP: Creating a kubernetes client @ 07/03/24 12:57:47.69
  I0703 12:57:47.698954 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename field-validation @ 07/03/24 12:57:47.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:57:47.848
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:57:47.868
  I0703 12:57:47.888260 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  W0703 12:57:50.627975      21 warnings.go:70] unknown field "alpha"
  W0703 12:57:50.628003      21 warnings.go:70] unknown field "beta"
  W0703 12:57:50.628010      21 warnings.go:70] unknown field "delta"
  W0703 12:57:50.628017      21 warnings.go:70] unknown field "epsilon"
  W0703 12:57:50.628022      21 warnings.go:70] unknown field "gamma"
  I0703 12:57:51.430752 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-2302" for this suite. @ 07/03/24 12:57:51.436
• [3.765 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Proxy version v1 A set of valid responses are returned for both pod and service Proxy [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/proxy.go:380
  STEP: Creating a kubernetes client @ 07/03/24 12:57:51.457
  I0703 12:57:51.458458 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename proxy @ 07/03/24 12:57:51.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:57:51.571
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:57:51.589
  I0703 12:57:51.699756 21 proxy.go:387] Creating pod...
  I0703 12:57:55.863678 21 proxy.go:411] Creating service...
  I0703 12:57:55.885239 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/pods/agnhost/proxy?method=DELETE
  I0703 12:57:58.930794 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0703 12:57:58.930846 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/pods/agnhost/proxy?method=OPTIONS
  I0703 12:57:58.935816 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0703 12:57:58.935855 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/pods/agnhost/proxy?method=PATCH
  I0703 12:57:58.941284 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0703 12:57:58.942049 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/pods/agnhost/proxy?method=POST
  I0703 12:57:58.945549 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0703 12:57:58.945717 21 proxy.go:448] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/pods/agnhost/proxy?method=PUT
  I0703 12:57:58.948671 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0703 12:57:58.948799 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/services/e2e-proxy-test-service/proxy?method=DELETE
  I0703 12:57:58.953482 21 proxy.go:530] http.Client request:DELETE | StatusCode:200 | Response:foo | Method:DELETE
  I0703 12:57:58.953880 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/services/e2e-proxy-test-service/proxy?method=OPTIONS
  I0703 12:57:58.961241 21 proxy.go:530] http.Client request:OPTIONS | StatusCode:200 | Response:foo | Method:OPTIONS
  I0703 12:57:58.961377 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/services/e2e-proxy-test-service/proxy?method=PATCH
  I0703 12:57:58.968441 21 proxy.go:530] http.Client request:PATCH | StatusCode:200 | Response:foo | Method:PATCH
  I0703 12:57:58.968493 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/services/e2e-proxy-test-service/proxy?method=POST
  I0703 12:57:58.976108 21 proxy.go:530] http.Client request:POST | StatusCode:200 | Response:foo | Method:POST
  I0703 12:57:58.976151 21 proxy.go:459] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/services/e2e-proxy-test-service/proxy?method=PUT
  I0703 12:57:58.982300 21 proxy.go:530] http.Client request:PUT | StatusCode:200 | Response:foo | Method:PUT
  I0703 12:57:58.982344 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/pods/agnhost/proxy?method=GET
  I0703 12:57:58.985313 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0703 12:57:58.985491 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/services/e2e-proxy-test-service/proxy?method=GET
  I0703 12:57:58.990168 21 proxy.go:487] http.Client request:GET StatusCode:301
  I0703 12:57:58.990234 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/pods/agnhost/proxy?method=HEAD
  I0703 12:57:58.994090 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0703 12:57:58.994212 21 proxy.go:479] Starting http.Client for https://10.43.0.1:443/api/v1/namespaces/proxy-9576/services/e2e-proxy-test-service/proxy?method=HEAD
  I0703 12:57:58.998168 21 proxy.go:487] http.Client request:HEAD StatusCode:301
  I0703 12:57:58.998433 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "proxy-9576" for this suite. @ 07/03/24 12:57:59.011
• [7.566 seconds]
------------------------------
[sig-apps] ReplicationController should test the lifecycle of a ReplicationController [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:113
  STEP: Creating a kubernetes client @ 07/03/24 12:57:59.023
  I0703 12:57:59.023123 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replication-controller @ 07/03/24 12:57:59.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:57:59.093
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:57:59.103
  STEP: creating a ReplicationController @ 07/03/24 12:57:59.135
  STEP: waiting for RC to be added @ 07/03/24 12:57:59.148
  STEP: waiting for available Replicas @ 07/03/24 12:57:59.148
  STEP: patching ReplicationController @ 07/03/24 12:58:07.133
  STEP: waiting for RC to be modified @ 07/03/24 12:58:07.156
  STEP: patching ReplicationController status @ 07/03/24 12:58:07.156
  STEP: waiting for RC to be modified @ 07/03/24 12:58:07.182
  STEP: waiting for available Replicas @ 07/03/24 12:58:07.182
  STEP: fetching ReplicationController status @ 07/03/24 12:58:07.192
  STEP: patching ReplicationController scale @ 07/03/24 12:58:07.196
  STEP: waiting for RC to be modified @ 07/03/24 12:58:07.211
  STEP: waiting for ReplicationController's scale to be the max amount @ 07/03/24 12:58:07.212
  STEP: fetching ReplicationController; ensuring that it's patched @ 07/03/24 12:58:12.579
  STEP: updating ReplicationController status @ 07/03/24 12:58:12.582
  STEP: waiting for RC to be modified @ 07/03/24 12:58:12.597
  STEP: listing all ReplicationControllers @ 07/03/24 12:58:12.597
  STEP: checking that ReplicationController has expected values @ 07/03/24 12:58:12.61
  STEP: deleting ReplicationControllers by collection @ 07/03/24 12:58:12.61
  STEP: waiting for ReplicationController to have a DELETED watchEvent @ 07/03/24 12:58:12.623
  E0703 12:58:12.794381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:12.794706 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-4325" for this suite. @ 07/03/24 12:58:12.81
• [13.806 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should delete a collection of pod templates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:123
  STEP: Creating a kubernetes client @ 07/03/24 12:58:12.832
  I0703 12:58:12.832414 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename podtemplate @ 07/03/24 12:58:12.834
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:12.905
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:12.911
  STEP: Create set of pod templates @ 07/03/24 12:58:12.929
  I0703 12:58:12.943739 21 podtemplates.go:143] created test-podtemplate-1
  I0703 12:58:12.967220 21 podtemplates.go:143] created test-podtemplate-2
  I0703 12:58:12.997201 21 podtemplates.go:143] created test-podtemplate-3
  STEP: get a list of pod templates with a label in the current namespace @ 07/03/24 12:58:13.002
  STEP: delete collection of pod templates @ 07/03/24 12:58:13.07
  I0703 12:58:13.070519 21 podtemplates.go:158] requesting DeleteCollection of pod templates
  STEP: check that the list of pod templates matches the requested quantity @ 07/03/24 12:58:13.198
  I0703 12:58:13.199168 21 podtemplates.go:219] requesting list of pod templates to confirm quantity
  I0703 12:58:13.212175 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5299" for this suite. @ 07/03/24 12:58:13.219
• [0.398 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:70
  STEP: Creating a kubernetes client @ 07/03/24 12:58:13.232
  I0703 12:58:13.232093 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 12:58:13.239
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:13.302
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:13.353
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 12:58:13.359
  E0703 12:58:13.795822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:14.795751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:15.796317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:16.804017      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 12:58:17.418
  I0703 12:58:17.443722 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-03b4e192-92e4-4b90-a3bb-894bd129d001 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 12:58:17.506
  I0703 12:58:17.534009 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4968" for this suite. @ 07/03/24 12:58:17.541
• [4.331 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl expose should create services for rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1533
  STEP: Creating a kubernetes client @ 07/03/24 12:58:17.563
  I0703 12:58:17.563247 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 12:58:17.564
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:17.618
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:17.626
  STEP: creating Agnhost RC @ 07/03/24 12:58:17.635
  I0703 12:58:17.635497 21 kubectl.go:1540] namespace kubectl-6183
  I0703 12:58:17.635631 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6183 create -f -'
  E0703 12:58:17.800475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:17.927111 21 builder.go:146] stderr: ""
  I0703 12:58:17.927154 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/03/24 12:58:17.927
  E0703 12:58:18.802816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:18.962166 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 12:58:18.962210 21 framework.go:733] Found 0 / 1
  E0703 12:58:19.803854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:19.968438 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 12:58:19.968483 21 framework.go:733] Found 0 / 1
  E0703 12:58:20.804331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:20.934735 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 12:58:20.934783 21 framework.go:733] Found 0 / 1
  E0703 12:58:21.805313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:21.931156 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 12:58:21.931209 21 framework.go:733] Found 1 / 1
  I0703 12:58:21.931234 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0703 12:58:21.934067 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 12:58:21.934106 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0703 12:58:21.934118 21 kubectl.go:1547] wait on agnhost-primary startup in kubectl-6183 
  I0703 12:58:21.934196 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6183 logs agnhost-primary-w84p5 agnhost-primary'
  I0703 12:58:22.065136 21 builder.go:146] stderr: ""
  I0703 12:58:22.065195 21 builder.go:147] stdout: "Paused\n"
  STEP: exposing RC @ 07/03/24 12:58:22.065
  I0703 12:58:22.065287 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6183 expose rc agnhost-primary --name=rm2 --port=1234 --target-port=6379'
  I0703 12:58:22.216720 21 builder.go:146] stderr: ""
  I0703 12:58:22.216771 21 builder.go:147] stdout: "service/rm2 exposed\n"
  I0703 12:58:22.231353 21 utils.go:1179] Service rm2 in namespace kubectl-6183 found.
  E0703 12:58:22.805366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:23.805503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: exposing service @ 07/03/24 12:58:24.239
  I0703 12:58:24.239690 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6183 expose service rm2 --name=rm3 --port=2345 --target-port=6379'
  I0703 12:58:24.377449 21 builder.go:146] stderr: ""
  I0703 12:58:24.377493 21 builder.go:147] stdout: "service/rm3 exposed\n"
  I0703 12:58:24.395868 21 utils.go:1179] Service rm3 in namespace kubectl-6183 found.
  E0703 12:58:24.806440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:25.806533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:26.404656 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6183" for this suite. @ 07/03/24 12:58:26.408
• [8.855 seconds]
------------------------------
S
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:220
  STEP: Creating a kubernetes client @ 07/03/24 12:58:26.417
  I0703 12:58:26.417926 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 12:58:26.419
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:26.506
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:26.519
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/03/24 12:58:26.525
  E0703 12:58:26.810532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:27.809861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:28.810867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:29.811121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:30.811265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:31.811518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 12:58:32.575
  I0703 12:58:32.580432 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-d14291bd-0d7c-443e-b394-fe50c26f84fa container test-container: <nil>
  STEP: delete the pod @ 07/03/24 12:58:32.625
  I0703 12:58:32.688367 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6144" for this suite. @ 07/03/24 12:58:32.692
• [6.288 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl api-versions should check if v1 is in available api versions [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:882
  STEP: Creating a kubernetes client @ 07/03/24 12:58:32.706
  I0703 12:58:32.706764 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 12:58:32.707
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:32.804
  E0703 12:58:32.811514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:32.813
  STEP: validating api versions @ 07/03/24 12:58:32.817
  I0703 12:58:32.817362 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1920 api-versions'
  I0703 12:58:33.062852 21 builder.go:146] stderr: ""
  I0703 12:58:33.062914 21 builder.go:147] stdout: "admissionregistration.k8s.io/v1\napiextensions.k8s.io/v1\napiregistration.k8s.io/v1\napps/v1\nauthentication.k8s.io/v1\nauthorization.k8s.io/v1\nautoscaling/v1\nautoscaling/v2\nbatch/v1\ncatalog.cattle.io/v1\ncertificates.k8s.io/v1\ncluster.cattle.io/v3\ncoordination.k8s.io/v1\ncrd.projectcalico.org/v1\ndiscovery.k8s.io/v1\nevents.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1\nflowcontrol.apiserver.k8s.io/v1beta3\nmanagement.cattle.io/v3\nmetrics.k8s.io/v1beta1\nnetworking.k8s.io/v1\nnode.k8s.io/v1\npolicy/v1\nrbac.authorization.k8s.io/v1\nscheduling.k8s.io/v1\nstorage.k8s.io/v1\nui.cattle.io/v1\nv1\n"
  I0703 12:58:33.063013 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1920" for this suite. @ 07/03/24 12:58:33.088
• [0.426 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:70
  STEP: Creating a kubernetes client @ 07/03/24 12:58:33.136
  I0703 12:58:33.136155 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replication-controller @ 07/03/24 12:58:33.137
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:33.368
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:33.422
  STEP: Creating replication controller my-hostname-basic-aa4e5ac4-2a1d-4682-8478-2cc180e8d4b7 @ 07/03/24 12:58:33.467
  I0703 12:58:33.567481 21 resource.go:87] Pod name my-hostname-basic-aa4e5ac4-2a1d-4682-8478-2cc180e8d4b7: Found 0 pods out of 1
  E0703 12:58:33.811821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:34.812267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:35.813174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:36.813460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:37.817500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:38.574051 21 resource.go:87] Pod name my-hostname-basic-aa4e5ac4-2a1d-4682-8478-2cc180e8d4b7: Found 1 pods out of 1
  I0703 12:58:38.574098 21 rc.go:507] Ensuring all pods for ReplicationController "my-hostname-basic-aa4e5ac4-2a1d-4682-8478-2cc180e8d4b7" are running
  I0703 12:58:38.582965 21 rc.go:523] Pod "my-hostname-basic-aa4e5ac4-2a1d-4682-8478-2cc180e8d4b7-lw9sd" is running and ready(conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 12:58:36 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 12:58:33 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 12:58:36 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 12:58:36 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 12:58:33 +0000 UTC Reason: Message:}])
  I0703 12:58:38.583615 21 rc.go:531] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/03/24 12:58:38.584
  I0703 12:58:38.674215 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-5969" for this suite. @ 07/03/24 12:58:38.693
• [5.569 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should receive events on concurrent watches in same order [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:334
  STEP: Creating a kubernetes client @ 07/03/24 12:58:38.705
  I0703 12:58:38.705283 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename watch @ 07/03/24 12:58:38.706
  E0703 12:58:38.818647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:38.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:38.906
  STEP: getting a starting resourceVersion @ 07/03/24 12:58:38.936
  STEP: starting a background goroutine to produce watch events @ 07/03/24 12:58:38.98
  STEP: creating watches starting from each resource version of the events produced and verifying they all receive resource versions in the same order @ 07/03/24 12:58:38.98
  E0703 12:58:39.818804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:40.819853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:41.821949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:42.126080 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-5875" for this suite. @ 07/03/24 12:58:42.143
• [3.452 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should not be able to mutate or prevent deletion of webhook configuration objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:273
  STEP: Creating a kubernetes client @ 07/03/24 12:58:42.158
  I0703 12:58:42.158115 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 12:58:42.168
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:42.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:42.305
  STEP: Setting up server cert @ 07/03/24 12:58:42.442
  E0703 12:58:42.821930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 12:58:43.251
  STEP: Deploying the webhook pod @ 07/03/24 12:58:43.26
  STEP: Wait for the deployment to be ready @ 07/03/24 12:58:43.281
  I0703 12:58:43.297823 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0703 12:58:43.827298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:44.827313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:45.321592 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 12:58:45.827744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:46.828003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:47.343760 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 12, 58, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 12:58:47.828223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:48.828242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 12:58:49.326
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 12:58:49.357
  E0703 12:58:49.829383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:50.359958 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a validating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/03/24 12:58:50.374
  STEP: Registering a mutating webhook on ValidatingWebhookConfiguration and MutatingWebhookConfiguration objects, via the AdmissionRegistration API @ 07/03/24 12:58:50.426
  STEP: Creating a dummy validating-webhook-configuration object @ 07/03/24 12:58:50.483
  STEP: Deleting the validating-webhook-configuration, which should be possible to remove @ 07/03/24 12:58:50.511
  STEP: Creating a dummy mutating-webhook-configuration object @ 07/03/24 12:58:50.518
  STEP: Deleting the mutating-webhook-configuration, which should be possible to remove @ 07/03/24 12:58:50.542
  I0703 12:58:50.736467 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-4401" for this suite. @ 07/03/24 12:58:50.753
  STEP: Destroying namespace "webhook-markers-0" for this suite. @ 07/03/24 12:58:50.808
  E0703 12:58:50.830431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [8.704 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] should include custom resource definition resources in discovery documents [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:199
  STEP: Creating a kubernetes client @ 07/03/24 12:58:50.874
  I0703 12:58:50.874380 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/03/24 12:58:50.875
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:50.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:50.962
  STEP: fetching the /apis discovery document @ 07/03/24 12:58:50.981
  STEP: finding the apiextensions.k8s.io API group in the /apis discovery document @ 07/03/24 12:58:50.983
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis discovery document @ 07/03/24 12:58:50.983
  STEP: fetching the /apis/apiextensions.k8s.io discovery document @ 07/03/24 12:58:50.983
  STEP: finding the apiextensions.k8s.io/v1 API group/version in the /apis/apiextensions.k8s.io discovery document @ 07/03/24 12:58:50.994
  STEP: fetching the /apis/apiextensions.k8s.io/v1 discovery document @ 07/03/24 12:58:50.994
  STEP: finding customresourcedefinitions resources in the /apis/apiextensions.k8s.io/v1 discovery document @ 07/03/24 12:58:50.997
  I0703 12:58:50.997574 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-3221" for this suite. @ 07/03/24 12:58:51.005
• [0.144 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should keep the rc around until all its pods are deleted if the deleteOptions says so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:639
  STEP: Creating a kubernetes client @ 07/03/24 12:58:51.017
  I0703 12:58:51.017826 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename gc @ 07/03/24 12:58:51.018
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:58:51.138
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:58:51.15
  STEP: create the rc @ 07/03/24 12:58:51.173
  W0703 12:58:51.187365      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0703 12:58:51.830724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:52.832222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:53.832566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:54.832705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:55.833655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:56.834057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/03/24 12:58:57.453
  STEP: wait for the rc to be deleted @ 07/03/24 12:58:57.716
  E0703 12:58:57.835183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:58:58.835412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:58:58.985004 21 garbage_collector.go:670] 80 pods remaining
  I0703 12:58:58.985206 21 garbage_collector.go:677] 80 pods has nil DeletionTimestamp
  I0703 12:58:58.985301 21 garbage_collector.go:678] 
  E0703 12:58:59.836139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:59:00.173223 21 garbage_collector.go:670] 71 pods remaining
  I0703 12:59:00.173506 21 garbage_collector.go:677] 64 pods has nil DeletionTimestamp
  I0703 12:59:00.173645 21 garbage_collector.go:678] 
  E0703 12:59:00.837063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:59:01.009009 21 garbage_collector.go:670] 59 pods remaining
  I0703 12:59:01.009244 21 garbage_collector.go:677] 58 pods has nil DeletionTimestamp
  I0703 12:59:01.009340 21 garbage_collector.go:678] 
  E0703 12:59:01.854066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:59:02.149734 21 garbage_collector.go:670] 42 pods remaining
  I0703 12:59:02.149913 21 garbage_collector.go:677] 40 pods has nil DeletionTimestamp
  I0703 12:59:02.150145 21 garbage_collector.go:678] 
  E0703 12:59:02.839713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:59:02.883891 21 garbage_collector.go:670] 29 pods remaining
  I0703 12:59:02.884116 21 garbage_collector.go:677] 28 pods has nil DeletionTimestamp
  I0703 12:59:02.884314 21 garbage_collector.go:678] 
  I0703 12:59:03.768927 21 garbage_collector.go:670] 20 pods remaining
  I0703 12:59:03.769110 21 garbage_collector.go:677] 19 pods has nil DeletionTimestamp
  I0703 12:59:03.769209 21 garbage_collector.go:678] 
  E0703 12:59:03.840048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:04.840179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:59:05.102522 21 garbage_collector.go:670] 0 pods remaining
  I0703 12:59:05.102564 21 garbage_collector.go:677] 0 pods has nil DeletionTimestamp
  I0703 12:59:05.102576 21 garbage_collector.go:678] 
  STEP: Gathering metrics @ 07/03/24 12:59:05.723
  W0703 12:59:05.732095      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0703 12:59:05.732299 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0703 12:59:05.734059 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-6066" for this suite. @ 07/03/24 12:59:05.737
• [14.729 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] ConfigMap should fail to create ConfigMap with empty key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:140
  STEP: Creating a kubernetes client @ 07/03/24 12:59:05.747
  I0703 12:59:05.747639 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 12:59:05.75
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:59:05.83
  E0703 12:59:05.841067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:59:05.841
  STEP: Creating configMap that has name configmap-test-emptyKey-944bcb7c-0b59-4746-9e74-8a6a8f184fff @ 07/03/24 12:59:05.852
  I0703 12:59:05.859293 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-875" for this suite. @ 07/03/24 12:59:05.864
• [0.124 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide DNS for ExternalName services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:329
  STEP: Creating a kubernetes client @ 07/03/24 12:59:05.872
  I0703 12:59:05.872922 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 12:59:05.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 12:59:05.943
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 12:59:05.969
  STEP: Creating a test externalName service @ 07/03/24 12:59:05.977
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7343.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7343.svc.cluster.local; sleep 1; done
   @ 07/03/24 12:59:06.027
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7343.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7343.svc.cluster.local; sleep 1; done
   @ 07/03/24 12:59:06.027
  STEP: creating a pod to probe DNS @ 07/03/24 12:59:06.027
  STEP: submitting the pod to kubernetes @ 07/03/24 12:59:06.027
  E0703 12:59:06.841255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:07.841378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:08.842376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:09.842603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:10.843588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:11.848492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:12.858371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:13.849185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:14.849471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:15.849581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:16.850251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:17.850493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:18.850717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:19.855144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:20.851528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:21.851854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:22.864019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:23.854591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:24.854843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:25.858027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:26.859096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:27.858998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:28.859258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:29.860195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:30.860900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:31.861039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 12:59:32.456
  STEP: looking for the results for each expected name from probers @ 07/03/24 12:59:32.484
  E0703 12:59:32.861888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:59:33.526096 21 dns_common.go:482] File wheezy_udp@dns-test-service-3.dns-7343.svc.cluster.local from pod  dns-7343/dns-test-b29687d4-942e-439f-ac94-bca3b6873188 contains '' instead of 'foo.example.com.'
  I0703 12:59:33.534003 21 dns_common.go:482] File jessie_udp@dns-test-service-3.dns-7343.svc.cluster.local from pod  dns-7343/dns-test-b29687d4-942e-439f-ac94-bca3b6873188 contains '' instead of 'foo.example.com.'
  I0703 12:59:33.534159 21 dns_common.go:489] Lookups using dns-7343/dns-test-b29687d4-942e-439f-ac94-bca3b6873188 failed for: [wheezy_udp@dns-test-service-3.dns-7343.svc.cluster.local jessie_udp@dns-test-service-3.dns-7343.svc.cluster.local]

  I0703 12:59:33.558936 21 dns_common.go:495] Pod client logs for webserver: 
  I0703 12:59:33.573222 21 dns_common.go:495] Pod client logs for querier: 
  I0703 12:59:33.588254 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0703 12:59:33.862775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:34.862970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:35.874381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:36.864238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 12:59:37.512536 21 dns_common.go:552] DNS probes using dns-test-b29687d4-942e-439f-ac94-bca3b6873188 succeeded

  STEP: changing the externalName to bar.example.com @ 07/03/24 12:59:37.518
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7343.svc.cluster.local CNAME > /results/wheezy_udp@dns-test-service-3.dns-7343.svc.cluster.local; sleep 1; done
   @ 07/03/24 12:59:37.579
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7343.svc.cluster.local CNAME > /results/jessie_udp@dns-test-service-3.dns-7343.svc.cluster.local; sleep 1; done
   @ 07/03/24 12:59:37.579
  STEP: creating a second pod to probe DNS @ 07/03/24 12:59:37.579
  STEP: submitting the pod to kubernetes @ 07/03/24 12:59:37.579
  E0703 12:59:37.864599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:38.865173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:39.865614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:40.866046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:41.866225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:42.866504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:43.868432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:44.880096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:45.869093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:46.874386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:47.871182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:48.872065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:49.873198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:50.873840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:51.875456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:52.877455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:53.878215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:54.878422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:55.884034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:56.885568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:57.886310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:58.886419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 12:59:59.886602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:00.887130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:01.933603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:02.892181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:03.893161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:04.893831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:05.894516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:06.896633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 13:00:07.882
  E0703 13:00:07.898396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: looking for the results for each expected name from probers @ 07/03/24 13:00:07.898
  I0703 13:00:07.962890 21 dns_common.go:552] DNS probes using dns-test-079667b3-48ea-44ee-b2cb-3038ac255981 succeeded

  STEP: changing the service to type=ClusterIP @ 07/03/24 13:00:07.963
  W0703 13:00:08.053208      21 warnings.go:70] spec.externalName is ignored when spec.type is not "ExternalName"
  STEP: Running these commands on wheezy: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7343.svc.cluster.local A > /results/wheezy_udp@dns-test-service-3.dns-7343.svc.cluster.local; sleep 1; done
   @ 07/03/24 13:00:08.058
  STEP: Running these commands on jessie: for i in `seq 1 30`; do dig +short dns-test-service-3.dns-7343.svc.cluster.local A > /results/jessie_udp@dns-test-service-3.dns-7343.svc.cluster.local; sleep 1; done
   @ 07/03/24 13:00:08.058
  STEP: creating a third pod to probe DNS @ 07/03/24 13:00:08.058
  STEP: submitting the pod to kubernetes @ 07/03/24 13:00:08.115
  E0703 13:00:08.899400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:09.903834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:10.901406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:11.901557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:12.901660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:13.902482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 13:00:14.383
  STEP: looking for the results for each expected name from probers @ 07/03/24 13:00:14.397
  E0703 13:00:14.906417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:15.906784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:16.907534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:17.441828 21 dns_common.go:552] DNS probes using dns-test-a95d04cc-a80c-45c4-9fca-631043d9a1a7 succeeded

  STEP: deleting the pod @ 07/03/24 13:00:17.442
  STEP: deleting the pod @ 07/03/24 13:00:17.483
  STEP: deleting the pod @ 07/03/24 13:00:17.543
  STEP: deleting the test externalName service @ 07/03/24 13:00:17.581
  I0703 13:00:17.672061 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7343" for this suite. @ 07/03/24 13:00:17.692
• [71.841 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount projected service account token [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:277
  STEP: Creating a kubernetes client @ 07/03/24 13:00:17.713
  I0703 13:00:17.713820 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svcaccounts @ 07/03/24 13:00:17.718
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:00:17.832
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:00:17.855
  STEP: Creating a pod to test service account token:  @ 07/03/24 13:00:17.872
  E0703 13:00:17.908033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:18.908524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:19.911918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:20.912522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:21.913393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:22.915128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:23.915279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:24.915388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:25.916172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:00:26.002
  I0703 13:00:26.005545 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod test-pod-d73cb24b-24ab-4755-955e-de5aa12d8551 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 13:00:26.015
  I0703 13:00:26.045863 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-7246" for this suite. @ 07/03/24 13:00:26.05
• [8.353 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a tcp:8080 liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:184
  STEP: Creating a kubernetes client @ 07/03/24 13:00:26.066
  I0703 13:00:26.066974 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 13:00:26.068
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:00:26.184
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:00:26.201
  STEP: Creating pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193 @ 07/03/24 13:00:26.241
  E0703 13:00:26.917079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:27.917677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:28.917893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:29.918421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 13:00:30.505
  I0703 13:00:30.538456 21 container_probe.go:1749] Initial restart count of pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 is 0
  I0703 13:00:30.547743 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:30.918569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:31.918823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:32.554394 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:32.919310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:33.922443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:34.562592 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:34.923855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:35.924264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:36.601727 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:36.925273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:37.925626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:38.609781 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:38.927220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:39.928264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:40.616210 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:40.928614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:41.928990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:42.619606 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:42.930091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:43.930210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:44.623847 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:44.931238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:45.931602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:46.633910 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:46.932301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:47.932332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:48.654257 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:48.932456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:49.933519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:50.670957 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:50.935216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:51.935255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:52.681715 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:52.936263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:53.938944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:54.685926 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:54.938460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:55.939568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:56.691013 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:56.940476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:57.941438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:00:58.710640 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:00:58.942098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:00:59.949624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:00.715107 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:00.945814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:01.945956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:02.723191 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:02.946590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:03.950467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:04.731523 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:04.948461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:05.948868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:06.735810 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:06.949015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:07.949852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:08.744568 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:08.955515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:09.955996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:10.748592 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:10.957121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:11.962970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:12.767293 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:12.963979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:13.968955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:14.774164 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:14.965888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:15.966223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:16.777900 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:16.966503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:17.967557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:18.782880 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:18.967914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:19.968507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:20.796138 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:20.969533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:21.969823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:22.804758 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:22.970884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:23.970198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:24.809557 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:24.970902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:25.974604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:26.820976 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:26.974976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:27.974852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:28.825359 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:28.975979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:29.976212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:30.828816 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:30.976916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:31.977106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:32.835085 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:32.978190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:33.978464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:34.839945 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:34.979069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:35.979240      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:36.850404 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:36.979592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:37.979675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:38.861884 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:38.979726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:39.980743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:40.868258 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:40.982213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:41.985371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:42.872058 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:42.984078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:43.984235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:44.876980 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:44.985091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:45.985179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:46.889058 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:46.987799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:47.988904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:48.897254 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:48.990547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:49.990478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:50.901820 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:50.991222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:51.991313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:52.906505 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:52.992033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:53.993610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:54.911250 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:54.993698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:55.994298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:56.915048 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:56.995194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:57.995661      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:01:58.923758 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:01:58.996427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:01:59.997276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:00.929001 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:00.997402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:01.997902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:02.933518 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:02.999224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:03.999333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:04.940541 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:04.999713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:06.000276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:06.950719 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:07.001153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:08.001623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:08.956357 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:09.002520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:10.002672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:10.963614 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:11.002941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:12.005509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:12.968962 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:13.009291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:14.009357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:14.972329 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:15.009706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:16.010435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:16.976423 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:17.014022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:18.019428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:18.980004 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:19.020606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:20.020734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:20.990513 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:21.021713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:22.023505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:22.996073 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:23.023504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:24.023915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:25.004744 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:25.023934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:26.024377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:27.010551 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:27.024678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:28.026433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:29.018878 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:29.028952      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:30.027799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:31.027503 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:31.027961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:32.030075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:33.029035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:33.039553 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:34.029448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:35.029468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:35.067004 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:36.030460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:37.031363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:37.071069 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:38.032311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:39.033066      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:39.083717 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:40.038520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:41.039578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:41.092294 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:42.040956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:43.069521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:43.100296 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:44.043457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:45.044283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:45.117175 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:46.044491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:47.050159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:47.122782 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:48.055019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:49.050010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:49.130760 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:50.051292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:51.053185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:51.143225 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:52.053196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:53.053295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:53.160484 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:54.058431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:55.058538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:55.195898 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:56.058946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:57.059503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:57.207072 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:02:58.060085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:02:59.060867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:02:59.229140 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:00.061996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:01.062601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:01.234711 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:02.063904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:03.063956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:03.258733 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:04.066570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:05.066712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:05.271414 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:06.068139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:07.068338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:07.275565 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:08.068808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:09.068641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:09.291993 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:10.069290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:11.069338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:11.295737 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:12.070122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:13.070469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:13.300070 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:14.071029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:15.071722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:15.304948 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:16.075215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:17.075642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:17.327548 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:18.075904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:19.081659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:19.331642 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:20.076077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:21.076204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:21.335684 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:22.076726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:23.077611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:23.342103 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:24.077895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:25.078233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:25.347815 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:26.078656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:27.079517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:27.355981 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:28.079637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:29.079885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:29.360205 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:30.080196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:31.080413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:31.365577 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:32.080505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:33.081081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:33.370430 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:34.082108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:35.083848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:35.377188 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:36.082796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:37.083648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:37.386682 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:38.083744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:39.085551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:39.431327 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:40.085615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:41.085916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:41.455188 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:42.086585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:43.104195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:43.465659 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:44.089579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:45.089625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:45.477648 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:46.089737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:47.089859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:47.482345 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:48.092755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:49.093032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:49.498674 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:50.093278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:51.095299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:51.503694 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:52.095420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:53.095692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:53.518945 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:54.095835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:55.096069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:55.523693 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:56.096786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:57.100565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:57.548170 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:03:58.100706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:03:59.100800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:03:59.562140 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:00.101073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:01.101578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:01.581180 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:02.102567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:03.102597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:03.591583 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:04.102847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:05.102899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:05.594996 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:06.104629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:07.110499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:07.599998 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:08.110867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:09.110951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:09.610625 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:10.113334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:11.113568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:11.617340 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:12.115481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:13.115800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:13.630481 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:14.116322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:15.116511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:15.634705 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:16.119138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:17.119305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:17.641774 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:18.119375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:19.120643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:19.646416 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:20.120862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:21.125497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:21.651022 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:22.121501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:23.121925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:23.657304 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:24.122965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:25.126453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:25.661823 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:26.129245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:27.129537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:27.667845 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:28.130454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:29.130545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:29.676733 21 container_probe.go:1759] Get pod liveness-d2020172-bbd1-40e2-bb50-689165e55578 in namespace container-probe-9193
  E0703 13:04:30.130942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:31.131522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/03/24 13:04:31.678
  I0703 13:04:31.718920 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-9193" for this suite. @ 07/03/24 13:04:31.738
• [245.689 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a /healthz http liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:215
  STEP: Creating a kubernetes client @ 07/03/24 13:04:31.756
  I0703 13:04:31.756204 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 13:04:31.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:04:31.915
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:04:31.93
  STEP: Creating pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293 @ 07/03/24 13:04:31.941
  E0703 13:04:32.132509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:33.132679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:34.133046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:35.133376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 13:04:36.061
  I0703 13:04:36.064636 21 container_probe.go:1749] Initial restart count of pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 is 0
  I0703 13:04:36.067385 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:36.133798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:37.134113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:38.071980 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:38.135143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:39.135700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:40.077631 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:40.136175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:41.136256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:42.081716 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:42.137173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:43.140064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:44.102417 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:44.138866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:45.139552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:46.106419 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:46.139831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:47.140239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:48.113262 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:48.140452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:49.140683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:50.117850 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:50.141259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:51.142435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:52.128114 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:52.147330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:53.147409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:54.131851 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:54.156383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:55.157569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:56.136929 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:56.158500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:57.159304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:04:58.159826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:04:58.166554 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:04:59.160526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:00.160750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:00.172550 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:01.161238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:02.162144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:02.191134 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:03.162309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:04.166619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:04.209577 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:05.167557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:06.167358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:06.217970 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:07.168275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:08.168650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:08.233910 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:09.168506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:10.168628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:10.256707 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:11.170390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:12.183282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:12.261368 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:13.173489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:14.173603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:14.265265 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:15.173686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:16.173949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:16.279709 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:17.174137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:18.175262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:18.287246 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:19.175398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:20.175494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:20.310868 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:21.175634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:22.176777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:22.329707 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:23.177398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:24.177736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:24.333960 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:25.178697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:26.178711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:26.337129 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:27.182555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:28.182850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:28.342002 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:29.182957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:30.184328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:30.346577 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:31.191327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:32.186035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:32.351965 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:33.186981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:34.187314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:34.370692 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:35.187669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:36.187725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:36.374363 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:37.189289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:38.190262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:38.379798 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:39.190689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:40.190891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:40.392621 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:41.191388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:42.191966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:42.398857 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:43.192728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:44.192813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:44.441786 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:45.193238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:46.193452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:46.445987 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:47.194542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:48.195330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:48.460312 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:49.196275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:50.196810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:50.464664 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:51.197047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:52.198253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:52.469002 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:53.198511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:54.200459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:54.473979 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:55.199322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:56.200394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:56.480867 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:57.200853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:05:58.201865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:05:58.487476 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:05:59.201990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:00.202390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:00.491262 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:01.206487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:02.207895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:02.498464 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:03.209078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:04.209549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:04.513310 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:05.209865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:06.210913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:06.518146 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:07.211331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:08.211753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:08.525441 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:09.215909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:10.216226      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:10.531480 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:11.218147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:12.218593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:12.543697 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:13.218702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:14.218833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:14.576184 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:15.219228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:16.225662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:16.591900 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:17.226080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:18.226215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:18.596555 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:19.227127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:20.228126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:20.600859 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:21.228129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:22.228371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:22.606310 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:23.229293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:24.229494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:24.610644 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:25.229580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:26.229815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:26.620177 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:27.230106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:28.230225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:28.634782 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:29.231390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:30.231739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:30.663981 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:31.232341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:32.232396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:32.693817 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:33.232944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:34.239925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:34.700256 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:35.233382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:36.233488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:36.722032 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:37.233615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:38.249719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:38.747567 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:39.235333      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:40.237043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:40.765656 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:41.237152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:42.238742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:42.770706 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:43.239598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:44.239662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:44.774255 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:45.240664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:46.242322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:46.781875 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:47.253840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:48.248186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:48.787076 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:49.277407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:50.250913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:50.797322 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:51.252722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:52.252972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:52.803830 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:53.253644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:54.254363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:54.807512 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:55.254814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:56.254632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:56.812751 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:57.255227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:06:58.255377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:06:58.817979 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:06:59.256317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:00.256454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:00.822700 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:01.256784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:02.257785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:02.826928 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:03.259453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:04.260549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:04.843104 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:05.261121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:06.261637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:06.851626 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:07.262347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:08.262533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:08.858534 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:09.262607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:10.263003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:10.862586 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:11.263476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:12.263589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:12.866732 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:13.264202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:14.264457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:14.870564 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:15.265319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:16.265582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:16.876314 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:17.265902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:18.266130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:18.881591 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:19.270889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:20.270724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:20.887961 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:21.271739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:22.272397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:22.893308 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:23.274612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:24.274762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:24.897400 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:25.275281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:26.275790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:26.901280 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:27.276161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:28.276890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:28.905337 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:29.278034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:30.299517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:30.909662 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:31.287803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:32.288546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:32.915605 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:33.288809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:34.289224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:34.920067 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:35.289626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:36.290530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:36.924435 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:37.291508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:38.291644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:38.942630 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:39.292216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:40.292481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:40.950571 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:41.292623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:42.294488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:42.954898 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:43.295560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:44.297319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:44.958695 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:45.298092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:46.298562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:46.963982 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:47.300283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:48.300390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:48.967733 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:49.301049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:50.301564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:50.971901 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:51.301626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:52.301951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:52.976432 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:53.301982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:54.302889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:54.998748 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:55.303498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:56.303903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:57.012901 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:57.304551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:07:58.304742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:07:59.022335 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:07:59.308975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:00.309879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:01.030699 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:01.309642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:02.311960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:03.037829 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:03.312468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:04.312881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:05.048186 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:05.315961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:06.316107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:07.053372 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:07.316246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:08.316475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:09.099527 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:09.318575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:10.319558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:11.185235 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:11.319730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:12.320327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:13.192527 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:13.322456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:14.322618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:15.195914 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:15.327235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:16.327058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:17.203750 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:17.327951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:18.328155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:19.209035 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:19.330766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:20.330899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:21.213476 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:21.333088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:22.333832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:23.218255 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:23.334469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:24.334448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:25.223388 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:25.334558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:26.334735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:27.228542 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:27.338500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:28.339602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:29.236144 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:29.340243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:30.340956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:31.240534 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:31.341769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:32.345625      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:33.243822 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:33.346111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:34.346560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:08:35.248564 21 container_probe.go:1759] Get pod test-webserver-39513bfd-f398-4fcb-84fd-f08cba4d3280 in namespace container-probe-293
  E0703 13:08:35.347355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:36.347487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/03/24 13:08:37.25
  I0703 13:08:37.284575 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-293" for this suite. @ 07/03/24 13:08:37.3
• [245.567 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support container.SecurityContext.RunAsUser And container.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:170
  STEP: Creating a kubernetes client @ 07/03/24 13:08:37.324
  I0703 13:08:37.324323 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename security-context @ 07/03/24 13:08:37.325
  E0703 13:08:37.347832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:08:37.432
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:08:37.457
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/03/24 13:08:37.475
  E0703 13:08:38.350511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:39.351481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:40.350797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:41.350894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:42.351576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:43.351732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:08:43.603
  I0703 13:08:43.605960 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod security-context-19e8ab49-1c1d-4ed5-9f71-6bb6cb421e5e container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:08:43.625
  I0703 13:08:43.667849 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7839" for this suite. @ 07/03/24 13:08:43.679
• [6.363 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:215
  STEP: Creating a kubernetes client @ 07/03/24 13:08:43.688
  I0703 13:08:43.688725 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/03/24 13:08:43.69
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:08:43.743
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:08:43.786
  STEP: create the container to handle the HTTPGet hook request. @ 07/03/24 13:08:43.826
  E0703 13:08:44.352293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:45.353087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:46.353711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:47.361741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:48.357123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:49.357371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/03/24 13:08:49.917
  E0703 13:08:50.358246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:51.359585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:52.363685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:53.364350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/03/24 13:08:53.956
  E0703 13:08:54.364450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:55.365983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/03/24 13:08:55.982
  I0703 13:08:56.039545 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-682" for this suite. @ 07/03/24 13:08:56.043
• [12.386 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:55
  STEP: Creating a kubernetes client @ 07/03/24 13:08:56.076
  I0703 13:08:56.076172 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 13:08:56.077
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:08:56.194
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:08:56.208
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 13:08:56.242
  E0703 13:08:56.366934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:57.368399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:58.368864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:08:59.368921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:00.369251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:01.369385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:02.370213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:09:02.391
  I0703 13:09:02.401993 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-a34310e0-5bc9-4eeb-93bd-1216527aecea container client-container: <nil>
  STEP: delete the pod @ 07/03/24 13:09:02.423
  I0703 13:09:02.482828 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-382" for this suite. @ 07/03/24 13:09:02.488
• [6.431 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] CronJob should not schedule jobs when suspended [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:97
  STEP: Creating a kubernetes client @ 07/03/24 13:09:02.508
  I0703 13:09:02.508127 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename cronjob @ 07/03/24 13:09:02.51
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:09:02.572
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:09:02.586
  STEP: Creating a suspended cronjob @ 07/03/24 13:09:02.604
  STEP: Ensuring no jobs are scheduled @ 07/03/24 13:09:02.658
  E0703 13:09:03.370255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:04.376788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:05.377858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:06.379787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:07.380712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:08.381115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:09.381145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:10.381403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:11.386434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:12.386467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:13.387129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:14.388979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:15.389469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:16.390350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:17.391142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:18.391613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:19.391885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:20.392355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:21.397849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:22.400731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:23.402452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:24.402696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:25.404980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:26.405032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:27.405713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:28.407734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:29.408611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:30.408672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:31.463429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:32.429479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:33.430595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:34.430988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:35.433793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:36.433141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:37.434107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:38.434530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:39.452125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:40.442781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:41.442515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:42.443257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:43.450052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:44.446087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:45.446759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:46.447537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:47.447765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:48.448996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:49.449095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:50.449247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:51.450739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:52.451448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:53.451500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:54.451627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:55.452670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:56.454243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:57.457363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:58.458923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:09:59.460812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:00.461687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:01.461826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:02.462385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:03.462463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:04.462600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:05.462708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:06.463332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:07.464426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:08.466818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:09.466922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:10.467059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:11.467175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:12.467730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:13.470847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:14.471326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:15.471648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:16.472778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:17.473597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:18.474271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:19.476241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:20.475495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:21.475907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:22.476180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:23.476972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:24.478451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:25.478610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:26.479594      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:27.480044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:28.480259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:29.481290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:30.482462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:31.484452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:32.484776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:33.485552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:34.485668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:35.486721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:36.487618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:37.487812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:38.488766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:39.490139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:40.490345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:41.496010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:42.496185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:43.498591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:44.500936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:45.506805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:46.507442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:47.504192      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:48.504283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:49.506711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:50.507569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:51.507622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:52.507985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:53.508524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:54.509486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:55.514168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:56.510811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:57.514225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:58.514356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:10:59.514387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:00.517406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:01.518194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:02.523951      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:03.523544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:04.523665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:05.523725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:06.524316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:07.525362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:08.525810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:09.526685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:10.528311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:11.528942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:12.529474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:13.530417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:14.530608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:15.530753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:16.530860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:17.530991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:18.532571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:19.534592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:20.533522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:21.539506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:22.535041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:23.535324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:24.535521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:25.536832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:26.537538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:27.537533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:28.537605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:29.537769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:30.538520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:31.538830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:32.539344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:33.540000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:34.540719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:35.541634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:36.542016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:37.542490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:38.542640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:39.543787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:40.543812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:41.544549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:42.544809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:43.544893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:44.545884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:45.551107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:46.549723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:47.550435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:48.550488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:49.551179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:50.551355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:51.551415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:52.552030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:53.552153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:54.552324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:55.552705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:56.556018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:57.556769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:58.559399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:11:59.559768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:00.561793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:01.562372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:02.562851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:03.566518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:04.567902      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:05.568832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:06.569530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:07.570683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:08.571219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:09.571670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:10.577852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:11.579428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:12.580972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:13.581195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:14.582519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:15.582926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:16.583092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:17.583631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:18.583878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:19.587125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:20.587257      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:21.587564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:22.588472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:23.588651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:24.588715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:25.589090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:26.589360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:27.590744      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:28.590200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:29.590455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:30.591494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:31.594128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:32.594394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:33.594445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:34.594670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:35.595244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:36.595345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:37.595506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:38.596370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:39.597362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:40.597402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:41.597567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:42.597863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:43.598004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:44.598637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:45.599522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:46.600332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:47.601107      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:48.601214      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:49.601814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:50.604037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:51.604187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:52.606481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:53.606842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:54.606815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:55.609014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:56.609056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:57.610611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:58.610735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:12:59.610847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:00.615146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:01.617338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:02.617735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:03.617572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:04.618588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:05.619427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:06.619966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:07.620426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:08.623326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:09.623529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:10.630271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:11.630205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:12.630580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:13.630644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:14.633023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:15.633047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:16.633301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:17.637659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:18.636891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:19.637399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:20.639313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:21.639493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:22.639924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:23.640172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:24.640159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:25.641050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:26.641089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:27.642923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:28.643067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:29.643349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:30.643398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:31.643696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:32.644409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:33.644872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:34.645632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:35.645943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:36.646511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:37.647202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:38.647405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:39.649998      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:40.654583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:41.655674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:42.655798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:43.658464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:44.658573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:45.658696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:46.658798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:47.659804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:48.660355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:49.662543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:50.663531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:51.664230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:52.664367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:53.664512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:54.666429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:55.667105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:56.668063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:57.668172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:58.668327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:13:59.668395      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:00.668577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:01.668787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring no job exists by listing jobs explicitly @ 07/03/24 13:14:02.658
  STEP: Removing cronjob @ 07/03/24 13:14:02.664
  E0703 13:14:02.669345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:02.778899 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-6976" for this suite. @ 07/03/24 13:14:02.842
• [300.391 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete pods created by rc when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:322
  STEP: Creating a kubernetes client @ 07/03/24 13:14:02.899
  I0703 13:14:02.899760 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename gc @ 07/03/24 13:14:02.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:14:03.011
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:14:03.042
  STEP: create the rc @ 07/03/24 13:14:03.054
  W0703 13:14:03.079025      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0703 13:14:03.669392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:04.669714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:05.670064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:06.670950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:07.672012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/03/24 13:14:08.093
  STEP: wait for all pods to be garbage collected @ 07/03/24 13:14:08.114
  E0703 13:14:08.674498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:09.674525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:10.674799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:11.675227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:12.677566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/03/24 13:14:13.121
  W0703 13:14:13.130616      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0703 13:14:13.130794 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0703 13:14:13.132514 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-4296" for this suite. @ 07/03/24 13:14:13.138
• [10.250 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message as empty when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:232
  STEP: Creating a kubernetes client @ 07/03/24 13:14:13.151
  I0703 13:14:13.151830 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-runtime @ 07/03/24 13:14:13.153
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:14:13.222
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:14:13.242
  STEP: create the container @ 07/03/24 13:14:13.259
  W0703 13:14:13.293807      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/03/24 13:14:13.294
  E0703 13:14:13.701636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:14.678087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:15.678586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:16.679123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:17.682436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:18.680006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/03/24 13:14:19.398
  STEP: the container should be terminated @ 07/03/24 13:14:19.402
  STEP: the termination message should be set @ 07/03/24 13:14:19.403
  I0703 13:14:19.404844 21 runtime.go:167] Expected: &{} to match Container's Termination Message:  --
  STEP: delete the container @ 07/03/24 13:14:19.406
  I0703 13:14:19.461601 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7156" for this suite. @ 07/03/24 13:14:19.484
• [6.345 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:285
  STEP: Creating a kubernetes client @ 07/03/24 13:14:19.514
  I0703 13:14:19.514450 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:14:19.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:14:19.578
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:14:19.606
  E0703 13:14:19.691103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 07/03/24 13:14:19.786
  E0703 13:14:20.697757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:14:21.003
  STEP: Deploying the webhook pod @ 07/03/24 13:14:21.016
  STEP: Wait for the deployment to be ready @ 07/03/24 13:14:21.037
  I0703 13:14:21.044002 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0703 13:14:21.699419      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:22.699838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:23.053561 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:14:23.701076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:24.701284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:25.057403 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:14:25.701457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:26.702936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:14:27.057
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:14:27.084
  E0703 13:14:27.702771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:28.084886 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0703 13:14:28.092618 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-5048-crds.webhook.example.com via the AdmissionRegistration API @ 07/03/24 13:14:28.633
  STEP: Creating a custom resource that should be mutated by the webhook @ 07/03/24 13:14:28.677
  E0703 13:14:28.703986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:29.705361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:30.706147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:31.706464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:32.110679 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-1904" for this suite. @ 07/03/24 13:14:32.116
  STEP: Destroying namespace "webhook-markers-4112" for this suite. @ 07/03/24 13:14:32.153
• [12.664 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should deny crd creation [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:301
  STEP: Creating a kubernetes client @ 07/03/24 13:14:32.179
  I0703 13:14:32.179358 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:14:32.18
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:14:32.252
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:14:32.27
  STEP: Setting up server cert @ 07/03/24 13:14:32.488
  E0703 13:14:32.709049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:14:33.709
  E0703 13:14:33.709557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook pod @ 07/03/24 13:14:33.742
  STEP: Wait for the deployment to be ready @ 07/03/24 13:14:33.839
  I0703 13:14:34.021251 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:14:34.710248      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:35.711095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:36.043951 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:14:36.716176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:37.716441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:38.056159 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 34, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 14, 34, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 14, 33, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:14:38.719583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:39.718088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:14:40.064
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:14:40.074
  E0703 13:14:40.726558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:41.074916 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering the crd webhook via the AdmissionRegistration API @ 07/03/24 13:14:41.089
  STEP: Creating a custom resource definition that should be denied by the webhook @ 07/03/24 13:14:41.224
  I0703 13:14:41.226497 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:14:41.448026 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2768" for this suite. @ 07/03/24 13:14:41.484
  STEP: Destroying namespace "webhook-markers-8331" for this suite. @ 07/03/24 13:14:41.521
• [9.370 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Update Demo should scale a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:355
  STEP: Creating a kubernetes client @ 07/03/24 13:14:41.567
  I0703 13:14:41.568412 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:14:41.569
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:14:41.684
  E0703 13:14:41.730519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:14:41.763
  STEP: creating a replication controller @ 07/03/24 13:14:41.795
  I0703 13:14:41.795567 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 create -f -'
  I0703 13:14:42.107595 21 builder.go:146] stderr: ""
  I0703 13:14:42.107637 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/03/24 13:14:42.107
  I0703 13:14:42.107750 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:14:42.263003 21 builder.go:146] stderr: ""
  I0703 13:14:42.263047 21 builder.go:147] stdout: "update-demo-nautilus-2988k update-demo-nautilus-k5kcn "
  I0703 13:14:42.263096 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:14:42.385969 21 builder.go:146] stderr: ""
  I0703 13:14:42.386023 21 builder.go:147] stdout: ""
  I0703 13:14:42.386037 21 kubectl.go:2501] update-demo-nautilus-2988k is created but not running
  E0703 13:14:42.730624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:43.730707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:44.730974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:45.732115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:46.732586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:47.386240 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:14:47.670030 21 builder.go:146] stderr: ""
  I0703 13:14:47.670073 21 builder.go:147] stdout: "update-demo-nautilus-2988k update-demo-nautilus-k5kcn "
  I0703 13:14:47.670124 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0703 13:14:47.733615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:47.903195 21 builder.go:146] stderr: ""
  I0703 13:14:47.903251 21 builder.go:147] stdout: ""
  I0703 13:14:47.903265 21 kubectl.go:2501] update-demo-nautilus-2988k is created but not running
  E0703 13:14:48.735567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:49.736280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:50.736401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:51.736507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:52.736642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:52.904308 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:14:53.088107 21 builder.go:146] stderr: ""
  I0703 13:14:53.088188 21 builder.go:147] stdout: "update-demo-nautilus-2988k update-demo-nautilus-k5kcn "
  I0703 13:14:53.088442 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:14:53.289690 21 builder.go:146] stderr: ""
  I0703 13:14:53.289734 21 builder.go:147] stdout: ""
  I0703 13:14:53.289829 21 kubectl.go:2501] update-demo-nautilus-2988k is created but not running
  E0703 13:14:53.736936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:54.737918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:55.738752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:56.739705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:14:57.740612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:58.290499 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:14:58.399607 21 builder.go:146] stderr: ""
  I0703 13:14:58.399655 21 builder.go:147] stdout: "update-demo-nautilus-2988k update-demo-nautilus-k5kcn "
  I0703 13:14:58.399727 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:14:58.649265 21 builder.go:146] stderr: ""
  I0703 13:14:58.649310 21 builder.go:147] stdout: "true"
  I0703 13:14:58.649368 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0703 13:14:58.745669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:14:58.931720 21 builder.go:146] stderr: ""
  I0703 13:14:58.931808 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:14:58.931828 21 kubectl.go:2392] validating pod update-demo-nautilus-2988k
  I0703 13:14:58.960285 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:14:58.960370 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:14:58.960387 21 kubectl.go:2519] update-demo-nautilus-2988k is verified up and running
  I0703 13:14:58.960437 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-k5kcn -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:14:59.212850 21 builder.go:146] stderr: ""
  I0703 13:14:59.212898 21 builder.go:147] stdout: "true"
  I0703 13:14:59.213011 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-k5kcn -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0703 13:14:59.438373 21 builder.go:146] stderr: ""
  I0703 13:14:59.438419 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:14:59.438433 21 kubectl.go:2392] validating pod update-demo-nautilus-k5kcn
  I0703 13:14:59.448287 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:14:59.448353 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:14:59.448370 21 kubectl.go:2519] update-demo-nautilus-k5kcn is verified up and running
  STEP: scaling down the replication controller @ 07/03/24 13:14:59.448
  I0703 13:14:59.463147 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0703 13:14:59.463358 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 scale rc update-demo-nautilus --replicas=1 --timeout=5m'
  E0703 13:14:59.746149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:00.746483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:00.785464 21 builder.go:146] stderr: ""
  I0703 13:15:00.785513 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/03/24 13:15:00.791
  I0703 13:15:00.791594 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:15:00.966207 21 builder.go:146] stderr: ""
  I0703 13:15:00.966252 21 builder.go:147] stdout: "update-demo-nautilus-2988k update-demo-nautilus-k5kcn "
  STEP: Replicas for name=update-demo: expected=1 actual=2 @ 07/03/24 13:15:00.966
  E0703 13:15:01.747261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:02.748108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:03.748303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:04.762177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:05.752126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:05.966476 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:15:06.218901 21 builder.go:146] stderr: ""
  I0703 13:15:06.219152 21 builder.go:147] stdout: "update-demo-nautilus-2988k "
  I0703 13:15:06.219216 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:15:06.359817 21 builder.go:146] stderr: ""
  I0703 13:15:06.359873 21 builder.go:147] stdout: "true"
  I0703 13:15:06.359927 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0703 13:15:06.433774 21 builder.go:146] stderr: ""
  I0703 13:15:06.433819 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:15:06.433847 21 kubectl.go:2392] validating pod update-demo-nautilus-2988k
  I0703 13:15:06.439338 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:15:06.439406 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:15:06.439425 21 kubectl.go:2519] update-demo-nautilus-2988k is verified up and running
  STEP: scaling up the replication controller @ 07/03/24 13:15:06.439
  I0703 13:15:06.441152 21 kubectl.go:324] scanned /root for discovery docs: <nil>
  I0703 13:15:06.441216 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 scale rc update-demo-nautilus --replicas=2 --timeout=5m'
  E0703 13:15:06.753187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:07.741580 21 builder.go:146] stderr: ""
  I0703 13:15:07.741625 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus scaled\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/03/24 13:15:07.741
  I0703 13:15:07.741719 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0703 13:15:07.754292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:08.037507 21 builder.go:146] stderr: ""
  I0703 13:15:08.037565 21 builder.go:147] stdout: "update-demo-nautilus-2988k update-demo-nautilus-7jzq9 "
  I0703 13:15:08.037750 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:15:08.230010 21 builder.go:146] stderr: ""
  I0703 13:15:08.230131 21 builder.go:147] stdout: "true"
  I0703 13:15:08.230208 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0703 13:15:08.560254 21 builder.go:146] stderr: ""
  I0703 13:15:08.560307 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:15:08.560323 21 kubectl.go:2392] validating pod update-demo-nautilus-2988k
  I0703 13:15:08.566802 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:15:08.566903 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:15:08.566950 21 kubectl.go:2519] update-demo-nautilus-2988k is verified up and running
  I0703 13:15:08.567083 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-7jzq9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  E0703 13:15:08.754854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:08.803578 21 builder.go:146] stderr: ""
  I0703 13:15:08.803628 21 builder.go:147] stdout: ""
  I0703 13:15:08.803646 21 kubectl.go:2501] update-demo-nautilus-7jzq9 is created but not running
  E0703 13:15:09.758600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:10.759543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:11.759814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:12.759818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:13.759944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:13.805588 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:15:14.148635 21 builder.go:146] stderr: ""
  I0703 13:15:14.148684 21 builder.go:147] stdout: "update-demo-nautilus-2988k update-demo-nautilus-7jzq9 "
  I0703 13:15:14.148741 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:15:14.463348 21 builder.go:146] stderr: ""
  I0703 13:15:14.463409 21 builder.go:147] stdout: "true"
  I0703 13:15:14.463468 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-2988k -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0703 13:15:14.760388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:14.779386 21 builder.go:146] stderr: ""
  I0703 13:15:14.779483 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:15:14.779501 21 kubectl.go:2392] validating pod update-demo-nautilus-2988k
  I0703 13:15:14.798580 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:15:14.798667 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:15:14.798683 21 kubectl.go:2519] update-demo-nautilus-2988k is verified up and running
  I0703 13:15:14.798763 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-7jzq9 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:15:14.993965 21 builder.go:146] stderr: ""
  I0703 13:15:14.994009 21 builder.go:147] stdout: "true"
  I0703 13:15:14.994314 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods update-demo-nautilus-7jzq9 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0703 13:15:15.143519 21 builder.go:146] stderr: ""
  I0703 13:15:15.143576 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:15:15.143591 21 kubectl.go:2392] validating pod update-demo-nautilus-7jzq9
  I0703 13:15:15.184023 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:15:15.184095 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:15:15.184116 21 kubectl.go:2519] update-demo-nautilus-7jzq9 is verified up and running
  STEP: using delete to clean up resources @ 07/03/24 13:15:15.184
  I0703 13:15:15.184213 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 delete --grace-period=0 --force -f -'
  I0703 13:15:15.327644 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 13:15:15.327691 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0703 13:15:15.327742 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get rc,svc -l name=update-demo --no-headers'
  I0703 13:15:15.608398 21 builder.go:146] stderr: "No resources found in kubectl-1999 namespace.\n"
  I0703 13:15:15.608466 21 builder.go:147] stdout: ""
  I0703 13:15:15.608531 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1999 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0703 13:15:15.761168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:15.786651 21 builder.go:146] stderr: ""
  I0703 13:15:15.786701 21 builder.go:147] stdout: ""
  I0703 13:15:15.786803 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-1999" for this suite. @ 07/03/24 13:15:15.795
• [34.245 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should support sysctls [MinimumKubeletVersion:1.21] [Environment:NotInUserNS] [Conformance] [sig-node, NodeConformance, Environment:NotInUserNS, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:79
  STEP: Creating a kubernetes client @ 07/03/24 13:15:15.812
  I0703 13:15:15.812299 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sysctl @ 07/03/24 13:15:15.814
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:16.034
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:16.1
  STEP: Creating a pod with the kernel.shm_rmid_forced sysctl @ 07/03/24 13:15:16.111
  STEP: Watching for error events or started pod @ 07/03/24 13:15:16.177
  E0703 13:15:16.764903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:17.765037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for pod completion @ 07/03/24 13:15:18.182
  E0703 13:15:18.765156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:19.765265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:20.765334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:21.765759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking that the pod succeeded @ 07/03/24 13:15:22.218
  STEP: Getting logs from the pod @ 07/03/24 13:15:22.218
  STEP: Checking that the sysctl is actually updated @ 07/03/24 13:15:22.291
  I0703 13:15:22.292015 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6589" for this suite. @ 07/03/24 13:15:22.298
• [6.501 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop simple daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:177
  STEP: Creating a kubernetes client @ 07/03/24 13:15:22.314
  I0703 13:15:22.314147 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename daemonsets @ 07/03/24 13:15:22.315
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:22.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:22.419
  STEP: Creating simple DaemonSet "daemon-set" @ 07/03/24 13:15:22.633
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/03/24 13:15:22.693
  E0703 13:15:22.766596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:22.783210 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 13:15:22.783430 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  I0703 13:15:23.715218 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 13:15:23.715401 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:15:23.768007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:24.708646 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 13:15:24.708710 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:15:24.768713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:25.703163 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:25.703203 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:15:25.774446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:26.726618 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:26.727529 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:15:26.771531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:27.760142 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:27.760329 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:15:27.771699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:28.708078 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:28.708261 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:15:28.778390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:29.750667 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 13:15:29.750884 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Stop a daemon pod, check that the daemon pod is revived. @ 07/03/24 13:15:29.764
  E0703 13:15:29.772093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:29.866620 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:29.866798 21 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  E0703 13:15:30.772252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:30.877718 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:30.878000 21 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  E0703 13:15:31.772453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:31.810369 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:31.810561 21 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  E0703 13:15:32.773462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:32.844105 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 13:15:32.844160 21 fixtures.go:130] Node ip-172-31-5-183 is running 0 daemon pod, expected 1
  E0703 13:15:33.773861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:33.814142 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 13:15:33.814338 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/03/24 13:15:33.818
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-5238, will wait for the garbage collector to delete the pods @ 07/03/24 13:15:33.818
  I0703 13:15:33.884349 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 10.476529ms
  I0703 13:15:34.085252 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 200.902452ms
  E0703 13:15:34.774060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:35.778028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:36.588990 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 13:15:36.589046 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0703 13:15:36.591688 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"23105"},"items":null}

  I0703 13:15:36.595754 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"23105"},"items":null}

  I0703 13:15:36.626663 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-5238" for this suite. @ 07/03/24 13:15:36.635
• [14.346 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should observe PodDisruptionBudget status updated [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:141
  STEP: Creating a kubernetes client @ 07/03/24 13:15:36.66
  I0703 13:15:36.661004 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename disruption @ 07/03/24 13:15:36.662
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:36.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:36.763
  E0703 13:15:36.778212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for the pdb to be processed @ 07/03/24 13:15:36.795
  E0703 13:15:37.778724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:38.778864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for all pods to be running @ 07/03/24 13:15:38.941
  I0703 13:15:39.010419 21 disruption.go:578] running pods: 0 < 3
  E0703 13:15:39.780740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:40.782595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:40.945834 21 disruption.go:578] running pods: 0 < 3
  E0703 13:15:41.786448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:42.787535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:42.948657 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-9491" for this suite. @ 07/03/24 13:15:42.951
• [6.298 seconds]
------------------------------
S
------------------------------
[sig-network] Ingress API should support creating Ingress API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingress.go:55
  STEP: Creating a kubernetes client @ 07/03/24 13:15:42.958
  I0703 13:15:42.958891 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename ingress @ 07/03/24 13:15:42.959
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:43.028
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:43.074
  STEP: getting /apis @ 07/03/24 13:15:43.1
  STEP: getting /apis/networking.k8s.io @ 07/03/24 13:15:43.115
  STEP: getting /apis/networking.k8s.iov1 @ 07/03/24 13:15:43.126
  STEP: creating @ 07/03/24 13:15:43.139
  STEP: getting @ 07/03/24 13:15:43.209
  STEP: listing @ 07/03/24 13:15:43.246
  STEP: watching @ 07/03/24 13:15:43.262
  I0703 13:15:43.262593 21 ingress.go:186] starting watch
  STEP: cluster-wide listing @ 07/03/24 13:15:43.277
  STEP: cluster-wide watching @ 07/03/24 13:15:43.3
  I0703 13:15:43.300943 21 ingress.go:198] starting watch
  STEP: patching @ 07/03/24 13:15:43.31
  STEP: updating @ 07/03/24 13:15:43.345
  I0703 13:15:43.395681 21 ingress.go:221] waiting for watch events with expected annotations
  I0703 13:15:43.395757 21 ingress.go:234] saw patched and updated annotations
  STEP: patching /status @ 07/03/24 13:15:43.396
  STEP: updating /status @ 07/03/24 13:15:43.404
  STEP: get /status @ 07/03/24 13:15:43.445
  STEP: deleting @ 07/03/24 13:15:43.46
  STEP: deleting a collection @ 07/03/24 13:15:43.563
  I0703 13:15:43.596558 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingress-4981" for this suite. @ 07/03/24 13:15:43.635
• [0.702 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:90
  STEP: Creating a kubernetes client @ 07/03/24 13:15:43.668
  I0703 13:15:43.669222 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 13:15:43.67
  E0703 13:15:43.791305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:43.854
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:43.891
  STEP: Creating configMap with name configmap-test-volume-map-9d89fc27-7207-4f37-9b1f-4c9ee3d89d7a @ 07/03/24 13:15:43.912
  STEP: Creating a pod to test consume configMaps @ 07/03/24 13:15:43.97
  E0703 13:15:44.790803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:45.793056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:46.793660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:47.795268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:48.798473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:49.799688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:15:50.091
  I0703 13:15:50.095372 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-2588992b-8f94-4eb3-bb7f-ed7855c4f2ef container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 13:15:50.12
  I0703 13:15:50.166664 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-5207" for this suite. @ 07/03/24 13:15:50.2
• [6.555 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Kubelet when scheduling a read only busybox container should not write to root filesystem [LinuxOnly] [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:183
  STEP: Creating a kubernetes client @ 07/03/24 13:15:50.219
  I0703 13:15:50.219906 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubelet-test @ 07/03/24 13:15:50.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:50.323
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:50.359
  E0703 13:15:50.804436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:51.804628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:52.804786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:53.804901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:15:54.502696 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-8543" for this suite. @ 07/03/24 13:15:54.512
• [4.341 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:125
  STEP: Creating a kubernetes client @ 07/03/24 13:15:54.564
  I0703 13:15:54.564327 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 13:15:54.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:54.69
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:54.717
  STEP: Creating secret with name secret-test-42992d86-b8c5-402a-95c1-1c200cec6a50 @ 07/03/24 13:15:54.724
  STEP: Creating a pod to test consume secrets @ 07/03/24 13:15:54.742
  E0703 13:15:54.808040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:55.808795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:56.809344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:57.809783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:15:58.810050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:15:58.822
  I0703 13:15:58.836131 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-8e98a82c-9847-44d8-96b3-86578791298f container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 13:15:58.858
  I0703 13:15:58.884989 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-9087" for this suite. @ 07/03/24 13:15:58.891
• [4.337 seconds]
------------------------------
S
------------------------------
[sig-cli] Kubectl client Kubectl label should update the label on a resource [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1627
  STEP: Creating a kubernetes client @ 07/03/24 13:15:58.902
  I0703 13:15:58.902895 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:15:58.907
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:15:58.947
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:15:58.992
  STEP: creating the pod @ 07/03/24 13:15:59.005
  I0703 13:15:59.006600 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 create -f -'
  I0703 13:15:59.407491 21 builder.go:146] stderr: ""
  I0703 13:15:59.407535 21 builder.go:147] stdout: "pod/pause created\n"
  E0703 13:15:59.810966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:00.811538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:01.812611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:02.815003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding the label testing-label with value testing-label-value to a pod @ 07/03/24 13:16:03.461
  I0703 13:16:03.461343 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 label pods pause testing-label=testing-label-value'
  I0703 13:16:03.638760 21 builder.go:146] stderr: ""
  I0703 13:16:03.638869 21 builder.go:147] stdout: "pod/pause labeled\n"
  STEP: verifying the pod has the label testing-label with the value testing-label-value @ 07/03/24 13:16:03.638
  I0703 13:16:03.653671 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 get pod pause -L testing-label'
  I0703 13:16:03.753933 21 builder.go:146] stderr: ""
  I0703 13:16:03.753978 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          4s    testing-label-value\n"
  STEP: removing the label testing-label of a pod @ 07/03/24 13:16:03.754
  I0703 13:16:03.754369 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 label pods pause testing-label-'
  E0703 13:16:03.818392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:03.893064 21 builder.go:146] stderr: ""
  I0703 13:16:03.893136 21 builder.go:147] stdout: "pod/pause unlabeled\n"
  STEP: verifying the pod doesn't have the label testing-label @ 07/03/24 13:16:03.893
  I0703 13:16:03.893304 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 get pod pause -L testing-label'
  I0703 13:16:04.200444 21 builder.go:146] stderr: ""
  I0703 13:16:04.200484 21 builder.go:147] stdout: "NAME    READY   STATUS    RESTARTS   AGE   TESTING-LABEL\npause   1/1     Running   0          5s    \n"
  STEP: using delete to clean up resources @ 07/03/24 13:16:04.2
  I0703 13:16:04.200789 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 delete --grace-period=0 --force -f -'
  I0703 13:16:04.379091 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 13:16:04.379136 21 builder.go:147] stdout: "pod \"pause\" force deleted\n"
  I0703 13:16:04.379271 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 get rc,svc -l name=pause --no-headers'
  I0703 13:16:04.586930 21 builder.go:146] stderr: "No resources found in kubectl-7728 namespace.\n"
  I0703 13:16:04.587172 21 builder.go:147] stdout: ""
  I0703 13:16:04.587391 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7728 get pods -l name=pause -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  E0703 13:16:04.819649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:04.875216 21 builder.go:146] stderr: ""
  I0703 13:16:04.875305 21 builder.go:147] stdout: ""
  I0703 13:16:04.875418 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7728" for this suite. @ 07/03/24 13:16:04.889
• [6.013 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Projected configMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:100
  STEP: Creating a kubernetes client @ 07/03/24 13:16:04.916
  I0703 13:16:04.916290 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 13:16:04.917
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:16:04.981
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:16:05.029
  STEP: Creating configMap with name projected-configmap-test-volume-map-0cb09fc6-5233-4ce0-bf5a-cfa8507fec1f @ 07/03/24 13:16:05.034
  STEP: Creating a pod to test consume configMaps @ 07/03/24 13:16:05.041
  E0703 13:16:05.819469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:06.821207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:07.829456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:08.821850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:09.822010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:10.822262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:16:11.111
  I0703 13:16:11.118160 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-configmaps-75bff0ef-7de8-4db4-a668-337e87541cc7 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 13:16:11.134
  I0703 13:16:11.378764 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-940" for this suite. @ 07/03/24 13:16:11.414
• [6.583 seconds]
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with projected pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:105
  STEP: Creating a kubernetes client @ 07/03/24 13:16:11.51
  I0703 13:16:11.511898 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename subpath @ 07/03/24 13:16:11.522
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:16:11.746
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:16:11.766
  STEP: Setting up data @ 07/03/24 13:16:11.79
  E0703 13:16:11.823290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating pod pod-subpath-test-projected-bxdf @ 07/03/24 13:16:11.899
  STEP: Creating a pod to test atomic-volume-subpath @ 07/03/24 13:16:11.899
  E0703 13:16:12.823923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:13.825009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:14.825149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:15.825229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:16.826576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:17.826721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:18.827079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:19.827322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:20.827355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:21.827591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:22.828495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:23.828567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:24.828793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:25.830891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:26.832520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:27.832723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:28.833817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:29.834480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:30.834753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:31.834879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:32.835533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:33.835666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:34.836666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:35.837190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:36.838153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:37.845679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:16:38.166
  I0703 13:16:38.194451 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-subpath-test-projected-bxdf container test-container-subpath-projected-bxdf: <nil>
  STEP: delete the pod @ 07/03/24 13:16:38.218
  STEP: Deleting pod pod-subpath-test-projected-bxdf @ 07/03/24 13:16:38.301
  I0703 13:16:38.301133 21 delete.go:62] Deleting pod "pod-subpath-test-projected-bxdf" in namespace "subpath-1166"
  I0703 13:16:38.314239 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-1166" for this suite. @ 07/03/24 13:16:38.321
• [26.835 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should unconditionally reject operations on fail closed webhook [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:238
  STEP: Creating a kubernetes client @ 07/03/24 13:16:38.345
  I0703 13:16:38.345728 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:16:38.348
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:16:38.488
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:16:38.507
  STEP: Setting up server cert @ 07/03/24 13:16:38.771
  E0703 13:16:38.845973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:16:39.266
  STEP: Deploying the webhook pod @ 07/03/24 13:16:39.286
  STEP: Wait for the deployment to be ready @ 07/03/24 13:16:39.368
  I0703 13:16:39.433113 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:16:39.846045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:40.846262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:41.456792 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:16:41.847118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:42.847509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:43.467015 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:16:43.847617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:44.847756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:45.461434 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:16:45.847853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:46.848785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:47.461195 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 16, 39, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:16:47.849614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:48.849858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:16:49.467
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:16:49.501
  E0703 13:16:49.850171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:50.512515 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Registering a webhook that server cannot talk to, with fail closed policy, via the AdmissionRegistration API @ 07/03/24 13:16:50.52
  STEP: create a namespace for the webhook @ 07/03/24 13:16:50.546
  STEP: create a configmap should be unconditionally rejected by the webhook @ 07/03/24 13:16:50.629
  I0703 13:16:50.833300 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2571" for this suite. @ 07/03/24 13:16:50.842
  E0703 13:16:50.851126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-4834" for this suite. @ 07/03/24 13:16:50.89
  STEP: Destroying namespace "fail-closed-namespace-5579" for this suite. @ 07/03/24 13:16:50.932
• [12.598 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should serve a basic image on each replica with a public image [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:112
  STEP: Creating a kubernetes client @ 07/03/24 13:16:50.944
  I0703 13:16:50.944839 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replicaset @ 07/03/24 13:16:50.946
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:16:51.072
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:16:51.1
  I0703 13:16:51.114167 21 replica_set.go:191] Creating ReplicaSet my-hostname-basic-3b4c3159-389e-4a5e-85b6-920e07c1f92e
  I0703 13:16:51.158956 21 resource.go:87] Pod name my-hostname-basic-3b4c3159-389e-4a5e-85b6-920e07c1f92e: Found 0 pods out of 1
  E0703 13:16:51.852670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:52.852230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:53.852715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:54.853243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:55.853770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:56.164637 21 resource.go:87] Pod name my-hostname-basic-3b4c3159-389e-4a5e-85b6-920e07c1f92e: Found 1 pods out of 1
  I0703 13:16:56.164684 21 replica_set.go:204] Ensuring a pod for ReplicaSet "my-hostname-basic-3b4c3159-389e-4a5e-85b6-920e07c1f92e" is running
  I0703 13:16:56.172337 21 replica_set.go:220] Pod "my-hostname-basic-3b4c3159-389e-4a5e-85b6-920e07c1f92e-mf8mb" is running (conditions: [{Type:PodReadyToStartContainers Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 13:16:53 +0000 UTC Reason: Message:} {Type:Initialized Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 13:16:51 +0000 UTC Reason: Message:} {Type:Ready Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 13:16:53 +0000 UTC Reason: Message:} {Type:ContainersReady Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 13:16:53 +0000 UTC Reason: Message:} {Type:PodScheduled Status:True LastProbeTime:0001-01-01 00:00:00 +0000 UTC LastTransitionTime:2024-07-03 13:16:51 +0000 UTC Reason: Message:}])
  I0703 13:16:56.172385 21 replica_set.go:228] Trying to dial the pod
  STEP: trying to dial each unique pod @ 07/03/24 13:16:56.172
  E0703 13:16:56.856969      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:57.863093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:16:58.863779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:16:59.244118 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-2318" for this suite. @ 07/03/24 13:16:59.248
• [8.318 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment deployment should support rollover [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:132
  STEP: Creating a kubernetes client @ 07/03/24 13:16:59.262
  I0703 13:16:59.262917 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 13:16:59.263
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:16:59.377
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:16:59.392
  I0703 13:16:59.418148 21 resource.go:87] Pod name rollover-pod: Found 0 pods out of 1
  E0703 13:16:59.864799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:00.868433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:01.868611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:02.870457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:03.871544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:04.424676 21 resource.go:87] Pod name rollover-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/03/24 13:17:04.424
  I0703 13:17:04.424853 21 deployment.go:911] Waiting for pods owned by replica set "test-rollover-controller" to become ready
  E0703 13:17:04.871763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:05.874097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:06.429141 21 deployment.go:921] Creating deployment "test-rollover-deployment"
  I0703 13:17:06.462486 21 deployment.go:934] Make sure deployment "test-rollover-deployment" performs scaling operations
  E0703 13:17:06.876288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:07.875517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:08.474843 21 deployment.go:939] Check revision of new replica set for deployment "test-rollover-deployment"
  I0703 13:17:08.479937 21 deployment.go:943] Ensure that both replica sets have 1 created replica
  I0703 13:17:08.489385 21 deployment.go:952] Rollover old replica sets for deployment "test-rollover-deployment" with new image update
  I0703 13:17:08.531592 21 deployment.go:313] Updating deployment test-rollover-deployment
  I0703 13:17:08.531901 21 deployment.go:961] Wait deployment "test-rollover-deployment" to be observed by the deployment controller
  E0703 13:17:08.875837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:09.876060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:10.577512 21 deployment.go:966] Wait for revision update of deployment "test-rollover-deployment" to 2
  I0703 13:17:10.596399 21 deployment.go:970] Make sure deployment "test-rollover-deployment" is complete
  I0703 13:17:10.614353 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0703 13:17:10.614468 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 8, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:17:10.877182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:11.882420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:12.634541 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0703 13:17:12.646533 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:17:12.883178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:13.883785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:14.630872 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0703 13:17:14.631000 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:17:14.884522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:15.889876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:16.631985 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0703 13:17:16.632207 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:17:16.888163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:17.889143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:18.632695 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0703 13:17:18.632934 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:17:18.896465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:19.896897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:20.620994 21 deployment.go:94] all replica sets need to contain the pod-template-hash label
  I0703 13:17:20.621097 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:2, Replicas:2, UpdatedReplicas:1, ReadyReplicas:2, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 17, 11, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 17, 6, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rollover-deployment-679c966bdf\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:17:20.897394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:21.898009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:22.623979 21 deployment.go:94] 
  I0703 13:17:22.624025 21 deployment.go:974] Ensure that both old replica sets have no replicas
  I0703 13:17:22.638693 21 deployment.go:633] Deployment "test-rollover-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "d1be9d89-89ce-464a-9955-1a221b5f049c",
      ResourceVersion: (string) (len=5) "23863",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000040  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000050  2c 22 66 3a 70 72 6f 67  72 65 73 73 44 65 61 64  |,"f:progressDead|
              00000060  6c 69 6e 65 53 65 63 6f  6e 64 73 22 3a 7b 7d 2c  |lineSeconds":{},|
              00000070  22 66 3a 72 65 70 6c 69  63 61 73 22 3a 7b 7d 2c  |"f:replicas":{},|
              00000080  22 66 3a 72 65 76 69 73  69 6f 6e 48 69 73 74 6f  |"f:revisionHisto|
              00000090  72 79 4c 69 6d 69 74 22  3a 7b 7d 2c 22 66 3a 73  |ryLimit":{},"f:s|
              000000a0  65 6c 65 63 74 6f 72 22  3a 7b 7d 2c 22 66 3a 73  |elector":{},"f:s|
              000000b0  74 72 61 74 65 67 79 22  3a 7b 22 66 3a 72 6f 6c  |trategy":{"f:rol|
              000000c0  6c 69 6e 67 55 70 64 61  74 65 22 3a 7b 22 2e 22  |lingUpdate":{"."|
              000000d0  3a 7b 7d 2c 22 66 3a 6d  61 78 53 75 72 67 65 22  |:{},"f:maxSurge"|
              000000e0  3a 7b 7d 2c 22 66 3a 6d  61 78 55 6e 61 76 61 69  |:{},"f:maxUnavai|
              000000f0  6c 61 62 6c 65 22 3a 7b  7d 7d 2c 22 66 3a 74 79  |lable":{}},"f:ty|
              00000100  70 65 22 3a 7b 7d 7d 2c  22 66 3a 74 65 6d 70 6c  |pe":{}},"f:templ|
              00000110  61 74 65 22 3a 7b 22 66  3a 6d 65 74 61 64 61 74  |ate":{"f:metadat|
              00000120  61 22 3a 7b 22 66 3a 6c  61 62 65 6c 73 22 3a 7b  |a":{"f:labels":{|
              00000130  22 2e 22 3a 7b 7d 2c 22  66 3a 6e 61 6d 65 22 3a  |".":{},"f:name":|
              00000140  7b 7d 7d 7d 2c 22 66 3a  73 70 65 63 22 3a 7b 22  |{}}},"f:spec":{"|
              00000150  66 3a 63 6f 6e 74 61 69  6e 65 72 73 22 3a 7b 22  |f:containers":{"|
              00000160  6b 3a 7b 5c 22 6e 61 6d  65 5c 22 3a 5c 22 61 67  |k:{\"name\":\"ag|
              00000170  6e 68 6f 73 74 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |nhost\"}":{".":{|
              00000180  7d 2c 22 66 3a 69 6d 61  67 65 22 3a 7b 7d 2c 22  |},"f:image":{},"|
              00000190  66 3a 69 6d 61 67 65 50  75 6c 6c 50 6f 6c 69 63  |f:imagePullPolic|
              000001a0  79 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |y":{},"f:name":{|
              000001b0  7d 2c 22 66 3a 72 65 73  6f 75 72 63 65 73 22 3a  |},"f:resources":|
              000001c0  7b 7d 2c 22 66 3a 73 65  63 75 72 69 74 79 43 6f  |{},"f:securityCo|
              000001d0  6e 74 65 78 74 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ntext":{},"f:ter|
              000001e0  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000001f0  61 74 68 22 3a 7b 7d 2c  22 66 3a 74 65 72 6d 69  |ath":{},"f:termi|
              00000200  6e 61 74 69 6f 6e 4d 65  73 73 61 67 65 50 6f 6c  |nationMessagePol|
              00000210  69 63 79 22 3a 7b 7d 7d  7d 2c 22 66 3a 64 6e 73  |icy":{}}},"f:dns|
              00000220  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 72 65  |Policy":{},"f:re|
              00000230  73 74 61 72 74 50 6f 6c  69 63 79 22 3a 7b 7d 2c  |startPolicy":{},|
              00000240  22 66 3a 73 63 68 65 64  75 6c 65 72 4e 61 6d 65  |"f:schedulerName|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 47 72 61 63 65 50  |erminationGraceP|
              00000280  65 72 69 6f 64 53 65 63  6f 6e 64 73 22 3a 7b 7d  |eriodSeconds":{}|
              00000290  7d 7d 7d 7d                                       |}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 0,
            StrVal: (string) ""
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 0,
            IntVal: (int32) 1,
            StrVal: (string) ""
          })
        })
      },
      MinReadySeconds: (int32) 10,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 2,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609426,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=77) "ReplicaSet \"test-rollover-deployment-679c966bdf\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0703 13:17:22.650186 21 deployment.go:39] New ReplicaSet "test-rollover-deployment-679c966bdf" of Deployment "test-rollover-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "f4554326-a852-4309-8623-eecb88939bbe",
      ResourceVersion: (string) (len=5) "23853",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d1be9d89-89ce-464a-9955-1a221b5f049c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=806) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 62 65 39 64  38 39 2d 38 39 63 65 2d  |\"d1be9d89-89ce-|
              00000120  34 36 34 61 2d 39 39 35  35 2d 31 61 32 32 31 62  |464a-9955-1a221b|
              00000130  35 66 30 34 39 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5f049c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  61 67 6e 68 6f 73 74 5c  22 7d 22 3a 7b 22 2e 22  |agnhost\"}":{"."|
              00000210  3a 7b 7d 2c 22 66 3a 69  6d 61 67 65 22 3a 7b 7d  |:{},"f:image":{}|
              00000220  2c 22 66 3a 69 6d 61 67  65 50 75 6c 6c 50 6f 6c  |,"f:imagePullPol|
              00000230  69 63 79 22 3a 7b 7d 2c  22 66 3a 6e 61 6d 65 22  |icy":{},"f:name"|
              00000240  3a 7b 7d 2c 22 66 3a 72  65 73 6f 75 72 63 65 73  |:{},"f:resources|
              00000250  22 3a 7b 7d 2c 22 66 3a  73 65 63 75 72 69 74 79  |":{},"f:security|
              00000260  43 6f 6e 74 65 78 74 22  3a 7b 7d 2c 22 66 3a 74  |Context":{},"f:t|
              00000270  65 72 6d 69 6e 61 74 69  6f 6e 4d 65 73 73 61 67  |erminationMessag|
              00000280  65 50 61 74 68 22 3a 7b  7d 2c 22 66 3a 74 65 72  |ePath":{},"f:ter|
              00000290  6d 69 6e 61 74 69 6f 6e  4d 65 73 73 61 67 65 50  |minationMessageP|
              000002a0  6f 6c 69 63 79 22 3a 7b  7d 7d 7d 2c 22 66 3a 64  |olicy":{}}},"f:d|
              000002b0  6e 73 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |nsPolicy":{},"f:|
              000002c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000002d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000002e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000002f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000300  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000310  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000320  7b 7d 7d 7d 7d 7d                                 |{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 13:17:22.651862 21 deployment.go:44] All old ReplicaSets of Deployment "test-rollover-deployment":
  I0703 13:17:22.652213 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=24) "test-rollover-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "314bb545-90ed-42de-885d-f6e0d8d3fd8f",
      ResourceVersion: (string) (len=5) "23862",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609419,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=2) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d1be9d89-89ce-464a-9955-1a221b5f049c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609419,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=467) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              00000030  3a 70 6f 64 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |:pod":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  73 65 6c 65 63 74 6f 72  |ec":{"f:selector|
              00000050  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000060  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000070  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              00000080  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000090  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              000000a0  73 70 65 63 22 3a 7b 22  66 3a 63 6f 6e 74 61 69  |spec":{"f:contai|
              000000b0  6e 65 72 73 22 3a 7b 22  6b 3a 7b 5c 22 6e 61 6d  |ners":{"k:{\"nam|
              000000c0  65 5c 22 3a 5c 22 68 74  74 70 64 5c 22 7d 22 3a  |e\":\"httpd\"}":|
              000000d0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              000000e0  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              000000f0  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000100  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000110  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |rces":{},"f:term|
              00000120  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000130  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000140  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000150  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000160  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              00000170  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              00000180  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              00000190  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000001a0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              000001b0  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              000001c0  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              000001d0  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=249) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 7d 2c 22 66  3a 6f 77 6e 65 72 52 65  |":{}},"f:ownerRe|
              00000090  66 65 72 65 6e 63 65 73  22 3a 7b 22 2e 22 3a 7b  |ferences":{".":{|
              000000a0  7d 2c 22 6b 3a 7b 5c 22  75 69 64 5c 22 3a 5c 22  |},"k:{\"uid\":\"|
              000000b0  64 31 62 65 39 64 38 39  2d 38 39 63 65 2d 34 36  |d1be9d89-89ce-46|
              000000c0  34 61 2d 39 39 35 35 2d  31 61 32 32 31 62 35 66  |4a-9955-1a221b5f|
              000000d0  30 34 39 63 5c 22 7d 22  3a 7b 7d 7d 7d 2c 22 66  |049c\"}":{}}},"f|
              000000e0  3a 73 70 65 63 22 3a 7b  22 66 3a 72 65 70 6c 69  |:spec":{"f:repli|
              000000f0  63 61 73 22 3a 7b 7d 7d  7d                       |cas":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609441,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=3) "pod": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "pod": (string) (len=5) "httpd",
            (string) (len=4) "name": (string) (len=12) "rollover-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 13:17:22.653969 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=35) "test-rollover-deployment-65bd487b4b",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "57fbe9f8-78a8-49b9-9f2a-0c8939a163b2",
      ResourceVersion: (string) (len=5) "23810",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609426,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=24) "test-rollover-deployment",
          UID: (types.UID) (len=36) "d1be9d89-89ce-464a-9955-1a221b5f049c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=810) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 64 31 62 65 39 64  38 39 2d 38 39 63 65 2d  |\"d1be9d89-89ce-|
              00000120  34 36 34 61 2d 39 39 35  35 2d 31 61 32 32 31 62  |464a-9955-1a221b|
              00000130  35 66 30 34 39 63 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |5f049c\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 6d 69 6e  |"f:spec":{"f:min|
              00000150  52 65 61 64 79 53 65 63  6f 6e 64 73 22 3a 7b 7d  |ReadySeconds":{}|
              00000160  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000170  2c 22 66 3a 73 65 6c 65  63 74 6f 72 22 3a 7b 7d  |,"f:selector":{}|
              00000180  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000190  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              000001a0  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              000001b0  22 66 3a 6e 61 6d 65 22  3a 7b 7d 2c 22 66 3a 70  |"f:name":{},"f:p|
              000001c0  6f 64 2d 74 65 6d 70 6c  61 74 65 2d 68 61 73 68  |od-template-hash|
              000001d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000001e0  7b 22 66 3a 63 6f 6e 74  61 69 6e 65 72 73 22 3a  |{"f:containers":|
              000001f0  7b 22 6b 3a 7b 5c 22 6e  61 6d 65 5c 22 3a 5c 22  |{"k:{\"name\":\"|
              00000200  72 65 64 69 73 2d 73 6c  61 76 65 5c 22 7d 22 3a  |redis-slave\"}":|
              00000210  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |{".":{},"f:image|
              00000220  22 3a 7b 7d 2c 22 66 3a  69 6d 61 67 65 50 75 6c  |":{},"f:imagePul|
              00000230  6c 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 6e  |lPolicy":{},"f:n|
              00000240  61 6d 65 22 3a 7b 7d 2c  22 66 3a 72 65 73 6f 75  |ame":{},"f:resou|
              00000250  72 63 65 73 22 3a 7b 7d  2c 22 66 3a 73 65 63 75  |rces":{},"f:secu|
              00000260  72 69 74 79 43 6f 6e 74  65 78 74 22 3a 7b 7d 2c  |rityContext":{},|
              00000270  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000280  73 73 61 67 65 50 61 74  68 22 3a 7b 7d 2c 22 66  |ssagePath":{},"f|
              00000290  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 4d 65 73 73  |:terminationMess|
              000002a0  61 67 65 50 6f 6c 69 63  79 22 3a 7b 7d 7d 7d 2c  |agePolicy":{}}},|
              000002b0  22 66 3a 64 6e 73 50 6f  6c 69 63 79 22 3a 7b 7d  |"f:dnsPolicy":{}|
              000002c0  2c 22 66 3a 72 65 73 74  61 72 74 50 6f 6c 69 63  |,"f:restartPolic|
              000002d0  79 22 3a 7b 7d 2c 22 66  3a 73 63 68 65 64 75 6c  |y":{},"f:schedul|
              000002e0  65 72 4e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 73 65  |erName":{},"f:se|
              000002f0  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000300  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000310  47 72 61 63 65 50 65 72  69 6f 64 53 65 63 6f 6e  |GracePeriodSecon|
              00000320  64 73 22 3a 7b 7d 7d 7d  7d 7d                    |ds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 10,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=12) "rollover-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=12) "rollover-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "65bd487b4b"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=11) "redis-slave",
              Image: (string) (len=47) "gcr.io/google_samples/gb-redisslave:nonexistent",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 13:17:22.661231 21 deployment.go:67] Pod "test-rollover-deployment-679c966bdf-cs5f8" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rollover-deployment-679c966bdf-cs5f8",
      GenerateName: (string) (len=36) "test-rollover-deployment-679c966bdf-",
      Namespace: (string) (len=15) "deployment-9985",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "04e6daf7-94f2-4a52-9dcd-5af229872550",
      ResourceVersion: (string) (len=5) "23830",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=12) "rollover-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "679c966bdf"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.179/32",
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d3dcda68532e36f2c96cd0c644e10885f4bf0f950d61e7b59a9796eec656c448",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.179/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=35) "test-rollover-deployment-679c966bdf",
          UID: (types.UID) (len=36) "f4554326-a852-4309-8623-eecb88939bbe",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 66 34  35 35 34 33 32 36 2d 61  |d\":\"f4554326-a|
              00000090  38 35 32 2d 34 33 30 39  2d 38 36 32 33 2d 65 65  |852-4309-8623-ee|
              000000a0  63 62 38 38 39 33 39 62  62 65 5c 22 7d 22 3a 7b  |cb88939bbe\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609430,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 31 37  39 5c 22 7d 22 3a 7b 22  |.42.1.179\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-rvwdp",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-rvwdp",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609431,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609428,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=11) "10.42.1.179",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.179"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609428,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855609430,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://b03fd39aa891247bb6f7e8e6250b13d3638d67277385141e1bd94be2ff356e1d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 13:17:22.670987 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-9985" for this suite. @ 07/03/24 13:17:22.675
• [23.423 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a volume subpath [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:116
  STEP: Creating a kubernetes client @ 07/03/24 13:17:22.687
  I0703 13:17:22.687362 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 13:17:22.688
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:17:22.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:17:22.774
  STEP: Creating a pod to test substitution in volume subpath @ 07/03/24 13:17:22.78
  E0703 13:17:22.898693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:23.898710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:24.899271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:25.899375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:17:26.841
  I0703 13:17:26.843959 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod var-expansion-18dd91f3-cc45-48c1-ab10-31fd66788758 container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 13:17:26.853
  E0703 13:17:26.900232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:26.930405 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-4646" for this suite. @ 07/03/24 13:17:26.952
• [4.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:210
  STEP: Creating a kubernetes client @ 07/03/24 13:17:26.971
  I0703 13:17:26.971832 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:17:26.972
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:17:27.023
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:17:27.078
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/03/24 13:17:27.094
  E0703 13:17:27.901220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:28.901543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:29.903132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:30.910723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:31.914616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:32.918471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:17:33.232
  I0703 13:17:33.235132 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-f592879b-b206-4c89-aad4-f071840225b8 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:17:33.268
  I0703 13:17:33.342728 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-4581" for this suite. @ 07/03/24 13:17:33.352
• [6.408 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes volume on tmpfs should have the correct mode [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:90
  STEP: Creating a kubernetes client @ 07/03/24 13:17:33.38
  I0703 13:17:33.380390 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:17:33.381
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:17:33.587
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:17:33.612
  STEP: Creating a pod to test emptydir volume type on tmpfs @ 07/03/24 13:17:33.642
  E0703 13:17:33.919187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:34.922648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:35.922940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:36.923053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:37.923782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:38.924658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:17:39.743
  I0703 13:17:39.746652 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-d8f4292b-81fa-43d0-82f5-a621ef83f787 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:17:39.757
  I0703 13:17:39.796196 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-724" for this suite. @ 07/03/24 13:17:39.814
• [6.451 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set DefaultMode on files [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:70
  STEP: Creating a kubernetes client @ 07/03/24 13:17:39.831
  I0703 13:17:39.831246 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 13:17:39.832
  E0703 13:17:39.925306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:17:39.934
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:17:39.975
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 13:17:39.993
  E0703 13:17:40.925398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:41.926643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:42.927587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:43.928161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:44.928629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:45.934911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:17:46.13
  I0703 13:17:46.140822 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-eee96a0d-b6e3-4a1b-9c62-be29835ec798 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 13:17:46.158
  I0703 13:17:46.205411 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1859" for this suite. @ 07/03/24 13:17:46.216
• [6.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:50
  STEP: Creating a kubernetes client @ 07/03/24 13:17:46.249
  I0703 13:17:46.249236 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 13:17:46.277
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:17:46.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:17:46.408
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/03/24 13:17:46.421
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@kubernetes.default.svc.cluster.local;check="$$(dig +tcp +noall +answer +search kubernetes.default.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@kubernetes.default.svc.cluster.local;sleep 1; done
   @ 07/03/24 13:17:46.421
  STEP: creating a pod to probe DNS @ 07/03/24 13:17:46.421
  STEP: submitting the pod to kubernetes @ 07/03/24 13:17:46.421
  E0703 13:17:46.937404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:47.938457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:48.942531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:49.942588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 13:17:50.515
  STEP: looking for the results for each expected name from probers @ 07/03/24 13:17:50.522
  I0703 13:17:50.538846 21 dns_common.go:478] Unable to read wheezy_udp@kubernetes.default.svc.cluster.local from pod dns-8232/dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a: the server could not find the requested resource (get pods dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a)
  I0703 13:17:50.547053 21 dns_common.go:478] Unable to read wheezy_tcp@kubernetes.default.svc.cluster.local from pod dns-8232/dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a: the server could not find the requested resource (get pods dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a)
  I0703 13:17:50.555009 21 dns_common.go:478] Unable to read jessie_udp@kubernetes.default.svc.cluster.local from pod dns-8232/dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a: the server could not find the requested resource (get pods dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a)
  I0703 13:17:50.568561 21 dns_common.go:478] Unable to read jessie_tcp@kubernetes.default.svc.cluster.local from pod dns-8232/dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a: the server could not find the requested resource (get pods dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a)
  I0703 13:17:50.568749 21 dns_common.go:489] Lookups using dns-8232/dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a failed for: [wheezy_udp@kubernetes.default.svc.cluster.local wheezy_tcp@kubernetes.default.svc.cluster.local jessie_udp@kubernetes.default.svc.cluster.local jessie_tcp@kubernetes.default.svc.cluster.local]

  I0703 13:17:50.582630 21 dns_common.go:495] Pod client logs for webserver: 
  I0703 13:17:50.602557 21 dns_common.go:495] Pod client logs for querier: 
  I0703 13:17:50.626623 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0703 13:17:50.943341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:51.943554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:52.944345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:53.944463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:54.945291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:17:55.570643 21 dns_common.go:527] DNS probes using dns-8232/dns-test-c645793f-1ed6-428e-a1b0-dc00f2a4571a succeeded

  STEP: deleting the pod @ 07/03/24 13:17:55.57
  I0703 13:17:55.633694 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-8232" for this suite. @ 07/03/24 13:17:55.664
• [9.482 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] EndpointSlice should create Endpoints and EndpointSlices for Pods matching a Service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:208
  STEP: Creating a kubernetes client @ 07/03/24 13:17:55.731
  I0703 13:17:55.731924 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename endpointslice @ 07/03/24 13:17:55.733
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:17:55.849
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:17:55.866
  E0703 13:17:55.946237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:56.946487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:57.946466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:58.946650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:17:59.946989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:00.947103      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:01.947534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: referencing a single matching pod @ 07/03/24 13:18:02.226
  STEP: referencing matching pods with named port @ 07/03/24 13:18:02.254
  STEP: creating empty Endpoints and EndpointSlices for no matching Pods @ 07/03/24 13:18:02.268
  STEP: recreating EndpointSlices after they've been deleted @ 07/03/24 13:18:02.308
  I0703 13:18:02.555307 21 endpointslice.go:938] EndpointSlice for Service endpointslice-3948/example-named-port not found
  E0703 13:18:02.948816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:03.950686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:04.528261 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-3948" for this suite. @ 07/03/24 13:18:04.539
• [8.826 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should apply changes to a job status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:833
  STEP: Creating a kubernetes client @ 07/03/24 13:18:04.564
  I0703 13:18:04.564566 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename job @ 07/03/24 13:18:04.565
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:18:04.63
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:18:04.688
  STEP: Creating a job @ 07/03/24 13:18:04.716
  STEP: Ensure pods equal to parallelism count is attached to the job @ 07/03/24 13:18:04.749
  E0703 13:18:04.950746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:05.951976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:06.954436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:07.956362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/03/24 13:18:08.755
  STEP: updating /status @ 07/03/24 13:18:08.766
  STEP: get /status @ 07/03/24 13:18:08.776
  I0703 13:18:08.784525 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-6470" for this suite. @ 07/03/24 13:18:08.796
• [4.246 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-node] Probing container should be restarted with a GRPC liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:551
  STEP: Creating a kubernetes client @ 07/03/24 13:18:08.809
  I0703 13:18:08.809275 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 13:18:08.81
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:18:08.914
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:18:08.931
  STEP: Creating pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153 @ 07/03/24 13:18:08.94
  E0703 13:18:08.957124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:09.966125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:10.966206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:11.968822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:12.969636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 13:18:13.037
  I0703 13:18:13.045340 21 container_probe.go:1749] Initial restart count of pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 is 0
  I0703 13:18:13.066414 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:13.969798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:14.969929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:15.071531 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:15.970392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:16.970584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:17.075724 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:17.970650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:18.970918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:19.085926 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:19.970876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:20.971611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:21.118461 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:21.972260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:22.972628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:23.122593 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:23.973353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:24.973694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:25.128335 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:25.974821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:26.974915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:27.166382 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:27.975034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:28.977074      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:29.189484 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:29.977321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:30.977491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:31.194690 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:31.977701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:32.977797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:33.201658 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:33.978690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:34.979535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:35.210803 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:35.980119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:36.980171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:37.215035 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:37.980315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:38.980519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:39.227452 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:39.981143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:40.982447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:41.232712 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:41.982464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:42.982872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:43.238590 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:43.983560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:44.983897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:45.244423 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:45.986629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:46.986309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:47.253468 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:47.987239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:48.987611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:49.256940 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:49.988614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:50.989534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:51.268467 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:51.989643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:52.990016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:53.288369 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:53.991326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:55.006684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:55.302079 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:56.002041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:57.002841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:57.312980 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:18:58.003504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:18:59.004841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:18:59.326236 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:00.008578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:01.008078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:01.335901 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:02.010430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:03.010492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:03.343237 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:04.010605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:05.010981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:05.367066 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:06.011835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:07.012089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:07.379002 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:08.017905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:09.020700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:09.385730 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:10.022789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:11.023655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:11.394487 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:12.026449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:13.026577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:13.410839 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:14.027944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:15.028702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:15.415862 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:16.028815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:17.029053      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:17.426071 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:18.028985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:19.029230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:19.434265 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:20.029941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:21.030504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:21.444827 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:22.030637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:23.031899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:23.464943 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:24.031982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:25.042498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:25.474822 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  E0703 13:19:26.043244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:27.044482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:19:27.492488 21 container_probe.go:1759] Get pod test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 in namespace container-probe-2153
  I0703 13:19:27.492661 21 container_probe.go:1763] Restart count of pod container-probe-2153/test-grpc-8bdb464d-8bdc-463c-8792-3b00fe1f9d82 is now 1 (1m14.447275939s elapsed)
  STEP: deleting the pod @ 07/03/24 13:19:27.493
  I0703 13:19:27.538378 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-2153" for this suite. @ 07/03/24 13:19:27.544
• [78.760 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] PriorityClass endpoints verify PriorityClass endpoints can be operated with different HTTP methods [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:812
  STEP: Creating a kubernetes client @ 07/03/24 13:19:27.576
  I0703 13:19:27.576844 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-preemption @ 07/03/24 13:19:27.578
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:19:27.705
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:19:27.734
  I0703 13:19:27.855299 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0703 13:19:28.045436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:29.047742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:30.047238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:31.047526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:32.048623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:33.049389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:34.050016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:35.049871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:36.050355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:37.053995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:38.057213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:39.057346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:40.057686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:41.058485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:42.059552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:43.059830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:44.070690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:45.060804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:46.060733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:47.060897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:48.061738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:49.061817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:50.062298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:51.062490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:52.063570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:53.063847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:54.064855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:55.065690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:56.066139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:57.066406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:58.066778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:19:59.068789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:00.089016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:01.070887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:02.071828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:03.071846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:04.072153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:05.072328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:06.072663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:07.072915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:08.074983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:09.075565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:10.075959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:11.076372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:12.082458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:13.082433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:14.083583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:15.083700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:16.097055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:17.097162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:18.099565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:19.101509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:20.101663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:21.101947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:22.102110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:23.102434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:24.103151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:25.103268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:26.104148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:27.105187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:20:27.871422 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Creating a kubernetes client @ 07/03/24 13:20:27.874
  I0703 13:20:27.875044 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-preemption-path @ 07/03/24 13:20:27.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:20:27.919
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:20:27.926
  I0703 13:20:27.970863 21 preemption.go:818] PriorityClass.scheduling.k8s.io "p1" is invalid: value: Forbidden: may not be changed in an update.
  I0703 13:20:28.012717 21 preemption.go:824] PriorityClass.scheduling.k8s.io "p2" is invalid: value: Forbidden: may not be changed in an update.
  E0703 13:20:28.106402      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:20:28.349167 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-path-3758" for this suite. @ 07/03/24 13:20:28.358
  I0703 13:20:28.406462 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-5290" for this suite. @ 07/03/24 13:20:28.421
• [60.874 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide pod UID as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:269
  STEP: Creating a kubernetes client @ 07/03/24 13:20:28.458
  I0703 13:20:28.458741 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 13:20:28.478
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:20:28.557
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:20:28.581
  STEP: Creating a pod to test downward api env vars @ 07/03/24 13:20:28.586
  E0703 13:20:29.108991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:30.109453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:31.109827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:32.110122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:33.112170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:34.112121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:20:34.721
  I0703 13:20:34.737630 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downward-api-76991a95-31d7-40db-b5ee-7c2b31c65bee container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 13:20:34.854
  I0703 13:20:34.926705 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-9376" for this suite. @ 07/03/24 13:20:34.96
• [6.521 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should list and delete a collection of ReplicaSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:166
  STEP: Creating a kubernetes client @ 07/03/24 13:20:34.981
  I0703 13:20:34.981233 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replicaset @ 07/03/24 13:20:34.982
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:20:35.052
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:20:35.061
  STEP: Create a ReplicaSet @ 07/03/24 13:20:35.08
  E0703 13:20:35.114166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verify that the required pods have come up @ 07/03/24 13:20:35.12
  I0703 13:20:35.145618 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 3
  E0703 13:20:36.114046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:37.114081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:38.114425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:39.114662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:40.115515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:20:40.152554 21 resource.go:87] Pod name sample-pod: Found 3 pods out of 3
  STEP: ensuring each pod is running @ 07/03/24 13:20:40.152
  I0703 13:20:40.160786 21 replica_set.go:583] Replica Status: {Replicas:3 FullyLabeledReplicas:3 ReadyReplicas:3 AvailableReplicas:3 ObservedGeneration:1 Conditions:[]}
  STEP: Listing all ReplicaSets @ 07/03/24 13:20:40.16
  STEP: DeleteCollection of the ReplicaSets @ 07/03/24 13:20:40.164
  STEP: After DeleteCollection verify that ReplicaSets have been deleted @ 07/03/24 13:20:40.219
  I0703 13:20:40.235629 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-9263" for this suite. @ 07/03/24 13:20:40.257
• [5.361 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] Services should complete a service status lifecycle [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3345
  STEP: Creating a kubernetes client @ 07/03/24 13:20:40.342
  I0703 13:20:40.342564 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:20:40.343
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:20:40.609
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:20:40.617
  STEP: creating a Service @ 07/03/24 13:20:40.647
  STEP: watching for the Service to be added @ 07/03/24 13:20:40.677
  I0703 13:20:40.715459 21 service.go:3397] Found Service test-service-pv5t4 in namespace services-9510 with labels: map[test-service-static:true] & ports [{http TCP <nil> 80 {0 80 } 32042}]
  I0703 13:20:40.715658 21 service.go:3404] Service test-service-pv5t4 created
  STEP: Getting /status @ 07/03/24 13:20:40.715
  I0703 13:20:40.747610 21 service.go:3415] Service test-service-pv5t4 has LoadBalancer: {[]}
  STEP: patching the ServiceStatus @ 07/03/24 13:20:40.747
  STEP: watching for the Service to be patched @ 07/03/24 13:20:40.773
  I0703 13:20:40.799466 21 service.go:3438] observed Service test-service-pv5t4 in namespace services-9510 with annotations: map[] & LoadBalancer: {[]}
  I0703 13:20:40.799581 21 service.go:3441] Found Service test-service-pv5t4 in namespace services-9510 with annotations: map[patchedstatus:true] & LoadBalancer: {[{203.0.113.1  0xc000a34b40 []}]}
  I0703 13:20:40.799626 21 service.go:3448] Service test-service-pv5t4 has service status patched
  STEP: updating the ServiceStatus @ 07/03/24 13:20:40.799
  I0703 13:20:40.879640 21 service.go:3468] updatedStatus.Conditions: []v1.Condition{v1.Condition{Type:"StatusUpdate", Status:"True", ObservedGeneration:0, LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Service to be updated @ 07/03/24 13:20:40.879
  I0703 13:20:40.916207 21 service.go:3479] Observed Service test-service-pv5t4 in namespace services-9510 with annotations: map[] & Conditions: {[]}
  I0703 13:20:40.916596 21 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-pv5t4  services-9510  3acbdcc5-e021-4993-8a13-5a5f1ca4e3c3 24786 0 2024-07-03 13:20:40 +0000 UTC <nil> <nil> map[test-service-static:true] map[patchedstatus:true] [] [] [{e2e.test Update v1 2024-07-03 13:20:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-03 13:20:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32042,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.49.255,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.49.255],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0703 13:20:40.916790 21 service.go:3494] Observed event: &Service{ObjectMeta:{test-service-pv5t4  services-9510  3acbdcc5-e021-4993-8a13-5a5f1ca4e3c3 24788 0 2024-07-03 13:20:40 +0000 UTC <nil> <nil> map[test-service-static:true] map[field.cattle.io/publicEndpoints:[{"addresses":["203.0.113.1"],"port":80,"protocol":"TCP","serviceName":"services-9510:test-service-pv5t4","allNodes":false}] patchedstatus:true] [] [] [{agent Update v1 2024-07-03 13:20:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{"f:field.cattle.io/publicEndpoints":{}}}} } {e2e.test Update v1 2024-07-03 13:20:40 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:test-service-static":{}}},"f:spec":{"f:allocateLoadBalancerNodePorts":{},"f:externalTrafficPolicy":{},"f:internalTrafficPolicy":{},"f:loadBalancerClass":{},"f:ports":{".":{},"k:{\"port\":80,\"protocol\":\"TCP\"}":{".":{},"f:name":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:sessionAffinity":{},"f:type":{}}} } {e2e.test Update v1 2024-07-03 13:20:40 +0000 UTC FieldsV1 {"f:metadata":{"f:annotations":{".":{},"f:patchedstatus":{}}},"f:status":{"f:loadBalancer":{"f:ingress":{}}}} status}]},Spec:ServiceSpec{Ports:[]ServicePort{ServicePort{Name:http,Protocol:TCP,Port:80,TargetPort:{0 80 },NodePort:32042,AppProtocol:nil,},},Selector:map[string]string{},ClusterIP:10.43.49.255,Type:LoadBalancer,ExternalIPs:[],SessionAffinity:None,LoadBalancerIP:,LoadBalancerSourceRanges:[],ExternalName:,ExternalTrafficPolicy:Cluster,HealthCheckNodePort:0,PublishNotReadyAddresses:false,SessionAffinityConfig:nil,IPFamilyPolicy:*SingleStack,ClusterIPs:[10.43.49.255],IPFamilies:[IPv4],AllocateLoadBalancerNodePorts:*true,LoadBalancerClass:*example.com/internal-vip,InternalTrafficPolicy:*Cluster,TrafficDistribution:nil,},Status:ServiceStatus{LoadBalancer:LoadBalancerStatus{Ingress:[]LoadBalancerIngress{LoadBalancerIngress{IP:203.0.113.1,Hostname:,IPMode:*VIP,Ports:[]PortStatus{},},},},Conditions:[]Condition{},},}
  I0703 13:20:40.917006 21 service.go:3486] Found Service test-service-pv5t4 in namespace services-9510 with annotations: map[field.cattle.io/publicEndpoints:[{"addresses":["203.0.113.1"],"port":80,"protocol":"TCP","serviceName":"services-9510:test-service-pv5t4","allNodes":false}] patchedstatus:true] & Conditions: [{StatusUpdate True 0 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0703 13:20:40.917159 21 service.go:3498] Service test-service-pv5t4 has service status updated
  STEP: patching the service @ 07/03/24 13:20:40.917
  STEP: watching for the Service to be patched @ 07/03/24 13:20:41.043
  I0703 13:20:41.075187 21 service.go:3521] observed Service test-service-pv5t4 in namespace services-9510 with labels: map[test-service-static:true]
  I0703 13:20:41.075234 21 service.go:3521] observed Service test-service-pv5t4 in namespace services-9510 with labels: map[test-service-static:true]
  I0703 13:20:41.079369 21 service.go:3521] observed Service test-service-pv5t4 in namespace services-9510 with labels: map[test-service-static:true]
  I0703 13:20:41.082468 21 service.go:3521] observed Service test-service-pv5t4 in namespace services-9510 with labels: map[test-service-static:true]
  I0703 13:20:41.082708 21 service.go:3524] Found Service test-service-pv5t4 in namespace services-9510 with labels: map[test-service:patched test-service-static:true]
  I0703 13:20:41.082797 21 service.go:3531] Service test-service-pv5t4 patched
  STEP: deleting the service @ 07/03/24 13:20:41.082
  E0703 13:20:41.116454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: watching for the Service to be deleted @ 07/03/24 13:20:41.302
  I0703 13:20:41.322628 21 service.go:3555] Observed event: ADDED
  I0703 13:20:41.341125 21 service.go:3555] Observed event: MODIFIED
  I0703 13:20:41.359456 21 service.go:3555] Observed event: MODIFIED
  I0703 13:20:41.366869 21 service.go:3555] Observed event: MODIFIED
  I0703 13:20:41.367422 21 service.go:3555] Observed event: MODIFIED
  I0703 13:20:41.368029 21 service.go:3551] Found Service test-service-pv5t4 in namespace services-9510 with labels: map[test-service:patched test-service-static:true] & annotations: map[field.cattle.io/publicEndpoints:[{"addresses":["203.0.113.1"],"port":80,"protocol":"TCP","serviceName":"services-9510:test-service-pv5t4","allNodes":false}] patchedstatus:true]
  I0703 13:20:41.368399 21 service.go:3560] Service test-service-pv5t4 deleted
  I0703 13:20:41.369075 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9510" for this suite. @ 07/03/24 13:20:41.38
• [1.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should find a service from listing all namespaces [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3136
  STEP: Creating a kubernetes client @ 07/03/24 13:20:41.45
  I0703 13:20:41.450244 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:20:41.465
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:20:41.731
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:20:41.74
  STEP: fetching services @ 07/03/24 13:20:41.773
  I0703 13:20:41.819696 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-2647" for this suite. @ 07/03/24 13:20:41.859
• [0.498 seconds]
------------------------------
SSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should list, patch and delete a collection of StatefulSets [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:962
  STEP: Creating a kubernetes client @ 07/03/24 13:20:41.952
  I0703 13:20:41.952207 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 13:20:41.953
  E0703 13:20:42.118807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:20:42.287
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:20:42.313
  STEP: Creating service test in namespace statefulset-4642 @ 07/03/24 13:20:42.342
  I0703 13:20:42.492827 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0703 13:20:43.119062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:44.119425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:45.126698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:46.127504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:47.131460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:48.131079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:49.131190      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:50.131568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:51.132230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:52.134368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:20:52.474837 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: patching the StatefulSet @ 07/03/24 13:20:52.486
  W0703 13:20:52.530572      21 warnings.go:70] unknown field "spec.template.spec.TerminationGracePeriodSeconds"
  I0703 13:20:52.624850 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:20:52.625503 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:20:53.134918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:54.135624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:55.136670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:56.137336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:57.137781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:58.138749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:20:59.139986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:00.142453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:01.143498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:02.145196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:02.566341 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:21:03.146170      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:04.146688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:05.147754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:06.147422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:07.148472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:08.149028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:09.149204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:10.149334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:11.150621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:12.152562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:12.571049 21 wait.go:50] Waiting for pod test-ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:21:12.571105 21 wait.go:50] Waiting for pod test-ss-1 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Listing all StatefulSets @ 07/03/24 13:21:12.59
  STEP: Delete all of the StatefulSets @ 07/03/24 13:21:12.606
  STEP: Verify that StatefulSets have been deleted @ 07/03/24 13:21:12.621
  I0703 13:21:12.646813 21 statefulset.go:135] Deleting all statefulset in ns statefulset-4642
  I0703 13:21:12.728384 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4642" for this suite. @ 07/03/24 13:21:12.764
• [30.846 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ControllerRevision [Serial] should manage the lifecycle of a ControllerRevision [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/controller_revision.go:126
  STEP: Creating a kubernetes client @ 07/03/24 13:21:12.799
  I0703 13:21:12.799387 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename controllerrevisions @ 07/03/24 13:21:12.8
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:21:12.959
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:21:13.001
  E0703 13:21:13.152500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating DaemonSet "e2e-stx2x-daemon-set" @ 07/03/24 13:21:13.235
  STEP: Check that daemon pods launch on every node of the cluster. @ 07/03/24 13:21:13.302
  I0703 13:21:13.368957 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-stx2x-daemon-set: 0
  I0703 13:21:13.369006 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:21:14.152721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:14.343219 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-stx2x-daemon-set: 0
  I0703 13:21:14.343423 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:21:15.153228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:15.357775 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-stx2x-daemon-set: 0
  I0703 13:21:15.357817 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:21:16.155973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:16.312848 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-stx2x-daemon-set: 1
  I0703 13:21:16.313517 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 13:21:17.156872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:17.314935 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-stx2x-daemon-set: 3
  I0703 13:21:17.315145 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset e2e-stx2x-daemon-set
  STEP: Confirm DaemonSet "e2e-stx2x-daemon-set" successfully created with "daemonset-name=e2e-stx2x-daemon-set" label @ 07/03/24 13:21:17.318
  STEP: Listing all ControllerRevisions with label "daemonset-name=e2e-stx2x-daemon-set" @ 07/03/24 13:21:17.326
  I0703 13:21:17.337539 21 controller_revision.go:162] Located ControllerRevision: "e2e-stx2x-daemon-set-5f6c868668"
  STEP: Patching ControllerRevision "e2e-stx2x-daemon-set-5f6c868668" @ 07/03/24 13:21:17.347
  I0703 13:21:17.360203 21 controller_revision.go:173] e2e-stx2x-daemon-set-5f6c868668 has been patched
  STEP: Create a new ControllerRevision @ 07/03/24 13:21:17.36
  I0703 13:21:17.395735 21 controller_revision.go:191] Created ControllerRevision: e2e-stx2x-daemon-set-5bd694db4d
  STEP: Confirm that there are two ControllerRevisions @ 07/03/24 13:21:17.396
  I0703 13:21:17.396463 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0703 13:21:17.401162 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Deleting ControllerRevision "e2e-stx2x-daemon-set-5f6c868668" @ 07/03/24 13:21:17.401
  STEP: Confirm that there is only one ControllerRevision @ 07/03/24 13:21:17.418
  I0703 13:21:17.418487 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0703 13:21:17.422415 21 controller_revision.go:265] Found 1 ControllerRevisions
  STEP: Updating ControllerRevision "e2e-stx2x-daemon-set-5bd694db4d" @ 07/03/24 13:21:17.436
  I0703 13:21:17.449195 21 controller_revision.go:220] e2e-stx2x-daemon-set-5bd694db4d has been updated
  STEP: Generate another ControllerRevision by patching the Daemonset @ 07/03/24 13:21:17.449
  W0703 13:21:17.463532      21 warnings.go:70] unknown field "updateStrategy"
  STEP: Confirm that there are two ControllerRevisions @ 07/03/24 13:21:17.463
  I0703 13:21:17.463694 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  E0703 13:21:18.158004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:18.464213 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0703 13:21:18.486249 21 controller_revision.go:265] Found 2 ControllerRevisions
  STEP: Removing a ControllerRevision via 'DeleteCollection' with labelSelector: "e2e-stx2x-daemon-set-5bd694db4d=updated" @ 07/03/24 13:21:18.486
  STEP: Confirm that there is only one ControllerRevision @ 07/03/24 13:21:18.518
  I0703 13:21:18.518708 21 controller_revision.go:254] Requesting list of ControllerRevisions to confirm quantity
  I0703 13:21:18.537046 21 controller_revision.go:265] Found 1 ControllerRevisions
  I0703 13:21:18.566944 21 controller_revision.go:246] ControllerRevision "e2e-stx2x-daemon-set-7f56cfdd5c" has revision 3
  STEP: Deleting DaemonSet "e2e-stx2x-daemon-set" @ 07/03/24 13:21:18.585
  STEP: deleting DaemonSet.extensions e2e-stx2x-daemon-set in namespace controllerrevisions-7284, will wait for the garbage collector to delete the pods @ 07/03/24 13:21:18.585
  I0703 13:21:18.664414 21 resources.go:139] Deleting DaemonSet.extensions e2e-stx2x-daemon-set took: 22.021039ms
  I0703 13:21:18.866620 21 resources.go:163] Terminating DaemonSet.extensions e2e-stx2x-daemon-set pods took: 202.203812ms
  E0703 13:21:19.163926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:20.159440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:21.159533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:21.476816 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset e2e-stx2x-daemon-set: 0
  I0703 13:21:21.482971 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset e2e-stx2x-daemon-set
  I0703 13:21:21.490077 21 controller_revision.go:73] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"25141"},"items":null}

  I0703 13:21:21.498718 21 controller_revision.go:78] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"25141"},"items":null}

  I0703 13:21:21.530529 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "controllerrevisions-7284" for this suite. @ 07/03/24 13:21:21.54
• [8.751 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable in multiple volumes in the same pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:424
  STEP: Creating a kubernetes client @ 07/03/24 13:21:21.551
  I0703 13:21:21.551540 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 13:21:21.553
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:21:21.594
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:21:21.614
  STEP: Creating configMap with name configmap-test-volume-670d47d9-ab6e-409c-a880-530651167a63 @ 07/03/24 13:21:21.634
  STEP: Creating a pod to test consume configMaps @ 07/03/24 13:21:21.647
  E0703 13:21:22.159960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:23.160131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:24.160920      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:25.160714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:21:25.699
  I0703 13:21:25.709545 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-841a6584-cf99-400c-b8cf-780e78d16814 container configmap-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 13:21:25.727
  I0703 13:21:25.779734 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8860" for this suite. @ 07/03/24 13:21:25.787
• [4.247 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should get and update a ReplicationController scale [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:425
  STEP: Creating a kubernetes client @ 07/03/24 13:21:25.8
  I0703 13:21:25.800426 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replication-controller @ 07/03/24 13:21:25.801
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:21:25.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:21:25.956
  STEP: Creating ReplicationController "e2e-rc-r9t9b" @ 07/03/24 13:21:25.962
  I0703 13:21:25.994688 21 rc.go:792] Get Replication Controller "e2e-rc-r9t9b" to confirm replicas
  E0703 13:21:26.160704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:26.995050 21 rc.go:792] Get Replication Controller "e2e-rc-r9t9b" to confirm replicas
  I0703 13:21:27.020606 21 rc.go:801] Found 1 replicas for "e2e-rc-r9t9b" replication controller
  STEP: Getting scale subresource for ReplicationController "e2e-rc-r9t9b" @ 07/03/24 13:21:27.02
  STEP: Updating a scale subresource @ 07/03/24 13:21:27.038
  STEP: Verifying replicas where modified for replication controller "e2e-rc-r9t9b" @ 07/03/24 13:21:27.11
  I0703 13:21:27.110376 21 rc.go:792] Get Replication Controller "e2e-rc-r9t9b" to confirm replicas
  E0703 13:21:27.161792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:28.111004 21 rc.go:792] Get Replication Controller "e2e-rc-r9t9b" to confirm replicas
  I0703 13:21:28.122757 21 rc.go:801] Found 2 replicas for "e2e-rc-r9t9b" replication controller
  I0703 13:21:28.122885 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-1050" for this suite. @ 07/03/24 13:21:28.142
• [2.356 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Probing container should be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:135
  STEP: Creating a kubernetes client @ 07/03/24 13:21:28.156
  I0703 13:21:28.156912 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 13:21:28.158
  E0703 13:21:28.162119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:21:28.453
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:21:28.478
  STEP: Creating pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615 @ 07/03/24 13:21:28.509
  E0703 13:21:29.162458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:30.163382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:31.164840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:32.165130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 13:21:32.616
  I0703 13:21:32.639277 21 container_probe.go:1749] Initial restart count of pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 is 0
  I0703 13:21:32.642805 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:33.165158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:34.165530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:34.646207 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:35.165809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:36.165963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:36.650023 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:37.165984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:38.166361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:38.654254 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:39.167234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:40.170128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:40.657877 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:41.170897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:42.171502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:42.684080 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:43.173701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:44.175245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:44.688583 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:45.175589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:46.179731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:46.693137 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:47.177818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:48.182593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:48.701025 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:49.183251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:50.183457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:50.705223 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:51.186850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:52.186944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:52.711761 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:53.187043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:54.198030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:54.729474 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:55.189194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:56.189611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:56.739328 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:57.190371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:21:58.190454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:21:58.743859 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:21:59.190551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:00.190701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:00.770489 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:01.191591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:02.192098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:02.792387 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:03.192273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:04.192396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:04.798838 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:05.193029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:06.193939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:06.807876 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:07.194670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:08.195501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:08.813533 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:09.196153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:10.204471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:10.816850 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:11.206324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:12.207211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:12.821372 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:13.207336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:14.207831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:14.824057 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:15.208665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:16.208786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:16.829443 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:17.209082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:18.209235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:18.835238 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  E0703 13:22:19.210457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:20.214024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:20.840434 21 container_probe.go:1759] Get pod busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 in namespace container-probe-8615
  I0703 13:22:20.840481 21 container_probe.go:1763] Restart count of pod container-probe-8615/busybox-5bfd2272-cf66-4e67-a9a3-148a99f9ee72 is now 1 (48.20104024s elapsed)
  STEP: deleting the pod @ 07/03/24 13:22:20.84
  I0703 13:22:20.858565 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-8615" for this suite. @ 07/03/24 13:22:20.867
• [52.718 seconds]
------------------------------
[sig-node] RuntimeClass should reject a Pod requesting a non-existent RuntimeClass [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:57
  STEP: Creating a kubernetes client @ 07/03/24 13:22:20.875
  I0703 13:22:20.875408 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename runtimeclass @ 07/03/24 13:22:20.876
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:22:20.962
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:22:20.971
  I0703 13:22:21.043773 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-8812" for this suite. @ 07/03/24 13:22:21.069
• [0.216 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to deny custom resource creation, update and deletion [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:221
  STEP: Creating a kubernetes client @ 07/03/24 13:22:21.091
  I0703 13:22:21.091673 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:22:21.092
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:22:21.194
  E0703 13:22:21.211397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:22:21.213
  STEP: Setting up server cert @ 07/03/24 13:22:21.404
  E0703 13:22:22.222826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:22:22.817
  STEP: Deploying the webhook pod @ 07/03/24 13:22:22.827
  STEP: Wait for the deployment to be ready @ 07/03/24 13:22:22.868
  I0703 13:22:22.913780 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:22:23.223210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:24.228037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:24.941922 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:22:25.227511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:26.228313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:26.958265 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:22:27.229025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:28.229277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:28.956743 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 23, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:22:29.229841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:30.230488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:22:30.946
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:22:30.973
  E0703 13:22:31.230777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:31.973737 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0703 13:22:31.988575 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 13:22:32.231050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the custom resource webhook via the AdmissionRegistration API @ 07/03/24 13:22:32.532
  STEP: Creating a custom resource that should be denied by the webhook @ 07/03/24 13:22:32.583
  E0703 13:22:33.233913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:34.241030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a custom resource whose deletion would be denied by the webhook @ 07/03/24 13:22:34.671
  STEP: Updating the custom resource with disallowed data should be denied @ 07/03/24 13:22:34.749
  STEP: Deleting the custom resource should be denied @ 07/03/24 13:22:34.808
  STEP: Remove the offending key and value from the custom resource data @ 07/03/24 13:22:34.889
  STEP: Deleting the updated custom resource should be successful @ 07/03/24 13:22:34.998
  E0703 13:22:35.234265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:36.138682 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3242" for this suite. @ 07/03/24 13:22:36.172
  STEP: Destroying namespace "webhook-markers-4324" for this suite. @ 07/03/24 13:22:36.185
• [15.107 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject validating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:817
  STEP: Creating a kubernetes client @ 07/03/24 13:22:36.199
  I0703 13:22:36.199962 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:22:36.201
  E0703 13:22:36.239019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:22:36.311
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:22:36.349
  STEP: Setting up server cert @ 07/03/24 13:22:36.546
  E0703 13:22:37.236483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:22:37.525
  STEP: Deploying the webhook pod @ 07/03/24 13:22:37.612
  STEP: Wait for the deployment to be ready @ 07/03/24 13:22:37.737
  I0703 13:22:37.951999 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:22:38.237303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:39.237409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:40.133547 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:22:40.238102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:41.238349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:42.155670 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 37, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 37, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 22, 38, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 22, 37, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:22:42.239957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:43.240083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:22:44.145
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:22:44.162
  E0703 13:22:44.241021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:45.162902 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a validating webhook with match conditions @ 07/03/24 13:22:45.179
  E0703 13:22:45.245177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:45.325562 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3688" for this suite. @ 07/03/24 13:22:45.36
  STEP: Destroying namespace "webhook-markers-6880" for this suite. @ 07/03/24 13:22:45.373
• [9.192 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Security Context should support pod.Spec.SecurityContext.RunAsUser And pod.Spec.SecurityContext.RunAsGroup [LinuxOnly] [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/node/security_context.go:135
  STEP: Creating a kubernetes client @ 07/03/24 13:22:45.393
  I0703 13:22:45.393736 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename security-context @ 07/03/24 13:22:45.394
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:22:45.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:22:45.476
  STEP: Creating a pod to test pod.Spec.SecurityContext.RunAsUser @ 07/03/24 13:22:45.535
  E0703 13:22:46.245264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:47.245380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:48.245733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:49.246027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:22:49.609
  I0703 13:22:49.612300 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod security-context-c09ea005-61bd-437d-ac0c-f954e31d7d44 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:22:49.619
  I0703 13:22:49.648868 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "security-context-7361" for this suite. @ 07/03/24 13:22:49.653
• [4.284 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should apply an update to a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:372
  STEP: Creating a kubernetes client @ 07/03/24 13:22:49.678
  I0703 13:22:49.678137 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename namespaces @ 07/03/24 13:22:49.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:22:49.754
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:22:49.759
  STEP: Updating Namespace "namespaces-5894" @ 07/03/24 13:22:49.771
  I0703 13:22:49.791367 21 namespace.go:389] Namespace "namespaces-5894" now has labels, map[string]string{"e2e-framework":"namespaces", "e2e-run":"1bfbf3f8-00da-47c6-ae6e-0b1d8103a11e", "kubernetes.io/metadata.name":"namespaces-5894", "namespaces-5894":"updated", "pod-security.kubernetes.io/audit":"baseline", "pod-security.kubernetes.io/enforce":"baseline", "pod-security.kubernetes.io/warn":"baseline"}
  I0703 13:22:49.791720 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-5894" for this suite. @ 07/03/24 13:22:49.798
• [0.134 seconds]
------------------------------
[sig-api-machinery] CustomResourceDefinition resources [Privileged:ClusterAdmin] custom resource defaulting for requests and from storage works [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/custom_resource_definition.go:270
  STEP: Creating a kubernetes client @ 07/03/24 13:22:49.812
  I0703 13:22:49.812232 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename custom-resource-definition @ 07/03/24 13:22:49.813
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:22:49.945
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:22:49.967
  I0703 13:22:49.992758 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 13:22:50.246157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:51.247087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:52.258375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:53.247988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:22:53.581988 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "custom-resource-definition-2331" for this suite. @ 07/03/24 13:22:53.614
• [3.841 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected combined should project all components that make up the projection API [Projection] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_combined.go:44
  STEP: Creating a kubernetes client @ 07/03/24 13:22:53.653
  I0703 13:22:53.653965 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 13:22:53.655
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:22:53.891
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:22:53.918
  STEP: Creating configMap with name configmap-projected-all-test-volume-a54c1df3-c032-482f-a9f4-49f2fa14a302 @ 07/03/24 13:22:53.974
  STEP: Creating secret with name secret-projected-all-test-volume-8fd35e99-9490-4a6c-b773-3de975dd820f @ 07/03/24 13:22:53.998
  STEP: Creating a pod to test Check all projections for projected volume plugin @ 07/03/24 13:22:54.057
  E0703 13:22:54.253390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:55.254443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:56.255283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:57.257588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:58.258431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:22:59.258586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:23:00.218
  I0703 13:23:00.238009 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod projected-volume-661f30e1-34ef-47a7-a850-00466bcc08ea container projected-all-volume-test: <nil>
  E0703 13:23:00.259244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/03/24 13:23:00.271
  I0703 13:23:00.326763 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-9871" for this suite. @ 07/03/24 13:23:00.332
• [6.690 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:100
  STEP: Creating a kubernetes client @ 07/03/24 13:23:00.345
  I0703 13:23:00.345600 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:23:00.346
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:23:00.4
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:23:00.412
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/03/24 13:23:00.415
  E0703 13:23:01.259375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:02.282871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:03.260168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:04.261290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:05.262166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:06.262506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:23:06.467
  I0703 13:23:06.470654 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-65ede9f6-4692-4adb-8a6e-586f790ceac1 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:23:06.482
  I0703 13:23:06.508986 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-6206" for this suite. @ 07/03/24 13:23:06.514
• [6.182 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] EndpointSlice should support creating EndpointSlice API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/endpointslice.go:356
  STEP: Creating a kubernetes client @ 07/03/24 13:23:06.528
  I0703 13:23:06.528239 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename endpointslice @ 07/03/24 13:23:06.529
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:23:06.622
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:23:06.631
  STEP: getting /apis @ 07/03/24 13:23:06.635
  STEP: getting /apis/discovery.k8s.io @ 07/03/24 13:23:06.641
  STEP: getting /apis/discovery.k8s.iov1 @ 07/03/24 13:23:06.645
  STEP: creating @ 07/03/24 13:23:06.646
  STEP: getting @ 07/03/24 13:23:06.706
  STEP: listing @ 07/03/24 13:23:06.71
  STEP: watching @ 07/03/24 13:23:06.725
  I0703 13:23:06.748780 21 endpointslice.go:447] starting watch
  STEP: cluster-wide listing @ 07/03/24 13:23:06.752
  STEP: cluster-wide watching @ 07/03/24 13:23:06.768
  I0703 13:23:06.768901 21 endpointslice.go:459] starting watch
  STEP: patching @ 07/03/24 13:23:06.778
  STEP: updating @ 07/03/24 13:23:06.789
  I0703 13:23:06.831170 21 endpointslice.go:482] waiting for watch events with expected annotations
  I0703 13:23:06.831230 21 endpointslice.go:495] saw patched and updated annotations
  STEP: deleting @ 07/03/24 13:23:06.831
  STEP: deleting a collection @ 07/03/24 13:23:06.865
  I0703 13:23:06.903829 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "endpointslice-2076" for this suite. @ 07/03/24 13:23:06.909
• [0.393 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should get a host IP [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:205
  STEP: Creating a kubernetes client @ 07/03/24 13:23:06.931
  I0703 13:23:06.931859 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 13:23:06.932
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:23:07.069
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:23:07.087
  STEP: creating pod @ 07/03/24 13:23:07.117
  E0703 13:23:07.262832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:08.266451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:09.268793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:10.268845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:23:11.195223 21 pods.go:83] Pod pod-hostip-0a539c82-389f-49fb-9cd3-ec0bece97510 has hostIP: 172.31.5.183
  I0703 13:23:11.195491 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-6674" for this suite. @ 07/03/24 13:23:11.203
• [4.298 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Container Runtime blackbox test when starting a container that exits should run with the expected status [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:52
  STEP: Creating a kubernetes client @ 07/03/24 13:23:11.23
  I0703 13:23:11.230148 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-runtime @ 07/03/24 13:23:11.231
  E0703 13:23:11.268870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:23:11.314
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:23:11.328
  STEP: Container 'terminate-cmd-rpa': should get the expected 'RestartCount' @ 07/03/24 13:23:11.421
  E0703 13:23:12.270503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:13.270609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:14.270691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:15.270832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:16.274523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:17.276264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:18.276410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:19.276919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:20.283479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:21.283651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:22.283691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:23.283992      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:24.284205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:25.285517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:26.285747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:27.286563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:28.287471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:29.288487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:30.288711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:31.290121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Phase' @ 07/03/24 13:23:31.69
  STEP: Container 'terminate-cmd-rpa': should get the expected 'Ready' condition @ 07/03/24 13:23:31.713
  STEP: Container 'terminate-cmd-rpa': should get the expected 'State' @ 07/03/24 13:23:31.749
  STEP: Container 'terminate-cmd-rpa': should be possible to delete @ 07/03/24 13:23:31.749
  STEP: Container 'terminate-cmd-rpof': should get the expected 'RestartCount' @ 07/03/24 13:23:31.901
  E0703 13:23:32.290758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:33.291491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:34.294796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:35.295789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Phase' @ 07/03/24 13:23:35.983
  E0703 13:23:36.296251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpof': should get the expected 'Ready' condition @ 07/03/24 13:23:36.992
  STEP: Container 'terminate-cmd-rpof': should get the expected 'State' @ 07/03/24 13:23:37.026
  STEP: Container 'terminate-cmd-rpof': should be possible to delete @ 07/03/24 13:23:37.026
  STEP: Container 'terminate-cmd-rpn': should get the expected 'RestartCount' @ 07/03/24 13:23:37.072
  E0703 13:23:37.296895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Phase' @ 07/03/24 13:23:38.113
  E0703 13:23:38.297787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:39.298051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:40.299232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Container 'terminate-cmd-rpn': should get the expected 'Ready' condition @ 07/03/24 13:23:41.138
  STEP: Container 'terminate-cmd-rpn': should get the expected 'State' @ 07/03/24 13:23:41.15
  STEP: Container 'terminate-cmd-rpn': should be possible to delete @ 07/03/24 13:23:41.159
  I0703 13:23:41.270617 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-7174" for this suite. @ 07/03/24 13:23:41.292
  E0703 13:23:41.299301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [30.084 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should serve multiport endpoints from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:850
  STEP: Creating a kubernetes client @ 07/03/24 13:23:41.314
  I0703 13:23:41.315071 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:23:41.316
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:23:41.41
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:23:41.418
  STEP: creating service multi-endpoint-test in namespace services-1283 @ 07/03/24 13:23:41.433
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1283 to expose endpoints map[] @ 07/03/24 13:23:41.476
  I0703 13:23:41.576359 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1283 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-1283 @ 07/03/24 13:23:41.576
  E0703 13:23:42.302430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:43.303505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:44.304209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:45.310583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1283 to expose endpoints map[pod1:[100]] @ 07/03/24 13:23:45.701
  I0703 13:23:45.713858 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1283 exposes endpoints map[pod1:[100]]
  STEP: Creating pod pod2 in namespace services-1283 @ 07/03/24 13:23:45.714
  E0703 13:23:46.310958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:47.311279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:48.311870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:49.312638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1283 to expose endpoints map[pod1:[100] pod2:[101]] @ 07/03/24 13:23:49.736
  I0703 13:23:49.756128 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1283 exposes endpoints map[pod1:[100] pod2:[101]]
  STEP: Checking if the Service forwards traffic to pods @ 07/03/24 13:23:49.756
  I0703 13:23:49.756229 21 resource.go:361] Creating new exec pod
  E0703 13:23:50.312723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:51.313803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:52.316184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:53.316363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:54.316408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:23:54.819171 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-1283 exec execpodsb7ls -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 80'
  I0703 13:23:55.158088 21 builder.go:146] stderr: "+ nc -v -t -w 2 multi-endpoint-test 80\n+ echo hostName\nConnection to multi-endpoint-test 80 port [tcp/http] succeeded!\n"
  I0703 13:23:55.158142 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 13:23:55.158226 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-1283 exec execpodsb7ls -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.136.69 80'
  E0703 13:23:55.318496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:23:55.425818 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.136.69 80\nConnection to 10.43.136.69 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0703 13:23:55.425873 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 13:23:55.425962 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-1283 exec execpodsb7ls -- /bin/sh -x -c echo hostName | nc -v -t -w 2 multi-endpoint-test 81'
  I0703 13:23:55.776057 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 multi-endpoint-test 81\nConnection to multi-endpoint-test 81 port [tcp/*] succeeded!\n"
  I0703 13:23:55.776215 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 13:23:55.776316 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-1283 exec execpodsb7ls -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.136.69 81'
  I0703 13:23:56.288055 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.136.69 81\nConnection to 10.43.136.69 81 port [tcp/*] succeeded!\n"
  I0703 13:23:56.288116 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-1283 @ 07/03/24 13:23:56.288
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1283 to expose endpoints map[pod2:[101]] @ 07/03/24 13:23:56.31
  E0703 13:23:56.319449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:23:56.360589 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1283 exposes endpoints map[pod2:[101]]
  STEP: Deleting pod pod2 in namespace services-1283 @ 07/03/24 13:23:56.36
  STEP: waiting up to 3m0s for service multi-endpoint-test in namespace services-1283 to expose endpoints map[] @ 07/03/24 13:23:56.427
  E0703 13:23:57.319620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:23:57.515350 21 service.go:4258] successfully validated that service multi-endpoint-test in namespace services-1283 exposes endpoints map[]
  I0703 13:23:57.571654 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-1283" for this suite. @ 07/03/24 13:23:57.587
• [16.285 seconds]
------------------------------
SSSS
------------------------------
[sig-network] Services should serve endpoints on same port and different protocols [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3656
  STEP: Creating a kubernetes client @ 07/03/24 13:23:57.599
  I0703 13:23:57.599632 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:23:57.6
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:23:57.677
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:23:57.696
  STEP: creating service multiprotocol-test in namespace services-6450 @ 07/03/24 13:23:57.707
  STEP: creating pod pod1 in namespace services-6450 @ 07/03/24 13:23:57.724
  STEP: Creating pod pod1 in namespace services-6450 @ 07/03/24 13:23:57.725
  E0703 13:23:58.319732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:23:59.319830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:00.320868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:01.324237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service multiprotocol-test in namespace services-6450 to expose endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]] @ 07/03/24 13:24:01.809
  I0703 13:24:01.876317 21 service.go:4351] successfully validated that service multiprotocol-test in namespace services-6450 exposes endpoints map[pod1:[{tcp-port 0 80 TCP } {udp-port 0 80 UDP }]]
  STEP: Checking if the Service forwards traffic to the TCP and UDP port @ 07/03/24 13:24:01.876
  I0703 13:24:01.876681 21 resource.go:361] Creating new exec pod
  E0703 13:24:02.328351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:03.342368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:04.341183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:05.342215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:05.982140 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:06.352014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:07.347392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:08.314906 21 builder.go:135] rc: 1
  I0703 13:24:08.315069 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.213.52 80
  nc: connect to 10.43.213.52 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 13:24:08.315181 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:08.348285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:09.348406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:10.348524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:10.649855 21 builder.go:135] rc: 1
  I0703 13:24:10.650023 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.213.52 80
  + echo hostName
  nc: connect to 10.43.213.52 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 13:24:10.650340 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:11.349367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:12.350985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:13.072908 21 builder.go:135] rc: 1
  I0703 13:24:13.073036 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.213.52 80
  + echo hostName
  nc: connect to 10.43.213.52 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 13:24:13.073135 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:13.351124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:14.351554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:15.351840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:15.638907 21 builder.go:135] rc: 1
  I0703 13:24:15.638984 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.213.52 80
  nc: connect to 10.43.213.52 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 13:24:15.639079 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  I0703 13:24:15.941899 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.213.52 80\nConnection to 10.43.213.52 80 port [tcp/http] succeeded!\n"
  I0703 13:24:15.941951 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 13:24:15.942035 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.213.52 80'
  E0703 13:24:16.352888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:17.355199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:18.355376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:19.355482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:20.225704 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.213.52 80\nConnection to 10.43.213.52 80 port [udp/*] succeeded!\n"
  I0703 13:24:20.225820 21 builder.go:147] stdout: "pod1"
  STEP: Checking if the Service forwards traffic to TCP only @ 07/03/24 13:24:20.225
  I0703 13:24:20.245479 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:20.357587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:20.569391 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.213.52 80\nConnection to 10.43.213.52 80 port [tcp/http] succeeded!\n"
  I0703 13:24:20.569441 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 13:24:20.569547 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.213.52 80'
  E0703 13:24:21.357978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:22.358961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:23.359604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:24.360259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:24.815460 21 builder.go:146] stderr: "+ nc -v -u -w 2 10.43.213.52 80\n+ echo hostName\nConnection to 10.43.213.52 80 port [udp/*] succeeded!\n"
  I0703 13:24:24.815714 21 builder.go:147] stdout: ""
  I0703 13:24:24.815805 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.213.52 80'
  E0703 13:24:25.361595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:26.366113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:27.366735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:28.367427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:29.079484 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.213.52 80\nConnection to 10.43.213.52 80 port [udp/*] succeeded!\n"
  I0703 13:24:29.079541 21 builder.go:147] stdout: ""
  STEP: Checking if the Service forwards traffic to UDP only @ 07/03/24 13:24:29.079
  I0703 13:24:29.100444 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -u -w 2 10.43.213.52 80'
  E0703 13:24:29.368282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:30.368808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:31.370593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:32.371642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:33.373029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:33.406431 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -u -w 2 10.43.213.52 80\nConnection to 10.43.213.52 80 port [udp/*] succeeded!\n"
  I0703 13:24:33.406478 21 builder.go:147] stdout: "pod1"
  I0703 13:24:33.406571 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:34.373071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:35.374041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:35.735235 21 builder.go:135] rc: 1
  I0703 13:24:35.735313 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.213.52 80
  + echo hostName
  nc: connect to 10.43.213.52 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 13:24:35.735407 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:36.377167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:37.377819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:38.090231 21 builder.go:135] rc: 1
  I0703 13:24:38.090356 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80:
  Command stdout:

  stderr:
  + nc -v -t -w 2 10.43.213.52 80
  + echo hostName
  nc: connect to 10.43.213.52 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 13:24:38.090452 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80'
  E0703 13:24:38.378159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:39.378686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:24:40.350239 21 builder.go:135] rc: 1
  I0703 13:24:40.350327 21 util.go:239] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-6450 exec execpod5hpln -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.213.52 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 10.43.213.52 80
  nc: connect to 10.43.213.52 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 13:24:40.350494 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-6450" for this suite. @ 07/03/24 13:24:40.356
• [42.771 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should detect unknown and duplicate fields of a typed object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:64
  STEP: Creating a kubernetes client @ 07/03/24 13:24:40.371
  I0703 13:24:40.371140 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename field-validation @ 07/03/24 13:24:40.371
  E0703 13:24:40.379019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:24:40.526
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:24:40.571
  STEP: apply creating a deployment @ 07/03/24 13:24:40.61
  I0703 13:24:40.652640 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-7019" for this suite. @ 07/03/24 13:24:40.659
• [0.307 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] CustomResourceDefinition Watch [Privileged:ClusterAdmin] CustomResourceDefinition Watch watch on custom resource definition objects [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_watch.go:51
  STEP: Creating a kubernetes client @ 07/03/24 13:24:40.678
  I0703 13:24:40.678605 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-watch @ 07/03/24 13:24:40.679
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:24:40.786
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:24:40.837
  I0703 13:24:40.853618 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 13:24:41.379445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:42.380110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:43.380280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating first CR  @ 07/03/24 13:24:43.507
  I0703 13:24:43.600510 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-03T13:24:43Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-03T13:24:43Z]] name:name1 resourceVersion:26285 uid:d8899631-7c11-44f5-9de0-42b153f5a944] num:map[num1:9223372036854775807 num2:1000000]]}
  E0703 13:24:44.380365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:45.381981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:46.381884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:47.382180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:48.382466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:49.384918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:50.385579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:51.385713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:52.386421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:53.387532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating second CR @ 07/03/24 13:24:53.601
  I0703 13:24:53.607399 21 watch.go:431] Got : ADDED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-03T13:24:53Z generation:1 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-03T13:24:53Z]] name:name2 resourceVersion:26330 uid:6a96e783-de5b-45a3-977d-076ddd3529d6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0703 13:24:54.387966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:55.388655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:56.390470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:57.391926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:58.392215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:24:59.418659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:00.422538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:01.423950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:02.424604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:03.427735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying first CR @ 07/03/24 13:25:03.607
  I0703 13:25:03.614784 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-03T13:24:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-03T13:25:03Z]] name:name1 resourceVersion:26353 uid:d8899631-7c11-44f5-9de0-42b153f5a944] num:map[num1:9223372036854775807 num2:1000000]]}
  E0703 13:25:04.427811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:05.428060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:06.434812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:07.434514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:08.444011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:09.444368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:10.444504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:11.444674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:12.446268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:13.446467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Modifying second CR @ 07/03/24 13:25:13.618
  I0703 13:25:13.627432 21 watch.go:431] Got : MODIFIED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-03T13:24:53Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-03T13:25:13Z]] name:name2 resourceVersion:26374 uid:6a96e783-de5b-45a3-977d-076ddd3529d6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0703 13:25:14.447695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:15.448522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:16.448833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:17.448725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:18.450346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:19.451048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:20.451973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:21.452481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:22.452723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:23.452836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting first CR @ 07/03/24 13:25:23.627
  I0703 13:25:23.642569 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-03T13:24:43Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-03T13:25:03Z]] name:name1 resourceVersion:26396 uid:d8899631-7c11-44f5-9de0-42b153f5a944] num:map[num1:9223372036854775807 num2:1000000]]}
  E0703 13:25:24.456245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:25.453839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:26.454198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:27.454451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:28.455178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:29.455121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:30.455266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:31.457927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:32.459645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:33.459729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting second CR @ 07/03/24 13:25:33.643
  I0703 13:25:33.657514 21 watch.go:431] Got : DELETED &{map[apiVersion:mygroup.example.com/v1beta1 content:map[key:value] dummy:test kind:WishIHadChosenNoxu metadata:map[creationTimestamp:2024-07-03T13:24:53Z generation:2 managedFields:[map[apiVersion:mygroup.example.com/v1beta1 fieldsType:FieldsV1 fieldsV1:map[f:content:map[.:map[] f:key:map[]] f:dummy:map[] f:num:map[.:map[] f:num1:map[] f:num2:map[]]] manager:e2e.test operation:Update time:2024-07-03T13:25:13Z]] name:name2 resourceVersion:26418 uid:6a96e783-de5b-45a3-977d-076ddd3529d6] num:map[num1:9223372036854775807 num2:1000000]]}
  E0703 13:25:34.460166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:35.460935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:36.461422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:37.462258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:38.462522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:39.462610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:40.462735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:41.462915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:42.463639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:43.466455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:25:44.189288 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-watch-9014" for this suite. @ 07/03/24 13:25:44.202
• [63.542 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment RollingUpdateDeployment should delete old pods and create new ones [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:105
  STEP: Creating a kubernetes client @ 07/03/24 13:25:44.221
  I0703 13:25:44.221049 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 13:25:44.221
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:25:44.268
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:25:44.292
  I0703 13:25:44.314801 21 deployment.go:754] Creating replica set "test-rolling-update-controller" (going to be adopted)
  I0703 13:25:44.385286 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0703 13:25:44.469764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:45.470026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:46.470134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:47.470440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:48.470642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:25:49.395575 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/03/24 13:25:49.395
  I0703 13:25:49.395849 21 deployment.go:763] Creating deployment "test-rolling-update-deployment"
  I0703 13:25:49.417272 21 deployment.go:769] Ensuring deployment "test-rolling-update-deployment" gets the next revision from the one the adopted replica set "test-rolling-update-controller" has
  I0703 13:25:49.478245 21 deployment.go:222] new replicaset for deployment "test-rolling-update-deployment" is yet to be created
  E0703 13:25:49.478627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:50.478939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:51.479960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:25:51.536011 21 deployment.go:773] Ensuring status for deployment "test-rolling-update-deployment" is the expected
  I0703 13:25:51.545818 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:2, UpdatedReplicas:1, ReadyReplicas:1, AvailableReplicas:1, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 25, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 25, 49, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 25, 49, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 25, 49, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:25:52.480794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:53.481437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:25:53.550262 21 deployment.go:778] Ensuring deployment "test-rolling-update-deployment" has one old replica set (the one it adopted)
  I0703 13:25:53.569572 21 deployment.go:633] Deployment "test-rolling-update-deployment":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-deployment",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6719",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "fd9ad5c9-4027-46cf-a65d-a11bf03e190d",
      ResourceVersion: (string) (len=5) "26515",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=1) {
        (string) (len=4) "name": (string) (len=10) "sample-pod"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=637) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 7d 7d 2c  |},"f:name":{}}},|
              00000030  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 70 72 6f  |"f:spec":{"f:pro|
              00000040  67 72 65 73 73 44 65 61  64 6c 69 6e 65 53 65 63  |gressDeadlineSec|
              00000050  6f 6e 64 73 22 3a 7b 7d  2c 22 66 3a 72 65 70 6c  |onds":{},"f:repl|
              00000060  69 63 61 73 22 3a 7b 7d  2c 22 66 3a 72 65 76 69  |icas":{},"f:revi|
              00000070  73 69 6f 6e 48 69 73 74  6f 72 79 4c 69 6d 69 74  |sionHistoryLimit|
              00000080  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000090  22 3a 7b 7d 2c 22 66 3a  73 74 72 61 74 65 67 79  |":{},"f:strategy|
              000000a0  22 3a 7b 22 66 3a 72 6f  6c 6c 69 6e 67 55 70 64  |":{"f:rollingUpd|
              000000b0  61 74 65 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |ate":{".":{},"f:|
              000000c0  6d 61 78 53 75 72 67 65  22 3a 7b 7d 2c 22 66 3a  |maxSurge":{},"f:|
              000000d0  6d 61 78 55 6e 61 76 61  69 6c 61 62 6c 65 22 3a  |maxUnavailable":|
              000000e0  7b 7d 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |{}},"f:type":{}}|
              000000f0  2c 22 66 3a 74 65 6d 70  6c 61 74 65 22 3a 7b 22  |,"f:template":{"|
              00000100  66 3a 6d 65 74 61 64 61  74 61 22 3a 7b 22 66 3a  |f:metadata":{"f:|
              00000110  6c 61 62 65 6c 73 22 3a  7b 22 2e 22 3a 7b 7d 2c  |labels":{".":{},|
              00000120  22 66 3a 6e 61 6d 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:name":{}}},"f|
              00000130  3a 73 70 65 63 22 3a 7b  22 66 3a 63 6f 6e 74 61  |:spec":{"f:conta|
              00000140  69 6e 65 72 73 22 3a 7b  22 6b 3a 7b 5c 22 6e 61  |iners":{"k:{\"na|
              00000150  6d 65 5c 22 3a 5c 22 61  67 6e 68 6f 73 74 5c 22  |me\":\"agnhost\"|
              00000160  7d 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 69 6d  |}":{".":{},"f:im|
              00000170  61 67 65 22 3a 7b 7d 2c  22 66 3a 69 6d 61 67 65  |age":{},"f:image|
              00000180  50 75 6c 6c 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |PullPolicy":{},"|
              00000190  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 72 65  |f:name":{},"f:re|
              000001a0  73 6f 75 72 63 65 73 22  3a 7b 7d 2c 22 66 3a 73  |sources":{},"f:s|
              000001b0  65 63 75 72 69 74 79 43  6f 6e 74 65 78 74 22 3a  |ecurityContext":|
              000001c0  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              000001d0  6e 4d 65 73 73 61 67 65  50 61 74 68 22 3a 7b 7d  |nMessagePath":{}|
              000001e0  2c 22 66 3a 74 65 72 6d  69 6e 61 74 69 6f 6e 4d  |,"f:terminationM|
              000001f0  65 73 73 61 67 65 50 6f  6c 69 63 79 22 3a 7b 7d  |essagePolicy":{}|
              00000200  7d 7d 2c 22 66 3a 64 6e  73 50 6f 6c 69 63 79 22  |}},"f:dnsPolicy"|
              00000210  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              00000220  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              00000230  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000270  63 6f 6e 64 73 22 3a 7b  7d 7d 7d 7d 7d           |conds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=514) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 22  2e 22 3a 7b 7d 2c 22 6b  |ions":{".":{},"k|
              00000090  3a 7b 5c 22 74 79 70 65  5c 22 3a 5c 22 41 76 61  |:{\"type\":\"Ava|
              000000a0  69 6c 61 62 6c 65 5c 22  7d 22 3a 7b 22 2e 22 3a  |ilable\"}":{".":|
              000000b0  7b 7d 2c 22 66 3a 6c 61  73 74 54 72 61 6e 73 69  |{},"f:lastTransi|
              000000c0  74 69 6f 6e 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |tionTime":{},"f:|
              000000d0  6c 61 73 74 55 70 64 61  74 65 54 69 6d 65 22 3a  |lastUpdateTime":|
              000000e0  7b 7d 2c 22 66 3a 6d 65  73 73 61 67 65 22 3a 7b  |{},"f:message":{|
              000000f0  7d 2c 22 66 3a 72 65 61  73 6f 6e 22 3a 7b 7d 2c  |},"f:reason":{},|
              00000100  22 66 3a 73 74 61 74 75  73 22 3a 7b 7d 2c 22 66  |"f:status":{},"f|
              00000110  3a 74 79 70 65 22 3a 7b  7d 7d 2c 22 6b 3a 7b 5c  |:type":{}},"k:{\|
              00000120  22 74 79 70 65 5c 22 3a  5c 22 50 72 6f 67 72 65  |"type\":\"Progre|
              00000130  73 73 69 6e 67 5c 22 7d  22 3a 7b 22 2e 22 3a 7b  |ssing\"}":{".":{|
              00000140  7d 2c 22 66 3a 6c 61 73  74 54 72 61 6e 73 69 74  |},"f:lastTransit|
              00000150  69 6f 6e 54 69 6d 65 22  3a 7b 7d 2c 22 66 3a 6c  |ionTime":{},"f:l|
              00000160  61 73 74 55 70 64 61 74  65 54 69 6d 65 22 3a 7b  |astUpdateTime":{|
              00000170  7d 2c 22 66 3a 6d 65 73  73 61 67 65 22 3a 7b 7d  |},"f:message":{}|
              00000180  2c 22 66 3a 72 65 61 73  6f 6e 22 3a 7b 7d 2c 22  |,"f:reason":{},"|
              00000190  66 3a 73 74 61 74 75 73  22 3a 7b 7d 2c 22 66 3a  |f:status":{},"f:|
              000001a0  74 79 70 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 6f 62  |type":{}}},"f:ob|
              000001b0  73 65 72 76 65 64 47 65  6e 65 72 61 74 69 6f 6e  |servedGeneration|
              000001c0  22 3a 7b 7d 2c 22 66 3a  72 65 61 64 79 52 65 70  |":{},"f:readyRep|
              000001d0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 72 65 70  |licas":{},"f:rep|
              000001e0  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 75 70 64  |licas":{},"f:upd|
              000001f0  61 74 65 64 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |atedReplicas":{}|
              00000200  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=1) {
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=1) {
            (string) (len=4) "name": (string) (len=10) "sample-pod"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=2) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=9) "Available",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=24) "MinimumReplicasAvailable",
          Message: (string) (len=36) "Deployment has minimum availability."
        },
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=11) "Progressing",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) (len=22) "NewReplicaSetAvailable",
          Message: (string) (len=83) "ReplicaSet \"test-rolling-update-deployment-6f4b778cd6\" has successfully progressed."
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0703 13:25:53.621644 21 deployment.go:39] New ReplicaSet "test-rolling-update-deployment-6f4b778cd6" of Deployment "test-rolling-update-deployment":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6719",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "2fa3eb14-7b67-45a7-ae42-ea5b22840a86",
      ResourceVersion: (string) (len=5) "26504",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305833"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fd9ad5c9-4027-46cf-a65d-a11bf03e190d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=783) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 6e 61 6d  65 22 3a 7b 7d 2c 22 66  |},"f:name":{},"f|
              000000d0  3a 70 6f 64 2d 74 65 6d  70 6c 61 74 65 2d 68 61  |:pod-template-ha|
              000000e0  73 68 22 3a 7b 7d 7d 2c  22 66 3a 6f 77 6e 65 72  |sh":{}},"f:owner|
              000000f0  52 65 66 65 72 65 6e 63  65 73 22 3a 7b 22 2e 22  |References":{"."|
              00000100  3a 7b 7d 2c 22 6b 3a 7b  5c 22 75 69 64 5c 22 3a  |:{},"k:{\"uid\":|
              00000110  5c 22 66 64 39 61 64 35  63 39 2d 34 30 32 37 2d  |\"fd9ad5c9-4027-|
              00000120  34 36 63 66 2d 61 36 35  64 2d 61 31 31 62 66 30  |46cf-a65d-a11bf0|
              00000130  33 65 31 39 30 64 5c 22  7d 22 3a 7b 7d 7d 7d 2c  |3e190d\"}":{}}},|
              00000140  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 72 65 70  |"f:spec":{"f:rep|
              00000150  6c 69 63 61 73 22 3a 7b  7d 2c 22 66 3a 73 65 6c  |licas":{},"f:sel|
              00000160  65 63 74 6f 72 22 3a 7b  7d 2c 22 66 3a 74 65 6d  |ector":{},"f:tem|
              00000170  70 6c 61 74 65 22 3a 7b  22 66 3a 6d 65 74 61 64  |plate":{"f:metad|
              00000180  61 74 61 22 3a 7b 22 66  3a 6c 61 62 65 6c 73 22  |ata":{"f:labels"|
              00000190  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6e 61 6d 65  |:{".":{},"f:name|
              000001a0  22 3a 7b 7d 2c 22 66 3a  70 6f 64 2d 74 65 6d 70  |":{},"f:pod-temp|
              000001b0  6c 61 74 65 2d 68 61 73  68 22 3a 7b 7d 7d 7d 2c  |late-hash":{}}},|
              000001c0  22 66 3a 73 70 65 63 22  3a 7b 22 66 3a 63 6f 6e  |"f:spec":{"f:con|
              000001d0  74 61 69 6e 65 72 73 22  3a 7b 22 6b 3a 7b 5c 22  |tainers":{"k:{\"|
              000001e0  6e 61 6d 65 5c 22 3a 5c  22 61 67 6e 68 6f 73 74  |name\":\"agnhost|
              000001f0  5c 22 7d 22 3a 7b 22 2e  22 3a 7b 7d 2c 22 66 3a  |\"}":{".":{},"f:|
              00000200  69 6d 61 67 65 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |image":{},"f:ima|
              00000210  67 65 50 75 6c 6c 50 6f  6c 69 63 79 22 3a 7b 7d  |gePullPolicy":{}|
              00000220  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000230  72 65 73 6f 75 72 63 65  73 22 3a 7b 7d 2c 22 66  |resources":{},"f|
              00000240  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              00000250  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000260  69 6f 6e 4d 65 73 73 61  67 65 50 61 74 68 22 3a  |ionMessagePath":|
              00000270  7b 7d 2c 22 66 3a 74 65  72 6d 69 6e 61 74 69 6f  |{},"f:terminatio|
              00000280  6e 4d 65 73 73 61 67 65  50 6f 6c 69 63 79 22 3a  |nMessagePolicy":|
              00000290  7b 7d 7d 7d 2c 22 66 3a  64 6e 73 50 6f 6c 69 63  |{}}},"f:dnsPolic|
              000002a0  79 22 3a 7b 7d 2c 22 66  3a 72 65 73 74 61 72 74  |y":{},"f:restart|
              000002b0  50 6f 6c 69 63 79 22 3a  7b 7d 2c 22 66 3a 73 63  |Policy":{},"f:sc|
              000002c0  68 65 64 75 6c 65 72 4e  61 6d 65 22 3a 7b 7d 2c  |hedulerName":{},|
              000002d0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000002e0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000002f0  61 74 69 6f 6e 47 72 61  63 65 50 65 72 69 6f 64  |ationGracePeriod|
              00000300  53 65 63 6f 6e 64 73 22  3a 7b 7d 7d 7d 7d 7d     |Seconds":{}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=4) "name": (string) (len=10) "sample-pod",
          (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=7) "agnhost",
              Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 13:25:53.631523 21 deployment.go:44] All old ReplicaSets of Deployment "test-rolling-update-deployment":
  I0703 13:25:53.631809 21 deployment.go:47] (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=30) "test-rolling-update-controller",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-6719",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "a93b627d-c673-4c0e-b59c-7ec33be479a0",
      ResourceVersion: (string) (len=5) "26514",
      Generation: (int64) 2,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609944,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=3) "pod": (string) (len=5) "httpd"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=19) "3546343826724305832",
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=30) "test-rolling-update-deployment",
          UID: (types.UID) (len=36) "fd9ad5c9-4027-46cf-a65d-a11bf03e190d",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609944,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=533) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  2c 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |,"f:labels":{"."|
              00000060  3a 7b 7d 2c 22 66 3a 6e  61 6d 65 22 3a 7b 7d 2c  |:{},"f:name":{},|
              00000070  22 66 3a 70 6f 64 22 3a  7b 7d 7d 7d 2c 22 66 3a  |"f:pod":{}}},"f:|
              00000080  73 70 65 63 22 3a 7b 22  66 3a 73 65 6c 65 63 74  |spec":{"f:select|
              00000090  6f 72 22 3a 7b 7d 2c 22  66 3a 74 65 6d 70 6c 61  |or":{},"f:templa|
              000000a0  74 65 22 3a 7b 22 66 3a  6d 65 74 61 64 61 74 61  |te":{"f:metadata|
              000000b0  22 3a 7b 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |":{"f:labels":{"|
              000000c0  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              000000d0  7d 2c 22 66 3a 70 6f 64  22 3a 7b 7d 7d 7d 2c 22  |},"f:pod":{}}},"|
              000000e0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000f0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              00000100  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              00000110  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000120  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000130  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000140  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000150  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 74 65  |ources":{},"f:te|
              00000160  72 6d 69 6e 61 74 69 6f  6e 4d 65 73 73 61 67 65  |rminationMessage|
              00000170  50 61 74 68 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |Path":{},"f:term|
              00000180  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 6f  |inationMessagePo|
              00000190  6c 69 63 79 22 3a 7b 7d  7d 7d 2c 22 66 3a 64 6e  |licy":{}}},"f:dn|
              000001a0  73 50 6f 6c 69 63 79 22  3a 7b 7d 2c 22 66 3a 72  |sPolicy":{},"f:r|
              000001b0  65 73 74 61 72 74 50 6f  6c 69 63 79 22 3a 7b 7d  |estartPolicy":{}|
              000001c0  2c 22 66 3a 73 63 68 65  64 75 6c 65 72 4e 61 6d  |,"f:schedulerNam|
              000001d0  65 22 3a 7b 7d 2c 22 66  3a 73 65 63 75 72 69 74  |e":{},"f:securit|
              000001e0  79 43 6f 6e 74 65 78 74  22 3a 7b 7d 2c 22 66 3a  |yContext":{},"f:|
              000001f0  74 65 72 6d 69 6e 61 74  69 6f 6e 47 72 61 63 65  |terminationGrace|
              00000200  50 65 72 69 6f 64 53 65  63 6f 6e 64 73 22 3a 7b  |PeriodSeconds":{|
              00000210  7d 7d 7d 7d 7d                                    |}}}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=242) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 66 3a 64 65 70 6c 6f  79 6d 65 6e 74 2e 6b 75  |"f:deployment.ku|
              00000030  62 65 72 6e 65 74 65 73  2e 69 6f 2f 64 65 73 69  |bernetes.io/desi|
              00000040  72 65 64 2d 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |red-replicas":{}|
              00000050  2c 22 66 3a 64 65 70 6c  6f 79 6d 65 6e 74 2e 6b  |,"f:deployment.k|
              00000060  75 62 65 72 6e 65 74 65  73 2e 69 6f 2f 6d 61 78  |ubernetes.io/max|
              00000070  2d 72 65 70 6c 69 63 61  73 22 3a 7b 7d 7d 2c 22  |-replicas":{}},"|
              00000080  66 3a 6f 77 6e 65 72 52  65 66 65 72 65 6e 63 65  |f:ownerReference|
              00000090  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 6b 3a 7b 5c  |s":{".":{},"k:{\|
              000000a0  22 75 69 64 5c 22 3a 5c  22 66 64 39 61 64 35 63  |"uid\":\"fd9ad5c|
              000000b0  39 2d 34 30 32 37 2d 34  36 63 66 2d 61 36 35 64  |9-4027-46cf-a65d|
              000000c0  2d 61 31 31 62 66 30 33  65 31 39 30 64 5c 22 7d  |-a11bf03e190d\"}|
              000000d0  22 3a 7b 7d 7d 7d 2c 22  66 3a 73 70 65 63 22 3a  |":{}}},"f:spec":|
              000000e0  7b 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |{"f:replicas":{}|
              000000f0  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=56) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  6f 62 73 65 72 76 65 64  47 65 6e 65 72 61 74 69  |observedGenerati|
              00000020  6f 6e 22 3a 7b 7d 2c 22  66 3a 72 65 70 6c 69 63  |on":{},"f:replic|
              00000030  61 73 22 3a 7b 7d 7d 7d                           |as":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(0),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "pod": (string) (len=5) "httpd",
          (string) (len=4) "name": (string) (len=10) "sample-pod"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=4) "name": (string) (len=10) "sample-pod",
            (string) (len=3) "pod": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)(<nil>),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 0,
      FullyLabeledReplicas: (int32) 0,
      ReadyReplicas: (int32) 0,
      AvailableReplicas: (int32) 0,
      ObservedGeneration: (int64) 2,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 13:25:53.636904 21 deployment.go:67] Pod "test-rolling-update-deployment-6f4b778cd6-lptn2" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=47) "test-rolling-update-deployment-6f4b778cd6-lptn2",
      GenerateName: (string) (len=42) "test-rolling-update-deployment-6f4b778cd6-",
      Namespace: (string) (len=15) "deployment-6719",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "ae5a31e3-ecd5-43eb-b45a-cecbb8a2f1c0",
      ResourceVersion: (string) (len=5) "26503",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=10) "sample-pod",
        (string) (len=17) "pod-template-hash": (string) (len=10) "6f4b778cd6"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "a8366c7ff61376dabb2bc5c4dce8bfa87dd0679161d016fcde94250624e5caa7",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=14) "10.42.1.209/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=14) "10.42.1.209/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=41) "test-rolling-update-deployment-6f4b778cd6",
          UID: (types.UID) (len=36) "2fa3eb14-7b67-45a7-ae42-ea5b22840a86",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=539) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |.":{},"f:name":{|
              00000040  7d 2c 22 66 3a 70 6f 64  2d 74 65 6d 70 6c 61 74  |},"f:pod-templat|
              00000050  65 2d 68 61 73 68 22 3a  7b 7d 7d 2c 22 66 3a 6f  |e-hash":{}},"f:o|
              00000060  77 6e 65 72 52 65 66 65  72 65 6e 63 65 73 22 3a  |wnerReferences":|
              00000070  7b 22 2e 22 3a 7b 7d 2c  22 6b 3a 7b 5c 22 75 69  |{".":{},"k:{\"ui|
              00000080  64 5c 22 3a 5c 22 32 66  61 33 65 62 31 34 2d 37  |d\":\"2fa3eb14-7|
              00000090  62 36 37 2d 34 35 61 37  2d 61 65 34 32 2d 65 61  |b67-45a7-ae42-ea|
              000000a0  35 62 32 32 38 34 30 61  38 36 5c 22 7d 22 3a 7b  |5b22840a86\"}":{|
              000000b0  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              000000c0  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              000000d0  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 61 67 6e  |:{\"name\":\"agn|
              000000e0  68 6f 73 74 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |host\"}":{".":{}|
              000000f0  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000100  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000110  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000120  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000130  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000140  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000150  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000160  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000170  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              00000180  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              00000190  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 65 6e 61  |olicy":{},"f:ena|
              000001a0  62 6c 65 53 65 72 76 69  63 65 4c 69 6e 6b 73 22  |bleServiceLinks"|
              000001b0  3a 7b 7d 2c 22 66 3a 72  65 73 74 61 72 74 50 6f  |:{},"f:restartPo|
              000001c0  6c 69 63 79 22 3a 7b 7d  2c 22 66 3a 73 63 68 65  |licy":{},"f:sche|
              000001d0  64 75 6c 65 72 4e 61 6d  65 22 3a 7b 7d 2c 22 66  |dulerName":{},"f|
              000001e0  3a 73 65 63 75 72 69 74  79 43 6f 6e 74 65 78 74  |:securityContext|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 47 72 61 63 65  50 65 72 69 6f 64 53 65  |ionGracePeriodSe|
              00000210  63 6f 6e 64 73 22 3a 7b  7d 7d 7d                 |conds":{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609950,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=660) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 31 2e 32 30  39 5c 22 7d 22 3a 7b 22  |.42.1.209\"}":{"|
              00000270  2e 22 3a 7b 7d 2c 22 66  3a 69 70 22 3a 7b 7d 7d  |.":{},"f:ip":{}}|
              00000280  7d 2c 22 66 3a 73 74 61  72 74 54 69 6d 65 22 3a  |},"f:startTime":|
              00000290  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-474xv",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=7) "agnhost",
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-474xv",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-5-183",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609951,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855609949,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.5.183",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.5.183"
        }
      },
      PodIP: (string) (len=11) "10.42.1.209",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=11) "10.42.1.209"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855609949,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=7) "agnhost",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855609951,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=44) "registry.k8s.io/e2e-test-images/agnhost:2.47",
          ImageID: (string) (len=129) "docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253",
          ContainerID: (string) (len=73) "docker://0a9c84272c3614dbc2b7c6ba60633e17901260831d4f056448be614eea16913f",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 13:25:53.640725 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-6719" for this suite. @ 07/03/24 13:25:53.644
• [9.434 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] ConfigMap should be consumable via the environment [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/configmap.go:95
  STEP: Creating a kubernetes client @ 07/03/24 13:25:53.655
  I0703 13:25:53.655568 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 13:25:53.657
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:25:53.714
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:25:53.734
  STEP: Creating configMap configmap-2073/configmap-test-cee1d5d3-ef7e-428c-904b-4586a616782d @ 07/03/24 13:25:53.769
  STEP: Creating a pod to test consume configMaps @ 07/03/24 13:25:53.781
  E0703 13:25:54.482406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:55.483469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:56.485438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:57.486080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:25:57.841
  I0703 13:25:57.847603 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-eb45d57e-627c-41cf-91b6-f2d8ee365227 container env-test: <nil>
  STEP: delete the pod @ 07/03/24 13:25:57.871
  I0703 13:25:57.903710 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2073" for this suite. @ 07/03/24 13:25:57.922
• [4.283 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replica set. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:453
  STEP: Creating a kubernetes client @ 07/03/24 13:25:57.939
  I0703 13:25:57.939840 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 13:25:57.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:25:58.021
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:25:58.05
  STEP: Counting existing ResourceQuota @ 07/03/24 13:25:58.067
  E0703 13:25:58.486723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:25:59.492447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:00.494563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:01.493912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:02.494713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/03/24 13:26:03.157
  STEP: Ensuring resource quota status is calculated @ 07/03/24 13:26:03.225
  E0703 13:26:03.498575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:04.497499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicaSet @ 07/03/24 13:26:05.232
  STEP: Ensuring resource quota status captures replicaset creation @ 07/03/24 13:26:05.266
  E0703 13:26:05.497982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:06.498021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicaSet @ 07/03/24 13:26:07.298
  STEP: Ensuring resource quota status released usage @ 07/03/24 13:26:07.304
  E0703 13:26:07.498345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:08.498507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:09.312171 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3645" for this suite. @ 07/03/24 13:26:09.319
• [11.385 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:68
  STEP: Creating a kubernetes client @ 07/03/24 13:26:09.328
  I0703 13:26:09.328688 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 13:26:09.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:09.374
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:09.385
  STEP: Creating secret with name secret-test-87f4898c-d57f-4100-87c4-3b77cc32de67 @ 07/03/24 13:26:09.395
  STEP: Creating a pod to test consume secrets @ 07/03/24 13:26:09.41
  E0703 13:26:09.499434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:10.499300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:11.499673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:12.500775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:26:13.479
  I0703 13:26:13.482468 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-6aa75a51-58a6-442f-bac0-282d5889d3db container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 13:26:13.497
  E0703 13:26:13.501809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:13.519754 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-2147" for this suite. @ 07/03/24 13:26:13.523
• [4.226 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu request [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:223
  STEP: Creating a kubernetes client @ 07/03/24 13:26:13.555
  I0703 13:26:13.555433 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 13:26:13.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:13.657
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:13.685
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 13:26:13.709
  E0703 13:26:14.502484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:15.502818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:16.502924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:17.503893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:18.504129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:19.504286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:26:19.79
  I0703 13:26:19.794437 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-2dd5bcc5-4850-411f-9087-ab3b3ea8dd19 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 13:26:19.803
  I0703 13:26:19.838550 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1951" for this suite. @ 07/03/24 13:26:19.846
• [6.315 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl server-side dry-run should check if kubectl can dry-run update Pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1079
  STEP: Creating a kubernetes client @ 07/03/24 13:26:19.879
  I0703 13:26:19.879240 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:26:19.88
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:19.965
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:20
  STEP: running the image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/03/24 13:26:20.035
  I0703 13:26:20.041163 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7326 run e2e-test-httpd-pod --image=registry.k8s.io/e2e-test-images/httpd:2.4.38-4 --pod-running-timeout=2m0s --labels=run=e2e-test-httpd-pod'
  I0703 13:26:20.359279 21 builder.go:146] stderr: ""
  I0703 13:26:20.359329 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod created\n"
  STEP: replace the image in the pod with server-side dry-run @ 07/03/24 13:26:20.359
  I0703 13:26:20.359424 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7326 patch pod e2e-test-httpd-pod -p {"spec":{"containers":[{"name": "e2e-test-httpd-pod","image": "registry.k8s.io/e2e-test-images/busybox:1.36.1-1"}]}} --dry-run=server'
  E0703 13:26:20.505264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:20.633835 21 builder.go:146] stderr: ""
  I0703 13:26:20.633880 21 builder.go:147] stdout: "pod/e2e-test-httpd-pod patched\n"
  STEP: verifying the pod e2e-test-httpd-pod has the right image registry.k8s.io/e2e-test-images/httpd:2.4.38-4 @ 07/03/24 13:26:20.633
  I0703 13:26:20.636762 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-7326 delete pods e2e-test-httpd-pod'
  E0703 13:26:21.506096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:22.517542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:23.508393      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:23.979734 21 builder.go:146] stderr: ""
  I0703 13:26:23.979976 21 builder.go:147] stdout: "pod \"e2e-test-httpd-pod\" deleted\n"
  I0703 13:26:23.980228 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-7326" for this suite. @ 07/03/24 13:26:23.984
• [4.114 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a mutating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:498
  STEP: Creating a kubernetes client @ 07/03/24 13:26:23.994
  I0703 13:26:23.994545 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:26:23.995
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:24.055
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:24.065
  STEP: Setting up server cert @ 07/03/24 13:26:24.155
  E0703 13:26:24.521585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:26:24.6
  STEP: Deploying the webhook pod @ 07/03/24 13:26:24.617
  STEP: Wait for the deployment to be ready @ 07/03/24 13:26:24.656
  I0703 13:26:24.706565 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:26:25.521716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:26.526410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:26.749920 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:26:27.527624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:28.527950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:28.767887 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 26, 24, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:26:29.528688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:30.532356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:26:30.8
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:26:30.838
  E0703 13:26:31.533220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:31.839448 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a mutating webhook configuration @ 07/03/24 13:26:31.845
  STEP: Updating a mutating webhook configuration's rules to not include the create operation @ 07/03/24 13:26:31.874
  STEP: Creating a configMap that should not be mutated @ 07/03/24 13:26:31.883
  STEP: Patching a mutating webhook configuration's rules to include the create operation @ 07/03/24 13:26:31.901
  STEP: Creating a configMap that should be mutated @ 07/03/24 13:26:31.919
  I0703 13:26:32.129797 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3167" for this suite. @ 07/03/24 13:26:32.174
  STEP: Destroying namespace "webhook-markers-8018" for this suite. @ 07/03/24 13:26:32.277
• [8.302 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0666,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:180
  STEP: Creating a kubernetes client @ 07/03/24 13:26:32.296
  I0703 13:26:32.296405 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:26:32.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:32.457
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:32.492
  E0703 13:26:32.534175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a pod to test emptydir 0666 on node default medium @ 07/03/24 13:26:32.548
  E0703 13:26:33.536026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:34.536274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:35.536627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:36.538765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:37.538705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:38.539803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:26:38.706
  I0703 13:26:38.709772 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-57d03b4c-2de8-4e2e-85c2-b3ef4c6a39c5 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:26:38.718
  I0703 13:26:38.745393 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-1518" for this suite. @ 07/03/24 13:26:38.758
• [6.474 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should delete a collection of pods [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:846
  STEP: Creating a kubernetes client @ 07/03/24 13:26:38.771
  I0703 13:26:38.771683 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 13:26:38.773
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:38.841
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:38.853
  STEP: Create set of pods @ 07/03/24 13:26:38.876
  I0703 13:26:38.896756 21 pods.go:871] created test-pod-1
  I0703 13:26:38.942118 21 pods.go:871] created test-pod-2
  I0703 13:26:39.011618 21 pods.go:871] created test-pod-3
  STEP: waiting for all 3 pods to be running @ 07/03/24 13:26:39.011
  E0703 13:26:39.540600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:40.541517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:41.542571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:42.542680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting for all pods to be deleted @ 07/03/24 13:26:43.176
  I0703 13:26:43.186477 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0703 13:26:43.543355      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:44.191462 21 pods.go:1140] Pod quantity 3 is different from expected quantity 0
  E0703 13:26:44.544027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:45.183671 21 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0703 13:26:45.552349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:46.196610 21 pods.go:1140] Pod quantity 2 is different from expected quantity 0
  E0703 13:26:46.545241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:26:47.186518 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-4413" for this suite. @ 07/03/24 13:26:47.198
• [8.435 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] CSIStorageCapacity should support CSIStorageCapacities API operations [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csistoragecapacity.go:50
  STEP: Creating a kubernetes client @ 07/03/24 13:26:47.207
  I0703 13:26:47.207652 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename csistoragecapacity @ 07/03/24 13:26:47.214
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:47.277
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:47.304
  STEP: getting /apis @ 07/03/24 13:26:47.322
  STEP: getting /apis/storage.k8s.io @ 07/03/24 13:26:47.333
  STEP: getting /apis/storage.k8s.io/v1 @ 07/03/24 13:26:47.336
  STEP: creating @ 07/03/24 13:26:47.349
  STEP: watching @ 07/03/24 13:26:47.435
  I0703 13:26:47.435170 21 csistoragecapacity.go:143] starting watch
  STEP: getting @ 07/03/24 13:26:47.478
  STEP: listing in namespace @ 07/03/24 13:26:47.482
  STEP: listing across namespaces @ 07/03/24 13:26:47.498
  STEP: patching @ 07/03/24 13:26:47.518
  STEP: updating @ 07/03/24 13:26:47.526
  I0703 13:26:47.540574 21 csistoragecapacity.go:181] waiting for watch events with expected annotations in namespace
  I0703 13:26:47.541008 21 csistoragecapacity.go:181] waiting for watch events with expected annotations across namespace
  STEP: deleting @ 07/03/24 13:26:47.541
  E0703 13:26:47.546220      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting a collection @ 07/03/24 13:26:47.597
  I0703 13:26:47.634548 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csistoragecapacity-6666" for this suite. @ 07/03/24 13:26:47.642
• [0.462 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPreemption [Serial] validates lower priority pod preemption by critical pod [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/preemption.go:224
  STEP: Creating a kubernetes client @ 07/03/24 13:26:47.697
  I0703 13:26:47.697425 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-preemption @ 07/03/24 13:26:47.701
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:26:47.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:26:47.765
  I0703 13:26:47.808331 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0703 13:26:48.546728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:49.546671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:50.546619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:51.546753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:52.547639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:53.548055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:54.550469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:55.550908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:56.551145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:57.551335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:58.552405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:26:59.552448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:00.552611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:01.552753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:02.553704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:03.553741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:04.554759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:05.555820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:06.555911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:07.556326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:08.557791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:09.558168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:10.558321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:11.558459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:12.559565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:13.560048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:14.560014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:15.562305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:16.563179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:17.563792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:18.565718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:19.572290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:20.566519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:21.571505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:22.572814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:23.573614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:24.573749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:25.573949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:26.574096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:27.574667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:28.575566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:29.575876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:30.576128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:31.577068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:32.577326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:33.577513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:34.577585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:35.577758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:36.577894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:37.580204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:38.581162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:39.581616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:40.581729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:41.581963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:42.582683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:43.587006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:44.587083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:45.587472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:46.590467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:47.590518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:27:47.814238 21 util.go:400] Waiting for terminating namespaces to be deleted...
  STEP: Create pods that use 4/5 of node resources. @ 07/03/24 13:27:47.819
  I0703 13:27:47.882509 21 preemption.go:269] Created pod: pod0-0-sched-preemption-low-priority
  I0703 13:27:47.910901 21 preemption.go:269] Created pod: pod0-1-sched-preemption-medium-priority
  I0703 13:27:47.990730 21 preemption.go:269] Created pod: pod1-0-sched-preemption-medium-priority
  I0703 13:27:48.016060 21 preemption.go:269] Created pod: pod1-1-sched-preemption-medium-priority
  I0703 13:27:48.220610 21 preemption.go:269] Created pod: pod2-0-sched-preemption-medium-priority
  I0703 13:27:48.380028 21 preemption.go:269] Created pod: pod2-1-sched-preemption-medium-priority
  STEP: Wait for pods to be scheduled. @ 07/03/24 13:27:48.38
  E0703 13:27:48.591187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:49.600949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:50.601832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:51.602547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:52.610613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:53.604517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:54.604620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:55.605073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:56.607096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:57.607356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:58.607709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:27:59.607931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:00.608921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:01.609180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:02.609121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:03.609524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:04.610131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:05.610768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:06.611339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:07.612025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:08.612315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:09.612471      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:10.612849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:11.613357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:12.614440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:13.614556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:14.616215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:15.617147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:16.618444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:17.619275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:18.620406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:19.621437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:20.621542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:21.621663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:22.621765      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:23.622503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:24.626041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:25.626631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:26.634144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:27.634434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:28.636296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:29.636426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:30.637801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:31.638465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:32.639110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:33.639196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:34.642160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:35.642364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:36.643523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:37.643704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:38.643697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Run a critical pod that use same resources as that of a lower priority pod @ 07/03/24 13:28:38.745
  E0703 13:28:39.648953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:40.647589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:41.649027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:42.649776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:43.650353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:44.650460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:45.651044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:46.651149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:47.651610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:48.651710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:49.651844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:50.651990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:51.653008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:52.653034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:53.654019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:54.659282      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:55.658497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:56.666521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:57.667179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:58.667498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:28:59.667831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:00.668501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:01.669421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:02.670134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:03.670516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:04.673839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:05.674537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:06.674461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:07.676749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:08.677100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:09.677694      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:10.677924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:11.678628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:12.678753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:13.681700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:14.686785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:15.691008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:16.691493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:17.692132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:18.692404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:19.692305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:20.692660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:21.703378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:22.703864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:23.706505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:24.708135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:25.709043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:26.714310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:27.709425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:28.709484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:29.710607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:30.710643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:31.710973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:32.711645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:29:33.383951 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-preemption-3407" for this suite. @ 07/03/24 13:29:33.391
• [165.723 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should replace a pod template [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:177
  STEP: Creating a kubernetes client @ 07/03/24 13:29:33.42
  I0703 13:29:33.420552 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename podtemplate @ 07/03/24 13:29:33.424
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:29:33.511
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:29:33.551
  STEP: Create a pod template @ 07/03/24 13:29:33.562
  STEP: Replace a pod template @ 07/03/24 13:29:33.674
  E0703 13:29:33.712278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:29:33.749157 21 podtemplates.go:210] Found updated podtemplate annotation: "true"

  I0703 13:29:33.749383 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-5896" for this suite. @ 07/03/24 13:29:33.795
• [0.444 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] PersistentVolumes CSI Conformance should apply changes to a pv/pvc status [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/persistent_volumes.go:669
  STEP: Creating a kubernetes client @ 07/03/24 13:29:33.865
  I0703 13:29:33.865456 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pv @ 07/03/24 13:29:33.866
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:29:34.109
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:29:34.169
  STEP: Creating initial PV and PVC @ 07/03/24 13:29:34.302
  I0703 13:29:34.302961 21 pv.go:390] Creating a PV followed by a PVC
  STEP: Listing all PVs with the labelSelector: "e2e-pv-pool=pv-8459" @ 07/03/24 13:29:34.554
  STEP: Listing PVCs in namespace "pv-8459" @ 07/03/24 13:29:34.586
  STEP: Reading "pvc-hg9hh" Status @ 07/03/24 13:29:34.62
  STEP: Reading "pv-8459-7cxrr" Status @ 07/03/24 13:29:34.698
  E0703 13:29:34.714650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching "pvc-hg9hh" Status @ 07/03/24 13:29:34.819
  STEP: Patching "pv-8459-7cxrr" Status @ 07/03/24 13:29:34.849
  STEP: Updating "pvc-hg9hh" Status @ 07/03/24 13:29:34.885
  STEP: Updating "pv-8459-7cxrr" Status @ 07/03/24 13:29:34.911
  I0703 13:29:34.945695 21 persistent_volumes.go:407] AfterEach: deleting 1 PVCs and 1 PVs...
  I0703 13:29:34.947798 21 pv.go:201] Deleting PersistentVolumeClaim "pvc-hg9hh"
  I0703 13:29:34.956593 21 pv.go:189] Deleting PersistentVolume "pv-8459-7cxrr"
  I0703 13:29:34.973685 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pv-8459" for this suite. @ 07/03/24 13:29:35.002
• [1.148 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:386
  STEP: Creating a kubernetes client @ 07/03/24 13:29:35.022
  I0703 13:29:35.022629 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 13:29:35.023
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:29:35.201
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:29:35.23
  I0703 13:29:35.460951 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1913" for this suite. @ 07/03/24 13:29:35.474
• [0.525 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Burst scaling should run to completion even with unhealthy pods [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:751
  STEP: Creating a kubernetes client @ 07/03/24 13:29:35.548
  I0703 13:29:35.548190 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 13:29:35.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:29:35.691
  E0703 13:29:35.715660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:29:35.729
  STEP: Creating service test in namespace statefulset-2904 @ 07/03/24 13:29:35.736
  STEP: Creating stateful set ss in namespace statefulset-2904 @ 07/03/24 13:29:35.762
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-2904 @ 07/03/24 13:29:35.797
  I0703 13:29:35.828018 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0703 13:29:36.719187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:37.719886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:38.720207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:39.721052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:40.721346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:41.721543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:42.721847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:43.723197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:44.723271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:45.724703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:29:45.810522 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will not halt with unhealthy stateful pod @ 07/03/24 13:29:45.81
  I0703 13:29:45.814418 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0703 13:29:46.322172 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 13:29:46.322224 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 13:29:46.322240 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 13:29:46.327196 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0703 13:29:46.724862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:47.726168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:48.725970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:49.726474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:50.728196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:51.727100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:52.727221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:53.727412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:54.727543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:29:55.736201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:29:56.326036 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0703 13:29:56.326098 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0703 13:29:56.401622 21 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I0703 13:29:56.401892 21 resource.go:175] ss-0  ip-172-31-5-183  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:46 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:35 +0000 UTC  }]
  I0703 13:29:56.407699 21 resource.go:175] ss-2                   Pending         []
  I0703 13:29:56.407817 21 resource.go:178] 
  I0703 13:29:56.407912 21 statefulset.go:2147] StatefulSet ss has not reached scale 3, at 2
  E0703 13:29:56.729320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:29:57.415459 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.968693856s
  E0703 13:29:57.729558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:29:58.427593 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.962571898s
  E0703 13:29:58.729669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:29:59.482570 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.908668322s
  E0703 13:29:59.729791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:00.522135 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.892625602s
  E0703 13:30:00.738703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:01.529247 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.854152901s
  E0703 13:30:01.734507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:02.590842 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.847460456s
  E0703 13:30:02.735280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:03.603028 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.787624875s
  E0703 13:30:03.735592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:04.610809 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.772708986s
  E0703 13:30:04.737719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:05.621974 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 764.691584ms
  E0703 13:30:05.738758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-2904 @ 07/03/24 13:30:06.627
  I0703 13:30:06.632752 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0703 13:30:06.739206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:06.903090 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0703 13:30:06.903142 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 13:30:06.903159 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0703 13:30:06.903215 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 13:30:07.131563 21 builder.go:135] rc: 1
  I0703 13:30:07.131653 21 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: unable to upgrade connection: container not found ("webserver")

  error:
  exit status 1
  E0703 13:30:07.741893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:08.742024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:09.742135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:10.742249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:11.742587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:12.745876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:13.746084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:14.746449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:15.746512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:16.746649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:17.132504 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 13:30:17.294763 21 builder.go:135] rc: 1
  I0703 13:30:17.294827 21 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: unable to upgrade connection: container not found ("webserver")

  error:
  exit status 1
  E0703 13:30:17.746911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:18.747455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:19.747723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:20.747789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:21.747935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:22.748641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:23.750937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:24.751523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:25.752047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:26.752153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:27.296227 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 13:30:27.569571 21 builder.go:135] rc: 1
  I0703 13:30:27.569637 21 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: unable to upgrade connection: container not found ("webserver")

  error:
  exit status 1
  E0703 13:30:27.753069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:28.753336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:29.753629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:30.753763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:31.754443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:32.755432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:33.755504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:34.755646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:35.756018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:36.756266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:37.569955 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0703 13:30:37.756779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:37.839465 21 builder.go:135] rc: 1
  I0703 13:30:37.839529 21 output.go:112] Waiting 10s to retry failed RunHostCmd: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true:
  Command stdout:

  stderr:
  error: Internal error occurred: unable to upgrade connection: container not found ("webserver")

  error:
  exit status 1
  E0703 13:30:38.758679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:39.758459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:40.758582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:41.758701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:42.760921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:43.761035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:44.761198      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:45.761304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:46.762717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:47.762878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:47.840272 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 13:30:48.172384 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0703 13:30:48.172437 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 13:30:48.172452 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0703 13:30:48.172714 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 13:30:48.533793 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\nmv: can't rename '/tmp/index.html': No such file or directory\n+ true\n"
  I0703 13:30:48.533845 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 13:30:48.533859 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0703 13:30:48.542321 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:30:48.542367 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:30:48.542392 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Scale down will not halt with unhealthy stateful pod @ 07/03/24 13:30:48.542
  I0703 13:30:48.550716 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0703 13:30:48.763855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:48.871812 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 13:30:48.872051 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 13:30:48.872072 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 13:30:48.872129 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0703 13:30:49.764036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:30:49.906896 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 13:30:49.907415 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 13:30:49.907445 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 13:30:49.907496 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2904 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0703 13:30:50.221113 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 13:30:50.221160 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 13:30:50.221175 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 13:30:50.221189 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0703 13:30:50.232586 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0703 13:30:50.764176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:51.764273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:52.765332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:53.765431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:54.765755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:55.766569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:56.766452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:57.766772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:58.767044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:30:59.767090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:00.231781 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0703 13:31:00.231829 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0703 13:31:00.231843 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0703 13:31:00.332527 21 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I0703 13:31:00.332600 21 resource.go:175] ss-0  ip-172-31-5-183  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:35 +0000 UTC  }]
  I0703 13:31:00.332630 21 resource.go:175] ss-1  ip-172-31-4-137  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  }]
  I0703 13:31:00.332661 21 resource.go:175] ss-2  ip-172-31-4-210  Running         [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:58 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  }]
  I0703 13:31:00.332675 21 resource.go:178] 
  I0703 13:31:00.332687 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  E0703 13:31:00.768058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:01.357452 21 resource.go:168] POD   NODE             PHASE      GRACE  CONDITIONS
  I0703 13:31:01.366407 21 resource.go:175] ss-0  ip-172-31-5-183  Running    30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:38 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:35 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:49 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:35 +0000 UTC  }]
  I0703 13:31:01.370423 21 resource.go:175] ss-1  ip-172-31-4-137  Running    30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  }]
  I0703 13:31:01.370593 21 resource.go:175] ss-2  ip-172-31-4-210  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:31:01 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  }]
  I0703 13:31:01.370637 21 resource.go:178] 
  I0703 13:31:01.370651 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 3
  E0703 13:31:01.772805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:02.374913 21 resource.go:168] POD   NODE             PHASE    GRACE  CONDITIONS
  I0703 13:31:02.375100 21 resource.go:175] ss-1  ip-172-31-4-137  Running  30s    [{PodReadyToStartContainers True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:43 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC ContainersNotReady containers with unready status: [webserver]} {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  }]
  I0703 13:31:02.376229 21 resource.go:178] 
  I0703 13:31:02.376263 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 1
  E0703 13:31:02.770484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:03.381599 21 resource.go:168] POD   NODE             PHASE      GRACE  CONDITIONS
  I0703 13:31:03.381691 21 resource.go:175] ss-1  ip-172-31-4-137  Succeeded  30s    [{PodReadyToStartContainers False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:31:02 +0000 UTC  } {Initialized True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC PodCompleted } {Ready False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC PodCompleted } {ContainersReady False 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:30:50 +0000 UTC PodCompleted } {PodScheduled True 0001-01-01 00:00:00 +0000 UTC 2024-07-03 13:29:56 +0000 UTC  }]
  I0703 13:31:03.381715 21 resource.go:178] 
  I0703 13:31:03.381750 21 statefulset.go:2147] StatefulSet ss has not reached scale 0, at 1
  E0703 13:31:03.773590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:04.385526 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 5.938289332s
  E0703 13:31:04.774235      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:05.389678 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 4.934204193s
  E0703 13:31:05.782438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:06.396604 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 3.930319455s
  E0703 13:31:06.779318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:07.404030 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 2.922455638s
  E0703 13:31:07.779430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:08.417840 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 1.914873024s
  E0703 13:31:08.780442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:09.424543 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 0 for another 901.921154ms
  E0703 13:31:09.781480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-2904 @ 07/03/24 13:31:10.425
  I0703 13:31:10.428993 21 rest.go:150] Scaling statefulset ss to 0
  I0703 13:31:10.437116 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 13:31:10.439996 21 statefulset.go:135] Deleting all statefulset in ns statefulset-2904
  I0703 13:31:10.442556 21 rest.go:150] Scaling statefulset ss to 0
  I0703 13:31:10.448816 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 13:31:10.452313 21 rest.go:88] Deleting statefulset ss
  I0703 13:31:10.481985 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2904" for this suite. @ 07/03/24 13:31:10.53
• [95.007 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] Projected configMap optional updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:175
  STEP: Creating a kubernetes client @ 07/03/24 13:31:10.555
  I0703 13:31:10.555536 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 13:31:10.556
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:31:10.748
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:31:10.762
  E0703 13:31:10.781490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating configMap with name cm-test-opt-del-e7754652-84bf-4817-a126-65c088a27633 @ 07/03/24 13:31:10.803
  STEP: Creating configMap with name cm-test-opt-upd-191ac3fc-825d-4617-91c4-e68ec7054615 @ 07/03/24 13:31:10.824
  STEP: Creating the pod @ 07/03/24 13:31:10.835
  E0703 13:31:11.781781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:12.782777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:13.782850      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:14.782962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting configmap cm-test-opt-del-e7754652-84bf-4817-a126-65c088a27633 @ 07/03/24 13:31:14.996
  STEP: Updating configmap cm-test-opt-upd-191ac3fc-825d-4617-91c4-e68ec7054615 @ 07/03/24 13:31:15.005
  STEP: Creating configMap with name cm-test-opt-create-82903c50-4fb0-4228-a9d6-570d21512427 @ 07/03/24 13:31:15.013
  STEP: waiting to observe update in volume @ 07/03/24 13:31:15.022
  E0703 13:31:15.783468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:16.786128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:17.786445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:18.787518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:19.092567 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1899" for this suite. @ 07/03/24 13:31:19.097
• [8.548 seconds]
------------------------------
S
------------------------------
[sig-auth] ServiceAccounts should allow opting out of API token automount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:163
  STEP: Creating a kubernetes client @ 07/03/24 13:31:19.103
  I0703 13:31:19.103734 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svcaccounts @ 07/03/24 13:31:19.104
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:31:19.17
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:31:19.208
  I0703 13:31:19.410563 21 service_accounts.go:253] created pod pod-service-account-defaultsa
  I0703 13:31:19.410675 21 service_accounts.go:267] pod pod-service-account-defaultsa service account token volume mount: true
  I0703 13:31:19.438105 21 service_accounts.go:253] created pod pod-service-account-mountsa
  I0703 13:31:19.438148 21 service_accounts.go:267] pod pod-service-account-mountsa service account token volume mount: true
  I0703 13:31:19.585591 21 service_accounts.go:253] created pod pod-service-account-nomountsa
  I0703 13:31:19.585629 21 service_accounts.go:267] pod pod-service-account-nomountsa service account token volume mount: false
  E0703 13:31:19.788156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:19.830967 21 service_accounts.go:253] created pod pod-service-account-defaultsa-mountspec
  I0703 13:31:19.831145 21 service_accounts.go:267] pod pod-service-account-defaultsa-mountspec service account token volume mount: true
  I0703 13:31:19.973909 21 service_accounts.go:253] created pod pod-service-account-mountsa-mountspec
  I0703 13:31:19.974337 21 service_accounts.go:267] pod pod-service-account-mountsa-mountspec service account token volume mount: true
  I0703 13:31:20.005877 21 service_accounts.go:253] created pod pod-service-account-nomountsa-mountspec
  I0703 13:31:20.006291 21 service_accounts.go:267] pod pod-service-account-nomountsa-mountspec service account token volume mount: true
  I0703 13:31:20.109511 21 service_accounts.go:253] created pod pod-service-account-defaultsa-nomountspec
  I0703 13:31:20.109686 21 service_accounts.go:267] pod pod-service-account-defaultsa-nomountspec service account token volume mount: false
  I0703 13:31:20.255235 21 service_accounts.go:253] created pod pod-service-account-mountsa-nomountspec
  I0703 13:31:20.255372 21 service_accounts.go:267] pod pod-service-account-mountsa-nomountspec service account token volume mount: false
  I0703 13:31:20.412449 21 service_accounts.go:253] created pod pod-service-account-nomountsa-nomountspec
  I0703 13:31:20.412628 21 service_accounts.go:267] pod pod-service-account-nomountsa-nomountspec service account token volume mount: false
  I0703 13:31:20.412930 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-4797" for this suite. @ 07/03/24 13:31:20.536
• [1.629 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Deployment should validate Deployment Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/deployment.go:489
  STEP: Creating a kubernetes client @ 07/03/24 13:31:20.737
  I0703 13:31:20.741134 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename deployment @ 07/03/24 13:31:20.756
  E0703 13:31:20.796771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:31:21.022
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:31:21.032
  STEP: creating a Deployment @ 07/03/24 13:31:21.074
  I0703 13:31:21.080083 21 deployment.go:507] Creating simple deployment test-deployment-gt6hx
  I0703 13:31:21.249961 21 deployment.go:222] deployment "test-deployment-gt6hx" doesn't have the required revision set
  E0703 13:31:21.798208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:22.806547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:23.300535 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-gt6hx-c8586b885\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:31:23.799384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:24.800503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:31:25.432233 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"test-deployment-gt6hx-c8586b885\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:31:25.800610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:26.801092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting /status @ 07/03/24 13:31:27.312
  I0703 13:31:27.321554 21 deployment.go:532] Deployment test-deployment-gt6hx has Conditions: [{Available True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.} {Progressing True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gt6hx-c8586b885" has successfully progressed.}]
  STEP: updating Deployment Status @ 07/03/24 13:31:27.321
  I0703 13:31:27.339516 21 deployment.go:552] updatedStatus.Conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 31, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 31, 26, 0, time.Local), Reason:"MinimumReplicasAvailable", Message:"Deployment has minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 31, 26, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 31, 21, 0, time.Local), Reason:"NewReplicaSetAvailable", Message:"ReplicaSet \"test-deployment-gt6hx-c8586b885\" has successfully progressed."}, v1.DeploymentCondition{Type:"StatusUpdate", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the Deployment status to be updated @ 07/03/24 13:31:27.34
  I0703 13:31:27.344216 21 deployment.go:579] Observed &Deployment event: ADDED
  I0703 13:31:27.344364 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gt6hx-c8586b885"}
  I0703 13:31:27.344605 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0703 13:31:27.344931 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gt6hx-c8586b885"}
  I0703 13:31:27.344957 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0703 13:31:27.345168 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0703 13:31:27.345419 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0703 13:31:27.345443 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gt6hx-c8586b885" is progressing.}
  I0703 13:31:27.345603 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0703 13:31:27.345775 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0703 13:31:27.345800 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gt6hx-c8586b885" has successfully progressed.}
  I0703 13:31:27.345935 21 deployment.go:579] Observed &Deployment event: MODIFIED
  I0703 13:31:27.346195 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0703 13:31:27.346352 21 deployment.go:575] Observed Deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gt6hx-c8586b885" has successfully progressed.}
  I0703 13:31:27.346439 21 deployment.go:572] Found Deployment test-deployment-gt6hx in namespace deployment-2984 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0703 13:31:27.346539 21 deployment.go:583] Deployment test-deployment-gt6hx has an updated status
  STEP: patching the Statefulset Status @ 07/03/24 13:31:27.346
  I0703 13:31:27.346834 21 deployment.go:587] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0703 13:31:27.364923 21 deployment.go:591] Patched status conditions: []v1.DeploymentCondition{v1.DeploymentCondition{Type:"StatusPatched", Status:"True", LastUpdateTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Deployment status to be patched @ 07/03/24 13:31:27.365
  I0703 13:31:27.375247 21 deployment.go:616] Observed &Deployment event: ADDED
  I0703 13:31:27.375476 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gt6hx-c8586b885"}
  I0703 13:31:27.375869 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0703 13:31:27.375974 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetCreated Created new replica set "test-deployment-gt6hx-c8586b885"}
  I0703 13:31:27.376201 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0703 13:31:27.376428 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0703 13:31:27.376520 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available False 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC MinimumReplicasUnavailable Deployment does not have minimum availability.}
  I0703 13:31:27.376695 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:21 +0000 UTC 2024-07-03 13:31:21 +0000 UTC ReplicaSetUpdated ReplicaSet "test-deployment-gt6hx-c8586b885" is progressing.}
  I0703 13:31:27.376943 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0703 13:31:27.377149 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0703 13:31:27.377245 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gt6hx-c8586b885" has successfully progressed.}
  I0703 13:31:27.377529 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0703 13:31:27.377627 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Available True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:26 +0000 UTC MinimumReplicasAvailable Deployment has minimum availability.}
  I0703 13:31:27.377741 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {Progressing True 2024-07-03 13:31:26 +0000 UTC 2024-07-03 13:31:21 +0000 UTC NewReplicaSetAvailable ReplicaSet "test-deployment-gt6hx-c8586b885" has successfully progressed.}
  I0703 13:31:27.377837 21 deployment.go:612] Observed deployment test-deployment-gt6hx in namespace deployment-2984 with annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0703 13:31:27.378075 21 deployment.go:616] Observed &Deployment event: MODIFIED
  I0703 13:31:27.378178 21 deployment.go:609] Found deployment test-deployment-gt6hx in namespace deployment-2984 with labels: map[e2e:testing name:httpd] annotations: map[deployment.kubernetes.io/revision:1] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC 0001-01-01 00:00:00 +0000 UTC  }
  I0703 13:31:27.378357 21 deployment.go:620] Deployment test-deployment-gt6hx has a patched status
  I0703 13:31:27.385213 21 deployment.go:633] Deployment "test-deployment-gt6hx":
  (v1.Deployment) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=21) "test-deployment-gt6hx",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2984",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "30bf63d5-eb79-4650-8024-b34c0ace1c8c",
      ResourceVersion: (string) (len=5) "28185",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855610281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=2) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=1) {
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) <nil>,
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=657) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              00000020  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              00000030  6e 61 6d 65 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |name":{}}},"f:sp|
              00000040  65 63 22 3a 7b 22 66 3a  70 72 6f 67 72 65 73 73  |ec":{"f:progress|
              00000050  44 65 61 64 6c 69 6e 65  53 65 63 6f 6e 64 73 22  |DeadlineSeconds"|
              00000060  3a 7b 7d 2c 22 66 3a 72  65 70 6c 69 63 61 73 22  |:{},"f:replicas"|
              00000070  3a 7b 7d 2c 22 66 3a 72  65 76 69 73 69 6f 6e 48  |:{},"f:revisionH|
              00000080  69 73 74 6f 72 79 4c 69  6d 69 74 22 3a 7b 7d 2c  |istoryLimit":{},|
              00000090  22 66 3a 73 65 6c 65 63  74 6f 72 22 3a 7b 7d 2c  |"f:selector":{},|
              000000a0  22 66 3a 73 74 72 61 74  65 67 79 22 3a 7b 22 66  |"f:strategy":{"f|
              000000b0  3a 72 6f 6c 6c 69 6e 67  55 70 64 61 74 65 22 3a  |:rollingUpdate":|
              000000c0  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6d 61 78 53 75  |{".":{},"f:maxSu|
              000000d0  72 67 65 22 3a 7b 7d 2c  22 66 3a 6d 61 78 55 6e  |rge":{},"f:maxUn|
              000000e0  61 76 61 69 6c 61 62 6c  65 22 3a 7b 7d 7d 2c 22  |available":{}},"|
              000000f0  66 3a 74 79 70 65 22 3a  7b 7d 7d 2c 22 66 3a 74  |f:type":{}},"f:t|
              00000100  65 6d 70 6c 61 74 65 22  3a 7b 22 66 3a 6d 65 74  |emplate":{"f:met|
              00000110  61 64 61 74 61 22 3a 7b  22 66 3a 6c 61 62 65 6c  |adata":{"f:label|
              00000120  73 22 3a 7b 22 2e 22 3a  7b 7d 2c 22 66 3a 65 32  |s":{".":{},"f:e2|
              00000130  65 22 3a 7b 7d 2c 22 66  3a 6e 61 6d 65 22 3a 7b  |e":{},"f:name":{|
              00000140  7d 7d 7d 2c 22 66 3a 73  70 65 63 22 3a 7b 22 66  |}}},"f:spec":{"f|
              00000150  3a 63 6f 6e 74 61 69 6e  65 72 73 22 3a 7b 22 6b  |:containers":{"k|
              00000160  3a 7b 5c 22 6e 61 6d 65  5c 22 3a 5c 22 68 74 74  |:{\"name\":\"htt|
              00000170  70 64 5c 22 7d 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |pd\"}":{".":{},"|
              00000180  66 3a 69 6d 61 67 65 22  3a 7b 7d 2c 22 66 3a 69  |f:image":{},"f:i|
              00000190  6d 61 67 65 50 75 6c 6c  50 6f 6c 69 63 79 22 3a  |magePullPolicy":|
              000001a0  7b 7d 2c 22 66 3a 6e 61  6d 65 22 3a 7b 7d 2c 22  |{},"f:name":{},"|
              000001b0  66 3a 72 65 73 6f 75 72  63 65 73 22 3a 7b 7d 2c  |f:resources":{},|
              000001c0  22 66 3a 73 65 63 75 72  69 74 79 43 6f 6e 74 65  |"f:securityConte|
              000001d0  78 74 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |xt":{},"f:termin|
              000001e0  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 61 74 68  |ationMessagePath|
              000001f0  22 3a 7b 7d 2c 22 66 3a  74 65 72 6d 69 6e 61 74  |":{},"f:terminat|
              00000200  69 6f 6e 4d 65 73 73 61  67 65 50 6f 6c 69 63 79  |ionMessagePolicy|
              00000210  22 3a 7b 7d 7d 7d 2c 22  66 3a 64 6e 73 50 6f 6c  |":{}}},"f:dnsPol|
              00000220  69 63 79 22 3a 7b 7d 2c  22 66 3a 72 65 73 74 61  |icy":{},"f:resta|
              00000230  72 74 50 6f 6c 69 63 79  22 3a 7b 7d 2c 22 66 3a  |rtPolicy":{},"f:|
              00000240  73 63 68 65 64 75 6c 65  72 4e 61 6d 65 22 3a 7b  |schedulerName":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 47  72 61 63 65 50 65 72 69  |inationGracePeri|
              00000280  6f 64 53 65 63 6f 6e 64  73 22 3a 7b 7d 7d 7d 7d  |odSeconds":{}}}}|
              00000290  7d                                                |}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=224) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 72 65 76 69 73  69 6f 6e 22 3a 7b 7d 7d  |io/revision":{}}|
              00000050  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 22 66  |},"f:status":{"f|
              00000060  3a 61 76 61 69 6c 61 62  6c 65 52 65 70 6c 69 63  |:availableReplic|
              00000070  61 73 22 3a 7b 7d 2c 22  66 3a 63 6f 6e 64 69 74  |as":{},"f:condit|
              00000080  69 6f 6e 73 22 3a 7b 7d  2c 22 66 3a 6f 62 73 65  |ions":{},"f:obse|
              00000090  72 76 65 64 47 65 6e 65  72 61 74 69 6f 6e 22 3a  |rvedGeneration":|
              000000a0  7b 7d 2c 22 66 3a 72 65  61 64 79 52 65 70 6c 69  |{},"f:readyRepli|
              000000b0  63 61 73 22 3a 7b 7d 2c  22 66 3a 72 65 70 6c 69  |cas":{},"f:repli|
              000000c0  63 61 73 22 3a 7b 7d 2c  22 66 3a 75 70 64 61 74  |cas":{},"f:updat|
              000000d0  65 64 52 65 70 6c 69 63  61 73 22 3a 7b 7d 7d 7d  |edReplicas":{}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=8) "e2e.test",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610287,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=147) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 53 74 61 74  |{\"type\":\"Stat|
              00000030  75 73 50 61 74 63 68 65  64 5c 22 7d 22 3a 7b 22  |usPatched\"}":{"|
              00000040  2e 22 3a 7b 7d 2c 22 66  3a 6c 61 73 74 54 72 61  |.":{},"f:lastTra|
              00000050  6e 73 69 74 69 6f 6e 54  69 6d 65 22 3a 7b 7d 2c  |nsitionTime":{},|
              00000060  22 66 3a 6c 61 73 74 55  70 64 61 74 65 54 69 6d  |"f:lastUpdateTim|
              00000070  65 22 3a 7b 7d 2c 22 66  3a 73 74 61 74 75 73 22  |e":{},"f:status"|
              00000080  3a 7b 7d 2c 22 66 3a 74  79 70 65 22 3a 7b 7d 7d  |:{},"f:type":{}}|
              00000090  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.DeploymentSpec) {
      Replicas: (*int32)(1),
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=2) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=2) {
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      },
      Strategy: (v1.DeploymentStrategy) {
        Type: (v1.DeploymentStrategyType) (len=13) "RollingUpdate",
        RollingUpdate: (*v1.RollingUpdateDeployment)({
          MaxUnavailable: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          }),
          MaxSurge: (*intstr.IntOrString)({
            Type: (intstr.Type) 1,
            IntVal: (int32) 0,
            StrVal: (string) (len=3) "25%"
          })
        })
      },
      MinReadySeconds: (int32) 0,
      RevisionHistoryLimit: (*int32)(10),
      Paused: (bool) false,
      ProgressDeadlineSeconds: (*int32)(600)
    },
    Status: (v1.DeploymentStatus) {
      ObservedGeneration: (int64) 1,
      Replicas: (int32) 1,
      UpdatedReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      UnavailableReplicas: (int32) 0,
      Conditions: ([]v1.DeploymentCondition) (len=1) {
        (v1.DeploymentCondition) {
          Type: (v1.DeploymentConditionType) (len=13) "StatusPatched",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastUpdateTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      CollisionCount: (*int32)(<nil>)
    }
  }


  I0703 13:31:27.449404 21 deployment.go:39] New ReplicaSet "test-deployment-gt6hx-c8586b885" of Deployment "test-deployment-gt6hx":
  (v1.ReplicaSet) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=31) "test-deployment-gt6hx-c8586b885",
      GenerateName: (string) "",
      Namespace: (string) (len=15) "deployment-2984",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "9efcebfe-346a-4c2b-8d2d-50f7ee5d7020",
      ResourceVersion: (string) (len=5) "28177",
      Generation: (int64) 1,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855610281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=3) "e2e": (string) (len=7) "testing",
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=41) "deployment.kubernetes.io/desired-replicas": (string) (len=1) "1",
        (string) (len=37) "deployment.kubernetes.io/max-replicas": (string) (len=1) "2",
        (string) (len=33) "deployment.kubernetes.io/revision": (string) (len=1) "1"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "Deployment",
          Name: (string) (len=21) "test-deployment-gt6hx",
          UID: (types.UID) (len=36) "30bf63d5-eb79-4650-8024-b34c0ace1c8c",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=2) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=803) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 64 65 70 6c 6f 79  |".":{},"f:deploy|
              00000030  6d 65 6e 74 2e 6b 75 62  65 72 6e 65 74 65 73 2e  |ment.kubernetes.|
              00000040  69 6f 2f 64 65 73 69 72  65 64 2d 72 65 70 6c 69  |io/desired-repli|
              00000050  63 61 73 22 3a 7b 7d 2c  22 66 3a 64 65 70 6c 6f  |cas":{},"f:deplo|
              00000060  79 6d 65 6e 74 2e 6b 75  62 65 72 6e 65 74 65 73  |yment.kubernetes|
              00000070  2e 69 6f 2f 6d 61 78 2d  72 65 70 6c 69 63 61 73  |.io/max-replicas|
              00000080  22 3a 7b 7d 2c 22 66 3a  64 65 70 6c 6f 79 6d 65  |":{},"f:deployme|
              00000090  6e 74 2e 6b 75 62 65 72  6e 65 74 65 73 2e 69 6f  |nt.kubernetes.io|
              000000a0  2f 72 65 76 69 73 69 6f  6e 22 3a 7b 7d 7d 2c 22  |/revision":{}},"|
              000000b0  66 3a 6c 61 62 65 6c 73  22 3a 7b 22 2e 22 3a 7b  |f:labels":{".":{|
              000000c0  7d 2c 22 66 3a 65 32 65  22 3a 7b 7d 2c 22 66 3a  |},"f:e2e":{},"f:|
              000000d0  6e 61 6d 65 22 3a 7b 7d  2c 22 66 3a 70 6f 64 2d  |name":{},"f:pod-|
              000000e0  74 65 6d 70 6c 61 74 65  2d 68 61 73 68 22 3a 7b  |template-hash":{|
              000000f0  7d 7d 2c 22 66 3a 6f 77  6e 65 72 52 65 66 65 72  |}},"f:ownerRefer|
              00000100  65 6e 63 65 73 22 3a 7b  22 2e 22 3a 7b 7d 2c 22  |ences":{".":{},"|
              00000110  6b 3a 7b 5c 22 75 69 64  5c 22 3a 5c 22 33 30 62  |k:{\"uid\":\"30b|
              00000120  66 36 33 64 35 2d 65 62  37 39 2d 34 36 35 30 2d  |f63d5-eb79-4650-|
              00000130  38 30 32 34 2d 62 33 34  63 30 61 63 65 31 63 38  |8024-b34c0ace1c8|
              00000140  63 5c 22 7d 22 3a 7b 7d  7d 7d 2c 22 66 3a 73 70  |c\"}":{}}},"f:sp|
              00000150  65 63 22 3a 7b 22 66 3a  72 65 70 6c 69 63 61 73  |ec":{"f:replicas|
              00000160  22 3a 7b 7d 2c 22 66 3a  73 65 6c 65 63 74 6f 72  |":{},"f:selector|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 65 6d 70 6c 61 74 65  |":{},"f:template|
              00000180  22 3a 7b 22 66 3a 6d 65  74 61 64 61 74 61 22 3a  |":{"f:metadata":|
              00000190  7b 22 66 3a 6c 61 62 65  6c 73 22 3a 7b 22 2e 22  |{"f:labels":{"."|
              000001a0  3a 7b 7d 2c 22 66 3a 65  32 65 22 3a 7b 7d 2c 22  |:{},"f:e2e":{},"|
              000001b0  66 3a 6e 61 6d 65 22 3a  7b 7d 2c 22 66 3a 70 6f  |f:name":{},"f:po|
              000001c0  64 2d 74 65 6d 70 6c 61  74 65 2d 68 61 73 68 22  |d-template-hash"|
              000001d0  3a 7b 7d 7d 7d 2c 22 66  3a 73 70 65 63 22 3a 7b  |:{}}},"f:spec":{|
              000001e0  22 66 3a 63 6f 6e 74 61  69 6e 65 72 73 22 3a 7b  |"f:containers":{|
              000001f0  22 6b 3a 7b 5c 22 6e 61  6d 65 5c 22 3a 5c 22 68  |"k:{\"name\":\"h|
              00000200  74 74 70 64 5c 22 7d 22  3a 7b 22 2e 22 3a 7b 7d  |ttpd\"}":{".":{}|
              00000210  2c 22 66 3a 69 6d 61 67  65 22 3a 7b 7d 2c 22 66  |,"f:image":{},"f|
              00000220  3a 69 6d 61 67 65 50 75  6c 6c 50 6f 6c 69 63 79  |:imagePullPolicy|
              00000230  22 3a 7b 7d 2c 22 66 3a  6e 61 6d 65 22 3a 7b 7d  |":{},"f:name":{}|
              00000240  2c 22 66 3a 72 65 73 6f  75 72 63 65 73 22 3a 7b  |,"f:resources":{|
              00000250  7d 2c 22 66 3a 73 65 63  75 72 69 74 79 43 6f 6e  |},"f:securityCon|
              00000260  74 65 78 74 22 3a 7b 7d  2c 22 66 3a 74 65 72 6d  |text":{},"f:term|
              00000270  69 6e 61 74 69 6f 6e 4d  65 73 73 61 67 65 50 61  |inationMessagePa|
              00000280  74 68 22 3a 7b 7d 2c 22  66 3a 74 65 72 6d 69 6e  |th":{},"f:termin|
              00000290  61 74 69 6f 6e 4d 65 73  73 61 67 65 50 6f 6c 69  |ationMessagePoli|
              000002a0  63 79 22 3a 7b 7d 7d 7d  2c 22 66 3a 64 6e 73 50  |cy":{}}},"f:dnsP|
              000002b0  6f 6c 69 63 79 22 3a 7b  7d 2c 22 66 3a 72 65 73  |olicy":{},"f:res|
              000002c0  74 61 72 74 50 6f 6c 69  63 79 22 3a 7b 7d 2c 22  |tartPolicy":{},"|
              000002d0  66 3a 73 63 68 65 64 75  6c 65 72 4e 61 6d 65 22  |f:schedulerName"|
              000002e0  3a 7b 7d 2c 22 66 3a 73  65 63 75 72 69 74 79 43  |:{},"f:securityC|
              000002f0  6f 6e 74 65 78 74 22 3a  7b 7d 2c 22 66 3a 74 65  |ontext":{},"f:te|
              00000300  72 6d 69 6e 61 74 69 6f  6e 47 72 61 63 65 50 65  |rminationGracePe|
              00000310  72 69 6f 64 53 65 63 6f  6e 64 73 22 3a 7b 7d 7d  |riodSeconds":{}}|
              00000320  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=7) "apps/v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=130) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  61 76 61 69 6c 61 62 6c  65 52 65 70 6c 69 63 61  |availableReplica|
              00000020  73 22 3a 7b 7d 2c 22 66  3a 66 75 6c 6c 79 4c 61  |s":{},"f:fullyLa|
              00000030  62 65 6c 65 64 52 65 70  6c 69 63 61 73 22 3a 7b  |beledReplicas":{|
              00000040  7d 2c 22 66 3a 6f 62 73  65 72 76 65 64 47 65 6e  |},"f:observedGen|
              00000050  65 72 61 74 69 6f 6e 22  3a 7b 7d 2c 22 66 3a 72  |eration":{},"f:r|
              00000060  65 61 64 79 52 65 70 6c  69 63 61 73 22 3a 7b 7d  |eadyReplicas":{}|
              00000070  2c 22 66 3a 72 65 70 6c  69 63 61 73 22 3a 7b 7d  |,"f:replicas":{}|
              00000080  7d 7d                                             |}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.ReplicaSetSpec) {
      Replicas: (*int32)(1),
      MinReadySeconds: (int32) 0,
      Selector: (*v1.LabelSelector)({
        MatchLabels: (map[string]string) (len=3) {
          (string) (len=3) "e2e": (string) (len=7) "testing",
          (string) (len=4) "name": (string) (len=5) "httpd",
          (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885"
        },
        MatchExpressions: ([]v1.LabelSelectorRequirement) <nil>
      }),
      Template: (v1.PodTemplateSpec) {
        ObjectMeta: (v1.ObjectMeta) {
          Name: (string) "",
          GenerateName: (string) "",
          Namespace: (string) "",
          SelfLink: (string) "",
          UID: (types.UID) "",
          ResourceVersion: (string) "",
          Generation: (int64) 0,
          CreationTimestamp: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          DeletionTimestamp: (*v1.Time)(<nil>),
          DeletionGracePeriodSeconds: (*int64)(<nil>),
          Labels: (map[string]string) (len=3) {
            (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
            (string) (len=3) "e2e": (string) (len=7) "testing",
            (string) (len=4) "name": (string) (len=5) "httpd"
          },
          Annotations: (map[string]string) <nil>,
          OwnerReferences: ([]v1.OwnerReference) <nil>,
          Finalizers: ([]string) <nil>,
          ManagedFields: ([]v1.ManagedFieldsEntry) <nil>
        },
        Spec: (v1.PodSpec) {
          Volumes: ([]v1.Volume) <nil>,
          InitContainers: ([]v1.Container) <nil>,
          Containers: ([]v1.Container) (len=1) {
            (v1.Container) {
              Name: (string) (len=5) "httpd",
              Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
              Command: ([]string) <nil>,
              Args: ([]string) <nil>,
              WorkingDir: (string) "",
              Ports: ([]v1.ContainerPort) <nil>,
              EnvFrom: ([]v1.EnvFromSource) <nil>,
              Env: ([]v1.EnvVar) <nil>,
              Resources: (v1.ResourceRequirements) {
                Limits: (v1.ResourceList) <nil>,
                Requests: (v1.ResourceList) <nil>,
                Claims: ([]v1.ResourceClaim) <nil>
              },
              ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
              RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
              VolumeMounts: ([]v1.VolumeMount) <nil>,
              VolumeDevices: ([]v1.VolumeDevice) <nil>,
              LivenessProbe: (*v1.Probe)(<nil>),
              ReadinessProbe: (*v1.Probe)(<nil>),
              StartupProbe: (*v1.Probe)(<nil>),
              Lifecycle: (*v1.Lifecycle)(<nil>),
              TerminationMessagePath: (string) (len=20) "/dev/termination-log",
              TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
              ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
              SecurityContext: (*v1.SecurityContext)({
                Capabilities: (*v1.Capabilities)(<nil>),
                Privileged: (*bool)(<nil>),
                SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
                WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
                RunAsUser: (*int64)(<nil>),
                RunAsGroup: (*int64)(<nil>),
                RunAsNonRoot: (*bool)(<nil>),
                ReadOnlyRootFilesystem: (*bool)(<nil>),
                AllowPrivilegeEscalation: (*bool)(<nil>),
                ProcMount: (*v1.ProcMountType)(<nil>),
                SeccompProfile: (*v1.SeccompProfile)(<nil>),
                AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
              }),
              Stdin: (bool) false,
              StdinOnce: (bool) false,
              TTY: (bool) false
            }
          },
          EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
          RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
          TerminationGracePeriodSeconds: (*int64)(0),
          ActiveDeadlineSeconds: (*int64)(<nil>),
          DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
          NodeSelector: (map[string]string) <nil>,
          ServiceAccountName: (string) "",
          DeprecatedServiceAccount: (string) "",
          AutomountServiceAccountToken: (*bool)(<nil>),
          NodeName: (string) "",
          HostNetwork: (bool) false,
          HostPID: (bool) false,
          HostIPC: (bool) false,
          ShareProcessNamespace: (*bool)(<nil>),
          SecurityContext: (*v1.PodSecurityContext)({
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            SupplementalGroups: ([]int64) <nil>,
            FSGroup: (*int64)(<nil>),
            Sysctls: ([]v1.Sysctl) <nil>,
            FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
          Hostname: (string) "",
          Subdomain: (string) "",
          Affinity: (*v1.Affinity)(<nil>),
          SchedulerName: (string) (len=17) "default-scheduler",
          Tolerations: ([]v1.Toleration) <nil>,
          HostAliases: ([]v1.HostAlias) <nil>,
          PriorityClassName: (string) "",
          Priority: (*int32)(<nil>),
          DNSConfig: (*v1.PodDNSConfig)(<nil>),
          ReadinessGates: ([]v1.PodReadinessGate) <nil>,
          RuntimeClassName: (*string)(<nil>),
          EnableServiceLinks: (*bool)(<nil>),
          PreemptionPolicy: (*v1.PreemptionPolicy)(<nil>),
          Overhead: (v1.ResourceList) <nil>,
          TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
          SetHostnameAsFQDN: (*bool)(<nil>),
          OS: (*v1.PodOS)(<nil>),
          HostUsers: (*bool)(<nil>),
          SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
          ResourceClaims: ([]v1.PodResourceClaim) <nil>
        }
      }
    },
    Status: (v1.ReplicaSetStatus) {
      Replicas: (int32) 1,
      FullyLabeledReplicas: (int32) 1,
      ReadyReplicas: (int32) 1,
      AvailableReplicas: (int32) 1,
      ObservedGeneration: (int64) 1,
      Conditions: ([]v1.ReplicaSetCondition) <nil>
    }
  }

  I0703 13:31:27.454187 21 deployment.go:67] Pod "test-deployment-gt6hx-c8586b885-2rvqj" is available:
  (v1.Pod) {
    TypeMeta: (v1.TypeMeta) {
      Kind: (string) "",
      APIVersion: (string) ""
    },
    ObjectMeta: (v1.ObjectMeta) {
      Name: (string) (len=37) "test-deployment-gt6hx-c8586b885-2rvqj",
      GenerateName: (string) (len=32) "test-deployment-gt6hx-c8586b885-",
      Namespace: (string) (len=15) "deployment-2984",
      SelfLink: (string) "",
      UID: (types.UID) (len=36) "242f05b0-0550-4ba2-8f64-00ab41df078f",
      ResourceVersion: (string) (len=5) "28176",
      Generation: (int64) 0,
      CreationTimestamp: (v1.Time) {
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855610281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      },
      DeletionTimestamp: (*v1.Time)(<nil>),
      DeletionGracePeriodSeconds: (*int64)(<nil>),
      Labels: (map[string]string) (len=3) {
        (string) (len=4) "name": (string) (len=5) "httpd",
        (string) (len=17) "pod-template-hash": (string) (len=9) "c8586b885",
        (string) (len=3) "e2e": (string) (len=7) "testing"
      },
      Annotations: (map[string]string) (len=3) {
        (string) (len=33) "cni.projectcalico.org/containerID": (string) (len=64) "d3f8e88f3d30ca1c0bace17c754495542aa72f89bcc8eb1649403ca32f724dc6",
        (string) (len=27) "cni.projectcalico.org/podIP": (string) (len=13) "10.42.2.79/32",
        (string) (len=28) "cni.projectcalico.org/podIPs": (string) (len=13) "10.42.2.79/32"
      },
      OwnerReferences: ([]v1.OwnerReference) (len=1) {
        (v1.OwnerReference) {
          APIVersion: (string) (len=7) "apps/v1",
          Kind: (string) (len=10) "ReplicaSet",
          Name: (string) (len=31) "test-deployment-gt6hx-c8586b885",
          UID: (types.UID) (len=36) "9efcebfe-346a-4c2b-8d2d-50f7ee5d7020",
          Controller: (*bool)(true),
          BlockOwnerDeletion: (*bool)(true)
        }
      },
      Finalizers: ([]string) <nil>,
      ManagedFields: ([]v1.ManagedFieldsEntry) (len=3) {
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=23) "kube-controller-manager",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=548) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 67 65 6e 65 72 61  74 65 4e 61 6d 65 22 3a  |f:generateName":|
              00000020  7b 7d 2c 22 66 3a 6c 61  62 65 6c 73 22 3a 7b 22  |{},"f:labels":{"|
              00000030  2e 22 3a 7b 7d 2c 22 66  3a 65 32 65 22 3a 7b 7d  |.":{},"f:e2e":{}|
              00000040  2c 22 66 3a 6e 61 6d 65  22 3a 7b 7d 2c 22 66 3a  |,"f:name":{},"f:|
              00000050  70 6f 64 2d 74 65 6d 70  6c 61 74 65 2d 68 61 73  |pod-template-has|
              00000060  68 22 3a 7b 7d 7d 2c 22  66 3a 6f 77 6e 65 72 52  |h":{}},"f:ownerR|
              00000070  65 66 65 72 65 6e 63 65  73 22 3a 7b 22 2e 22 3a  |eferences":{".":|
              00000080  7b 7d 2c 22 6b 3a 7b 5c  22 75 69 64 5c 22 3a 5c  |{},"k:{\"uid\":\|
              00000090  22 39 65 66 63 65 62 66  65 2d 33 34 36 61 2d 34  |"9efcebfe-346a-4|
              000000a0  63 32 62 2d 38 64 32 64  2d 35 30 66 37 65 65 35  |c2b-8d2d-50f7ee5|
              000000b0  64 37 30 32 30 5c 22 7d  22 3a 7b 7d 7d 7d 2c 22  |d7020\"}":{}}},"|
              000000c0  66 3a 73 70 65 63 22 3a  7b 22 66 3a 63 6f 6e 74  |f:spec":{"f:cont|
              000000d0  61 69 6e 65 72 73 22 3a  7b 22 6b 3a 7b 5c 22 6e  |ainers":{"k:{\"n|
              000000e0  61 6d 65 5c 22 3a 5c 22  68 74 74 70 64 5c 22 7d  |ame\":\"httpd\"}|
              000000f0  22 3a 7b 22 2e 22 3a 7b  7d 2c 22 66 3a 69 6d 61  |":{".":{},"f:ima|
              00000100  67 65 22 3a 7b 7d 2c 22  66 3a 69 6d 61 67 65 50  |ge":{},"f:imageP|
              00000110  75 6c 6c 50 6f 6c 69 63  79 22 3a 7b 7d 2c 22 66  |ullPolicy":{},"f|
              00000120  3a 6e 61 6d 65 22 3a 7b  7d 2c 22 66 3a 72 65 73  |:name":{},"f:res|
              00000130  6f 75 72 63 65 73 22 3a  7b 7d 2c 22 66 3a 73 65  |ources":{},"f:se|
              00000140  63 75 72 69 74 79 43 6f  6e 74 65 78 74 22 3a 7b  |curityContext":{|
              00000150  7d 2c 22 66 3a 74 65 72  6d 69 6e 61 74 69 6f 6e  |},"f:termination|
              00000160  4d 65 73 73 61 67 65 50  61 74 68 22 3a 7b 7d 2c  |MessagePath":{},|
              00000170  22 66 3a 74 65 72 6d 69  6e 61 74 69 6f 6e 4d 65  |"f:terminationMe|
              00000180  73 73 61 67 65 50 6f 6c  69 63 79 22 3a 7b 7d 7d  |ssagePolicy":{}}|
              00000190  7d 2c 22 66 3a 64 6e 73  50 6f 6c 69 63 79 22 3a  |},"f:dnsPolicy":|
              000001a0  7b 7d 2c 22 66 3a 65 6e  61 62 6c 65 53 65 72 76  |{},"f:enableServ|
              000001b0  69 63 65 4c 69 6e 6b 73  22 3a 7b 7d 2c 22 66 3a  |iceLinks":{},"f:|
              000001c0  72 65 73 74 61 72 74 50  6f 6c 69 63 79 22 3a 7b  |restartPolicy":{|
              000001d0  7d 2c 22 66 3a 73 63 68  65 64 75 6c 65 72 4e 61  |},"f:schedulerNa|
              000001e0  6d 65 22 3a 7b 7d 2c 22  66 3a 73 65 63 75 72 69  |me":{},"f:securi|
              000001f0  74 79 43 6f 6e 74 65 78  74 22 3a 7b 7d 2c 22 66  |tyContext":{},"f|
              00000200  3a 74 65 72 6d 69 6e 61  74 69 6f 6e 47 72 61 63  |:terminationGrac|
              00000210  65 50 65 72 69 6f 64 53  65 63 6f 6e 64 73 22 3a  |ePeriodSeconds":|
              00000220  7b 7d 7d 7d                                       |{}}}|
            }
          }),
          Subresource: (string) ""
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=6) "calico",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610284,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=153) {
              00000000  7b 22 66 3a 6d 65 74 61  64 61 74 61 22 3a 7b 22  |{"f:metadata":{"|
              00000010  66 3a 61 6e 6e 6f 74 61  74 69 6f 6e 73 22 3a 7b  |f:annotations":{|
              00000020  22 2e 22 3a 7b 7d 2c 22  66 3a 63 6e 69 2e 70 72  |".":{},"f:cni.pr|
              00000030  6f 6a 65 63 74 63 61 6c  69 63 6f 2e 6f 72 67 2f  |ojectcalico.org/|
              00000040  63 6f 6e 74 61 69 6e 65  72 49 44 22 3a 7b 7d 2c  |containerID":{},|
              00000050  22 66 3a 63 6e 69 2e 70  72 6f 6a 65 63 74 63 61  |"f:cni.projectca|
              00000060  6c 69 63 6f 2e 6f 72 67  2f 70 6f 64 49 50 22 3a  |lico.org/podIP":|
              00000070  7b 7d 2c 22 66 3a 63 6e  69 2e 70 72 6f 6a 65 63  |{},"f:cni.projec|
              00000080  74 63 61 6c 69 63 6f 2e  6f 72 67 2f 70 6f 64 49  |tcalico.org/podI|
              00000090  50 73 22 3a 7b 7d 7d 7d  7d                       |Ps":{}}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        },
        (v1.ManagedFieldsEntry) {
          Manager: (string) (len=7) "kubelet",
          Operation: (v1.ManagedFieldsOperationType) (len=6) "Update",
          APIVersion: (string) (len=2) "v1",
          Time: (*v1.Time)({
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          }),
          FieldsType: (string) (len=8) "FieldsV1",
          FieldsV1: (*v1.FieldsV1)({
            Raw: ([]uint8) (len=659) {
              00000000  7b 22 66 3a 73 74 61 74  75 73 22 3a 7b 22 66 3a  |{"f:status":{"f:|
              00000010  63 6f 6e 64 69 74 69 6f  6e 73 22 3a 7b 22 6b 3a  |conditions":{"k:|
              00000020  7b 5c 22 74 79 70 65 5c  22 3a 5c 22 43 6f 6e 74  |{\"type\":\"Cont|
              00000030  61 69 6e 65 72 73 52 65  61 64 79 5c 22 7d 22 3a  |ainersReady\"}":|
              00000040  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000050  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000060  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000070  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000080  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000090  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              000000a0  22 49 6e 69 74 69 61 6c  69 7a 65 64 5c 22 7d 22  |"Initialized\"}"|
              000000b0  3a 7b 22 2e 22 3a 7b 7d  2c 22 66 3a 6c 61 73 74  |:{".":{},"f:last|
              000000c0  50 72 6f 62 65 54 69 6d  65 22 3a 7b 7d 2c 22 66  |ProbeTime":{},"f|
              000000d0  3a 6c 61 73 74 54 72 61  6e 73 69 74 69 6f 6e 54  |:lastTransitionT|
              000000e0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 73 74 61 74 75  |ime":{},"f:statu|
              000000f0  73 22 3a 7b 7d 2c 22 66  3a 74 79 70 65 22 3a 7b  |s":{},"f:type":{|
              00000100  7d 7d 2c 22 6b 3a 7b 5c  22 74 79 70 65 5c 22 3a  |}},"k:{\"type\":|
              00000110  5c 22 50 6f 64 52 65 61  64 79 54 6f 53 74 61 72  |\"PodReadyToStar|
              00000120  74 43 6f 6e 74 61 69 6e  65 72 73 5c 22 7d 22 3a  |tContainers\"}":|
              00000130  7b 22 2e 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 50  |{".":{},"f:lastP|
              00000140  72 6f 62 65 54 69 6d 65  22 3a 7b 7d 2c 22 66 3a  |robeTime":{},"f:|
              00000150  6c 61 73 74 54 72 61 6e  73 69 74 69 6f 6e 54 69  |lastTransitionTi|
              00000160  6d 65 22 3a 7b 7d 2c 22  66 3a 73 74 61 74 75 73  |me":{},"f:status|
              00000170  22 3a 7b 7d 2c 22 66 3a  74 79 70 65 22 3a 7b 7d  |":{},"f:type":{}|
              00000180  7d 2c 22 6b 3a 7b 5c 22  74 79 70 65 5c 22 3a 5c  |},"k:{\"type\":\|
              00000190  22 52 65 61 64 79 5c 22  7d 22 3a 7b 22 2e 22 3a  |"Ready\"}":{".":|
              000001a0  7b 7d 2c 22 66 3a 6c 61  73 74 50 72 6f 62 65 54  |{},"f:lastProbeT|
              000001b0  69 6d 65 22 3a 7b 7d 2c  22 66 3a 6c 61 73 74 54  |ime":{},"f:lastT|
              000001c0  72 61 6e 73 69 74 69 6f  6e 54 69 6d 65 22 3a 7b  |ransitionTime":{|
              000001d0  7d 2c 22 66 3a 73 74 61  74 75 73 22 3a 7b 7d 2c  |},"f:status":{},|
              000001e0  22 66 3a 74 79 70 65 22  3a 7b 7d 7d 7d 2c 22 66  |"f:type":{}}},"f|
              000001f0  3a 63 6f 6e 74 61 69 6e  65 72 53 74 61 74 75 73  |:containerStatus|
              00000200  65 73 22 3a 7b 7d 2c 22  66 3a 68 6f 73 74 49 50  |es":{},"f:hostIP|
              00000210  22 3a 7b 7d 2c 22 66 3a  68 6f 73 74 49 50 73 22  |":{},"f:hostIPs"|
              00000220  3a 7b 7d 2c 22 66 3a 70  68 61 73 65 22 3a 7b 7d  |:{},"f:phase":{}|
              00000230  2c 22 66 3a 70 6f 64 49  50 22 3a 7b 7d 2c 22 66  |,"f:podIP":{},"f|
              00000240  3a 70 6f 64 49 50 73 22  3a 7b 22 2e 22 3a 7b 7d  |:podIPs":{".":{}|
              00000250  2c 22 6b 3a 7b 5c 22 69  70 5c 22 3a 5c 22 31 30  |,"k:{\"ip\":\"10|
              00000260  2e 34 32 2e 32 2e 37 39  5c 22 7d 22 3a 7b 22 2e  |.42.2.79\"}":{".|
              00000270  22 3a 7b 7d 2c 22 66 3a  69 70 22 3a 7b 7d 7d 7d  |":{},"f:ip":{}}}|
              00000280  2c 22 66 3a 73 74 61 72  74 54 69 6d 65 22 3a 7b  |,"f:startTime":{|
              00000290  7d 7d 7d                                          |}}}|
            }
          }),
          Subresource: (string) (len=6) "status"
        }
      }
    },
    Spec: (v1.PodSpec) {
      Volumes: ([]v1.Volume) (len=1) {
        (v1.Volume) {
          Name: (string) (len=21) "kube-api-access-tfctj",
          VolumeSource: (v1.VolumeSource) {
            HostPath: (*v1.HostPathVolumeSource)(<nil>),
            EmptyDir: (*v1.EmptyDirVolumeSource)(<nil>),
            GCEPersistentDisk: (*v1.GCEPersistentDiskVolumeSource)(<nil>),
            AWSElasticBlockStore: (*v1.AWSElasticBlockStoreVolumeSource)(<nil>),
            GitRepo: (*v1.GitRepoVolumeSource)(<nil>),
            Secret: (*v1.SecretVolumeSource)(<nil>),
            NFS: (*v1.NFSVolumeSource)(<nil>),
            ISCSI: (*v1.ISCSIVolumeSource)(<nil>),
            Glusterfs: (*v1.GlusterfsVolumeSource)(<nil>),
            PersistentVolumeClaim: (*v1.PersistentVolumeClaimVolumeSource)(<nil>),
            RBD: (*v1.RBDVolumeSource)(<nil>),
            FlexVolume: (*v1.FlexVolumeSource)(<nil>),
            Cinder: (*v1.CinderVolumeSource)(<nil>),
            CephFS: (*v1.CephFSVolumeSource)(<nil>),
            Flocker: (*v1.FlockerVolumeSource)(<nil>),
            DownwardAPI: (*v1.DownwardAPIVolumeSource)(<nil>),
            FC: (*v1.FCVolumeSource)(<nil>),
            AzureFile: (*v1.AzureFileVolumeSource)(<nil>),
            ConfigMap: (*v1.ConfigMapVolumeSource)(<nil>),
            VsphereVolume: (*v1.VsphereVirtualDiskVolumeSource)(<nil>),
            Quobyte: (*v1.QuobyteVolumeSource)(<nil>),
            AzureDisk: (*v1.AzureDiskVolumeSource)(<nil>),
            PhotonPersistentDisk: (*v1.PhotonPersistentDiskVolumeSource)(<nil>),
            Projected: (*v1.ProjectedVolumeSource)({
              Sources: ([]v1.VolumeProjection) (len=3) {
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)({
                    Audience: (string) "",
                    ExpirationSeconds: (*int64)(3607),
                    Path: (string) (len=5) "token"
                  }),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)(<nil>),
                  ConfigMap: (*v1.ConfigMapProjection)({
                    LocalObjectReference: (v1.LocalObjectReference) {
                      Name: (string) (len=16) "kube-root-ca.crt"
                    },
                    Items: ([]v1.KeyToPath) (len=1) {
                      (v1.KeyToPath) {
                        Key: (string) (len=6) "ca.crt",
                        Path: (string) (len=6) "ca.crt",
                        Mode: (*int32)(<nil>)
                      }
                    },
                    Optional: (*bool)(<nil>)
                  }),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                },
                (v1.VolumeProjection) {
                  Secret: (*v1.SecretProjection)(<nil>),
                  DownwardAPI: (*v1.DownwardAPIProjection)({
                    Items: ([]v1.DownwardAPIVolumeFile) (len=1) {
                      (v1.DownwardAPIVolumeFile) {
                        Path: (string) (len=9) "namespace",
                        FieldRef: (*v1.ObjectFieldSelector)({
                          APIVersion: (string) (len=2) "v1",
                          FieldPath: (string) (len=18) "metadata.namespace"
                        }),
                        ResourceFieldRef: (*v1.ResourceFieldSelector)(<nil>),
                        Mode: (*int32)(<nil>)
                      }
                    }
                  }),
                  ConfigMap: (*v1.ConfigMapProjection)(<nil>),
                  ServiceAccountToken: (*v1.ServiceAccountTokenProjection)(<nil>),
                  ClusterTrustBundle: (*v1.ClusterTrustBundleProjection)(<nil>)
                }
              },
              DefaultMode: (*int32)(420)
            }),
            PortworxVolume: (*v1.PortworxVolumeSource)(<nil>),
            ScaleIO: (*v1.ScaleIOVolumeSource)(<nil>),
            StorageOS: (*v1.StorageOSVolumeSource)(<nil>),
            CSI: (*v1.CSIVolumeSource)(<nil>),
            Ephemeral: (*v1.EphemeralVolumeSource)(<nil>)
          }
        }
      },
      InitContainers: ([]v1.Container) <nil>,
      Containers: ([]v1.Container) (len=1) {
        (v1.Container) {
          Name: (string) (len=5) "httpd",
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          Command: ([]string) <nil>,
          Args: ([]string) <nil>,
          WorkingDir: (string) "",
          Ports: ([]v1.ContainerPort) <nil>,
          EnvFrom: ([]v1.EnvFromSource) <nil>,
          Env: ([]v1.EnvVar) <nil>,
          Resources: (v1.ResourceRequirements) {
            Limits: (v1.ResourceList) <nil>,
            Requests: (v1.ResourceList) <nil>,
            Claims: ([]v1.ResourceClaim) <nil>
          },
          ResizePolicy: ([]v1.ContainerResizePolicy) <nil>,
          RestartPolicy: (*v1.ContainerRestartPolicy)(<nil>),
          VolumeMounts: ([]v1.VolumeMount) (len=1) {
            (v1.VolumeMount) {
              Name: (string) (len=21) "kube-api-access-tfctj",
              ReadOnly: (bool) true,
              RecursiveReadOnly: (*v1.RecursiveReadOnlyMode)(<nil>),
              MountPath: (string) (len=45) "/var/run/secrets/kubernetes.io/serviceaccount",
              SubPath: (string) "",
              MountPropagation: (*v1.MountPropagationMode)(<nil>),
              SubPathExpr: (string) ""
            }
          },
          VolumeDevices: ([]v1.VolumeDevice) <nil>,
          LivenessProbe: (*v1.Probe)(<nil>),
          ReadinessProbe: (*v1.Probe)(<nil>),
          StartupProbe: (*v1.Probe)(<nil>),
          Lifecycle: (*v1.Lifecycle)(<nil>),
          TerminationMessagePath: (string) (len=20) "/dev/termination-log",
          TerminationMessagePolicy: (v1.TerminationMessagePolicy) (len=4) "File",
          ImagePullPolicy: (v1.PullPolicy) (len=12) "IfNotPresent",
          SecurityContext: (*v1.SecurityContext)({
            Capabilities: (*v1.Capabilities)(<nil>),
            Privileged: (*bool)(<nil>),
            SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
            WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
            RunAsUser: (*int64)(<nil>),
            RunAsGroup: (*int64)(<nil>),
            RunAsNonRoot: (*bool)(<nil>),
            ReadOnlyRootFilesystem: (*bool)(<nil>),
            AllowPrivilegeEscalation: (*bool)(<nil>),
            ProcMount: (*v1.ProcMountType)(<nil>),
            SeccompProfile: (*v1.SeccompProfile)(<nil>),
            AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
          }),
          Stdin: (bool) false,
          StdinOnce: (bool) false,
          TTY: (bool) false
        }
      },
      EphemeralContainers: ([]v1.EphemeralContainer) <nil>,
      RestartPolicy: (v1.RestartPolicy) (len=6) "Always",
      TerminationGracePeriodSeconds: (*int64)(0),
      ActiveDeadlineSeconds: (*int64)(<nil>),
      DNSPolicy: (v1.DNSPolicy) (len=12) "ClusterFirst",
      NodeSelector: (map[string]string) <nil>,
      ServiceAccountName: (string) (len=7) "default",
      DeprecatedServiceAccount: (string) (len=7) "default",
      AutomountServiceAccountToken: (*bool)(<nil>),
      NodeName: (string) (len=15) "ip-172-31-4-210",
      HostNetwork: (bool) false,
      HostPID: (bool) false,
      HostIPC: (bool) false,
      ShareProcessNamespace: (*bool)(<nil>),
      SecurityContext: (*v1.PodSecurityContext)({
        SELinuxOptions: (*v1.SELinuxOptions)(<nil>),
        WindowsOptions: (*v1.WindowsSecurityContextOptions)(<nil>),
        RunAsUser: (*int64)(<nil>),
        RunAsGroup: (*int64)(<nil>),
        RunAsNonRoot: (*bool)(<nil>),
        SupplementalGroups: ([]int64) <nil>,
        FSGroup: (*int64)(<nil>),
        Sysctls: ([]v1.Sysctl) <nil>,
        FSGroupChangePolicy: (*v1.PodFSGroupChangePolicy)(<nil>),
        SeccompProfile: (*v1.SeccompProfile)(<nil>),
        AppArmorProfile: (*v1.AppArmorProfile)(<nil>)
      }),
      ImagePullSecrets: ([]v1.LocalObjectReference) <nil>,
      Hostname: (string) "",
      Subdomain: (string) "",
      Affinity: (*v1.Affinity)(<nil>),
      SchedulerName: (string) (len=17) "default-scheduler",
      Tolerations: ([]v1.Toleration) (len=2) {
        (v1.Toleration) {
          Key: (string) (len=28) "node.kubernetes.io/not-ready",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        },
        (v1.Toleration) {
          Key: (string) (len=30) "node.kubernetes.io/unreachable",
          Operator: (v1.TolerationOperator) (len=6) "Exists",
          Value: (string) "",
          Effect: (v1.TaintEffect) (len=9) "NoExecute",
          TolerationSeconds: (*int64)(300)
        }
      },
      HostAliases: ([]v1.HostAlias) <nil>,
      PriorityClassName: (string) "",
      Priority: (*int32)(0),
      DNSConfig: (*v1.PodDNSConfig)(<nil>),
      ReadinessGates: ([]v1.PodReadinessGate) <nil>,
      RuntimeClassName: (*string)(<nil>),
      EnableServiceLinks: (*bool)(true),
      PreemptionPolicy: (*v1.PreemptionPolicy)((len=20) "PreemptLowerPriority"),
      Overhead: (v1.ResourceList) <nil>,
      TopologySpreadConstraints: ([]v1.TopologySpreadConstraint) <nil>,
      SetHostnameAsFQDN: (*bool)(<nil>),
      OS: (*v1.PodOS)(<nil>),
      HostUsers: (*bool)(<nil>),
      SchedulingGates: ([]v1.PodSchedulingGate) <nil>,
      ResourceClaims: ([]v1.PodResourceClaim) <nil>
    },
    Status: (v1.PodStatus) {
      Phase: (v1.PodPhase) (len=7) "Running",
      Conditions: ([]v1.PodCondition) (len=5) {
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=25) "PodReadyToStartContainers",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=11) "Initialized",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=5) "Ready",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=15) "ContainersReady",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610286,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        },
        (v1.PodCondition) {
          Type: (v1.PodConditionType) (len=12) "PodScheduled",
          Status: (v1.ConditionStatus) (len=4) "True",
          LastProbeTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 0,
              loc: (*time.Location)(<nil>)
            }
          },
          LastTransitionTime: (v1.Time) {
            Time: (time.Time) {
              wall: (uint64) 0,
              ext: (int64) 63855610281,
              loc: (*time.Location)({
                name: (string) (len=3) "UTC",
                zone: ([]time.zone) <nil>,
                tx: ([]time.zoneTrans) <nil>,
                extend: (string) "",
                cacheStart: (int64) 0,
                cacheEnd: (int64) 0,
                cacheZone: (*time.zone)(<nil>)
              })
            }
          },
          Reason: (string) "",
          Message: (string) ""
        }
      },
      Message: (string) "",
      Reason: (string) "",
      NominatedNodeName: (string) "",
      HostIP: (string) (len=12) "172.31.4.210",
      HostIPs: ([]v1.HostIP) (len=1) {
        (v1.HostIP) {
          IP: (string) (len=12) "172.31.4.210"
        }
      },
      PodIP: (string) (len=10) "10.42.2.79",
      PodIPs: ([]v1.PodIP) (len=1) {
        (v1.PodIP) {
          IP: (string) (len=10) "10.42.2.79"
        }
      },
      StartTime: (*v1.Time)({
        Time: (time.Time) {
          wall: (uint64) 0,
          ext: (int64) 63855610281,
          loc: (*time.Location)({
            name: (string) (len=3) "UTC",
            zone: ([]time.zone) <nil>,
            tx: ([]time.zoneTrans) <nil>,
            extend: (string) "",
            cacheStart: (int64) 0,
            cacheEnd: (int64) 0,
            cacheZone: (*time.zone)(<nil>)
          })
        }
      }),
      InitContainerStatuses: ([]v1.ContainerStatus) <nil>,
      ContainerStatuses: ([]v1.ContainerStatus) (len=1) {
        (v1.ContainerStatus) {
          Name: (string) (len=5) "httpd",
          State: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)({
              StartedAt: (v1.Time) {
                Time: (time.Time) {
                  wall: (uint64) 0,
                  ext: (int64) 63855610285,
                  loc: (*time.Location)(<already shown>)
                }
              }
            }),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          LastTerminationState: (v1.ContainerState) {
            Waiting: (*v1.ContainerStateWaiting)(<nil>),
            Running: (*v1.ContainerStateRunning)(<nil>),
            Terminated: (*v1.ContainerStateTerminated)(<nil>)
          },
          Ready: (bool) true,
          RestartCount: (int32) 0,
          Image: (string) (len=46) "registry.k8s.io/e2e-test-images/httpd:2.4.38-4",
          ImageID: (string) (len=127) "docker-pullable://registry.k8s.io/e2e-test-images/httpd@sha256:148b022f5c5da426fc2f3c14b5c0867e58ef05961510c84749ac1fddcb0fef22",
          ContainerID: (string) (len=73) "docker://30940913aa463c4e1434782e93b59218663d67b4ff4e918ff2352d44c49ba11d",
          Started: (*bool)(true),
          AllocatedResources: (v1.ResourceList) <nil>,
          Resources: (*v1.ResourceRequirements)(<nil>),
          VolumeMounts: ([]v1.VolumeMountStatus) <nil>
        }
      },
      QOSClass: (v1.PodQOSClass) (len=10) "BestEffort",
      EphemeralContainerStatuses: ([]v1.ContainerStatus) <nil>,
      Resize: (v1.PodResizeStatus) "",
      ResourceClaimStatuses: ([]v1.PodResourceClaimStatus) <nil>
    }
  }

  I0703 13:31:27.457027 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "deployment-2984" for this suite. @ 07/03/24 13:31:27.461
• [6.752 seconds]
------------------------------
SSSS
------------------------------
[sig-storage] StorageClasses CSI Conformance should run through the lifecycle of a StorageClass [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/storageclass.go:53
  STEP: Creating a kubernetes client @ 07/03/24 13:31:27.486
  I0703 13:31:27.486639 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename csi-storageclass @ 07/03/24 13:31:27.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:31:27.725
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:31:27.75
  E0703 13:31:27.804616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a StorageClass @ 07/03/24 13:31:27.808
  STEP: Get StorageClass "e2e-6pf9l" @ 07/03/24 13:31:27.858
  STEP: Patching the StorageClass "e2e-6pf9l" @ 07/03/24 13:31:27.889
  STEP: Delete StorageClass "e2e-6pf9l" @ 07/03/24 13:31:27.934
  STEP: Confirm deletion of StorageClass "e2e-6pf9l" @ 07/03/24 13:31:28.011
  STEP: Create a replacement StorageClass @ 07/03/24 13:31:28.052
  STEP: Updating StorageClass "e2e-v2-x4dml" @ 07/03/24 13:31:28.082
  STEP: Listing all StorageClass with the labelSelector: "e2e-v2-x4dml=updated" @ 07/03/24 13:31:28.123
  STEP: Deleting StorageClass "e2e-v2-x4dml" via DeleteCollection @ 07/03/24 13:31:28.126
  STEP: Confirm deletion of StorageClass "e2e-v2-x4dml" @ 07/03/24 13:31:28.136
  I0703 13:31:28.146268 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csi-storageclass-28" for this suite. @ 07/03/24 13:31:28.153
• [0.676 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that there exists conflict between pods with same hostPort and protocol but one using 0.0.0.0 hostIP [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:707
  STEP: Creating a kubernetes client @ 07/03/24 13:31:28.165
  I0703 13:31:28.165465 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-pred @ 07/03/24 13:31:28.167
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:31:28.261
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:31:28.27
  I0703 13:31:28.285169 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0703 13:31:28.316858 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0703 13:31:28.333754 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-137 before test
  I0703 13:31:28.405845 21 predicates.go:887] fleet-agent-0 from cattle-fleet-system started at 2024-07-03 12:03:04 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.406042 21 predicates.go:889] 	Container fleet-agent ready: true, restart count 0
  I0703 13:31:28.406123 21 predicates.go:889] 	Container fleet-agent-clusterstatus ready: true, restart count 0
  I0703 13:31:28.406215 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-dmpfp from cattle-system started at 2024-07-03 12:04:09 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.406343 21 predicates.go:889] 	Container cluster-register ready: true, restart count 0
  I0703 13:31:28.406418 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-rf45l from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.406489 21 predicates.go:889] 	Container cluster-register ready: true, restart count 2
  I0703 13:31:28.406579 21 predicates.go:887] cattle-node-agent-xv2b5 from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.406652 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 13:31:28.406725 21 predicates.go:887] kube-api-auth-n7vdq from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.406806 21 predicates.go:889] 	Container kube-api-auth ready: true, restart count 0
  I0703 13:31:28.406880 21 predicates.go:887] rancher-webhook-7b5476cb6c-999r2 from cattle-system started at 2024-07-03 12:03:53 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.406950 21 predicates.go:889] 	Container rancher-webhook ready: true, restart count 0
  I0703 13:31:28.407043 21 predicates.go:887] calico-kube-controllers-5b878c8d6f-n9qtc from kube-system started at 2024-07-03 12:00:56 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.407202 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0703 13:31:28.407295 21 predicates.go:887] canal-zpdht from kube-system started at 2024-07-03 12:00:56 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.407450 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 13:31:28.407540 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 13:31:28.407621 21 predicates.go:887] coredns-878dbb559-4hhd8 from kube-system started at 2024-07-03 12:01:07 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.407694 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 13:31:28.407790 21 predicates.go:887] metrics-server-85f57469bf-dkb2p from kube-system started at 2024-07-03 12:01:23 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.407876 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0703 13:31:28.407952 21 predicates.go:887] rke-coredns-addon-deploy-job-hv82g from kube-system started at 2024-07-03 12:09:41 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.408026 21 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0703 13:31:28.408126 21 predicates.go:887] rke-metrics-addon-deploy-job-htp6z from kube-system started at 2024-07-03 12:01:19 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.408236 21 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0703 13:31:28.408395 21 predicates.go:887] rke-network-plugin-deploy-job-6jb2q from kube-system started at 2024-07-03 12:00:53 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.411413 21 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0703 13:31:28.411535 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-64nlg from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.411629 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:31:28.411711 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 13:31:28.411768 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-210 before test
  I0703 13:31:28.515109 21 predicates.go:887] cattle-node-agent-pnp4l from cattle-system started at 2024-07-03 12:04:27 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.538818 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 13:31:28.538931 21 predicates.go:887] test-deployment-gt6hx-c8586b885-2rvqj from deployment-2984 started at 2024-07-03 13:31:21 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.539008 21 predicates.go:889] 	Container httpd ready: true, restart count 0
  I0703 13:31:28.539094 21 predicates.go:887] canal-9xtzz from kube-system started at 2024-07-03 12:04:27 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.539151 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 13:31:28.539414 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 13:31:28.539507 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-03 12:12:47 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.539596 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0703 13:31:28.539687 21 predicates.go:887] sonobuoy-e2e-job-f9e006a160674f6c from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.539849 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0703 13:31:28.539962 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:31:28.540212 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-jz9sc from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.540308 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:31:28.540397 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 13:31:28.540577 21 predicates.go:887] pod-service-account-defaultsa from svcaccounts-4797 started at 2024-07-03 13:31:19 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.540653 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.540732 21 predicates.go:887] pod-service-account-defaultsa-mountspec from svcaccounts-4797 started at 2024-07-03 13:31:19 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.540802 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.540949 21 predicates.go:887] pod-service-account-mountsa from svcaccounts-4797 started at 2024-07-03 13:31:19 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.541032 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.541101 21 predicates.go:887] pod-service-account-nomountsa-mountspec from svcaccounts-4797 started at 2024-07-03 13:31:20 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.541164 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.541247 21 predicates.go:887] pod-service-account-nomountsa-nomountspec from svcaccounts-4797 started at 2024-07-03 13:31:20 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.541319 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.541392 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I0703 13:31:28.620678 21 predicates.go:887] cattle-node-agent-9qwcl from cattle-system started at 2024-07-03 12:04:10 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.620969 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 13:31:28.621069 21 predicates.go:887] canal-qtmst from kube-system started at 2024-07-03 12:04:10 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.621155 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 13:31:28.621243 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 13:31:28.621326 21 predicates.go:887] coredns-878dbb559-svq7f from kube-system started at 2024-07-03 12:04:18 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.621399 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 13:31:28.621487 21 predicates.go:887] coredns-autoscaler-56d494f878-l795t from kube-system started at 2024-07-03 12:09:46 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.621572 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0703 13:31:28.621650 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-qwqrq from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:31:28.621719 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:31:28.621798 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 13:31:28.621874 21 predicates.go:887] pod-service-account-defaultsa-nomountspec from svcaccounts-4797 started at 2024-07-03 13:31:20 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.621946 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.622035 21 predicates.go:887] pod-service-account-mountsa-mountspec from svcaccounts-4797 started at 2024-07-03 13:31:19 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.622118 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.622195 21 predicates.go:887] pod-service-account-mountsa-nomountspec from svcaccounts-4797 started at 2024-07-03 13:31:20 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.622256 21 predicates.go:889] 	Container token-test ready: true, restart count 0
  I0703 13:31:28.622389 21 predicates.go:887] pod-service-account-nomountsa from svcaccounts-4797 started at 2024-07-03 13:31:19 +0000 UTC (1 container statuses recorded)
  I0703 13:31:28.622473 21 predicates.go:889] 	Container token-test ready: false, restart count 0
  STEP: Trying to launch a pod without a label to get a node which can launch it. @ 07/03/24 13:31:28.622
  E0703 13:31:28.804910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:29.805498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:30.806374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:31.806799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Explicitly delete pod here to free the resource it takes. @ 07/03/24 13:31:32.754
  E0703 13:31:32.807960      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to apply a random label on the found node. @ 07/03/24 13:31:32.832
  STEP: verifying the node has the label kubernetes.io/e2e-f4b3fd7f-b7dc-4aa5-acc6-a52aa635e8b8 95 @ 07/03/24 13:31:32.885
  STEP: Trying to create a pod(pod4) with hostport 54322 and hostIP 0.0.0.0(empty string here) and expect scheduled @ 07/03/24 13:31:32.898
  E0703 13:31:33.808461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:34.813554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:35.814086      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:36.814504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Trying to create another pod(pod5) with hostport 54322 but hostIP 172.31.5.183 on the node which pod4 resides and expect not scheduled @ 07/03/24 13:31:36.98
  E0703 13:31:37.814771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:38.818437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:39.822438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:40.823524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:41.824611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:42.826792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:43.826919      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:44.827033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:45.827573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:46.827724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:47.828526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:48.828676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:49.831301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:50.831820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:51.832026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:52.832120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:53.832228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:54.832316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:55.833137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:56.833215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:57.833344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:58.833811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:31:59.834737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:00.835752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:01.836056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:02.837117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:03.838459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:04.839519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:05.840392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:06.840755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:07.840893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:08.841014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:09.841176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:10.841324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:11.841557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:12.841555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:13.841673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:14.841843      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:15.842012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:16.842337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:17.845900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:18.846102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:19.846654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:20.846668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:21.847504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:22.847977      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:23.848280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:24.848356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:25.848486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:26.850457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:27.851334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:28.852049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:29.854019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:30.856244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:31.856821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:32.857069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:33.857953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:34.858476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:35.859598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:36.860321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:37.862507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:38.863509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:39.863650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:40.865648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:41.867132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:42.867299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:43.867446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:44.869761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:45.869889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:46.870165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:47.870613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:48.873064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:49.876718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:50.875925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:51.878385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:52.877024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:53.878412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:54.881141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:55.881223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:56.886911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:57.886980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:58.887213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:32:59.887478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:00.890075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:01.888713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:02.888838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:03.889743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:04.889854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:05.890430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:06.890502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:07.890923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:08.892127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:09.892946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:10.892989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:11.893167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:12.894449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:13.894808      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:14.897076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:15.897747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:16.897864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:17.897988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:18.898105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:19.899047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:20.899425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:21.900392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:22.903347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:23.904064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:24.904164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:25.904369      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:26.907927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:27.908337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:28.909230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:29.909317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:30.910858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:31.911716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:32.912336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:33.913356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:34.913556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:35.913554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:36.913696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:37.915133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:38.915262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:39.918209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:40.918431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:41.919347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:42.920083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:43.920344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:44.921284      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:45.924496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:46.924509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:47.924529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:48.924624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:49.925697      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:50.939649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:51.932070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:52.932180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:53.933379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:54.932931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:55.933374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:56.936433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:57.935472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:58.935434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:33:59.935587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:00.935710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:01.936529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:02.936776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:03.937673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:04.938386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:05.938459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:06.938565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:07.939092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:08.940319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:09.940463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:10.942045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:11.942967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:12.953290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:13.953937      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:14.954359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:15.954427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:16.958587      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:17.955296      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:18.955740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:19.956897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:20.957121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:21.958115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:22.958799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:23.959427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:24.959463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:25.960918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:26.961036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:27.961904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:28.962523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:29.963613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:30.963767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:31.963899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:32.965120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:33.965290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:34.965628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:35.966564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:36.970955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:37.970987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:38.971978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:39.973096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:40.973232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:41.974667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:42.975245      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:43.975526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:44.975608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:45.976451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:46.977392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:47.978098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:48.978828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:49.979612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:50.979861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:51.980255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:52.980904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:53.981298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:54.981699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:55.982457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:56.982589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:57.982953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:58.983573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:34:59.984136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:00.984269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:01.985442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:02.985585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:03.985847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:04.986013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:05.987673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:06.988560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:07.989427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:08.989525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:09.991096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:10.993558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:11.994439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:12.994528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:13.995456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:14.995736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:15.996896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:16.997171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:17.997944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:18.998237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:19.998724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:20.998830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:21.999097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:22.999403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:24.000260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:25.000476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:26.001311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:27.002444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:28.004862      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:29.008487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:30.010941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:31.011527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:32.014484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:33.014705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:34.015200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:35.015362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:36.016434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:37.016589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:38.017915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:39.019528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:40.019879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:41.022061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:42.022375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:43.022436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:44.022736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:45.026507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:46.026699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:47.027286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:48.030531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:49.028596      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:50.030161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:51.032341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:52.033139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:53.033789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:54.034448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:55.034612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:56.035407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:57.035657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:58.036221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:35:59.038553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:00.037667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:01.038439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:02.038811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:03.038935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:04.039791      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:05.040357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:06.040633      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:07.040750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:08.040846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:09.041477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:10.050465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:11.043817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:12.044859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:13.044442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:14.044341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:15.044481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:16.045555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:17.045689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:18.046078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:19.047037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:20.047526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:21.048609      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:22.048738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:23.050130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:24.050035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:25.050577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:26.050610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:27.050738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:28.051957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:29.052520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:30.053812      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:31.054439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:32.054585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:33.074536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:34.062468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:35.062623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:36.062778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label kubernetes.io/e2e-f4b3fd7f-b7dc-4aa5-acc6-a52aa635e8b8 off the node ip-172-31-5-183 @ 07/03/24 13:36:37.014
  STEP: verifying the node doesn't have the label kubernetes.io/e2e-f4b3fd7f-b7dc-4aa5-acc6-a52aa635e8b8 @ 07/03/24 13:36:37.062
  E0703 13:36:37.063165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:36:37.071857 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4168" for this suite. @ 07/03/24 13:36:37.077
• [308.931 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicationController should release no longer matching pods [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:104
  STEP: Creating a kubernetes client @ 07/03/24 13:36:37.097
  I0703 13:36:37.097566 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replication-controller @ 07/03/24 13:36:37.098
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:36:37.215
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:36:37.24
  STEP: Given a ReplicationController is created @ 07/03/24 13:36:37.276
  STEP: When the matched label of one of its pods change @ 07/03/24 13:36:37.313
  I0703 13:36:37.319694 21 resource.go:87] Pod name pod-release: Found 0 pods out of 1
  E0703 13:36:38.068168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:39.065400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:40.065493      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:41.066724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:42.067517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:36:42.333922 21 resource.go:87] Pod name pod-release: Found 1 pods out of 1
  STEP: Then the pod is released @ 07/03/24 13:36:42.362
  E0703 13:36:43.071614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:36:43.383333 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-819" for this suite. @ 07/03/24 13:36:43.393
• [6.310 seconds]
------------------------------
SSS
------------------------------
[sig-network] Services should test the lifecycle of an Endpoint [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:3161
  STEP: Creating a kubernetes client @ 07/03/24 13:36:43.408
  I0703 13:36:43.408528 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:36:43.409
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:36:43.493
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:36:43.505
  STEP: creating an Endpoint @ 07/03/24 13:36:43.593
  STEP: waiting for available Endpoint @ 07/03/24 13:36:43.64
  STEP: listing all Endpoints @ 07/03/24 13:36:43.682
  STEP: updating the Endpoint @ 07/03/24 13:36:43.698
  STEP: fetching the Endpoint @ 07/03/24 13:36:43.763
  STEP: patching the Endpoint @ 07/03/24 13:36:43.782
  STEP: fetching the Endpoint @ 07/03/24 13:36:43.838
  STEP: deleting the Endpoint by Collection @ 07/03/24 13:36:43.845
  STEP: waiting for Endpoint deletion @ 07/03/24 13:36:43.862
  STEP: fetching the Endpoint @ 07/03/24 13:36:43.869
  I0703 13:36:43.879233 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-9652" for this suite. @ 07/03/24 13:36:43.884
• [0.490 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0777,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:190
  STEP: Creating a kubernetes client @ 07/03/24 13:36:43.899
  I0703 13:36:43.899651 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:36:43.9
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:36:44.001
  E0703 13:36:44.068076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:36:44.076
  STEP: Creating a pod to test emptydir 0777 on node default medium @ 07/03/24 13:36:44.095
  E0703 13:36:45.068924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:46.069056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:47.069306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:48.069922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:36:48.169
  I0703 13:36:48.174319 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-6682d7fd-83ee-4dc7-8f69-020496f9e054 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:36:48.222
  I0703 13:36:48.292593 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-160" for this suite. @ 07/03/24 13:36:48.322
• [4.445 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:345
  STEP: Creating a kubernetes client @ 07/03/24 13:36:48.345
  I0703 13:36:48.345043 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 13:36:48.345
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:36:48.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:36:48.547
  STEP: creating the pod @ 07/03/24 13:36:48.585
  STEP: submitting the pod to kubernetes @ 07/03/24 13:36:48.585
  E0703 13:36:49.070816      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:50.070927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/03/24 13:36:50.741
  STEP: updating the pod @ 07/03/24 13:36:50.745
  E0703 13:36:51.072068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:36:51.272265 21 pod_client.go:141] Successfully updated pod "pod-update-24144b66-4197-4546-b7a9-1c5709989e02"
  STEP: verifying the updated pod is in kubernetes @ 07/03/24 13:36:51.276
  I0703 13:36:51.280312 21 pods.go:391] Pod update OK
  I0703 13:36:51.280964 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-7704" for this suite. @ 07/03/24 13:36:51.301
• [2.987 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourceConversionWebhook [Privileged:ClusterAdmin] should be able to convert from CR v1 to CR v2 [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_conversion_webhook.go:142
  STEP: Creating a kubernetes client @ 07/03/24 13:36:51.336
  I0703 13:36:51.337236 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-webhook @ 07/03/24 13:36:51.338
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:36:51.456
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:36:51.5
  STEP: Setting up server cert @ 07/03/24 13:36:51.506
  E0703 13:36:52.084400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let cr conversion webhook read extension-apiserver-authentication @ 07/03/24 13:36:52.653
  STEP: Deploying the custom resource conversion webhook pod @ 07/03/24 13:36:52.672
  STEP: Wait for the deployment to be ready @ 07/03/24 13:36:52.705
  I0703 13:36:52.754645 21 deployment.go:222] deployment "sample-crd-conversion-webhook-deployment" doesn't have the required revision set
  E0703 13:36:53.085115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:54.085129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:36:54.785571 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:36:55.085211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:56.086440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:36:56.808372 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 36, 52, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-crd-conversion-webhook-deployment-6c44f5d846\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:36:57.088169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:36:58.094425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:36:58.789
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:36:58.81
  E0703 13:36:59.095455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:36:59.811084 21 util.go:427] Waiting for amount of service:e2e-test-crd-conversion-webhook endpoints to be 1
  I0703 13:36:59.825759 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 13:37:00.097148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:01.097689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:02.098041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a v1 custom resource @ 07/03/24 13:37:03.054
  E0703 13:37:03.099299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: v2 custom resource should be converted @ 07/03/24 13:37:03.172
  E0703 13:37:04.099900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:04.519980 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-webhook-9246" for this suite. @ 07/03/24 13:37:04.631
• [13.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should fail substituting values in a volume subpath with backticks [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:156
  STEP: Creating a kubernetes client @ 07/03/24 13:37:04.649
  I0703 13:37:04.649158 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 13:37:04.65
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:04.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:04.902
  E0703 13:37:05.100591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:06.102671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:07.103834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:08.114374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:09.117062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:09.220395 21 delete.go:62] Deleting pod "var-expansion-84fe019b-f411-4b18-b1cc-4ef9d8c17075" in namespace "var-expansion-7308"
  I0703 13:37:09.256376 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-84fe019b-f411-4b18-b1cc-4ef9d8c17075" to be fully deleted
  E0703 13:37:10.117300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:11.117531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:11.274607 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7308" for this suite. @ 07/03/24 13:37:11.298
• [6.673 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing validating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:572
  STEP: Creating a kubernetes client @ 07/03/24 13:37:11.322
  I0703 13:37:11.322566 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:37:11.323
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:11.462
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:11.475
  STEP: Setting up server cert @ 07/03/24 13:37:11.589
  E0703 13:37:12.117525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:37:12.217
  STEP: Deploying the webhook pod @ 07/03/24 13:37:12.227
  STEP: Wait for the deployment to be ready @ 07/03/24 13:37:12.245
  I0703 13:37:12.275607 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:37:13.118262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:14.119003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:14.306309 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:37:15.122448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:16.123514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:16.310403 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 12, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:37:17.125143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:18.123913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:37:18.312
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:37:18.346
  E0703 13:37:19.124280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:19.348027 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/03/24 13:37:19.526
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/03/24 13:37:19.575
  STEP: Deleting the collection of validation webhooks @ 07/03/24 13:37:19.651
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/03/24 13:37:19.744
  I0703 13:37:19.913085 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-3261" for this suite. @ 07/03/24 13:37:19.925
  STEP: Destroying namespace "webhook-markers-4209" for this suite. @ 07/03/24 13:37:19.96
• [8.662 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-network] DNS should support configurable pod DNS nameservers [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:407
  STEP: Creating a kubernetes client @ 07/03/24 13:37:19.985
  I0703 13:37:19.989304 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 13:37:19.991
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:20.049
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:20.073
  STEP: Creating a pod with dnsPolicy=None and customized dnsConfig... @ 07/03/24 13:37:20.083
  I0703 13:37:20.114904 21 dns.go:419] Created pod &Pod{ObjectMeta:{test-dns-nameservers  dns-910  3aef0f8d-3a46-4996-acb9-7267597afa46 29378 0 2024-07-03 13:37:20 +0000 UTC <nil> <nil> map[] map[] [] [] [{e2e.test Update v1 2024-07-03 13:37:20 +0000 UTC FieldsV1 {"f:spec":{"f:containers":{"k:{\"name\":\"agnhost-container\"}":{".":{},"f:args":{},"f:image":{},"f:imagePullPolicy":{},"f:name":{},"f:resources":{},"f:securityContext":{},"f:terminationMessagePath":{},"f:terminationMessagePolicy":{}}},"f:dnsConfig":{".":{},"f:nameservers":{},"f:searches":{}},"f:dnsPolicy":{},"f:enableServiceLinks":{},"f:restartPolicy":{},"f:schedulerName":{},"f:securityContext":{},"f:terminationGracePeriodSeconds":{}}} }]},Spec:PodSpec{Volumes:[]Volume{Volume{Name:kube-api-access-bb2gr,VolumeSource:VolumeSource{HostPath:nil,EmptyDir:nil,GCEPersistentDisk:nil,AWSElasticBlockStore:nil,GitRepo:nil,Secret:nil,NFS:nil,ISCSI:nil,Glusterfs:nil,PersistentVolumeClaim:nil,RBD:nil,FlexVolume:nil,Cinder:nil,CephFS:nil,Flocker:nil,DownwardAPI:nil,FC:nil,AzureFile:nil,ConfigMap:nil,VsphereVolume:nil,Quobyte:nil,AzureDisk:nil,PhotonPersistentDisk:nil,PortworxVolume:nil,ScaleIO:nil,Projected:&ProjectedVolumeSource{Sources:[]VolumeProjection{VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:nil,ServiceAccountToken:&ServiceAccountTokenProjection{Audience:,ExpirationSeconds:*3607,Path:token,},ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:nil,ConfigMap:&ConfigMapProjection{LocalObjectReference:LocalObjectReference{Name:kube-root-ca.crt,},Items:[]KeyToPath{KeyToPath{Key:ca.crt,Path:ca.crt,Mode:nil,},},Optional:nil,},ServiceAccountToken:nil,ClusterTrustBundle:nil,},VolumeProjection{Secret:nil,DownwardAPI:&DownwardAPIProjection{Items:[]DownwardAPIVolumeFile{DownwardAPIVolumeFile{Path:namespace,FieldRef:&ObjectFieldSelector{APIVersion:v1,FieldPath:metadata.namespace,},ResourceFieldRef:nil,Mode:nil,},},},ConfigMap:nil,ServiceAccountToken:nil,ClusterTrustBundle:nil,},},DefaultMode:*420,},StorageOS:nil,CSI:nil,Ephemeral:nil,},},},Containers:[]Container{Container{Name:agnhost-container,Image:registry.k8s.io/e2e-test-images/agnhost:2.47,Command:[],Args:[pause],WorkingDir:,Ports:[]ContainerPort{},Env:[]EnvVar{},Resources:ResourceRequirements{Limits:ResourceList{},Requests:ResourceList{},Claims:[]ResourceClaim{},},VolumeMounts:[]VolumeMount{VolumeMount{Name:kube-api-access-bb2gr,ReadOnly:true,MountPath:/var/run/secrets/kubernetes.io/serviceaccount,SubPath:,MountPropagation:nil,SubPathExpr:,RecursiveReadOnly:nil,},},LivenessProbe:nil,ReadinessProbe:nil,Lifecycle:nil,TerminationMessagePath:/dev/termination-log,ImagePullPolicy:IfNotPresent,SecurityContext:&SecurityContext{Capabilities:nil,Privileged:nil,SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,ReadOnlyRootFilesystem:nil,AllowPrivilegeEscalation:nil,RunAsGroup:nil,ProcMount:nil,WindowsOptions:nil,SeccompProfile:nil,AppArmorProfile:nil,},Stdin:false,StdinOnce:false,TTY:false,EnvFrom:[]EnvFromSource{},TerminationMessagePolicy:File,VolumeDevices:[]VolumeDevice{},StartupProbe:nil,ResizePolicy:[]ContainerResizePolicy{},RestartPolicy:nil,},},RestartPolicy:Always,TerminationGracePeriodSeconds:*0,ActiveDeadlineSeconds:nil,DNSPolicy:None,NodeSelector:map[string]string{},ServiceAccountName:default,DeprecatedServiceAccount:default,NodeName:,HostNetwork:false,HostPID:false,HostIPC:false,SecurityContext:&PodSecurityContext{SELinuxOptions:nil,RunAsUser:nil,RunAsNonRoot:nil,SupplementalGroups:[],FSGroup:nil,RunAsGroup:nil,Sysctls:[]Sysctl{},WindowsOptions:nil,FSGroupChangePolicy:nil,SeccompProfile:nil,AppArmorProfile:nil,},ImagePullSecrets:[]LocalObjectReference{},Hostname:,Subdomain:,Affinity:nil,SchedulerName:default-scheduler,InitContainers:[]Container{},AutomountServiceAccountToken:nil,Tolerations:[]Toleration{Toleration{Key:node.kubernetes.io/not-ready,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},Toleration{Key:node.kubernetes.io/unreachable,Operator:Exists,Value:,Effect:NoExecute,TolerationSeconds:*300,},},HostAliases:[]HostAlias{},PriorityClassName:,Priority:*0,DNSConfig:&PodDNSConfig{Nameservers:[1.1.1.1],Searches:[resolv.conf.local],Options:[]PodDNSConfigOption{},},ShareProcessNamespace:nil,ReadinessGates:[]PodReadinessGate{},RuntimeClassName:nil,EnableServiceLinks:*true,PreemptionPolicy:*PreemptLowerPriority,Overhead:ResourceList{},TopologySpreadConstraints:[]TopologySpreadConstraint{},EphemeralContainers:[]EphemeralContainer{},SetHostnameAsFQDN:nil,OS:nil,HostUsers:nil,SchedulingGates:[]PodSchedulingGate{},ResourceClaims:[]PodResourceClaim{},},Status:PodStatus{Phase:Pending,Conditions:[]PodCondition{},Message:,Reason:,HostIP:,PodIP:,StartTime:<nil>,ContainerStatuses:[]ContainerStatus{},QOSClass:BestEffort,InitContainerStatuses:[]ContainerStatus{},NominatedNodeName:,PodIPs:[]PodIP{},EphemeralContainerStatuses:[]ContainerStatus{},Resize:,ResourceClaimStatuses:[]PodResourceClaimStatus{},HostIPs:[]HostIP{},},}
  E0703 13:37:20.124546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:21.126580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:22.126940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:23.127483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:24.128432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying customized DNS suffix list is configured on pod... @ 07/03/24 13:37:24.159
  I0703 13:37:24.159889 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-suffix] Namespace:dns-910 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:37:24.159911 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:37:24.160535 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:37:24.160606 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-910/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-suffix&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  STEP: Verifying customized DNS server is configured on pod... @ 07/03/24 13:37:24.338
  I0703 13:37:24.338517 21 exec_util.go:55] ExecWithOptions {Command:[/agnhost dns-server-list] Namespace:dns-910 PodName:test-dns-nameservers ContainerName:agnhost-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:37:24.338717 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:37:24.339454 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:37:24.339640 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/dns-910/pods/test-dns-nameservers/exec?command=%2Fagnhost&command=dns-server-list&container=agnhost-container&container=agnhost-container&stderr=true&stdout=true)
  I0703 13:37:24.483688 21 dns.go:421] Deleting pod test-dns-nameservers...
  I0703 13:37:24.516144 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-910" for this suite. @ 07/03/24 13:37:24.558
• [4.609 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate everything except 'skip-me' configmaps [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:866
  STEP: Creating a kubernetes client @ 07/03/24 13:37:24.594
  I0703 13:37:24.594876 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:37:24.595
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:24.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:24.7
  STEP: Setting up server cert @ 07/03/24 13:37:24.814
  E0703 13:37:25.130442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:37:25.374
  STEP: Deploying the webhook pod @ 07/03/24 13:37:25.425
  STEP: Wait for the deployment to be ready @ 07/03/24 13:37:25.469
  I0703 13:37:25.574016 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:37:26.132589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:27.132421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:27.588449 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:37:28.134463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:29.133347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:29.597706 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 37, 25, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:37:30.134801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:31.134679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:37:31.594
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:37:31.606
  E0703 13:37:32.135534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:32.608067 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/03/24 13:37:32.618
  STEP: create the configmap with a random name @ 07/03/24 13:37:32.652
  STEP: verify the configmap is mutated @ 07/03/24 13:37:32.678
  STEP: create the configmap with 'skip-me' name @ 07/03/24 13:37:32.678
  I0703 13:37:32.942883 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-9076" for this suite. @ 07/03/24 13:37:32.957
  STEP: Destroying namespace "webhook-markers-3950" for this suite. @ 07/03/24 13:37:33.026
• [8.473 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields in an embedded object [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:237
  STEP: Creating a kubernetes client @ 07/03/24 13:37:33.068
  I0703 13:37:33.068549 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 13:37:33.069
  E0703 13:37:33.136073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:33.167
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:33.186
  I0703 13:37:33.195308 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 13:37:34.136891      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:35.137913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/03/24 13:37:36.133
  I0703 13:37:36.134188 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-4878 --namespace=crd-publish-openapi-4878 create -f -'
  E0703 13:37:36.140498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:36.559839 21 builder.go:146] stderr: ""
  I0703 13:37:36.559892 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9541-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0703 13:37:36.559947 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-4878 --namespace=crd-publish-openapi-4878 delete e2e-test-crd-publish-openapi-9541-crds test-cr'
  I0703 13:37:36.833317 21 builder.go:146] stderr: ""
  I0703 13:37:36.833374 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9541-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  I0703 13:37:36.833424 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-4878 --namespace=crd-publish-openapi-4878 apply -f -'
  E0703 13:37:37.140927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:37.188898 21 builder.go:146] stderr: ""
  I0703 13:37:37.189159 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9541-crd.crd-publish-openapi-test-unknown-in-nested.example.com/test-cr created\n"
  I0703 13:37:37.189214 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-4878 --namespace=crd-publish-openapi-4878 delete e2e-test-crd-publish-openapi-9541-crds test-cr'
  I0703 13:37:37.407550 21 builder.go:146] stderr: ""
  I0703 13:37:37.407620 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-9541-crd.crd-publish-openapi-test-unknown-in-nested.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/03/24 13:37:37.407
  I0703 13:37:37.407707 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-4878 explain e2e-test-crd-publish-openapi-9541-crds'
  I0703 13:37:37.493612 21 builder.go:146] stderr: ""
  I0703 13:37:37.493672 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-in-nested.example.com\nKIND:       e2e-test-crd-publish-openapi-9541-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties in nested field for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0703 13:37:38.141451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:39.146474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:40.147012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:41.147449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:41.212194 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-4878" for this suite. @ 07/03/24 13:37:41.262
• [8.208 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable in multiple volumes in a pod [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:119
  STEP: Creating a kubernetes client @ 07/03/24 13:37:41.278
  I0703 13:37:41.278176 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 13:37:41.298
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:41.494
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:41.578
  STEP: Creating secret with name projected-secret-test-24208d1d-f407-4254-b25d-90e9a8be5887 @ 07/03/24 13:37:41.595
  STEP: Creating a pod to test consume secrets @ 07/03/24 13:37:41.679
  E0703 13:37:42.147540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:43.147766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:44.148747      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:45.152215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:46.149827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:47.152360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:37:47.957
  I0703 13:37:47.970060 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-19c6b3c9-d57c-4b0b-ba1b-050fe3ae2cf1 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 13:37:47.984
  I0703 13:37:48.054792 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-5213" for this suite. @ 07/03/24 13:37:48.061
• [6.822 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD without validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:154
  STEP: Creating a kubernetes client @ 07/03/24 13:37:48.099
  I0703 13:37:48.099954 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 13:37:48.1
  E0703 13:37:48.152762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:48.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:48.207
  I0703 13:37:48.220454 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 13:37:49.157143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:50.157250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:51.162884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/03/24 13:37:51.373
  I0703 13:37:51.373314 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9265 --namespace=crd-publish-openapi-9265 create -f -'
  I0703 13:37:51.796189 21 builder.go:146] stderr: ""
  I0703 13:37:51.796255 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8446-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0703 13:37:51.803939 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9265 --namespace=crd-publish-openapi-9265 delete e2e-test-crd-publish-openapi-8446-crds test-cr'
  I0703 13:37:52.040133 21 builder.go:146] stderr: ""
  I0703 13:37:52.040185 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8446-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  I0703 13:37:52.040270 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9265 --namespace=crd-publish-openapi-9265 apply -f -'
  E0703 13:37:52.163357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:52.270388 21 builder.go:146] stderr: ""
  I0703 13:37:52.270441 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8446-crd.crd-publish-openapi-test-empty.example.com/test-cr created\n"
  I0703 13:37:52.270496 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9265 --namespace=crd-publish-openapi-9265 delete e2e-test-crd-publish-openapi-8446-crds test-cr'
  I0703 13:37:52.590761 21 builder.go:146] stderr: ""
  I0703 13:37:52.590803 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-8446-crd.crd-publish-openapi-test-empty.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR without validation schema @ 07/03/24 13:37:52.59
  I0703 13:37:52.590889 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9265 explain e2e-test-crd-publish-openapi-8446-crds'
  I0703 13:37:52.746999 21 builder.go:146] stderr: ""
  I0703 13:37:52.747073 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-empty.example.com\nKIND:       e2e-test-crd-publish-openapi-8446-crd\nVERSION:    v1\n\nDESCRIPTION:\n    <empty>\nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n\n"
  E0703 13:37:53.163691      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:54.164525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:37:55.184165      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:55.585383 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9265" for this suite. @ 07/03/24 13:37:55.647
• [7.566 seconds]
------------------------------
SSS
------------------------------
[sig-cli] Kubectl client Kubectl patch should add annotations for pods in rc [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1693
  STEP: Creating a kubernetes client @ 07/03/24 13:37:55.666
  I0703 13:37:55.666893 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:37:55.668
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:55.787
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:55.824
  STEP: creating Agnhost RC @ 07/03/24 13:37:55.847
  I0703 13:37:55.847550 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-530 create -f -'
  E0703 13:37:56.184334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:56.266039 21 builder.go:146] stderr: ""
  I0703 13:37:56.266084 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/03/24 13:37:56.266
  E0703 13:37:57.184729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:57.281659 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 13:37:57.281699 21 framework.go:733] Found 0 / 1
  E0703 13:37:58.185084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:58.277673 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 13:37:58.277716 21 framework.go:733] Found 0 / 1
  E0703 13:37:59.185252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:37:59.270135 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 13:37:59.270174 21 framework.go:733] Found 1 / 1
  I0703 13:37:59.270199 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  STEP: patching all pods @ 07/03/24 13:37:59.27
  I0703 13:37:59.273107 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 13:37:59.273143 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0703 13:37:59.273196 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-530 patch pod agnhost-primary-csqxl -p {"metadata":{"annotations":{"x":"y"}}}'
  I0703 13:37:59.464306 21 builder.go:146] stderr: ""
  I0703 13:37:59.464369 21 builder.go:147] stdout: "pod/agnhost-primary-csqxl patched\n"
  STEP: checking annotations @ 07/03/24 13:37:59.464
  I0703 13:37:59.469233 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 13:37:59.469277 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0703 13:37:59.469376 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-530" for this suite. @ 07/03/24 13:37:59.472
• [3.821 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide podname only [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:55
  STEP: Creating a kubernetes client @ 07/03/24 13:37:59.486
  I0703 13:37:59.486972 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 13:37:59.488
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:37:59.593
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:37:59.601
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 13:37:59.621
  E0703 13:38:00.186465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:01.187237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:02.188162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:03.188484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:38:03.689
  I0703 13:38:03.701384 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-d057291b-2c97-4cbb-a72a-a0994cc2d594 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 13:38:03.724
  I0703 13:38:03.769593 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-4886" for this suite. @ 07/03/24 13:38:03.784
• [4.318 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be immutable if `immutable` field is set [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:505
  STEP: Creating a kubernetes client @ 07/03/24 13:38:03.818
  I0703 13:38:03.819031 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 13:38:03.82
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:03.916
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:03.956
  E0703 13:38:04.188912      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:38:04.268534 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-9521" for this suite. @ 07/03/24 13:38:04.288
• [0.501 seconds]
------------------------------
SS
------------------------------
[sig-apps] CronJob should support CronJob API operations [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:341
  STEP: Creating a kubernetes client @ 07/03/24 13:38:04.32
  I0703 13:38:04.320860 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename cronjob @ 07/03/24 13:38:04.326
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:04.391
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:04.41
  STEP: Creating a cronjob @ 07/03/24 13:38:04.428
  STEP: creating @ 07/03/24 13:38:04.429
  STEP: getting @ 07/03/24 13:38:04.459
  STEP: listing @ 07/03/24 13:38:04.475
  STEP: watching @ 07/03/24 13:38:04.483
  I0703 13:38:04.483454 21 cronjob.go:370] starting watch
  STEP: cluster-wide listing @ 07/03/24 13:38:04.493
  STEP: cluster-wide watching @ 07/03/24 13:38:04.53
  I0703 13:38:04.530684 21 cronjob.go:382] starting watch
  STEP: patching @ 07/03/24 13:38:04.541
  STEP: updating @ 07/03/24 13:38:04.601
  I0703 13:38:04.664325 21 cronjob.go:406] waiting for watch events with expected annotations
  I0703 13:38:04.664390 21 cronjob.go:420] saw patched and updated annotations
  STEP: patching /status @ 07/03/24 13:38:04.664
  STEP: updating /status @ 07/03/24 13:38:04.718
  STEP: get /status @ 07/03/24 13:38:04.808
  STEP: deleting @ 07/03/24 13:38:04.815
  STEP: deleting a collection @ 07/03/24 13:38:04.857
  I0703 13:38:04.921454 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7961" for this suite. @ 07/03/24 13:38:04.928
• [0.638 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and ensure its status is promptly calculated. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:78
  STEP: Creating a kubernetes client @ 07/03/24 13:38:04.959
  I0703 13:38:04.959495 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 13:38:04.96
  E0703 13:38:05.194516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:05.198
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:05.225
  STEP: Counting existing ResourceQuota @ 07/03/24 13:38:05.245
  E0703 13:38:06.194940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:07.194967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:08.197230      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:09.197343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:10.197967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/03/24 13:38:10.262
  STEP: Ensuring resource quota status is calculated @ 07/03/24 13:38:10.304
  E0703 13:38:11.198889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:12.200005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:38:12.309271 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-4643" for this suite. @ 07/03/24 13:38:12.314
• [7.369 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for CRD preserving unknown fields at the schema root [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:195
  STEP: Creating a kubernetes client @ 07/03/24 13:38:12.33
  I0703 13:38:12.330754 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 13:38:12.332
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:12.412
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:12.431
  I0703 13:38:12.446161 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 13:38:13.200117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:14.205511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: kubectl validation (kubectl create and apply) allows request with any unknown properties @ 07/03/24 13:38:14.779
  I0703 13:38:14.779817 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9673 --namespace=crd-publish-openapi-9673 create -f -'
  I0703 13:38:14.956397 21 builder.go:146] stderr: ""
  I0703 13:38:14.956445 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4975-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0703 13:38:14.956501 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9673 --namespace=crd-publish-openapi-9673 delete e2e-test-crd-publish-openapi-4975-crds test-cr'
  E0703 13:38:15.206724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:38:15.210833 21 builder.go:146] stderr: ""
  I0703 13:38:15.210878 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4975-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  I0703 13:38:15.210929 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9673 --namespace=crd-publish-openapi-9673 apply -f -'
  I0703 13:38:15.515093 21 builder.go:146] stderr: ""
  I0703 13:38:15.515300 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4975-crd.crd-publish-openapi-test-unknown-at-root.example.com/test-cr created\n"
  I0703 13:38:15.515482 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9673 --namespace=crd-publish-openapi-9673 delete e2e-test-crd-publish-openapi-4975-crds test-cr'
  I0703 13:38:15.709369 21 builder.go:146] stderr: ""
  I0703 13:38:15.709419 21 builder.go:147] stdout: "e2e-test-crd-publish-openapi-4975-crd.crd-publish-openapi-test-unknown-at-root.example.com \"test-cr\" deleted\n"
  STEP: kubectl explain works to explain CR @ 07/03/24 13:38:15.709
  I0703 13:38:15.709503 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=crd-publish-openapi-9673 explain e2e-test-crd-publish-openapi-4975-crds'
  I0703 13:38:15.912734 21 builder.go:146] stderr: ""
  I0703 13:38:15.912799 21 builder.go:147] stdout: "GROUP:      crd-publish-openapi-test-unknown-at-root.example.com\nKIND:       e2e-test-crd-publish-openapi-4975-crd\nVERSION:    v1\n\nDESCRIPTION:\n    preserve-unknown-properties at root for Testing\n    \nFIELDS:\n  apiVersion\t<string>\n    APIVersion defines the versioned schema of this representation of an object.\n    Servers should convert recognized schemas to the latest internal value, and\n    may reject unrecognized values. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources\n\n  kind\t<string>\n    Kind is a string value representing the REST resource this object\n    represents. Servers may infer this from the endpoint the client submits\n    requests to. Cannot be updated. In CamelCase. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds\n\n  metadata\t<ObjectMeta>\n    Standard object's metadata. More info:\n    https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata\n\n  spec\t<Object>\n    Specification of Waldo\n\n  status\t<Object>\n    Status of Waldo\n\n\n"
  E0703 13:38:16.207307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:17.208241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:18.208993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:38:18.618582 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-9673" for this suite. @ 07/03/24 13:38:18.651
• [6.349 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl cluster-info should check if Kubernetes control plane services is included in cluster-info [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1368
  STEP: Creating a kubernetes client @ 07/03/24 13:38:18.68
  I0703 13:38:18.680581 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:38:18.681
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:18.851
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:18.911
  STEP: validating cluster-info @ 07/03/24 13:38:18.957
  I0703 13:38:18.957146 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-9349 cluster-info'
  E0703 13:38:19.209612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:38:19.234112 21 builder.go:146] stderr: ""
  I0703 13:38:19.234204 21 builder.go:147] stdout: "\x1b[0;32mKubernetes control plane\x1b[0m is running at \x1b[0;33mhttps://10.43.0.1:443\x1b[0m\n\nTo further debug and diagnose cluster problems, use 'kubectl cluster-info dump'.\n"
  I0703 13:38:19.234905 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9349" for this suite. @ 07/03/24 13:38:19.275
• [0.625 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:48
  STEP: Creating a kubernetes client @ 07/03/24 13:38:19.305
  I0703 13:38:19.305750 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 13:38:19.307
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:19.487
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:19.579
  STEP: Creating configMap with name configmap-test-volume-c227fa86-6835-4f79-8fff-1730b73ee310 @ 07/03/24 13:38:19.654
  STEP: Creating a pod to test consume configMaps @ 07/03/24 13:38:19.694
  E0703 13:38:20.210540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:21.210802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:22.211782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:23.212443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:24.212591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:25.212709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:38:25.923
  I0703 13:38:25.926597 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-daec243c-e407-4b92-ada9-b37ca88cbe6c container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 13:38:25.933
  I0703 13:38:25.954730 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-3923" for this suite. @ 07/03/24 13:38:25.967
• [6.688 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-network] IngressClass API should support creating IngressClass API operations [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/ingressclass.go:268
  STEP: Creating a kubernetes client @ 07/03/24 13:38:25.997
  I0703 13:38:25.998018 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename ingressclass @ 07/03/24 13:38:25.999
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:26.071
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:26.078
  STEP: getting /apis @ 07/03/24 13:38:26.09
  STEP: getting /apis/networking.k8s.io @ 07/03/24 13:38:26.105
  STEP: getting /apis/networking.k8s.iov1 @ 07/03/24 13:38:26.106
  STEP: creating @ 07/03/24 13:38:26.116
  STEP: getting @ 07/03/24 13:38:26.17
  STEP: listing @ 07/03/24 13:38:26.177
  STEP: watching @ 07/03/24 13:38:26.191
  I0703 13:38:26.191458 21 ingressclass.go:348] starting watch
  STEP: patching @ 07/03/24 13:38:26.211
  E0703 13:38:26.216415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating @ 07/03/24 13:38:26.23
  I0703 13:38:26.246105 21 ingressclass.go:364] waiting for watch events with expected annotations
  I0703 13:38:26.246438 21 ingressclass.go:377] saw patched and updated annotations
  STEP: deleting @ 07/03/24 13:38:26.246
  STEP: deleting a collection @ 07/03/24 13:38:26.273
  I0703 13:38:26.292508 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ingressclass-6845" for this suite. @ 07/03/24 13:38:26.297
• [0.314 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update validating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:715
  STEP: Creating a kubernetes client @ 07/03/24 13:38:26.311
  I0703 13:38:26.311696 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:38:26.312
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:26.357
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:26.367
  STEP: Setting up server cert @ 07/03/24 13:38:26.523
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:38:27.042
  STEP: Deploying the webhook pod @ 07/03/24 13:38:27.054
  STEP: Wait for the deployment to be ready @ 07/03/24 13:38:27.073
  I0703 13:38:27.108640 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 13:38:27.222923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:28.216785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:38:29.125377 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 38, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 38, 27, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 38, 27, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 38, 27, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:38:29.217837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:30.218420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:38:31.154
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:38:31.201
  E0703 13:38:31.218244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:38:32.202931 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  E0703 13:38:32.219200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a validating webhook with match conditions @ 07/03/24 13:38:32.243
  STEP: verifying the validating webhook match conditions @ 07/03/24 13:38:32.273
  STEP: updating the validating webhook match conditions @ 07/03/24 13:38:32.303
  STEP: verifying the validating webhook match conditions @ 07/03/24 13:38:32.318
  I0703 13:38:32.544762 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-5107" for this suite. @ 07/03/24 13:38:32.57
  STEP: Destroying namespace "webhook-markers-4842" for this suite. @ 07/03/24 13:38:32.612
• [6.398 seconds]
------------------------------
S
------------------------------
[sig-node] Pods should contain environment variables for services [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:445
  STEP: Creating a kubernetes client @ 07/03/24 13:38:32.709
  I0703 13:38:32.709777 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 13:38:32.716
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:32.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:33.051
  E0703 13:38:33.219773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:34.219814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:35.220102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:36.220255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:37.221663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:38.221734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:39.229129      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:40.229866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:41.230063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:38:41.352
  I0703 13:38:41.355717 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod client-envvars-9faf067a-7f9c-4f56-8ec7-4c1a3943b090 container env3cont: <nil>
  STEP: delete the pod @ 07/03/24 13:38:41.38
  I0703 13:38:41.436286 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-3520" for this suite. @ 07/03/24 13:38:41.467
• [8.769 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:263
  STEP: Creating a kubernetes client @ 07/03/24 13:38:41.479
  I0703 13:38:41.479656 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 13:38:41.48
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:41.569
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:41.608
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 13:38:41.634
  E0703 13:38:42.231202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:43.231374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:44.231758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:45.232640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:38:45.754
  I0703 13:38:45.765228 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-fc1eba76-62fa-4c9f-8775-d014ae82499f container client-container: <nil>
  STEP: delete the pod @ 07/03/24 13:38:45.773
  I0703 13:38:45.826554 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4171" for this suite. @ 07/03/24 13:38:45.885
• [4.418 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] Networking Granular Checks: Pods should function for intra-pod communication: http [NodeConformance] [Conformance] [sig-network, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/network/networking.go:85
  STEP: Creating a kubernetes client @ 07/03/24 13:38:45.899
  I0703 13:38:45.899271 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pod-network-test @ 07/03/24 13:38:45.904
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:38:45.942
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:38:45.969
  STEP: Performing setup for networking test in namespace pod-network-test-5451 @ 07/03/24 13:38:45.976
  STEP: creating a selector @ 07/03/24 13:38:45.976
  STEP: Creating the service pods in kubernetes @ 07/03/24 13:38:45.976
  I0703 13:38:45.976880 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  E0703 13:38:46.233597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:47.233896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:48.237735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:49.237997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:50.238828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:51.238913      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:52.242736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:53.243223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:54.243603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:55.244000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:56.252392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:57.244935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:58.245038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:38:59.245201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:00.245642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:01.245745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:02.258021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:03.260386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:04.260476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:05.262510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:06.262649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:07.263325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:08.264598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating test pods @ 07/03/24 13:39:08.349
  E0703 13:39:09.265166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:10.265358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:39:10.399532 21 utils.go:779] Setting MaxTries for pod polling to 39 for networking test based on endpoint count 3
  I0703 13:39:10.403522 21 networking.go:42] Breadth first check of 10.42.0.44 on host 172.31.4.137...
  I0703 13:39:10.407627 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.245:9080/dial?request=hostname&protocol=http&host=10.42.0.44&port=8083&tries=1'] Namespace:pod-network-test-5451 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:39:10.407910 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:39:10.410343 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:39:10.410800 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5451/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.44%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  E0703 13:39:11.265526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:12.265678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:13.265782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:14.266615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:15.270084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:39:15.610229 21 utils.go:331] Waiting for responses: map[netserver-0:{}]
  E0703 13:39:16.270831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:17.271530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:39:17.611169 21 utils.go:258] 
  Output of kubectl describe pod pod-network-test-5451/netserver-0:

  I0703 13:39:17.620682 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=pod-network-test-5451 describe pod netserver-0 --namespace=pod-network-test-5451'
  I0703 13:39:17.969342 21 builder.go:146] stderr: ""
  I0703 13:39:17.969978 21 builder.go:147] stdout: "Name:             netserver-0\nNamespace:        pod-network-test-5451\nPriority:         0\nService Account:  default\nNode:             ip-172-31-4-137/172.31.4.137\nStart Time:       Wed, 03 Jul 2024 13:38:46 +0000\nLabels:           selector-dc13eeda-4694-4650-aeb0-5b440e6abf96=true\nAnnotations:      cni.projectcalico.org/containerID: d453ee246bb9d2863efedda129da6e8105d5180530746e7b0e5d80e249008381\n                  cni.projectcalico.org/podIP: 10.42.0.44/32\n                  cni.projectcalico.org/podIPs: 10.42.0.44/32\nStatus:           Running\nIP:               10.42.0.44\nIPs:\n  IP:  10.42.0.44\nContainers:\n  webserver:\n    Container ID:  docker://4f6e55f91bbe7dc84afdd3c7f2951ebe03af5573e6ea738bf7ee1136d6e47973\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 03 Jul 2024 13:38:48 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6m9mr (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-6m9mr:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-4-137\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  31s   default-scheduler  Successfully assigned pod-network-test-5451/netserver-0 to ip-172-31-4-137\n  Normal  Pulled     29s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    29s   kubelet            Created container webserver\n  Normal  Started    29s   kubelet            Started container webserver\n"
  I0703 13:39:17.970021 21 utils.go:261] Name:             netserver-0
  Namespace:        pod-network-test-5451
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-4-137/172.31.4.137
  Start Time:       Wed, 03 Jul 2024 13:38:46 +0000
  Labels:           selector-dc13eeda-4694-4650-aeb0-5b440e6abf96=true
  Annotations:      cni.projectcalico.org/containerID: d453ee246bb9d2863efedda129da6e8105d5180530746e7b0e5d80e249008381
                    cni.projectcalico.org/podIP: 10.42.0.44/32
                    cni.projectcalico.org/podIPs: 10.42.0.44/32
  Status:           Running
  IP:               10.42.0.44
  IPs:
    IP:  10.42.0.44
  Containers:
    webserver:
      Container ID:  docker://4f6e55f91bbe7dc84afdd3c7f2951ebe03af5573e6ea738bf7ee1136d6e47973
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 03 Jul 2024 13:38:48 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-6m9mr (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-6m9mr:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-4-137
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  31s   default-scheduler  Successfully assigned pod-network-test-5451/netserver-0 to ip-172-31-4-137
    Normal  Pulled     29s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    29s   kubelet            Created container webserver
    Normal  Started    29s   kubelet            Started container webserver

  I0703 13:39:17.971213 21 utils.go:258] 
  Output of kubectl describe pod pod-network-test-5451/netserver-1:

  I0703 13:39:17.971278 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=pod-network-test-5451 describe pod netserver-1 --namespace=pod-network-test-5451'
  I0703 13:39:18.269663 21 builder.go:146] stderr: ""
  I0703 13:39:18.269778 21 builder.go:147] stdout: "Name:             netserver-1\nNamespace:        pod-network-test-5451\nPriority:         0\nService Account:  default\nNode:             ip-172-31-4-210/172.31.4.210\nStart Time:       Wed, 03 Jul 2024 13:38:46 +0000\nLabels:           selector-dc13eeda-4694-4650-aeb0-5b440e6abf96=true\nAnnotations:      cni.projectcalico.org/containerID: 60a602e5d2f5bb45a2c7be0919f85d6943a0050b0301d345ae83274461c606d6\n                  cni.projectcalico.org/podIP: 10.42.2.81/32\n                  cni.projectcalico.org/podIPs: 10.42.2.81/32\nStatus:           Running\nIP:               10.42.2.81\nIPs:\n  IP:  10.42.2.81\nContainers:\n  webserver:\n    Container ID:  docker://d1a068d5fbd01cacafed172c5bb78a39e46b2e4dc9d9a0bec0a105e0a53bb05a\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 03 Jul 2024 13:38:47 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mdd8r (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-mdd8r:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-4-210\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  32s   default-scheduler  Successfully assigned pod-network-test-5451/netserver-1 to ip-172-31-4-210\n  Normal  Pulled     31s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    31s   kubelet            Created container webserver\n  Normal  Started    31s   kubelet            Started container webserver\n"
  I0703 13:39:18.269799 21 utils.go:261] Name:             netserver-1
  Namespace:        pod-network-test-5451
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-4-210/172.31.4.210
  Start Time:       Wed, 03 Jul 2024 13:38:46 +0000
  Labels:           selector-dc13eeda-4694-4650-aeb0-5b440e6abf96=true
  Annotations:      cni.projectcalico.org/containerID: 60a602e5d2f5bb45a2c7be0919f85d6943a0050b0301d345ae83274461c606d6
                    cni.projectcalico.org/podIP: 10.42.2.81/32
                    cni.projectcalico.org/podIPs: 10.42.2.81/32
  Status:           Running
  IP:               10.42.2.81
  IPs:
    IP:  10.42.2.81
  Containers:
    webserver:
      Container ID:  docker://d1a068d5fbd01cacafed172c5bb78a39e46b2e4dc9d9a0bec0a105e0a53bb05a
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 03 Jul 2024 13:38:47 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-mdd8r (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-mdd8r:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-4-210
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  32s   default-scheduler  Successfully assigned pod-network-test-5451/netserver-1 to ip-172-31-4-210
    Normal  Pulled     31s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    31s   kubelet            Created container webserver
    Normal  Started    31s   kubelet            Started container webserver

  I0703 13:39:18.270020 21 utils.go:258] 
  Output of kubectl describe pod pod-network-test-5451/netserver-2:

  I0703 13:39:18.270076 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=pod-network-test-5451 describe pod netserver-2 --namespace=pod-network-test-5451'
  E0703 13:39:18.272695      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:39:18.504883 21 builder.go:146] stderr: ""
  I0703 13:39:18.504976 21 builder.go:147] stdout: "Name:             netserver-2\nNamespace:        pod-network-test-5451\nPriority:         0\nService Account:  default\nNode:             ip-172-31-5-183/172.31.5.183\nStart Time:       Wed, 03 Jul 2024 13:38:46 +0000\nLabels:           selector-dc13eeda-4694-4650-aeb0-5b440e6abf96=true\nAnnotations:      cni.projectcalico.org/containerID: 921590d78618031fe1c254960d28dadfd5c3f2108c2f5de3ee50c493dcc60146\n                  cni.projectcalico.org/podIP: 10.42.1.244/32\n                  cni.projectcalico.org/podIPs: 10.42.1.244/32\nStatus:           Running\nIP:               10.42.1.244\nIPs:\n  IP:  10.42.1.244\nContainers:\n  webserver:\n    Container ID:  docker://d51581d5b7c40b0b5cf2ec5cfb3d2549315bbf7c45165fc8e08ce6ef99284e77\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Ports:         8083/TCP, 8081/UDP\n    Host Ports:    0/TCP, 0/UDP\n    Args:\n      netexec\n      --http-port=8083\n      --udp-port=8081\n    State:          Running\n      Started:      Wed, 03 Jul 2024 13:38:48 +0000\n    Ready:          True\n    Restart Count:  0\n    Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jwx9c (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-jwx9c:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              kubernetes.io/hostname=ip-172-31-5-183\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  32s   default-scheduler  Successfully assigned pod-network-test-5451/netserver-2 to ip-172-31-5-183\n  Normal  Pulled     31s   kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    31s   kubelet            Created container webserver\n  Normal  Started    30s   kubelet            Started container webserver\n"
  I0703 13:39:18.505006 21 utils.go:261] Name:             netserver-2
  Namespace:        pod-network-test-5451
  Priority:         0
  Service Account:  default
  Node:             ip-172-31-5-183/172.31.5.183
  Start Time:       Wed, 03 Jul 2024 13:38:46 +0000
  Labels:           selector-dc13eeda-4694-4650-aeb0-5b440e6abf96=true
  Annotations:      cni.projectcalico.org/containerID: 921590d78618031fe1c254960d28dadfd5c3f2108c2f5de3ee50c493dcc60146
                    cni.projectcalico.org/podIP: 10.42.1.244/32
                    cni.projectcalico.org/podIPs: 10.42.1.244/32
  Status:           Running
  IP:               10.42.1.244
  IPs:
    IP:  10.42.1.244
  Containers:
    webserver:
      Container ID:  docker://d51581d5b7c40b0b5cf2ec5cfb3d2549315bbf7c45165fc8e08ce6ef99284e77
      Image:         registry.k8s.io/e2e-test-images/agnhost:2.47
      Image ID:      docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253
      Ports:         8083/TCP, 8081/UDP
      Host Ports:    0/TCP, 0/UDP
      Args:
        netexec
        --http-port=8083
        --udp-port=8081
      State:          Running
        Started:      Wed, 03 Jul 2024 13:38:48 +0000
      Ready:          True
      Restart Count:  0
      Liveness:       http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Readiness:      http-get http://:8083/healthz delay=10s timeout=30s period=10s #success=1 #failure=3
      Environment:    <none>
      Mounts:
        /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-jwx9c (ro)
  Conditions:
    Type                        Status
    PodReadyToStartContainers   True 
    Initialized                 True 
    Ready                       True 
    ContainersReady             True 
    PodScheduled                True 
  Volumes:
    kube-api-access-jwx9c:
      Type:                    Projected (a volume that contains injected data from multiple sources)
      TokenExpirationSeconds:  3607
      ConfigMapName:           kube-root-ca.crt
      ConfigMapOptional:       <nil>
      DownwardAPI:             true
  QoS Class:                   BestEffort
  Node-Selectors:              kubernetes.io/hostname=ip-172-31-5-183
  Tolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s
                               node.kubernetes.io/unreachable:NoExecute op=Exists for 300s
  Events:
    Type    Reason     Age   From               Message
    ----    ------     ----  ----               -------
    Normal  Scheduled  32s   default-scheduler  Successfully assigned pod-network-test-5451/netserver-2 to ip-172-31-5-183
    Normal  Pulled     31s   kubelet            Container image "registry.k8s.io/e2e-test-images/agnhost:2.47" already present on machine
    Normal  Created    31s   kubelet            Created container webserver
    Normal  Started    30s   kubelet            Started container webserver

  I0703 13:39:18.505346 21 utils.go:345] encountered error during dial (did not find expected responses... 
  Tries 1
  Command curl -g -q -s 'http://10.42.1.245:9080/dial?request=hostname&protocol=http&host=10.42.0.44&port=8083&tries=1'
  retrieved map[]
  expected map[netserver-0:{}])
  I0703 13:39:18.505379 21 networking.go:48] ...failed...will try again in next pass
  I0703 13:39:18.505393 21 networking.go:42] Breadth first check of 10.42.2.81 on host 172.31.4.210...
  I0703 13:39:18.509264 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.245:9080/dial?request=hostname&protocol=http&host=10.42.2.81&port=8083&tries=1'] Namespace:pod-network-test-5451 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:39:18.509345 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:39:18.510045 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:39:18.510119 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5451/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.2.81%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0703 13:39:18.814961 21 utils.go:331] Waiting for responses: map[]
  I0703 13:39:18.815014 21 utils.go:335] reached 10.42.2.81 after 0/1 tries
  I0703 13:39:18.815028 21 networking.go:42] Breadth first check of 10.42.1.244 on host 172.31.5.183...
  I0703 13:39:18.818618 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.245:9080/dial?request=hostname&protocol=http&host=10.42.1.244&port=8083&tries=1'] Namespace:pod-network-test-5451 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:39:18.818658 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:39:18.819492 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:39:18.819590 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5451/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.1.244%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0703 13:39:18.992343 21 utils.go:331] Waiting for responses: map[]
  I0703 13:39:18.992389 21 utils.go:335] reached 10.42.1.244 after 0/1 tries
  I0703 13:39:18.992440 21 networking.go:53] Going to retry 1 out of 3 pods....
  I0703 13:39:18.992454 21 networking.go:55] Doublechecking 1 pods in host 172.31.4.137 which weren't seen the first time.
  I0703 13:39:18.992523 21 networking.go:57] Now attempting to probe pod [[[ 10.42.0.44 ]]]
  I0703 13:39:18.998549 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c curl -g -q -s 'http://10.42.1.245:9080/dial?request=hostname&protocol=http&host=10.42.0.44&port=8083&tries=1'] Namespace:pod-network-test-5451 PodName:test-container-pod ContainerName:webserver Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:39:18.998622 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:39:18.999547 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:39:18.999767 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/pod-network-test-5451/pods/test-container-pod/exec?command=%2Fbin%2Fsh&command=-c&command=curl+-g+-q+-s+%27http%3A%2F%2F10.42.1.245%3A9080%2Fdial%3Frequest%3Dhostname%26protocol%3Dhttp%26host%3D10.42.0.44%26port%3D8083%26tries%3D1%27&container=webserver&container=webserver&stderr=true&stdout=true)
  I0703 13:39:19.203300 21 utils.go:331] Waiting for responses: map[]
  I0703 13:39:19.203987 21 utils.go:335] reached 10.42.0.44 after 0/39 tries
  I0703 13:39:19.204106 21 networking.go:61] Was able to reach 10.42.0.44 on 172.31.4.137 
  I0703 13:39:19.204326 21 networking.go:63] ... Done probing pod [[[ 10.42.0.44 ]]]
  I0703 13:39:19.204542 21 networking.go:65] succeeded at polling 3 out of 3 connections
  I0703 13:39:19.204760 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pod-network-test-5451" for this suite. @ 07/03/24 13:39:19.215
• [33.350 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Downward API should provide container's limits.cpu/memory and requests.cpu/memory as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:168
  STEP: Creating a kubernetes client @ 07/03/24 13:39:19.248
  I0703 13:39:19.249006 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 13:39:19.25
  E0703 13:39:19.273764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:39:19.292
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:39:19.301
  STEP: Creating a pod to test downward api env vars @ 07/03/24 13:39:19.304
  E0703 13:39:20.275263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:21.275743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:22.276392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:23.276558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:39:23.37
  I0703 13:39:23.381863 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downward-api-8595c3a9-d289-403c-a2de-04e512309364 container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 13:39:23.449
  I0703 13:39:23.495976 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8014" for this suite. @ 07/03/24 13:39:23.508
• [4.295 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] AggregatedDiscovery should support aggregated discovery interface [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:259
  STEP: Creating a kubernetes client @ 07/03/24 13:39:23.545
  I0703 13:39:23.545654 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/03/24 13:39:23.55
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:39:23.627
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:39:23.642
  I0703 13:39:23.664592 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-9406" for this suite. @ 07/03/24 13:39:23.713
• [0.205 seconds]
------------------------------
S
------------------------------
[sig-storage] CSIInlineVolumes should run through the lifecycle of a CSIDriver [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:157
  STEP: Creating a kubernetes client @ 07/03/24 13:39:23.751
  I0703 13:39:23.751465 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/03/24 13:39:23.757
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:39:23.901
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:39:23.978
  STEP: Creating two CSIDrivers @ 07/03/24 13:39:24.132
  E0703 13:39:24.276890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Getting "inline-driver-7e04e88a-431c-44f3-9dfd-aa924965b4e7" & "inline-driver-1e35e3cd-a614-4330-aada-4cabcd2de80e" @ 07/03/24 13:39:24.375
  STEP: Patching the CSIDriver "inline-driver-1e35e3cd-a614-4330-aada-4cabcd2de80e" @ 07/03/24 13:39:24.43
  STEP: Updating the CSIDriver "inline-driver-1e35e3cd-a614-4330-aada-4cabcd2de80e" @ 07/03/24 13:39:24.532
  STEP: Listing all CSIDrivers with the labelSelector: "e2e-test=csiinlinevolumes-4844" @ 07/03/24 13:39:24.639
  STEP: Deleting CSIDriver "inline-driver-7e04e88a-431c-44f3-9dfd-aa924965b4e7" @ 07/03/24 13:39:24.691
  STEP: Confirm deletion of CSIDriver "inline-driver-7e04e88a-431c-44f3-9dfd-aa924965b4e7" @ 07/03/24 13:39:24.74
  STEP: Deleting CSIDriver "inline-driver-1e35e3cd-a614-4330-aada-4cabcd2de80e" via DeleteCollection @ 07/03/24 13:39:24.761
  STEP: Confirm deletion of CSIDriver "inline-driver-1e35e3cd-a614-4330-aada-4cabcd2de80e" @ 07/03/24 13:39:24.85
  I0703 13:39:24.876491 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-4844" for this suite. @ 07/03/24 13:39:24.902
• [1.205 seconds]
------------------------------
[sig-node] Ephemeral Containers [NodeConformance] should update the ephemeral containers in an existing pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/ephemeral_containers.go:98
  STEP: Creating a kubernetes client @ 07/03/24 13:39:24.956
  I0703 13:39:24.956175 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename ephemeral-containers-test @ 07/03/24 13:39:24.957
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:39:25.147
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:39:25.171
  STEP: creating a target pod @ 07/03/24 13:39:25.216
  E0703 13:39:25.277466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:26.278638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:27.279638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:28.279748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:29.280414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: adding an ephemeral container @ 07/03/24 13:39:29.39
  E0703 13:39:30.281128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:31.281196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking pod container endpoints @ 07/03/24 13:39:31.587
  I0703 13:39:31.587855 21 exec_util.go:55] ExecWithOptions {Command:[/bin/echo marco] Namespace:ephemeral-containers-test-6757 PodName:ephemeral-containers-target-pod ContainerName:debugger Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:39:31.587935 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:39:31.588930 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:39:31.589156 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/ephemeral-containers-test-6757/pods/ephemeral-containers-target-pod/exec?command=%2Fbin%2Fecho&command=marco&container=debugger&container=debugger&stderr=true&stdout=true)
  I0703 13:39:31.721915 21 exec_util.go:106] Exec stderr: ""
  STEP: checking pod "ephemeral-containers-target-pod" has only one ephemeralcontainer @ 07/03/24 13:39:31.765
  STEP: adding another ephemeralcontainer to pod "ephemeral-containers-target-pod" @ 07/03/24 13:39:31.777
  STEP: checking pod "ephemeral-containers-target-pod" has only two ephemeralcontainers @ 07/03/24 13:39:31.879
  I0703 13:39:31.970230 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "ephemeral-containers-test-6757" for this suite. @ 07/03/24 13:39:31.978
• [7.074 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-cli] Kubectl client Proxy server should support --unix-socket=/path [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1858
  STEP: Creating a kubernetes client @ 07/03/24 13:39:32.031
  I0703 13:39:32.031247 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:39:32.032
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:39:32.277
  E0703 13:39:32.284593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:39:32.296
  STEP: Starting the proxy @ 07/03/24 13:39:32.34
  I0703 13:39:32.341152 21 util.go:592] Asynchronously running '/usr/local/bin/kubectl kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-9006 proxy --unix-socket=/tmp/kubectl-proxy-unix2896621867/test'
  STEP: retrieving proxy /api/ output @ 07/03/24 13:39:32.468
  I0703 13:39:32.470309 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9006" for this suite. @ 07/03/24 13:39:32.523
• [0.677 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan pods created by rc if delete options say so [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:380
  STEP: Creating a kubernetes client @ 07/03/24 13:39:32.708
  I0703 13:39:32.708283 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename gc @ 07/03/24 13:39:32.709
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:39:32.963
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:39:32.995
  STEP: create the rc @ 07/03/24 13:39:33.1
  W0703 13:39:33.125841      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  E0703 13:39:33.285055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:34.286511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:35.287321      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:36.288551      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:37.291505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:38.292441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:39.300572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:40.298627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc @ 07/03/24 13:39:41.285
  E0703 13:39:41.299173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for the rc to be deleted @ 07/03/24 13:39:41.493
  E0703 13:39:42.299480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:43.299646      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:44.302410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:45.303215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:46.324508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: wait for 30 seconds to see if the garbage collector mistakenly deletes the pods @ 07/03/24 13:39:46.532
  E0703 13:39:47.312511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:48.312604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:49.314218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:50.314586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:51.314926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:52.315035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:53.315160      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:54.317827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:55.318746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:56.322464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:57.323131      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:58.323512      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:39:59.323607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:00.324938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:01.325212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:02.325819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:03.329725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:04.329859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:05.332837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:06.332954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:07.333923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:08.335249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:09.335444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:10.335574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:11.338470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:12.339153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:13.339277      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:14.342472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:15.343267      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:16.344111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/03/24 13:40:16.655
  W0703 13:40:16.693885      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0703 13:40:16.694084 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0703 13:40:16.700798 21 delete.go:95] Deleting pod "simpletest.rc-28lfp" in namespace "gc-2947"
  I0703 13:40:16.796386 21 delete.go:95] Deleting pod "simpletest.rc-2k24s" in namespace "gc-2947"
  I0703 13:40:16.882146 21 delete.go:95] Deleting pod "simpletest.rc-2r5ft" in namespace "gc-2947"
  I0703 13:40:16.926858 21 delete.go:95] Deleting pod "simpletest.rc-47mkx" in namespace "gc-2947"
  I0703 13:40:16.991708 21 delete.go:95] Deleting pod "simpletest.rc-48wqp" in namespace "gc-2947"
  I0703 13:40:17.089468 21 delete.go:95] Deleting pod "simpletest.rc-4bvm5" in namespace "gc-2947"
  I0703 13:40:17.165631 21 delete.go:95] Deleting pod "simpletest.rc-4tqkp" in namespace "gc-2947"
  I0703 13:40:17.292172 21 delete.go:95] Deleting pod "simpletest.rc-5565m" in namespace "gc-2947"
  E0703 13:40:17.344572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:17.696932 21 delete.go:95] Deleting pod "simpletest.rc-5g24j" in namespace "gc-2947"
  I0703 13:40:17.845768 21 delete.go:95] Deleting pod "simpletest.rc-5ktjg" in namespace "gc-2947"
  I0703 13:40:17.946510 21 delete.go:95] Deleting pod "simpletest.rc-6l4nd" in namespace "gc-2947"
  I0703 13:40:18.012046 21 delete.go:95] Deleting pod "simpletest.rc-6mqnt" in namespace "gc-2947"
  I0703 13:40:18.140947 21 delete.go:95] Deleting pod "simpletest.rc-6p7kn" in namespace "gc-2947"
  I0703 13:40:18.257147 21 delete.go:95] Deleting pod "simpletest.rc-6rw6h" in namespace "gc-2947"
  E0703 13:40:18.345642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:18.398214 21 delete.go:95] Deleting pod "simpletest.rc-6xmxc" in namespace "gc-2947"
  I0703 13:40:18.486487 21 delete.go:95] Deleting pod "simpletest.rc-728hb" in namespace "gc-2947"
  I0703 13:40:18.557992 21 delete.go:95] Deleting pod "simpletest.rc-7nl8w" in namespace "gc-2947"
  I0703 13:40:18.649498 21 delete.go:95] Deleting pod "simpletest.rc-7nmdr" in namespace "gc-2947"
  I0703 13:40:18.749319 21 delete.go:95] Deleting pod "simpletest.rc-7pq9g" in namespace "gc-2947"
  I0703 13:40:18.845338 21 delete.go:95] Deleting pod "simpletest.rc-7v6tx" in namespace "gc-2947"
  I0703 13:40:18.922806 21 delete.go:95] Deleting pod "simpletest.rc-867p4" in namespace "gc-2947"
  I0703 13:40:18.985492 21 delete.go:95] Deleting pod "simpletest.rc-88rms" in namespace "gc-2947"
  I0703 13:40:19.110659 21 delete.go:95] Deleting pod "simpletest.rc-8dfqp" in namespace "gc-2947"
  I0703 13:40:19.160094 21 delete.go:95] Deleting pod "simpletest.rc-8jwbf" in namespace "gc-2947"
  I0703 13:40:19.209194 21 delete.go:95] Deleting pod "simpletest.rc-9gd4c" in namespace "gc-2947"
  I0703 13:40:19.284592 21 delete.go:95] Deleting pod "simpletest.rc-9lp5d" in namespace "gc-2947"
  E0703 13:40:19.346421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:19.366482 21 delete.go:95] Deleting pod "simpletest.rc-b5bzl" in namespace "gc-2947"
  I0703 13:40:19.518880 21 delete.go:95] Deleting pod "simpletest.rc-ckvq6" in namespace "gc-2947"
  I0703 13:40:19.657083 21 delete.go:95] Deleting pod "simpletest.rc-cx6p4" in namespace "gc-2947"
  I0703 13:40:19.771091 21 delete.go:95] Deleting pod "simpletest.rc-cxm96" in namespace "gc-2947"
  I0703 13:40:19.831518 21 delete.go:95] Deleting pod "simpletest.rc-cxq47" in namespace "gc-2947"
  I0703 13:40:19.926805 21 delete.go:95] Deleting pod "simpletest.rc-d22c9" in namespace "gc-2947"
  I0703 13:40:20.042598 21 delete.go:95] Deleting pod "simpletest.rc-dtfn9" in namespace "gc-2947"
  I0703 13:40:20.170569 21 delete.go:95] Deleting pod "simpletest.rc-f75jl" in namespace "gc-2947"
  I0703 13:40:20.300442 21 delete.go:95] Deleting pod "simpletest.rc-f9t4v" in namespace "gc-2947"
  E0703 13:40:20.348853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:20.454709 21 delete.go:95] Deleting pod "simpletest.rc-fkkqt" in namespace "gc-2947"
  I0703 13:40:20.577395 21 delete.go:95] Deleting pod "simpletest.rc-fp2rt" in namespace "gc-2947"
  I0703 13:40:20.647415 21 delete.go:95] Deleting pod "simpletest.rc-fshxg" in namespace "gc-2947"
  I0703 13:40:20.710625 21 delete.go:95] Deleting pod "simpletest.rc-fvcqk" in namespace "gc-2947"
  I0703 13:40:20.842535 21 delete.go:95] Deleting pod "simpletest.rc-fxsmd" in namespace "gc-2947"
  I0703 13:40:20.995714 21 delete.go:95] Deleting pod "simpletest.rc-fz2g6" in namespace "gc-2947"
  I0703 13:40:21.094626 21 delete.go:95] Deleting pod "simpletest.rc-g57g9" in namespace "gc-2947"
  I0703 13:40:21.233113 21 delete.go:95] Deleting pod "simpletest.rc-gg7h6" in namespace "gc-2947"
  I0703 13:40:21.323586 21 delete.go:95] Deleting pod "simpletest.rc-gjbgp" in namespace "gc-2947"
  E0703 13:40:21.348929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:21.394470 21 delete.go:95] Deleting pod "simpletest.rc-gkldg" in namespace "gc-2947"
  I0703 13:40:21.547901 21 delete.go:95] Deleting pod "simpletest.rc-gktrt" in namespace "gc-2947"
  I0703 13:40:21.630566 21 delete.go:95] Deleting pod "simpletest.rc-gncqc" in namespace "gc-2947"
  I0703 13:40:21.917597 21 delete.go:95] Deleting pod "simpletest.rc-h5wsp" in namespace "gc-2947"
  I0703 13:40:22.066092 21 delete.go:95] Deleting pod "simpletest.rc-hcrcm" in namespace "gc-2947"
  I0703 13:40:22.107823 21 delete.go:95] Deleting pod "simpletest.rc-hdbnq" in namespace "gc-2947"
  I0703 13:40:22.188288 21 delete.go:95] Deleting pod "simpletest.rc-hdwng" in namespace "gc-2947"
  I0703 13:40:22.347895 21 delete.go:95] Deleting pod "simpletest.rc-jbs4v" in namespace "gc-2947"
  E0703 13:40:22.349179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:22.426860 21 delete.go:95] Deleting pod "simpletest.rc-jtvsc" in namespace "gc-2947"
  I0703 13:40:22.486772 21 delete.go:95] Deleting pod "simpletest.rc-jvwjt" in namespace "gc-2947"
  I0703 13:40:22.564695 21 delete.go:95] Deleting pod "simpletest.rc-kb4v2" in namespace "gc-2947"
  I0703 13:40:22.669776 21 delete.go:95] Deleting pod "simpletest.rc-kd8h5" in namespace "gc-2947"
  I0703 13:40:22.742457 21 delete.go:95] Deleting pod "simpletest.rc-kdmkv" in namespace "gc-2947"
  I0703 13:40:22.784356 21 delete.go:95] Deleting pod "simpletest.rc-kphhm" in namespace "gc-2947"
  I0703 13:40:22.909406 21 delete.go:95] Deleting pod "simpletest.rc-l7zwk" in namespace "gc-2947"
  I0703 13:40:23.137285 21 delete.go:95] Deleting pod "simpletest.rc-lb2kr" in namespace "gc-2947"
  I0703 13:40:23.210466 21 delete.go:95] Deleting pod "simpletest.rc-ltcrk" in namespace "gc-2947"
  I0703 13:40:23.327319 21 delete.go:95] Deleting pod "simpletest.rc-m7pk4" in namespace "gc-2947"
  E0703 13:40:23.349971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:23.387917 21 delete.go:95] Deleting pod "simpletest.rc-m9h9d" in namespace "gc-2947"
  I0703 13:40:23.448921 21 delete.go:95] Deleting pod "simpletest.rc-mdhzf" in namespace "gc-2947"
  I0703 13:40:23.524366 21 delete.go:95] Deleting pod "simpletest.rc-mdqj9" in namespace "gc-2947"
  I0703 13:40:23.632250 21 delete.go:95] Deleting pod "simpletest.rc-mjkms" in namespace "gc-2947"
  I0703 13:40:23.728770 21 delete.go:95] Deleting pod "simpletest.rc-mpvkn" in namespace "gc-2947"
  I0703 13:40:23.808922 21 delete.go:95] Deleting pod "simpletest.rc-nqrcg" in namespace "gc-2947"
  I0703 13:40:23.956221 21 delete.go:95] Deleting pod "simpletest.rc-nzt99" in namespace "gc-2947"
  I0703 13:40:24.098173 21 delete.go:95] Deleting pod "simpletest.rc-p2j9x" in namespace "gc-2947"
  I0703 13:40:24.231146 21 delete.go:95] Deleting pod "simpletest.rc-p7tvf" in namespace "gc-2947"
  E0703 13:40:24.350606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:24.468093 21 delete.go:95] Deleting pod "simpletest.rc-p8jpj" in namespace "gc-2947"
  I0703 13:40:24.539339 21 delete.go:95] Deleting pod "simpletest.rc-p92dt" in namespace "gc-2947"
  I0703 13:40:24.780517 21 delete.go:95] Deleting pod "simpletest.rc-qcjfn" in namespace "gc-2947"
  I0703 13:40:25.235931 21 delete.go:95] Deleting pod "simpletest.rc-qg5pq" in namespace "gc-2947"
  I0703 13:40:25.332786 21 delete.go:95] Deleting pod "simpletest.rc-qlx4h" in namespace "gc-2947"
  E0703 13:40:25.351213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:25.447965 21 delete.go:95] Deleting pod "simpletest.rc-qqlsm" in namespace "gc-2947"
  I0703 13:40:25.530915 21 delete.go:95] Deleting pod "simpletest.rc-rfpq7" in namespace "gc-2947"
  I0703 13:40:25.651591 21 delete.go:95] Deleting pod "simpletest.rc-rjbp2" in namespace "gc-2947"
  I0703 13:40:25.744313 21 delete.go:95] Deleting pod "simpletest.rc-rnr56" in namespace "gc-2947"
  I0703 13:40:25.831212 21 delete.go:95] Deleting pod "simpletest.rc-rp6wv" in namespace "gc-2947"
  I0703 13:40:25.945697 21 delete.go:95] Deleting pod "simpletest.rc-rqrqh" in namespace "gc-2947"
  I0703 13:40:26.191309 21 delete.go:95] Deleting pod "simpletest.rc-sljnw" in namespace "gc-2947"
  I0703 13:40:26.267462 21 delete.go:95] Deleting pod "simpletest.rc-sm9qz" in namespace "gc-2947"
  E0703 13:40:26.351553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:26.380439 21 delete.go:95] Deleting pod "simpletest.rc-srx9j" in namespace "gc-2947"
  I0703 13:40:26.540709 21 delete.go:95] Deleting pod "simpletest.rc-sxnhl" in namespace "gc-2947"
  I0703 13:40:26.684299 21 delete.go:95] Deleting pod "simpletest.rc-t8j8n" in namespace "gc-2947"
  I0703 13:40:26.876626 21 delete.go:95] Deleting pod "simpletest.rc-tn2pg" in namespace "gc-2947"
  I0703 13:40:26.969561 21 delete.go:95] Deleting pod "simpletest.rc-tpxkd" in namespace "gc-2947"
  I0703 13:40:27.141335 21 delete.go:95] Deleting pod "simpletest.rc-tqffk" in namespace "gc-2947"
  I0703 13:40:27.286062 21 delete.go:95] Deleting pod "simpletest.rc-txz6h" in namespace "gc-2947"
  E0703 13:40:27.352274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:27.499967 21 delete.go:95] Deleting pod "simpletest.rc-v2cj6" in namespace "gc-2947"
  I0703 13:40:27.641089 21 delete.go:95] Deleting pod "simpletest.rc-vn4qw" in namespace "gc-2947"
  I0703 13:40:27.798733 21 delete.go:95] Deleting pod "simpletest.rc-w6b9g" in namespace "gc-2947"
  I0703 13:40:27.989858 21 delete.go:95] Deleting pod "simpletest.rc-wm7wb" in namespace "gc-2947"
  I0703 13:40:28.073612 21 delete.go:95] Deleting pod "simpletest.rc-x9zz7" in namespace "gc-2947"
  I0703 13:40:28.190135 21 delete.go:95] Deleting pod "simpletest.rc-xgl6p" in namespace "gc-2947"
  I0703 13:40:28.263742 21 delete.go:95] Deleting pod "simpletest.rc-z59zs" in namespace "gc-2947"
  E0703 13:40:28.355749      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:28.356708 21 delete.go:95] Deleting pod "simpletest.rc-z6dq8" in namespace "gc-2947"
  I0703 13:40:28.571773 21 delete.go:95] Deleting pod "simpletest.rc-z7gb9" in namespace "gc-2947"
  I0703 13:40:28.674690 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-2947" for this suite. @ 07/03/24 13:40:28.781
• [56.114 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] patching/updating a validating webhook should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:403
  STEP: Creating a kubernetes client @ 07/03/24 13:40:28.824
  I0703 13:40:28.824268 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 13:40:28.825
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:40:29.078
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:40:29.096
  E0703 13:40:29.356577      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Setting up server cert @ 07/03/24 13:40:29.405
  E0703 13:40:30.357565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 13:40:30.359
  STEP: Deploying the webhook pod @ 07/03/24 13:40:30.378
  STEP: Wait for the deployment to be ready @ 07/03/24 13:40:30.42
  I0703 13:40:30.504557 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0703 13:40:31.361928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:32.362298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:32.577452 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:40:33.362483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:34.362887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:34.588971 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:40:35.362877      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:36.370982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:36.615929 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 13, 40, 30, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 13:40:37.374483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:38.376585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 13:40:38.596
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 13:40:38.636
  E0703 13:40:39.376641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:39.638492 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Creating a validating webhook configuration @ 07/03/24 13:40:39.75
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/03/24 13:40:39.869
  STEP: Updating a validating webhook configuration's rules to not include the create operation @ 07/03/24 13:40:39.942
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/03/24 13:40:39.994
  STEP: Patching a validating webhook configuration's rules to include the create operation @ 07/03/24 13:40:40.048
  STEP: Creating a configMap that does not comply to the validation webhook rules @ 07/03/24 13:40:40.229
  E0703 13:40:40.377157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:40.576625 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6756" for this suite. @ 07/03/24 13:40:40.609
  STEP: Destroying namespace "webhook-markers-4390" for this suite. @ 07/03/24 13:40:40.69
• [11.912 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl version should check is all data is printed [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1726
  STEP: Creating a kubernetes client @ 07/03/24 13:40:40.738
  I0703 13:40:40.739089 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:40:40.74
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:40:40.908
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:40:41.023
  I0703 13:40:41.087951 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-9257 version'
  I0703 13:40:41.346158 21 builder.go:146] stderr: ""
  I0703 13:40:41.346267 21 builder.go:147] stdout: "Client Version: v1.30.2\nKustomize Version: v5.0.4-0.20230601165947-6ce0bf390ce3\nServer Version: v1.30.2\n"
  I0703 13:40:41.346571 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-9257" for this suite. @ 07/03/24 13:40:41.367
  E0703 13:40:41.377359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [0.652 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-architecture] Conformance Tests should have at least two untainted nodes [Conformance] [sig-architecture, Conformance]
k8s.io/kubernetes/test/e2e/architecture/conformance.go:39
  STEP: Creating a kubernetes client @ 07/03/24 13:40:41.39
  I0703 13:40:41.390874 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename conformance-tests @ 07/03/24 13:40:41.392
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:40:41.652
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:40:41.697
  STEP: Getting node addresses @ 07/03/24 13:40:41.779
  I0703 13:40:41.779593 21 helper.go:48] Waiting up to 10m0s for all (but 0) nodes to be schedulable
  I0703 13:40:41.828295 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "conformance-tests-2707" for this suite. @ 07/03/24 13:40:41.879
• [0.559 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-apps] ReplicationController should surface a failure condition on a common issue like exceeded quota [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/rc.go:86
  STEP: Creating a kubernetes client @ 07/03/24 13:40:41.949
  I0703 13:40:41.949776 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replication-controller @ 07/03/24 13:40:41.963
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:40:42.137
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:40:42.186
  I0703 13:40:42.215974 21 rc.go:544] Creating quota "condition-test" that allows only two pods to run in the current namespace
  STEP: Creating rc "condition-test" that asks for more than the allowed pod quota @ 07/03/24 13:40:42.28
  E0703 13:40:42.378374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Checking rc "condition-test" has the desired failure condition set @ 07/03/24 13:40:42.418
  E0703 13:40:43.377863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down rc "condition-test" to satisfy pod quota @ 07/03/24 13:40:43.467
  I0703 13:40:43.634725 21 rc.go:730] Updating replication controller "condition-test"
  STEP: Checking rc "condition-test" has no failure condition set @ 07/03/24 13:40:43.636
  E0703 13:40:44.378385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:44.675196 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replication-controller-172" for this suite. @ 07/03/24 13:40:44.684
• [2.749 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Sysctls [LinuxOnly] [NodeConformance] should reject invalid sysctls [MinimumKubeletVersion:1.21] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/sysctl.go:125
  STEP: Creating a kubernetes client @ 07/03/24 13:40:44.702
  I0703 13:40:44.702183 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sysctl @ 07/03/24 13:40:44.71
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:40:44.799
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:40:44.806
  STEP: Creating a pod with one valid and two invalid sysctls @ 07/03/24 13:40:44.849
  I0703 13:40:44.946947 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sysctl-6754" for this suite. @ 07/03/24 13:40:44.961
• [0.280 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Probing container should *not* be restarted with a exec "cat /tmp/health" liveness probe [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:152
  STEP: Creating a kubernetes client @ 07/03/24 13:40:45.003
  I0703 13:40:45.003480 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 13:40:45.004
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:40:45.2
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:40:45.254
  STEP: Creating pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452 @ 07/03/24 13:40:45.273
  E0703 13:40:45.379253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:46.379447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:47.381397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:48.382514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:49.384651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: checking the pod's current state and verifying that restartCount is present @ 07/03/24 13:40:49.497
  I0703 13:40:49.505813 21 container_probe.go:1749] Initial restart count of pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 is 0
  I0703 13:40:49.555571 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:40:50.385181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:51.385380      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:51.582639 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:40:52.385798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:53.386005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:53.611795 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:40:54.386453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:55.386962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:55.620335 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:40:56.387096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:57.387206      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:57.634566 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:40:58.388272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:40:59.388548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:40:59.662108 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:00.389544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:01.389677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:01.674782 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:02.389999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:03.390175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:03.687857 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:04.390804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:05.392404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:05.704259 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:06.392302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:07.393365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:07.713528 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:08.394761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:09.394565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:09.720641 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:10.395521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:11.395629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:11.725845 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:12.396083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:13.396361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:13.730468 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:14.396353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:15.397358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:15.733969 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:16.398039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:17.398727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:17.738201 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:18.399958      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:19.400014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:19.751295 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:20.400081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:21.400658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:21.755865 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:22.403558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:23.405929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:23.760234 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:24.406253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:25.406933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:25.765362 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:26.408011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:27.411117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:27.771337 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:28.412108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:29.412740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:29.786699 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:30.413678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:31.414050      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:31.798846 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:32.415158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:33.415853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:33.813652 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:34.415974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:35.416126      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:35.845346 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:36.416255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:37.416435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:37.856404 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:38.416664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:39.418306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:39.876335 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:40.418269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:41.421507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:41.880981 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:42.422485      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:43.426447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:43.884893 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:44.427518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:45.427945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:45.888777 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:46.428319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:47.435359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:47.896278 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:48.436703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:49.436822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:49.902244 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:50.437073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:51.438187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:51.906486 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:52.438157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:53.438399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:53.909923 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:54.438542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:55.438761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:55.919866 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:56.439518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:57.440352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:57.928945 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:41:58.441023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:41:59.441904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:41:59.940203 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:00.442128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:01.442665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:01.962756 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:02.445268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:03.445528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:03.966701 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:04.446527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:05.447585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:05.974602 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:06.448779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:07.463781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:07.980834 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:08.450417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:09.451073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:09.994691 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:10.459215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:11.460084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:11.999085 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:12.460671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:13.465127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:14.004831 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:14.466040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:15.465636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:16.009380 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:16.465828      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:17.466464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:18.017799 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:18.466558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:19.469506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:20.025039 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:20.469783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:21.471693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:22.029853 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:22.475976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:23.476670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:24.039171 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:24.476824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:25.477196      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:26.043713 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:26.477317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:27.478212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:28.051011 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:28.478569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:29.478668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:30.055376 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:30.479829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:31.479692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:32.060850 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:32.479797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:33.479987      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:34.074965 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:34.482440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:35.483487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:36.086664 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:36.484567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:37.484900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:38.129841 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:38.486464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:39.487359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:40.143919 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:40.487479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:41.487680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:42.148067 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:42.488447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:43.488501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:44.154120 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:44.488770      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:45.488866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:46.159961 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:46.492656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:47.493169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:48.164569 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:48.494195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:49.494350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:50.169036 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:50.495474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:51.495614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:52.193856 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:52.495930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:53.496000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:54.209795 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:54.497270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:55.501118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:56.213663 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:56.503294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:57.502624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:42:58.238256 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:42:58.502825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:42:59.502929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:00.245759 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:00.503109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:01.503415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:02.249752 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:02.503518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:03.504063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:04.260853 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:04.504371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:05.506443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:06.273986 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:06.507501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:07.508036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:08.321527 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:08.508767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:09.509162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:10.325926 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:10.510375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:11.511110      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:12.333082 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:12.511384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:13.511511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:14.336755 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:14.513302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:15.514619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:16.341935 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:16.515565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:17.515748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:18.348448 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:18.516038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:19.519093      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:20.353961 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:20.519489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:21.519582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:22.361118 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:22.521136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:23.521285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:24.366018 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:24.521616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:25.522698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:26.380842 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:26.523687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:27.524280      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:28.384901 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:28.525194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:29.526872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:30.393767 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:30.527888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:31.529632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:32.417181 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:32.529755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:33.530201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:34.422881 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:34.531532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:35.537051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:36.428548 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:36.539158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:37.539143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:38.435385 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:38.542522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:39.544588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:40.440672 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:40.552621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:41.552764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:42.450214 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:42.555482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:43.556216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:44.469566 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:44.556681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:45.556868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:46.473764 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:46.557346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:47.558255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:48.477527 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:48.558974      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:49.559207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:50.485148 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:50.559642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:51.559867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:52.497418 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:52.562499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:53.565027      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:54.501086 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:54.564581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:55.566531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:56.508797 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:56.566690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:57.568752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:43:58.528796 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:43:58.569342      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:43:59.572310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:00.534807 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:00.573399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:01.573696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:02.551731 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:02.574903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:03.575058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:04.556237 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:04.575901      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:05.575724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:06.560452 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:06.575797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:07.577415      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:08.566251 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:08.577689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:09.592075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:10.573694 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:10.583785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:11.583930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:12.578771 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:12.587289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:13.589481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:14.590420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:14.593357 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:15.591664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:16.593036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:16.599336 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:17.596548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:18.594429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:18.621618 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:19.595327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:20.596183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:20.625492 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:21.597597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:22.597628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:22.628958 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:23.597909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:24.597893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:24.632579 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:25.598062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:26.598732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:26.638688 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:27.599818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:28.600340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:28.666297 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:29.600486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:30.600629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:30.670591 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:31.601019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:32.601197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:32.674898 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:33.602249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:34.602425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:34.680492 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:35.602874      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:36.602915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:36.685391 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:37.603115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:38.603784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:38.692447 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:39.603712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:40.604437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:40.700761 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:41.604907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:42.609857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:42.706787 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:43.610268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:44.610733      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:44.711924 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:45.611009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:46.613172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:46.723258 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:47.613367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:48.617703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:44:48.746653 21 container_probe.go:1759] Get pod busybox-fa497aec-36ed-41dd-a890-11e023c119e4 in namespace container-probe-6452
  E0703 13:44:49.617464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:50.618467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod @ 07/03/24 13:44:50.75
  I0703 13:44:50.766449 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-6452" for this suite. @ 07/03/24 13:44:50.782
• [245.788 seconds]
------------------------------
SS
------------------------------
[sig-api-machinery] Garbage collector should not delete dependents that have both valid owner and owner that's waiting for dependents to be deleted [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:714
  STEP: Creating a kubernetes client @ 07/03/24 13:44:50.791
  I0703 13:44:50.791851 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename gc @ 07/03/24 13:44:50.796
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:44:50.88
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:44:50.908
  STEP: create the rc1 @ 07/03/24 13:44:50.931
  STEP: create the rc2 @ 07/03/24 13:44:50.953
  E0703 13:44:51.619584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:52.619758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:53.620541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:54.620624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:55.621272      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:56.621389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: set half of pods created by rc simpletest-rc-to-be-deleted to have rc simpletest-rc-to-stay as owner as well @ 07/03/24 13:44:56.993
  E0703 13:44:57.622579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:58.624838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:44:59.626157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the rc simpletest-rc-to-be-deleted @ 07/03/24 13:44:59.874
  STEP: wait for the rc to be deleted @ 07/03/24 13:44:59.903
  E0703 13:45:00.626154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:01.627966      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:02.628448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:03.634001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:04.634827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:04.973354 21 garbage_collector.go:762] 69 pods remaining
  I0703 13:45:04.975244 21 garbage_collector.go:769] 69 pods has nil DeletionTimestamp
  I0703 13:45:04.975328 21 garbage_collector.go:770] 
  E0703 13:45:05.638410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:06.638455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:07.639179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:08.640026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:09.663604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Gathering metrics @ 07/03/24 13:45:09.951
  W0703 13:45:09.984977      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0703 13:45:09.985172 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0703 13:45:09.992003 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-26ztp" in namespace "gc-7896"
  I0703 13:45:10.064326 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-27wnc" in namespace "gc-7896"
  I0703 13:45:10.169391 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2chv6" in namespace "gc-7896"
  I0703 13:45:10.482381 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2p7j6" in namespace "gc-7896"
  E0703 13:45:10.667927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:10.903818 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2q2l6" in namespace "gc-7896"
  I0703 13:45:10.971857 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2tl9d" in namespace "gc-7896"
  I0703 13:45:11.016020 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zmgq" in namespace "gc-7896"
  I0703 13:45:11.062796 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-2zwd8" in namespace "gc-7896"
  I0703 13:45:11.097995 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4jdv6" in namespace "gc-7896"
  I0703 13:45:11.188262 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4lxlh" in namespace "gc-7896"
  I0703 13:45:11.346982 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4tdlg" in namespace "gc-7896"
  I0703 13:45:11.431520 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-4vjp6" in namespace "gc-7896"
  I0703 13:45:11.482803 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-52jvv" in namespace "gc-7896"
  I0703 13:45:11.639094 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5b4bc" in namespace "gc-7896"
  E0703 13:45:11.668899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:11.744903 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5mk4h" in namespace "gc-7896"
  I0703 13:45:11.843224 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5ptdd" in namespace "gc-7896"
  I0703 13:45:11.910597 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-5w6z6" in namespace "gc-7896"
  I0703 13:45:11.967903 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-668fp" in namespace "gc-7896"
  I0703 13:45:12.001369 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-67tf7" in namespace "gc-7896"
  I0703 13:45:12.110721 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68cq4" in namespace "gc-7896"
  I0703 13:45:12.179469 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-68p7m" in namespace "gc-7896"
  I0703 13:45:12.231348 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-692rc" in namespace "gc-7896"
  I0703 13:45:12.260845 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6hv2m" in namespace "gc-7896"
  I0703 13:45:12.296599 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6r9bh" in namespace "gc-7896"
  I0703 13:45:12.377987 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-6rns9" in namespace "gc-7896"
  I0703 13:45:12.406700 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-76jkp" in namespace "gc-7896"
  I0703 13:45:12.450639 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7cqf9" in namespace "gc-7896"
  I0703 13:45:12.520760 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7ktqr" in namespace "gc-7896"
  I0703 13:45:12.618360 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-7t5dt" in namespace "gc-7896"
  I0703 13:45:12.657741 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8678x" in namespace "gc-7896"
  E0703 13:45:12.669385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:12.722680 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-86m5v" in namespace "gc-7896"
  I0703 13:45:12.950782 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-89qv4" in namespace "gc-7896"
  I0703 13:45:13.070559 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8cc5q" in namespace "gc-7896"
  I0703 13:45:13.233609 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8qtzs" in namespace "gc-7896"
  I0703 13:45:13.382970 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-8skpf" in namespace "gc-7896"
  I0703 13:45:13.490650 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9kpdr" in namespace "gc-7896"
  I0703 13:45:13.549847 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9ndn8" in namespace "gc-7896"
  I0703 13:45:13.611206 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-9rgd9" in namespace "gc-7896"
  E0703 13:45:13.670310      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:13.676271 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bc2xg" in namespace "gc-7896"
  I0703 13:45:13.788582 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bhnjn" in namespace "gc-7896"
  I0703 13:45:13.951310 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bkh74" in namespace "gc-7896"
  I0703 13:45:14.017864 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bsjjj" in namespace "gc-7896"
  I0703 13:45:14.048407 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwr4k" in namespace "gc-7896"
  I0703 13:45:14.090591 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-bwx7c" in namespace "gc-7896"
  I0703 13:45:14.288621 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c25br" in namespace "gc-7896"
  E0703 13:45:14.670521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:14.901910 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c46dq" in namespace "gc-7896"
  I0703 13:45:15.209623 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-c7rz6" in namespace "gc-7896"
  I0703 13:45:15.459436 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-cbx28" in namespace "gc-7896"
  I0703 13:45:15.608213 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-d6b8k" in namespace "gc-7896"
  E0703 13:45:15.671213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:15.711919 21 delete.go:95] Deleting pod "simpletest-rc-to-be-deleted-dm48k" in namespace "gc-7896"
  I0703 13:45:15.791160 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-7896" for this suite. @ 07/03/24 13:45:15.859
• [25.109 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message from file when pod succeeds and TerminationMessagePolicy FallbackToLogsOnError is set [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:248
  STEP: Creating a kubernetes client @ 07/03/24 13:45:15.927
  I0703 13:45:15.927432 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-runtime @ 07/03/24 13:45:15.929
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:45:16.09
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:45:16.136
  STEP: create the container @ 07/03/24 13:45:16.224
  W0703 13:45:16.471528      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/03/24 13:45:16.471
  E0703 13:45:16.671564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:17.672518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:18.672506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:19.672604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:20.672774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:21.672802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:22.673757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:23.674133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:24.674212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:25.678443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:26.679115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:27.679231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:28.680199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:29.680815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:30.681574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:31.682427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/03/24 13:45:32.389
  STEP: the container should be terminated @ 07/03/24 13:45:32.397
  STEP: the termination message should be set @ 07/03/24 13:45:32.397
  I0703 13:45:32.397446 21 runtime.go:167] Expected: &{OK} to match Container's Termination Message: OK --
  STEP: delete the container @ 07/03/24 13:45:32.397
  I0703 13:45:32.423170 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-4994" for this suite. @ 07/03/24 13:45:32.427
• [16.513 seconds]
------------------------------
SS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with defaultMode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:57
  STEP: Creating a kubernetes client @ 07/03/24 13:45:32.44
  I0703 13:45:32.440746 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 13:45:32.441
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:45:32.621
  E0703 13:45:32.682653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:45:32.704
  STEP: Creating secret with name secret-test-fd509865-8152-4f76-a9f9-373e8ce6fc4f @ 07/03/24 13:45:32.772
  STEP: Creating a pod to test consume secrets @ 07/03/24 13:45:32.814
  E0703 13:45:33.683597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:34.683700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:35.684073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:36.685848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:45:36.938
  I0703 13:45:36.946666 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-63337278-e376-4bc9-8cf9-0b434b43c78b container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 13:45:37.009
  I0703 13:45:37.041882 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-4621" for this suite. @ 07/03/24 13:45:37.059
• [4.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should have a working scale subresource [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:902
  STEP: Creating a kubernetes client @ 07/03/24 13:45:37.083
  I0703 13:45:37.084213 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 13:45:37.085
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:45:37.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:45:37.359
  STEP: Creating service test in namespace statefulset-5845 @ 07/03/24 13:45:37.386
  STEP: Creating statefulset ss in namespace statefulset-5845 @ 07/03/24 13:45:37.41
  I0703 13:45:37.534892 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0703 13:45:37.686304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:38.686449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:39.686524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:40.687629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:41.687707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:42.688158      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:43.688600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:44.690213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:45.691164      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:46.691270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:47.526693 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: getting scale subresource @ 07/03/24 13:45:47.547
  STEP: updating a scale subresource @ 07/03/24 13:45:47.555
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/03/24 13:45:47.654
  E0703 13:45:47.691502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patch a scale subresource @ 07/03/24 13:45:47.699
  STEP: verifying the statefulset Spec.Replicas was modified @ 07/03/24 13:45:47.891
  I0703 13:45:48.169333 21 statefulset.go:135] Deleting all statefulset in ns statefulset-5845
  I0703 13:45:48.335871 21 rest.go:150] Scaling statefulset ss to 0
  E0703 13:45:48.691810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:49.694442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:50.694492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:51.695602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:52.695789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:53.698460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:54.698556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:55.698590      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:56.699585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:45:57.700980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:45:58.469841 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 13:45:58.494105 21 rest.go:88] Deleting statefulset ss
  I0703 13:45:58.622693 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-5845" for this suite. @ 07/03/24 13:45:58.634
• [21.579 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Secrets should be consumable from pods in env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:48
  STEP: Creating a kubernetes client @ 07/03/24 13:45:58.663
  I0703 13:45:58.664146 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 13:45:58.665
  E0703 13:45:58.702067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:45:58.858
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:45:58.876
  STEP: Creating secret with name secret-test-824309c0-caf5-4514-a4de-6d247aa96ead @ 07/03/24 13:45:58.914
  STEP: Creating a pod to test consume secrets @ 07/03/24 13:45:58.981
  E0703 13:45:59.703283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:00.705645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:01.705995      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:02.706434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:46:03.224
  I0703 13:46:03.231508 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-32f1ec10-345a-4241-87e0-cf33f19ae6d8 container secret-env-test: <nil>
  STEP: delete the pod @ 07/03/24 13:46:03.243
  I0703 13:46:03.302328 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-1403" for this suite. @ 07/03/24 13:46:03.308
• [4.674 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2203
  STEP: Creating a kubernetes client @ 07/03/24 13:46:03.339
  I0703 13:46:03.339285 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:46:03.34
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:46:03.5
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:46:03.557
  STEP: creating service in namespace services-398 @ 07/03/24 13:46:03.587
  STEP: creating service affinity-clusterip-transition in namespace services-398 @ 07/03/24 13:46:03.589
  E0703 13:46:03.706991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating replication controller affinity-clusterip-transition in namespace services-398 @ 07/03/24 13:46:03.811
  I0703 13:46:03.954218      21 runners.go:198] Created replication controller with name: affinity-clusterip-transition, namespace: services-398, replica count: 3
  E0703 13:46:04.710595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:05.711520      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:06.712336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:07.005949      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 1 running, 2 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:46:07.714241      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:08.714923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:09.714742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:10.018403      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:46:10.714737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:11.715146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:12.715457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:13.035529      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:46:13.716243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:14.716545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:15.717070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:16.035690      21 runners.go:198] affinity-clusterip-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 13:46:16.042263 21 resource.go:361] Creating new exec pod
  E0703 13:46:16.717550      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:17.717693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:18.718089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:19.718436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:20.719526      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:21.131025 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-398 exec execpod-affinityqjcbv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip-transition 80'
  I0703 13:46:21.565070 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip-transition 80\n+ echo hostName\nConnection to affinity-clusterip-transition 80 port [tcp/http] succeeded!\n"
  I0703 13:46:21.565124 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 13:46:21.565213 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-398 exec execpod-affinityqjcbv -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.119.197 80'
  E0703 13:46:21.722563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:22.140475 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.119.197 80\nConnection to 10.43.119.197 80 port [tcp/http] succeeded!\n"
  I0703 13:46:22.140537 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 13:46:22.175187 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-398 exec execpod-affinityqjcbv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.119.197:80/ ; done'
  E0703 13:46:22.724392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:22.842434 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n"
  I0703 13:46:22.842565 21 builder.go:147] stdout: "\naffinity-clusterip-transition-przcb\naffinity-clusterip-transition-2lbpv\naffinity-clusterip-transition-2lbpv\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-2lbpv\naffinity-clusterip-transition-przcb\naffinity-clusterip-transition-przcb\naffinity-clusterip-transition-2lbpv\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-przcb\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-przcb\naffinity-clusterip-transition-2lbpv\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-przcb"
  I0703 13:46:22.842583 21 service.go:242] Received response from host: affinity-clusterip-transition-przcb
  I0703 13:46:22.842594 21 service.go:242] Received response from host: affinity-clusterip-transition-2lbpv
  I0703 13:46:22.842602 21 service.go:242] Received response from host: affinity-clusterip-transition-2lbpv
  I0703 13:46:22.842610 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:22.842619 21 service.go:242] Received response from host: affinity-clusterip-transition-2lbpv
  I0703 13:46:22.842630 21 service.go:242] Received response from host: affinity-clusterip-transition-przcb
  I0703 13:46:22.842642 21 service.go:242] Received response from host: affinity-clusterip-transition-przcb
  I0703 13:46:22.842649 21 service.go:242] Received response from host: affinity-clusterip-transition-2lbpv
  I0703 13:46:22.842656 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:22.842665 21 service.go:242] Received response from host: affinity-clusterip-transition-przcb
  I0703 13:46:22.842672 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:22.842679 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:22.842686 21 service.go:242] Received response from host: affinity-clusterip-transition-przcb
  I0703 13:46:22.842693 21 service.go:242] Received response from host: affinity-clusterip-transition-2lbpv
  I0703 13:46:22.842702 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:22.842714 21 service.go:242] Received response from host: affinity-clusterip-transition-przcb
  I0703 13:46:22.869545 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-398 exec execpod-affinityqjcbv -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.119.197:80/ ; done'
  I0703 13:46:23.350746 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.119.197:80/\n"
  I0703 13:46:23.350807 21 builder.go:147] stdout: "\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t\naffinity-clusterip-transition-sqd9t"
  I0703 13:46:23.350828 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350843 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350856 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350867 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350878 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350890 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350909 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350921 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350933 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350945 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350957 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350969 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350979 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.350990 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.351002 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.351013 21 service.go:242] Received response from host: affinity-clusterip-transition-sqd9t
  I0703 13:46:23.351080 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip-transition in namespace services-398, will wait for the garbage collector to delete the pods @ 07/03/24 13:46:23.388
  I0703 13:46:23.519861 21 resources.go:139] Deleting ReplicationController affinity-clusterip-transition took: 63.250217ms
  I0703 13:46:23.621049 21 resources.go:163] Terminating ReplicationController affinity-clusterip-transition pods took: 101.188824ms
  E0703 13:46:23.724510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:24.724830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:25.725813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:26.732405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:27.608620 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-398" for this suite. @ 07/03/24 13:46:27.629
• [24.307 seconds]
------------------------------
SSS
------------------------------
[sig-storage] Projected downwardAPI should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:164
  STEP: Creating a kubernetes client @ 07/03/24 13:46:27.646
  I0703 13:46:27.646037 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 13:46:27.647
  E0703 13:46:27.731774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:46:27.811
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:46:27.845
  STEP: Creating the pod @ 07/03/24 13:46:27.875
  E0703 13:46:28.730124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:29.731553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:30.732435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:31.732565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:32.592629 21 pod_client.go:141] Successfully updated pod "annotationupdate36f3401c-5856-42e5-8324-6fe15ac5326c"
  E0703 13:46:32.737533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:33.738368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:46:34.644295 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-906" for this suite. @ 07/03/24 13:46:34.648
• [7.012 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] RuntimeClass should schedule a Pod requesting a RuntimeClass and initialize its Overhead [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtimeclass.go:131
  STEP: Creating a kubernetes client @ 07/03/24 13:46:34.66
  I0703 13:46:34.660110 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename runtimeclass @ 07/03/24 13:46:34.661
  E0703 13:46:34.739016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:46:34.752
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:46:34.761
  I0703 13:46:34.985129 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "runtimeclass-2351" for this suite. @ 07/03/24 13:46:34.995
• [0.363 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] API priority and fairness should support FlowSchema API operations [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/flowcontrol.go:270
  STEP: Creating a kubernetes client @ 07/03/24 13:46:35.025
  I0703 13:46:35.026365 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename apf @ 07/03/24 13:46:35.028
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:46:35.096
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:46:35.109
  STEP: getting /apis @ 07/03/24 13:46:35.127
  STEP: getting /apis/flowcontrol.apiserver.k8s.io @ 07/03/24 13:46:35.194
  STEP: getting /apis/flowcontrol.apiserver.k8s.io/v1 @ 07/03/24 13:46:35.23
  STEP: creating @ 07/03/24 13:46:35.237
  STEP: getting @ 07/03/24 13:46:35.382
  STEP: listing @ 07/03/24 13:46:35.412
  STEP: watching @ 07/03/24 13:46:35.474
  I0703 13:46:35.476846 21 flowcontrol.go:394] starting watch
  STEP: patching @ 07/03/24 13:46:35.488
  STEP: updating @ 07/03/24 13:46:35.515
  I0703 13:46:35.595641 21 flowcontrol.go:422] waiting for watch events with expected annotations
  I0703 13:46:35.595825 21 flowcontrol.go:438] missing expected annotations, waiting: map[string]string(nil)
  STEP: getting /status @ 07/03/24 13:46:35.595
  STEP: patching /status @ 07/03/24 13:46:35.602
  STEP: updating /status @ 07/03/24 13:46:35.614
  STEP: deleting @ 07/03/24 13:46:35.635
  STEP: deleting a collection @ 07/03/24 13:46:35.655
  I0703 13:46:35.698958 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "apf-134" for this suite. @ 07/03/24 13:46:35.704
• [0.687 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates resource limits of pods that are allowed to run [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:334
  STEP: Creating a kubernetes client @ 07/03/24 13:46:35.714
  I0703 13:46:35.714793 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-pred @ 07/03/24 13:46:35.715
  E0703 13:46:35.739674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:46:35.793
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:46:35.817
  I0703 13:46:35.863707 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0703 13:46:35.913148 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0703 13:46:35.922062 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-137 before test
  I0703 13:46:35.934303 21 predicates.go:887] fleet-agent-0 from cattle-fleet-system started at 2024-07-03 12:03:04 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.934465 21 predicates.go:889] 	Container fleet-agent ready: true, restart count 0
  I0703 13:46:35.934560 21 predicates.go:889] 	Container fleet-agent-clusterstatus ready: true, restart count 0
  I0703 13:46:35.934648 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-dmpfp from cattle-system started at 2024-07-03 12:04:09 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.934731 21 predicates.go:889] 	Container cluster-register ready: true, restart count 0
  I0703 13:46:35.934819 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-rf45l from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.934895 21 predicates.go:889] 	Container cluster-register ready: true, restart count 2
  I0703 13:46:35.934975 21 predicates.go:887] cattle-node-agent-xv2b5 from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.935091 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 13:46:35.935206 21 predicates.go:887] kube-api-auth-n7vdq from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.935275 21 predicates.go:889] 	Container kube-api-auth ready: true, restart count 0
  I0703 13:46:35.935345 21 predicates.go:887] rancher-webhook-7b5476cb6c-999r2 from cattle-system started at 2024-07-03 12:03:53 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.935397 21 predicates.go:889] 	Container rancher-webhook ready: true, restart count 0
  I0703 13:46:35.935472 21 predicates.go:887] calico-kube-controllers-5b878c8d6f-n9qtc from kube-system started at 2024-07-03 12:00:56 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.935539 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0703 13:46:35.935605 21 predicates.go:887] canal-zpdht from kube-system started at 2024-07-03 12:00:56 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.935658 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 13:46:35.935731 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 13:46:35.935813 21 predicates.go:887] coredns-878dbb559-4hhd8 from kube-system started at 2024-07-03 12:01:07 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.935886 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 13:46:35.935959 21 predicates.go:887] metrics-server-85f57469bf-dkb2p from kube-system started at 2024-07-03 12:01:23 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.936032 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0703 13:46:35.936218 21 predicates.go:887] rke-coredns-addon-deploy-job-hv82g from kube-system started at 2024-07-03 12:09:41 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.936313 21 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0703 13:46:35.936407 21 predicates.go:887] rke-metrics-addon-deploy-job-htp6z from kube-system started at 2024-07-03 12:01:19 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.936496 21 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0703 13:46:35.936579 21 predicates.go:887] rke-network-plugin-deploy-job-6jb2q from kube-system started at 2024-07-03 12:00:53 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.936672 21 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0703 13:46:35.936767 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-64nlg from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.936858 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:46:35.936948 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 13:46:35.937035 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-210 before test
  I0703 13:46:35.965332 21 predicates.go:887] cattle-node-agent-pnp4l from cattle-system started at 2024-07-03 12:04:27 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.965375 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 13:46:35.965388 21 predicates.go:887] canal-9xtzz from kube-system started at 2024-07-03 12:04:27 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.965421 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 13:46:35.965432 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 13:46:35.965445 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-03 12:12:47 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.965454 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0703 13:46:35.965467 21 predicates.go:887] sonobuoy-e2e-job-f9e006a160674f6c from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.965738 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0703 13:46:35.965921 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:46:35.965939 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-jz9sc from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.966259 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:46:35.966454 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 13:46:35.966469 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I0703 13:46:35.990654 21 predicates.go:887] cattle-node-agent-9qwcl from cattle-system started at 2024-07-03 12:04:10 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.991199 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 13:46:35.991755 21 predicates.go:887] canal-qtmst from kube-system started at 2024-07-03 12:04:10 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.991939 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 13:46:35.992023 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 13:46:35.992204 21 predicates.go:887] coredns-878dbb559-svq7f from kube-system started at 2024-07-03 12:04:18 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.992422 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 13:46:35.992526 21 predicates.go:887] coredns-autoscaler-56d494f878-l795t from kube-system started at 2024-07-03 12:09:46 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.992539 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0703 13:46:35.992551 21 predicates.go:887] annotationupdate36f3401c-5856-42e5-8324-6fe15ac5326c from projected-906 started at 2024-07-03 13:46:27 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.992561 21 predicates.go:889] 	Container client-container ready: true, restart count 0
  I0703 13:46:35.994109 21 predicates.go:887] test-runtimeclass-runtimeclass-2351-preconfigured-handler-dm5tk from runtimeclass-2351 started at 2024-07-03 13:46:34 +0000 UTC (1 container statuses recorded)
  I0703 13:46:35.994476 21 predicates.go:889] 	Container test ready: false, restart count 0
  I0703 13:46:35.994699 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-qwqrq from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 13:46:35.994713 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 13:46:35.994880 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: verifying the node has the label node ip-172-31-4-137 @ 07/03/24 13:46:36.049
  STEP: verifying the node has the label node ip-172-31-4-210 @ 07/03/24 13:46:36.146
  STEP: verifying the node has the label node ip-172-31-5-183 @ 07/03/24 13:46:36.24
  I0703 13:46:36.349526 21 predicates.go:374] Pod fleet-agent-0 requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.349711 21 predicates.go:374] Pod cattle-cluster-agent-6787cd6c66-dmpfp requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.349811 21 predicates.go:374] Pod cattle-cluster-agent-6787cd6c66-rf45l requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.350712 21 predicates.go:374] Pod cattle-node-agent-9qwcl requesting resource cpu=0m on Node ip-172-31-5-183
  I0703 13:46:36.350906 21 predicates.go:374] Pod cattle-node-agent-pnp4l requesting resource cpu=0m on Node ip-172-31-4-210
  I0703 13:46:36.350998 21 predicates.go:374] Pod cattle-node-agent-xv2b5 requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.351083 21 predicates.go:374] Pod kube-api-auth-n7vdq requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.352899 21 predicates.go:374] Pod rancher-webhook-7b5476cb6c-999r2 requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.353151 21 predicates.go:374] Pod calico-kube-controllers-5b878c8d6f-n9qtc requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.353264 21 predicates.go:374] Pod canal-9xtzz requesting resource cpu=250m on Node ip-172-31-4-210
  I0703 13:46:36.353366 21 predicates.go:374] Pod canal-qtmst requesting resource cpu=250m on Node ip-172-31-5-183
  I0703 13:46:36.353460 21 predicates.go:374] Pod canal-zpdht requesting resource cpu=250m on Node ip-172-31-4-137
  I0703 13:46:36.353551 21 predicates.go:374] Pod coredns-878dbb559-4hhd8 requesting resource cpu=100m on Node ip-172-31-4-137
  I0703 13:46:36.353624 21 predicates.go:374] Pod coredns-878dbb559-svq7f requesting resource cpu=100m on Node ip-172-31-5-183
  I0703 13:46:36.353814 21 predicates.go:374] Pod coredns-autoscaler-56d494f878-l795t requesting resource cpu=20m on Node ip-172-31-5-183
  I0703 13:46:36.353903 21 predicates.go:374] Pod metrics-server-85f57469bf-dkb2p requesting resource cpu=100m on Node ip-172-31-4-137
  I0703 13:46:36.353993 21 predicates.go:374] Pod annotationupdate36f3401c-5856-42e5-8324-6fe15ac5326c requesting resource cpu=0m on Node ip-172-31-5-183
  I0703 13:46:36.354067 21 predicates.go:374] Pod test-runtimeclass-runtimeclass-2351-preconfigured-handler-dm5tk requesting resource cpu=0m on Node ip-172-31-5-183
  I0703 13:46:36.354258 21 predicates.go:374] Pod sonobuoy requesting resource cpu=0m on Node ip-172-31-4-210
  I0703 13:46:36.354425 21 predicates.go:374] Pod sonobuoy-e2e-job-f9e006a160674f6c requesting resource cpu=0m on Node ip-172-31-4-210
  I0703 13:46:36.354505 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-64nlg requesting resource cpu=0m on Node ip-172-31-4-137
  I0703 13:46:36.354588 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-jz9sc requesting resource cpu=0m on Node ip-172-31-4-210
  I0703 13:46:36.354644 21 predicates.go:374] Pod sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-qwqrq requesting resource cpu=0m on Node ip-172-31-5-183
  STEP: Starting Pods to consume most of the cluster CPU. @ 07/03/24 13:46:36.354
  I0703 13:46:36.354926 21 predicates.go:384] Creating a pod which consumes cpu=1225m on Node ip-172-31-4-210
  I0703 13:46:36.433496 21 predicates.go:384] Creating a pod which consumes cpu=1141m on Node ip-172-31-5-183
  I0703 13:46:36.498342 21 predicates.go:384] Creating a pod which consumes cpu=1085m on Node ip-172-31-4-137
  E0703 13:46:36.739655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:37.740231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:38.743261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:39.743473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:40.743595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:41.745636      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:42.747125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:43.747726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:44.747835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:45.748598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:46.748739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:47.751777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:48.751988      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:49.754501      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:50.754618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:51.754789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:52.756582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:53.757848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:54.758301      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:55.759829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:56.760374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:57.760629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:58.765616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:46:59.762523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:00.770412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:01.770833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:02.771672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:03.771801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:04.772212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:05.772778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:06.774534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:07.774757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:08.775544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:09.776643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:10.781042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:11.781934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:12.782437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:13.782518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:14.782834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:15.782929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:16.783488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:17.783745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:18.791481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:19.787540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:20.789366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:21.791118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:22.792926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:23.793232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:24.793193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:25.794363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:26.794530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating another pod that requires unavailable amount of CPU. @ 07/03/24 13:47:27.147
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-46cc408b-6135-4f08-ae54-8243453eeca9.17deb7fb0fc3a806], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6358/filler-pod-46cc408b-6135-4f08-ae54-8243453eeca9 to ip-172-31-4-137] @ 07/03/24 13:47:27.152
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-46cc408b-6135-4f08-ae54-8243453eeca9.17deb805ec9defef], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/03/24 13:47:27.152
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-46cc408b-6135-4f08-ae54-8243453eeca9.17deb805f81270ff], Reason = [Created], Message = [Created container filler-pod-46cc408b-6135-4f08-ae54-8243453eeca9] @ 07/03/24 13:47:27.153
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-46cc408b-6135-4f08-ae54-8243453eeca9.17deb8061dd10e93], Reason = [Started], Message = [Started container filler-pod-46cc408b-6135-4f08-ae54-8243453eeca9] @ 07/03/24 13:47:27.154
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6475e8a-20a3-446d-92a7-c977ac35506a.17deb7fb0da6a4fb], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6358/filler-pod-a6475e8a-20a3-446d-92a7-c977ac35506a to ip-172-31-5-183] @ 07/03/24 13:47:27.154
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6475e8a-20a3-446d-92a7-c977ac35506a.17deb7fb5004a908], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/03/24 13:47:27.154
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6475e8a-20a3-446d-92a7-c977ac35506a.17deb7fb554e36d6], Reason = [Created], Message = [Created container filler-pod-a6475e8a-20a3-446d-92a7-c977ac35506a] @ 07/03/24 13:47:27.154
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-a6475e8a-20a3-446d-92a7-c977ac35506a.17deb7fb62b434d3], Reason = [Started], Message = [Started container filler-pod-a6475e8a-20a3-446d-92a7-c977ac35506a] @ 07/03/24 13:47:27.154
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb35d8a1-30dd-41f3-ac9e-dff51a893392.17deb7fb04715c02], Reason = [Scheduled], Message = [Successfully assigned sched-pred-6358/filler-pod-bb35d8a1-30dd-41f3-ac9e-dff51a893392 to ip-172-31-4-210] @ 07/03/24 13:47:27.154
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb35d8a1-30dd-41f3-ac9e-dff51a893392.17deb7fb5bdd269d], Reason = [Pulled], Message = [Container image "registry.k8s.io/pause:3.9" already present on machine] @ 07/03/24 13:47:27.155
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb35d8a1-30dd-41f3-ac9e-dff51a893392.17deb7fb6094cbb7], Reason = [Created], Message = [Created container filler-pod-bb35d8a1-30dd-41f3-ac9e-dff51a893392] @ 07/03/24 13:47:27.155
  STEP: Considering event: 
  Type = [Normal], Name = [filler-pod-bb35d8a1-30dd-41f3-ac9e-dff51a893392.17deb7fb6df453c2], Reason = [Started], Message = [Started container filler-pod-bb35d8a1-30dd-41f3-ac9e-dff51a893392] @ 07/03/24 13:47:27.155
  STEP: Considering event: 
  Type = [Warning], Name = [additional-pod.17deb806d41c8809], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 Insufficient cpu. preemption: 0/3 nodes are available: 3 No preemption victims found for incoming pod.] @ 07/03/24 13:47:27.226
  E0703 13:47:27.795246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: removing the label node off the node ip-172-31-4-137 @ 07/03/24 13:47:28.194
  STEP: verifying the node doesn't have the label node @ 07/03/24 13:47:28.234
  STEP: removing the label node off the node ip-172-31-4-210 @ 07/03/24 13:47:28.25
  STEP: verifying the node doesn't have the label node @ 07/03/24 13:47:28.309
  STEP: removing the label node off the node ip-172-31-5-183 @ 07/03/24 13:47:28.355
  STEP: verifying the node doesn't have the label node @ 07/03/24 13:47:28.426
  I0703 13:47:28.455235 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-6358" for this suite. @ 07/03/24 13:47:28.464
• [52.764 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (root,0644,default) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:170
  STEP: Creating a kubernetes client @ 07/03/24 13:47:28.48
  I0703 13:47:28.481056 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:47:28.482
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:47:28.534
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:47:28.543
  STEP: Creating a pod to test emptydir 0644 on node default medium @ 07/03/24 13:47:28.554
  E0703 13:47:28.798051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:29.798488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:30.800209      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:31.800281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:32.801522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:47:32.863
  I0703 13:47:32.872790 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-4df1e479-9551-46bb-ac8b-f0965f4b88ba container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:47:32.88
  I0703 13:47:32.907295 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-2281" for this suite. @ 07/03/24 13:47:32.914
• [4.449 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-auth] ServiceAccounts should mount an API token into pods [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:80
  STEP: Creating a kubernetes client @ 07/03/24 13:47:32.939
  I0703 13:47:32.939279 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svcaccounts @ 07/03/24 13:47:32.941
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:47:33.075
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:47:33.107
  E0703 13:47:33.802371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:34.802643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:35.803516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:36.804908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/03/24 13:47:37.254
  I0703 13:47:37.255133 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8862 pod-service-account-d6bc8b90-c828-403f-8b4c-d2bb860dc0df -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/token'
  STEP: reading a file in the container @ 07/03/24 13:47:37.49
  I0703 13:47:37.490748 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8862 pod-service-account-d6bc8b90-c828-403f-8b4c-d2bb860dc0df -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/ca.crt'
  E0703 13:47:37.806234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: reading a file in the container @ 07/03/24 13:47:37.909
  I0703 13:47:37.909247 21 kubectl_utils.go:203] Running '/usr/local/bin/kubectl exec --namespace=svcaccounts-8862 pod-service-account-d6bc8b90-c828-403f-8b4c-d2bb860dc0df -c=test -- cat /var/run/secrets/kubernetes.io/serviceaccount/namespace'
  I0703 13:47:38.407458 21 service_accounts.go:114] Got root ca configmap in namespace "svcaccounts-8862"
  I0703 13:47:38.410763 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-8862" for this suite. @ 07/03/24 13:47:38.413
• [5.490 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:86
  STEP: Creating a kubernetes client @ 07/03/24 13:47:38.429
  I0703 13:47:38.429502 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 13:47:38.43
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:47:38.558
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:47:38.58
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 13:47:38.588
  E0703 13:47:38.807401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:39.807529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:40.812615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:41.812758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:47:42.691
  I0703 13:47:42.695609 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-17483bad-974d-4281-979c-2e78378fbf90 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 13:47:42.706
  I0703 13:47:42.749779 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-2381" for this suite. @ 07/03/24 13:47:42.757
• [4.340 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should allow substituting values in a container's command [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:77
  STEP: Creating a kubernetes client @ 07/03/24 13:47:42.77
  I0703 13:47:42.770912 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 13:47:42.771
  E0703 13:47:42.813511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:47:42.911
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:47:42.932
  STEP: Creating a pod to test substitution in container's command @ 07/03/24 13:47:42.937
  E0703 13:47:43.817608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:44.817840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:45.818264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:46.818820      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:47.819878      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:48.820278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:47:48.998
  I0703 13:47:49.003266 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod var-expansion-9b440e3d-6d6c-48bc-b8d8-ac98d37b010b container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 13:47:49.02
  I0703 13:47:49.047713 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-6069" for this suite. @ 07/03/24 13:47:49.053
• [6.297 seconds]
------------------------------
S
------------------------------
[sig-node] Variable Expansion should allow composing env vars into new env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:48
  STEP: Creating a kubernetes client @ 07/03/24 13:47:49.068
  I0703 13:47:49.068322 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 13:47:49.07
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:47:49.153
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:47:49.159
  STEP: Creating a pod to test env composition @ 07/03/24 13:47:49.168
  E0703 13:47:49.821006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:50.821176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:51.821290      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:52.821651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:47:53.255
  I0703 13:47:53.257602 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod var-expansion-1a31278b-cfab-46a1-b4ee-3e1e267cb4bd container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 13:47:53.272
  I0703 13:47:53.300147 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-2974" for this suite. @ 07/03/24 13:47:53.304
• [4.246 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0644,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:130
  STEP: Creating a kubernetes client @ 07/03/24 13:47:53.333
  I0703 13:47:53.333980 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:47:53.335
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:47:53.431
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:47:53.468
  STEP: Creating a pod to test emptydir 0644 on tmpfs @ 07/03/24 13:47:53.499
  E0703 13:47:53.822632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:54.823502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:55.823835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:56.823950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:47:57.612
  I0703 13:47:57.618138 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-33b025a2-9c08-44be-9ccd-7fba55029559 container test-container: <nil>
  STEP: delete the pod @ 07/03/24 13:47:57.626
  I0703 13:47:57.663666 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-9626" for this suite. @ 07/03/24 13:47:57.668
• [4.360 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a configMap. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:330
  STEP: Creating a kubernetes client @ 07/03/24 13:47:57.698
  I0703 13:47:57.698865 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 13:47:57.699
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:47:57.753
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:47:57.757
  E0703 13:47:57.824529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:58.825495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:47:59.828097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:00.828456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:01.847764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:02.832531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:03.832906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:04.861735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:05.857183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:06.863037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:07.863676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:08.864285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:09.865009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:10.865683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:11.866078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:12.870496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:13.870576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Counting existing ResourceQuota @ 07/03/24 13:48:14.797
  E0703 13:48:14.888889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:15.885882      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:16.886012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:17.886769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:18.891351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/03/24 13:48:19.805
  STEP: Ensuring resource quota status is calculated @ 07/03/24 13:48:19.823
  E0703 13:48:19.891244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:20.891320      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ConfigMap @ 07/03/24 13:48:21.828
  STEP: Ensuring resource quota status captures configMap creation @ 07/03/24 13:48:21.876
  E0703 13:48:21.892024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:22.895077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ConfigMap @ 07/03/24 13:48:23.882
  STEP: Ensuring resource quota status released usage @ 07/03/24 13:48:23.889
  E0703 13:48:23.895803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:24.897915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:48:25.893700 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-8416" for this suite. @ 07/03/24 13:48:25.896
  E0703 13:48:25.898660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [28.210 seconds]
------------------------------
SSSSS
------------------------------
[sig-node] Downward API should provide pod name, namespace and IP address as env vars [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:46
  STEP: Creating a kubernetes client @ 07/03/24 13:48:25.909
  I0703 13:48:25.913859 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 13:48:25.918
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:48:26.033
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:48:26.056
  STEP: Creating a pod to test downward api env vars @ 07/03/24 13:48:26.099
  E0703 13:48:26.899180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:27.898941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:28.899842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:29.900266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:48:30.198
  I0703 13:48:30.205037 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downward-api-edccb479-42af-4af3-bc1b-c48fe64fe7f0 container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 13:48:30.221
  I0703 13:48:30.280378 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-4565" for this suite. @ 07/03/24 13:48:30.292
• [4.417 seconds]
------------------------------
[sig-storage] EmptyDir volumes pod should support shared volumes between containers [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:230
  STEP: Creating a kubernetes client @ 07/03/24 13:48:30.326
  I0703 13:48:30.326728 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 13:48:30.342
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:48:30.469
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:48:30.489
  STEP: Creating Pod @ 07/03/24 13:48:30.5
  E0703 13:48:30.901576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:31.901761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:32.904347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:33.904734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Reading file content from the nginx-container @ 07/03/24 13:48:34.673
  I0703 13:48:34.673823 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c cat /usr/share/volumeshare/shareddata.txt] Namespace:emptydir-528 PodName:pod-sharedvolume-aee4da0e-03b9-46b5-b5d1-e8f910dbda74 ContainerName:busybox-main-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 13:48:34.673913 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 13:48:34.676215 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 13:48:34.676833 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/emptydir-528/pods/pod-sharedvolume-aee4da0e-03b9-46b5-b5d1-e8f910dbda74/exec?command=%2Fbin%2Fsh&command=-c&command=cat+%2Fusr%2Fshare%2Fvolumeshare%2Fshareddata.txt&container=busybox-main-container&container=busybox-main-container&stderr=true&stdout=true)
  I0703 13:48:34.781276 21 exec_util.go:106] Exec stderr: ""
  I0703 13:48:34.782077 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-528" for this suite. @ 07/03/24 13:48:34.786
• [4.481 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform canary updates and phased rolling updates of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:332
  STEP: Creating a kubernetes client @ 07/03/24 13:48:34.807
  I0703 13:48:34.807461 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 13:48:34.808
  E0703 13:48:34.905528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:48:34.973
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:48:34.983
  STEP: Creating service test in namespace statefulset-4038 @ 07/03/24 13:48:34.991
  STEP: Creating a new StatefulSet @ 07/03/24 13:48:35.024
  I0703 13:48:35.077795 21 wait.go:40] Found 0 stateful pods, waiting for 3
  E0703 13:48:35.905527      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:36.906903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:37.908083      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:38.908563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:39.909174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:40.909300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:41.909438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:42.910574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:43.909940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:44.910367      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:48:45.063399 21 wait.go:40] Found 2 stateful pods, waiting for 3
  E0703 13:48:45.911381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:46.911238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:47.922616      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:48.922624      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:49.926976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:50.927706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:51.928127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:52.928352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:53.928394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:54.928479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:48:55.066899 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:48:55.066942 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:48:55.066960 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:48:55.928971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:56.929134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:57.929273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:58.929283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:48:59.929631      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:00.929831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:01.943232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:02.937315      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:03.934383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:04.935421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:49:05.064728 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:05.064990 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:05.065147 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:49:05.942042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:06.943105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:07.945360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:08.950455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:09.951089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:10.951514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:11.951923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:12.952592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:13.952819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:14.952964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:49:15.064875 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:15.064924 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:15.064937 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:49:15.954781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:16.955591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:17.955981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:18.956088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:19.962459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:20.962521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:21.964038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:22.965896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:23.966144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:24.968592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:49:25.070922 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:25.070973 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:25.070986 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:49:25.969444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:26.969571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:27.970928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:28.971073      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:29.971875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:30.971983      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:31.974088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:32.974486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:33.974582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:34.974896      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:49:35.069967 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:35.070005 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:35.070018 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=false
  E0703 13:49:35.975564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:36.975817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:37.975985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:38.976102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:39.977873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:40.978019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:41.978849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:42.979006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:43.979088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:44.979202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:49:45.064784 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:45.064827 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:49:45.064840 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Updating stateful set template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/03/24 13:49:45.092
  I0703 13:49:45.124467 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 07/03/24 13:49:45.124
  E0703 13:49:45.979589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:46.980390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:47.980634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:48.983184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:49.983849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:50.983941      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:51.984034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:52.984314      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:53.984456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:54.984705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not applying an update when the partition is greater than the number of replicas @ 07/03/24 13:49:55.14
  STEP: Performing a canary update @ 07/03/24 13:49:55.14
  I0703 13:49:55.183295 21 statefulset.go:2241] Updating stateful set ss2
  I0703 13:49:55.244815 21 wait.go:74] Waiting for Pod statefulset-4038/ss2-2 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0703 13:49:55.994794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:56.998474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:58.003994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:49:59.003518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:00.013785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:01.015161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:02.015275      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:03.015390      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:04.016463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:05.018751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Restoring Pods to the correct revision when they are deleted @ 07/03/24 13:50:05.206
  I0703 13:50:05.523799 21 wait.go:40] Found 2 stateful pods, waiting for 3
  E0703 13:50:06.019584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:07.019999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:08.020070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:09.021216      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:10.021360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:11.021461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:12.021563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:13.021654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:14.022457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:15.022562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:50:15.402605 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:50:15.402655 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:50:15.402668 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:50:16.022662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:17.023605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:18.025036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:19.025589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:20.025693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:21.025879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:22.025946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:23.026552      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:24.026545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:25.027524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:50:25.399927 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:50:25.399973 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:50:25.399986 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 13:50:26.028621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:27.029668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:28.030443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:29.030539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:30.030854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:31.030783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:32.031098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:33.032047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:34.032564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:35.032781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:50:35.392846 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:50:35.392886 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 13:50:35.392901 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Performing a phased rolling update @ 07/03/24 13:50:35.436
  I0703 13:50:35.518754 21 statefulset.go:2241] Updating stateful set ss2
  I0703 13:50:35.628371 21 wait.go:74] Waiting for Pod statefulset-4038/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0703 13:50:36.040061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:37.033144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:38.033565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:39.033681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:40.033847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:41.034522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:42.034563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:43.034643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:44.038434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:45.042507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:50:45.589046 21 statefulset.go:2241] Updating stateful set ss2
  I0703 13:50:45.632780 21 wait.go:56] Waiting for StatefulSet statefulset-4038/ss2 to complete update
  I0703 13:50:45.632831 21 wait.go:63] Waiting for Pod statefulset-4038/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0703 13:50:46.043519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:47.043787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:48.044067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:49.044909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:50.045546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:51.048586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:52.049606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:53.049481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:54.049581      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:55.049775      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:50:55.599800 21 wait.go:56] Waiting for StatefulSet statefulset-4038/ss2 to complete update
  E0703 13:50:56.050762      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:57.051200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:58.054519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:50:59.055543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:00.055997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:01.057885      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:02.058064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:03.065161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:04.065244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:05.065376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:05.605677 21 wait.go:56] Waiting for StatefulSet statefulset-4038/ss2 to complete update
  E0703 13:51:06.068922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:07.071867      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:08.070446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:09.070545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:10.071317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:11.071188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:12.086593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:13.073767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:14.073856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:15.079569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:15.619967 21 statefulset.go:135] Deleting all statefulset in ns statefulset-4038
  I0703 13:51:15.624987 21 rest.go:150] Scaling statefulset ss2 to 0
  E0703 13:51:16.080849      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:17.081239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:18.081928      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:19.083389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:20.083459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:21.083531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:22.083669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:23.083822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:24.083903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:25.084146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:25.686744 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 13:51:25.692153 21 rest.go:88] Deleting statefulset ss2
  I0703 13:51:25.742790 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-4038" for this suite. @ 07/03/24 13:51:25.796
• [171.030 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Containers should be able to override the image's default command (container entrypoint) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:75
  STEP: Creating a kubernetes client @ 07/03/24 13:51:25.838
  I0703 13:51:25.838232 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename containers @ 07/03/24 13:51:25.839
  E0703 13:51:26.084758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:51:26.224
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:51:26.277
  STEP: Creating a pod to test override command @ 07/03/24 13:51:26.297
  E0703 13:51:27.086612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:28.087340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:29.092379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:30.088669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:51:30.653
  I0703 13:51:30.681345 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod client-containers-d32308f2-7a23-449a-9263-292f86b3b388 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 13:51:30.75
  I0703 13:51:30.787178 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-6119" for this suite. @ 07/03/24 13:51:30.803
• [4.979 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command in a pod should print the output to logs [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:51
  STEP: Creating a kubernetes client @ 07/03/24 13:51:30.838
  I0703 13:51:30.838221 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubelet-test @ 07/03/24 13:51:30.839
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:51:30.988
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:51:31.042
  E0703 13:51:31.089676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:32.090426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:33.091464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:34.091583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:35.094470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:35.208735 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2574" for this suite. @ 07/03/24 13:51:35.214
• [4.407 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to change the type from NodePort to ExternalName [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1537
  STEP: Creating a kubernetes client @ 07/03/24 13:51:35.285
  I0703 13:51:35.285188 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:51:35.286
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:51:35.405
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:51:35.423
  STEP: creating a service nodeport-service with the type=NodePort in namespace services-61 @ 07/03/24 13:51:35.439
  STEP: Creating active service to test reachability when its FQDN is referred as externalName for another service @ 07/03/24 13:51:35.462
  STEP: creating service externalsvc in namespace services-61 @ 07/03/24 13:51:35.462
  STEP: creating replication controller externalsvc in namespace services-61 @ 07/03/24 13:51:35.534
  I0703 13:51:35.635544      21 runners.go:198] Created replication controller with name: externalsvc, namespace: services-61, replica count: 2
  E0703 13:51:36.095286      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:37.095869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:38.096787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:38.687698      21 runners.go:198] externalsvc Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  STEP: changing the NodePort service to type=ExternalName @ 07/03/24 13:51:38.691
  I0703 13:51:38.713211 21 resource.go:361] Creating new exec pod
  E0703 13:51:39.097853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:40.098108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:41.098807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:42.099619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:42.812856 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-61 exec execpodngx6g -- /bin/sh -x -c nslookup nodeport-service.services-61.svc.cluster.local'
  E0703 13:51:43.099838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:44.100553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:45.101337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:46.101943      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:47.102329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:48.102529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:48.285724 21 builder.go:146] stderr: "+ nslookup nodeport-service.services-61.svc.cluster.local\n"
  I0703 13:51:48.285851 21 builder.go:147] stdout: "Server:\t\t10.43.0.10\nAddress:\t10.43.0.10#53\n\nnodeport-service.services-61.svc.cluster.local\tcanonical name = externalsvc.services-61.svc.cluster.local.\nName:\texternalsvc.services-61.svc.cluster.local\nAddress: 10.43.19.114\n\n"
  STEP: deleting ReplicationController externalsvc in namespace services-61, will wait for the garbage collector to delete the pods @ 07/03/24 13:51:48.285
  I0703 13:51:48.356838 21 resources.go:139] Deleting ReplicationController externalsvc took: 17.15187ms
  I0703 13:51:48.458029 21 resources.go:163] Terminating ReplicationController externalsvc pods took: 101.176915ms
  E0703 13:51:49.102826      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:50.103441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:51.103866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:52.104595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:52.120169 21 service.go:1548] Cleaning up the NodePort to ExternalName test service
  I0703 13:51:52.174777 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-61" for this suite. @ 07/03/24 13:51:52.205
• [16.950 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for pods for Hostname [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:244
  STEP: Creating a kubernetes client @ 07/03/24 13:51:52.235
  I0703 13:51:52.235755 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 13:51:52.236
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:51:52.371
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:51:52.382
  STEP: Creating a test headless service @ 07/03/24 13:51:52.392
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7174.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-2.dns-test-service-2.dns-7174.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/wheezy_hosts@dns-querier-2;sleep 1; done
   @ 07/03/24 13:51:52.417
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-2.dns-test-service-2.dns-7174.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-2.dns-test-service-2.dns-7174.svc.cluster.local;test -n "$$(getent hosts dns-querier-2)" && echo OK > /results/jessie_hosts@dns-querier-2;sleep 1; done
   @ 07/03/24 13:51:52.417
  STEP: creating a pod to probe DNS @ 07/03/24 13:51:52.417
  STEP: submitting the pod to kubernetes @ 07/03/24 13:51:52.417
  E0703 13:51:53.107372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:54.107773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:55.126719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:56.128114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 13:51:56.636
  STEP: looking for the results for each expected name from probers @ 07/03/24 13:51:56.64
  E0703 13:51:57.128136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:58.128875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:51:59.129607      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:51:59.683293 21 dns_common.go:478] Unable to read jessie_hosts@dns-querier-2.dns-test-service-2.dns-7174.svc.cluster.local from pod dns-7174/dns-test-6fb6a0f8-96f5-496b-b71e-f1d3c2952f2b: the server could not find the requested resource (get pods dns-test-6fb6a0f8-96f5-496b-b71e-f1d3c2952f2b)
  I0703 13:51:59.688248 21 dns_common.go:478] Unable to read jessie_hosts@dns-querier-2 from pod dns-7174/dns-test-6fb6a0f8-96f5-496b-b71e-f1d3c2952f2b: the server could not find the requested resource (get pods dns-test-6fb6a0f8-96f5-496b-b71e-f1d3c2952f2b)
  I0703 13:51:59.688292 21 dns_common.go:489] Lookups using dns-7174/dns-test-6fb6a0f8-96f5-496b-b71e-f1d3c2952f2b failed for: [jessie_hosts@dns-querier-2.dns-test-service-2.dns-7174.svc.cluster.local jessie_hosts@dns-querier-2]

  I0703 13:51:59.731577 21 dns_common.go:495] Pod client logs for webserver: 
  I0703 13:51:59.744873 21 dns_common.go:495] Pod client logs for querier: 
  I0703 13:51:59.753442 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0703 13:52:00.129701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:01.129795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:01.666568 21 dns_common.go:527] DNS probes using dns-7174/dns-test-6fb6a0f8-96f5-496b-b71e-f1d3c2952f2b succeeded

  STEP: deleting the pod @ 07/03/24 13:52:01.667
  STEP: deleting the test headless service @ 07/03/24 13:52:01.716
  I0703 13:52:01.798908 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-7174" for this suite. @ 07/03/24 13:52:01.806
• [9.600 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] Service endpoints latency should not be very high [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service_latency.go:59
  STEP: Creating a kubernetes client @ 07/03/24 13:52:01.836
  I0703 13:52:01.836658 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svc-latency @ 07/03/24 13:52:01.838
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:52:01.892
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:52:01.899
  I0703 13:52:01.975019 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: creating replication controller svc-latency-rc in namespace svc-latency-3822 @ 07/03/24 13:52:01.976
  I0703 13:52:01.983443      21 runners.go:198] Created replication controller with name: svc-latency-rc, namespace: svc-latency-3822, replica count: 1
  E0703 13:52:02.138437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:03.034771      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:52:03.135292      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:04.035161      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 0 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:52:04.135370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:05.035988      21 runners.go:198] svc-latency-rc Pods: 1 out of 1 created, 1 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:52:05.135611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:05.181142 21 service_latency.go:356] Created: latency-svc-vjt2p
  I0703 13:52:05.193073 21 service_latency.go:363] Got endpoints: latency-svc-vjt2p [50.731148ms]
  I0703 13:52:05.291110 21 service_latency.go:356] Created: latency-svc-tn6qm
  I0703 13:52:05.296678 21 service_latency.go:356] Created: latency-svc-4v89t
  I0703 13:52:05.296686 21 service_latency.go:363] Got endpoints: latency-svc-tn6qm [102.821104ms]
  I0703 13:52:05.319230 21 service_latency.go:356] Created: latency-svc-mltxj
  I0703 13:52:05.330592 21 service_latency.go:363] Got endpoints: latency-svc-4v89t [136.08694ms]
  I0703 13:52:05.350511 21 service_latency.go:363] Got endpoints: latency-svc-mltxj [155.887592ms]
  I0703 13:52:05.506884 21 service_latency.go:356] Created: latency-svc-z5mlv
  I0703 13:52:05.545654 21 service_latency.go:356] Created: latency-svc-9nxgp
  I0703 13:52:05.546371 21 service_latency.go:363] Got endpoints: latency-svc-z5mlv [352.00394ms]
  I0703 13:52:05.546628 21 service_latency.go:356] Created: latency-svc-gfnsk
  I0703 13:52:05.546804 21 service_latency.go:356] Created: latency-svc-9frbs
  I0703 13:52:05.546923 21 service_latency.go:356] Created: latency-svc-wsx2b
  I0703 13:52:05.547188 21 service_latency.go:356] Created: latency-svc-tg7pc
  I0703 13:52:05.547300 21 service_latency.go:356] Created: latency-svc-rjmvt
  I0703 13:52:05.547529 21 service_latency.go:356] Created: latency-svc-nm289
  I0703 13:52:05.547624 21 service_latency.go:356] Created: latency-svc-xgtgc
  I0703 13:52:05.569936 21 service_latency.go:356] Created: latency-svc-7bn2p
  I0703 13:52:05.570776 21 service_latency.go:356] Created: latency-svc-9jsrq
  I0703 13:52:05.571678 21 service_latency.go:356] Created: latency-svc-nkcs4
  I0703 13:52:05.572141 21 service_latency.go:356] Created: latency-svc-qc5d9
  I0703 13:52:05.572903 21 service_latency.go:356] Created: latency-svc-s9jlv
  I0703 13:52:05.573208 21 service_latency.go:356] Created: latency-svc-wbgzx
  I0703 13:52:05.650612 21 service_latency.go:363] Got endpoints: latency-svc-s9jlv [353.867237ms]
  I0703 13:52:05.658809 21 service_latency.go:363] Got endpoints: latency-svc-xgtgc [463.806081ms]
  I0703 13:52:05.659164 21 service_latency.go:363] Got endpoints: latency-svc-wbgzx [308.444778ms]
  I0703 13:52:05.712898 21 service_latency.go:363] Got endpoints: latency-svc-7bn2p [518.721466ms]
  I0703 13:52:05.725506 21 service_latency.go:363] Got endpoints: latency-svc-nm289 [530.766898ms]
  I0703 13:52:05.774469 21 service_latency.go:363] Got endpoints: latency-svc-9nxgp [579.626063ms]
  I0703 13:52:05.774840 21 service_latency.go:363] Got endpoints: latency-svc-9frbs [579.805562ms]
  I0703 13:52:05.774899 21 service_latency.go:363] Got endpoints: latency-svc-wsx2b [579.776396ms]
  I0703 13:52:05.774912 21 service_latency.go:363] Got endpoints: latency-svc-gfnsk [579.655626ms]
  I0703 13:52:05.788252 21 service_latency.go:356] Created: latency-svc-6n5dz
  I0703 13:52:05.875006 21 service_latency.go:356] Created: latency-svc-9bfzq
  I0703 13:52:05.909104 21 service_latency.go:363] Got endpoints: latency-svc-nkcs4 [578.121314ms]
  I0703 13:52:05.909198 21 service_latency.go:363] Got endpoints: latency-svc-rjmvt [713.832379ms]
  I0703 13:52:05.909211 21 service_latency.go:363] Got endpoints: latency-svc-9jsrq [713.722176ms]
  I0703 13:52:05.916176 21 service_latency.go:363] Got endpoints: latency-svc-tg7pc [720.480375ms]
  I0703 13:52:05.916172 21 service_latency.go:363] Got endpoints: latency-svc-qc5d9 [720.583398ms]
  I0703 13:52:05.971484 21 service_latency.go:363] Got endpoints: latency-svc-9bfzq [320.814632ms]
  I0703 13:52:05.972043 21 service_latency.go:363] Got endpoints: latency-svc-6n5dz [418.361088ms]
  E0703 13:52:06.136494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:06.177618 21 service_latency.go:356] Created: latency-svc-6dwnm
  I0703 13:52:06.180691 21 service_latency.go:356] Created: latency-svc-8592v
  I0703 13:52:06.180947 21 service_latency.go:356] Created: latency-svc-rdqwq
  I0703 13:52:06.201584 21 service_latency.go:356] Created: latency-svc-8dmtv
  I0703 13:52:06.201795 21 service_latency.go:356] Created: latency-svc-brjkz
  I0703 13:52:06.201949 21 service_latency.go:356] Created: latency-svc-q7pnn
  I0703 13:52:06.243471 21 service_latency.go:356] Created: latency-svc-c9x2q
  I0703 13:52:06.246272 21 service_latency.go:356] Created: latency-svc-5fpdw
  I0703 13:52:06.246532 21 service_latency.go:356] Created: latency-svc-cjdmh
  I0703 13:52:06.246666 21 service_latency.go:356] Created: latency-svc-v2w6m
  I0703 13:52:06.246841 21 service_latency.go:356] Created: latency-svc-jh24v
  I0703 13:52:06.247057 21 service_latency.go:356] Created: latency-svc-42sjj
  I0703 13:52:06.247237 21 service_latency.go:356] Created: latency-svc-dfcmj
  I0703 13:52:06.247348 21 service_latency.go:356] Created: latency-svc-mnhhq
  I0703 13:52:06.247445 21 service_latency.go:356] Created: latency-svc-chxlq
  I0703 13:52:06.367710 21 service_latency.go:363] Got endpoints: latency-svc-8592v [654.761576ms]
  I0703 13:52:06.368249 21 service_latency.go:363] Got endpoints: latency-svc-6dwnm [396.050394ms]
  I0703 13:52:06.368481 21 service_latency.go:363] Got endpoints: latency-svc-8dmtv [593.023001ms]
  I0703 13:52:06.483020 21 service_latency.go:363] Got endpoints: latency-svc-q7pnn [757.052418ms]
  I0703 13:52:06.487204 21 service_latency.go:363] Got endpoints: latency-svc-brjkz [712.064722ms]
  I0703 13:52:06.579389 21 service_latency.go:363] Got endpoints: latency-svc-rdqwq [669.996604ms]
  I0703 13:52:06.579515 21 service_latency.go:363] Got endpoints: latency-svc-5fpdw [920.656017ms]
  I0703 13:52:06.579531 21 service_latency.go:363] Got endpoints: latency-svc-c9x2q [669.87865ms]
  I0703 13:52:06.626236 21 service_latency.go:356] Created: latency-svc-kpwhh
  I0703 13:52:06.642721 21 service_latency.go:363] Got endpoints: latency-svc-cjdmh [726.243938ms]
  I0703 13:52:06.643308 21 service_latency.go:363] Got endpoints: latency-svc-v2w6m [868.773313ms]
  I0703 13:52:06.735965 21 service_latency.go:363] Got endpoints: latency-svc-dfcmj [1.076761431s]
  I0703 13:52:06.736243 21 service_latency.go:363] Got endpoints: latency-svc-jh24v [960.91209ms]
  I0703 13:52:06.762007 21 service_latency.go:363] Got endpoints: latency-svc-mnhhq [790.459764ms]
  I0703 13:52:06.762326 21 service_latency.go:363] Got endpoints: latency-svc-42sjj [846.023887ms]
  I0703 13:52:06.762536 21 service_latency.go:363] Got endpoints: latency-svc-chxlq [851.432685ms]
  I0703 13:52:06.843909 21 service_latency.go:363] Got endpoints: latency-svc-kpwhh [475.960235ms]
  I0703 13:52:06.846018 21 service_latency.go:356] Created: latency-svc-b4jfs
  I0703 13:52:06.929154 21 service_latency.go:356] Created: latency-svc-8b989
  I0703 13:52:06.938542 21 service_latency.go:363] Got endpoints: latency-svc-b4jfs [570.185529ms]
  I0703 13:52:06.951707 21 service_latency.go:356] Created: latency-svc-8t462
  I0703 13:52:07.045990 21 service_latency.go:356] Created: latency-svc-x6wxm
  I0703 13:52:07.061836 21 service_latency.go:363] Got endpoints: latency-svc-8b989 [693.168221ms]
  I0703 13:52:07.102005 21 service_latency.go:356] Created: latency-svc-hnhx7
  E0703 13:52:07.137381      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:07.198593 21 service_latency.go:363] Got endpoints: latency-svc-x6wxm [712.232291ms]
  I0703 13:52:07.198972 21 service_latency.go:363] Got endpoints: latency-svc-8t462 [711.057524ms]
  I0703 13:52:07.261570 21 service_latency.go:363] Got endpoints: latency-svc-hnhx7 [681.813037ms]
  I0703 13:52:07.313058 21 service_latency.go:356] Created: latency-svc-54vhn
  I0703 13:52:07.331326 21 service_latency.go:356] Created: latency-svc-758c4
  I0703 13:52:07.405365 21 service_latency.go:356] Created: latency-svc-hc4gm
  I0703 13:52:07.421295 21 service_latency.go:363] Got endpoints: latency-svc-54vhn [841.14991ms]
  I0703 13:52:07.424425 21 service_latency.go:363] Got endpoints: latency-svc-758c4 [844.832524ms]
  I0703 13:52:07.441656 21 service_latency.go:356] Created: latency-svc-s279q
  I0703 13:52:07.477199 21 service_latency.go:363] Got endpoints: latency-svc-hc4gm [833.740419ms]
  I0703 13:52:07.478491 21 service_latency.go:356] Created: latency-svc-x7d5b
  I0703 13:52:07.529195 21 service_latency.go:363] Got endpoints: latency-svc-s279q [886.323636ms]
  I0703 13:52:07.560361 21 service_latency.go:356] Created: latency-svc-l9stf
  I0703 13:52:07.588537 21 service_latency.go:363] Got endpoints: latency-svc-x7d5b [825.964387ms]
  I0703 13:52:07.615181 21 service_latency.go:363] Got endpoints: latency-svc-l9stf [879.158012ms]
  I0703 13:52:07.668092 21 service_latency.go:356] Created: latency-svc-lqtbk
  I0703 13:52:07.779982 21 service_latency.go:363] Got endpoints: latency-svc-lqtbk [1.043708261s]
  I0703 13:52:07.835065 21 service_latency.go:356] Created: latency-svc-8pwsq
  I0703 13:52:07.835237 21 service_latency.go:363] Got endpoints: latency-svc-8pwsq [1.072878189s]
  I0703 13:52:07.855208 21 service_latency.go:356] Created: latency-svc-xfhmt
  I0703 13:52:07.886533 21 service_latency.go:356] Created: latency-svc-cnl24
  I0703 13:52:07.922960 21 service_latency.go:363] Got endpoints: latency-svc-xfhmt [1.160887424s]
  I0703 13:52:07.983338 21 service_latency.go:363] Got endpoints: latency-svc-cnl24 [1.119951479s]
  I0703 13:52:08.037402 21 service_latency.go:356] Created: latency-svc-pr9h9
  I0703 13:52:08.078224 21 service_latency.go:363] Got endpoints: latency-svc-pr9h9 [1.139625321s]
  I0703 13:52:08.086317 21 service_latency.go:356] Created: latency-svc-fqmzt
  I0703 13:52:08.111428 21 service_latency.go:356] Created: latency-svc-wtbjs
  E0703 13:52:08.137788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:08.150844 21 service_latency.go:363] Got endpoints: latency-svc-fqmzt [1.088961391s]
  I0703 13:52:08.186579 21 service_latency.go:356] Created: latency-svc-7gptn
  I0703 13:52:08.256507 21 service_latency.go:363] Got endpoints: latency-svc-7gptn [1.057503067s]
  I0703 13:52:08.256625 21 service_latency.go:363] Got endpoints: latency-svc-wtbjs [1.057964638s]
  I0703 13:52:08.271950 21 service_latency.go:356] Created: latency-svc-g9mjt
  I0703 13:52:08.338674 21 service_latency.go:356] Created: latency-svc-tndnd
  I0703 13:52:08.346597 21 service_latency.go:363] Got endpoints: latency-svc-g9mjt [1.084841028s]
  I0703 13:52:08.377368 21 service_latency.go:363] Got endpoints: latency-svc-tndnd [956.013588ms]
  I0703 13:52:08.389055 21 service_latency.go:356] Created: latency-svc-txm5d
  I0703 13:52:08.404917 21 service_latency.go:356] Created: latency-svc-2vbz6
  I0703 13:52:08.438981 21 service_latency.go:363] Got endpoints: latency-svc-txm5d [1.014501438s]
  I0703 13:52:08.448805 21 service_latency.go:363] Got endpoints: latency-svc-2vbz6 [970.251817ms]
  I0703 13:52:08.480157 21 service_latency.go:356] Created: latency-svc-h766c
  I0703 13:52:08.507625 21 service_latency.go:356] Created: latency-svc-kscqq
  I0703 13:52:08.512434 21 service_latency.go:363] Got endpoints: latency-svc-h766c [982.976043ms]
  I0703 13:52:08.637754 21 service_latency.go:363] Got endpoints: latency-svc-kscqq [1.021558626s]
  I0703 13:52:08.653952 21 service_latency.go:356] Created: latency-svc-4677b
  I0703 13:52:08.734024 21 service_latency.go:363] Got endpoints: latency-svc-4677b [1.145431033s]
  E0703 13:52:09.142710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:09.143288 21 service_latency.go:356] Created: latency-svc-q9kzq
  I0703 13:52:09.183688 21 service_latency.go:356] Created: latency-svc-mcw2l
  I0703 13:52:09.184185 21 service_latency.go:356] Created: latency-svc-96gdk
  I0703 13:52:09.184563 21 service_latency.go:356] Created: latency-svc-5tlp8
  I0703 13:52:09.187099 21 service_latency.go:356] Created: latency-svc-b9rqj
  I0703 13:52:09.187539 21 service_latency.go:356] Created: latency-svc-g5gd4
  I0703 13:52:09.190668 21 service_latency.go:356] Created: latency-svc-vnj7g
  I0703 13:52:09.190798 21 service_latency.go:356] Created: latency-svc-s8qjx
  I0703 13:52:09.190931 21 service_latency.go:356] Created: latency-svc-lb8nv
  I0703 13:52:09.191041 21 service_latency.go:356] Created: latency-svc-bnbwp
  I0703 13:52:09.197920 21 service_latency.go:356] Created: latency-svc-lk8lh
  I0703 13:52:09.199446 21 service_latency.go:356] Created: latency-svc-4zb9w
  I0703 13:52:09.200932 21 service_latency.go:356] Created: latency-svc-682dq
  I0703 13:52:09.206408 21 service_latency.go:356] Created: latency-svc-668z4
  I0703 13:52:09.207105 21 service_latency.go:356] Created: latency-svc-2gclr
  I0703 13:52:09.222600 21 service_latency.go:363] Got endpoints: latency-svc-q9kzq [966.041791ms]
  I0703 13:52:09.555024 21 service_latency.go:363] Got endpoints: latency-svc-668z4 [1.17746071s]
  I0703 13:52:09.555011 21 service_latency.go:363] Got endpoints: latency-svc-b9rqj [1.6318324s]
  I0703 13:52:09.582330 21 service_latency.go:363] Got endpoints: latency-svc-vnj7g [1.504049669s]
  I0703 13:52:09.585322 21 service_latency.go:363] Got endpoints: latency-svc-s8qjx [1.430369722s]
  I0703 13:52:09.585348 21 service_latency.go:363] Got endpoints: latency-svc-lb8nv [1.328630652s]
  I0703 13:52:09.642158 21 service_latency.go:363] Got endpoints: latency-svc-mcw2l [1.861936139s]
  I0703 13:52:09.684972 21 service_latency.go:363] Got endpoints: latency-svc-lk8lh [950.756967ms]
  I0703 13:52:09.684989 21 service_latency.go:363] Got endpoints: latency-svc-5tlp8 [1.849676177s]
  I0703 13:52:09.694888 21 service_latency.go:363] Got endpoints: latency-svc-g5gd4 [1.711481188s]
  I0703 13:52:09.736762 21 service_latency.go:356] Created: latency-svc-bmtmt
  I0703 13:52:09.847020 21 service_latency.go:356] Created: latency-svc-zlj9q
  I0703 13:52:09.852528 21 service_latency.go:363] Got endpoints: latency-svc-96gdk [1.505871963s]
  I0703 13:52:09.914568 21 service_latency.go:363] Got endpoints: latency-svc-2gclr [1.273137035s]
  I0703 13:52:09.914568 21 service_latency.go:363] Got endpoints: latency-svc-682dq [1.401977951s]
  I0703 13:52:09.914594 21 service_latency.go:363] Got endpoints: latency-svc-bnbwp [1.475561371s]
  I0703 13:52:09.974462 21 service_latency.go:356] Created: latency-svc-m5gg8
  I0703 13:52:09.999874 21 service_latency.go:363] Got endpoints: latency-svc-bmtmt [777.221412ms]
  I0703 13:52:10.000364 21 service_latency.go:363] Got endpoints: latency-svc-4zb9w [1.551032902s]
  I0703 13:52:10.022648 21 service_latency.go:363] Got endpoints: latency-svc-zlj9q [467.450268ms]
  I0703 13:52:10.065602 21 service_latency.go:356] Created: latency-svc-7fc9j
  I0703 13:52:10.065593 21 service_latency.go:363] Got endpoints: latency-svc-m5gg8 [510.518139ms]
  E0703 13:52:10.143030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:10.149858 21 service_latency.go:363] Got endpoints: latency-svc-7fc9j [564.057138ms]
  I0703 13:52:10.200614 21 service_latency.go:356] Created: latency-svc-nk4t6
  I0703 13:52:10.240340 21 service_latency.go:356] Created: latency-svc-r99t5
  I0703 13:52:10.264573 21 service_latency.go:363] Got endpoints: latency-svc-nk4t6 [677.981555ms]
  I0703 13:52:10.306218 21 service_latency.go:363] Got endpoints: latency-svc-r99t5 [720.038714ms]
  I0703 13:52:10.308529 21 service_latency.go:356] Created: latency-svc-fxchm
  I0703 13:52:10.387501 21 service_latency.go:356] Created: latency-svc-tcqxf
  I0703 13:52:10.417055 21 service_latency.go:363] Got endpoints: latency-svc-fxchm [731.997184ms]
  I0703 13:52:10.449055 21 service_latency.go:356] Created: latency-svc-pdv6f
  I0703 13:52:10.462682 21 service_latency.go:363] Got endpoints: latency-svc-tcqxf [820.40961ms]
  I0703 13:52:10.527087 21 service_latency.go:356] Created: latency-svc-hxs7x
  I0703 13:52:10.533241 21 service_latency.go:363] Got endpoints: latency-svc-pdv6f [848.114629ms]
  I0703 13:52:10.583469 21 service_latency.go:356] Created: latency-svc-4s67h
  I0703 13:52:10.583956 21 service_latency.go:363] Got endpoints: latency-svc-hxs7x [888.986202ms]
  I0703 13:52:10.612090 21 service_latency.go:356] Created: latency-svc-wsk6c
  I0703 13:52:10.727615 21 service_latency.go:363] Got endpoints: latency-svc-4s67h [874.624727ms]
  I0703 13:52:10.818624 21 service_latency.go:363] Got endpoints: latency-svc-wsk6c [903.784476ms]
  I0703 13:52:10.821370 21 service_latency.go:356] Created: latency-svc-v8hqc
  I0703 13:52:10.869285 21 service_latency.go:356] Created: latency-svc-kw2pz
  I0703 13:52:10.883384 21 service_latency.go:363] Got endpoints: latency-svc-v8hqc [968.650447ms]
  I0703 13:52:10.902589 21 service_latency.go:363] Got endpoints: latency-svc-kw2pz [987.51004ms]
  I0703 13:52:10.995220 21 service_latency.go:356] Created: latency-svc-7kl5h
  I0703 13:52:11.025395 21 service_latency.go:356] Created: latency-svc-8j4ts
  I0703 13:52:11.066709 21 service_latency.go:363] Got endpoints: latency-svc-7kl5h [1.066004163s]
  I0703 13:52:11.085464 21 service_latency.go:356] Created: latency-svc-fb9r9
  I0703 13:52:11.100562 21 service_latency.go:363] Got endpoints: latency-svc-8j4ts [1.099031078s]
  I0703 13:52:11.101104 21 service_latency.go:363] Got endpoints: latency-svc-fb9r9 [1.078404653s]
  I0703 13:52:11.108952 21 service_latency.go:356] Created: latency-svc-bw8pr
  E0703 13:52:11.143534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:11.259856 21 service_latency.go:356] Created: latency-svc-pbndx
  I0703 13:52:11.259942 21 service_latency.go:363] Got endpoints: latency-svc-pbndx [1.109897487s]
  I0703 13:52:11.260278 21 service_latency.go:363] Got endpoints: latency-svc-bw8pr [1.194616699s]
  I0703 13:52:11.605507 21 service_latency.go:356] Created: latency-svc-nvcv7
  I0703 13:52:11.656178 21 service_latency.go:356] Created: latency-svc-dzf9n
  I0703 13:52:11.656480 21 service_latency.go:356] Created: latency-svc-f9zlq
  I0703 13:52:11.656636 21 service_latency.go:356] Created: latency-svc-kfhbc
  I0703 13:52:11.656748 21 service_latency.go:356] Created: latency-svc-g6jp5
  I0703 13:52:11.661842 21 service_latency.go:356] Created: latency-svc-7bhfw
  I0703 13:52:11.661994 21 service_latency.go:356] Created: latency-svc-8zgn8
  I0703 13:52:11.662219 21 service_latency.go:356] Created: latency-svc-htltr
  I0703 13:52:11.663959 21 service_latency.go:356] Created: latency-svc-p2sjn
  I0703 13:52:11.664269 21 service_latency.go:356] Created: latency-svc-8q9xj
  I0703 13:52:11.665335 21 service_latency.go:356] Created: latency-svc-zklrt
  I0703 13:52:11.666066 21 service_latency.go:356] Created: latency-svc-mf79k
  I0703 13:52:11.666786 21 service_latency.go:356] Created: latency-svc-jdc2k
  I0703 13:52:11.667426 21 service_latency.go:356] Created: latency-svc-h4hss
  I0703 13:52:11.671705 21 service_latency.go:356] Created: latency-svc-7fjpn
  I0703 13:52:11.815001 21 service_latency.go:363] Got endpoints: latency-svc-nvcv7 [555.035118ms]
  I0703 13:52:11.987626 21 service_latency.go:363] Got endpoints: latency-svc-h4hss [1.681152312s]
  I0703 13:52:11.987723 21 service_latency.go:363] Got endpoints: latency-svc-zklrt [727.391243ms]
  I0703 13:52:11.987738 21 service_latency.go:363] Got endpoints: latency-svc-g6jp5 [1.570453747s]
  I0703 13:52:12.006145 21 service_latency.go:363] Got endpoints: latency-svc-7bhfw [1.7415156s]
  I0703 13:52:12.077692 21 service_latency.go:363] Got endpoints: latency-svc-kfhbc [1.611114324s]
  E0703 13:52:12.143626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:12.152647 21 service_latency.go:356] Created: latency-svc-rvz8t
  I0703 13:52:12.203404 21 service_latency.go:363] Got endpoints: latency-svc-htltr [1.101475527s]
  I0703 13:52:12.249419 21 service_latency.go:363] Got endpoints: latency-svc-dzf9n [1.521532647s]
  I0703 13:52:12.250405 21 service_latency.go:363] Got endpoints: latency-svc-f9zlq [1.717113713s]
  I0703 13:52:12.250867 21 service_latency.go:363] Got endpoints: latency-svc-8q9xj [1.666688903s]
  I0703 13:52:12.276227 21 service_latency.go:356] Created: latency-svc-6p62x
  I0703 13:52:12.487842 21 service_latency.go:363] Got endpoints: latency-svc-7fjpn [1.40339787s]
  I0703 13:52:12.487869 21 service_latency.go:356] Created: latency-svc-qz884
  I0703 13:52:12.607317 21 service_latency.go:363] Got endpoints: latency-svc-jdc2k [1.723727252s]
  I0703 13:52:12.607570 21 service_latency.go:363] Got endpoints: latency-svc-mf79k [1.70479906s]
  I0703 13:52:12.607618 21 service_latency.go:363] Got endpoints: latency-svc-p2sjn [1.786183526s]
  I0703 13:52:12.607744 21 service_latency.go:363] Got endpoints: latency-svc-8zgn8 [1.506471162s]
  I0703 13:52:12.730460 21 service_latency.go:363] Got endpoints: latency-svc-rvz8t [911.519743ms]
  I0703 13:52:12.806442 21 service_latency.go:363] Got endpoints: latency-svc-qz884 [818.646785ms]
  I0703 13:52:12.806768 21 service_latency.go:363] Got endpoints: latency-svc-6p62x [800.573103ms]
  E0703 13:52:13.144708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:13.265621 21 service_latency.go:356] Created: latency-svc-kvl7v
  I0703 13:52:13.266645 21 service_latency.go:356] Created: latency-svc-lnfbb
  I0703 13:52:13.266855 21 service_latency.go:356] Created: latency-svc-q4vvz
  I0703 13:52:13.267032 21 service_latency.go:356] Created: latency-svc-bv8jc
  I0703 13:52:13.267205 21 service_latency.go:356] Created: latency-svc-mpdh9
  I0703 13:52:13.267493 21 service_latency.go:356] Created: latency-svc-d64vc
  I0703 13:52:13.272689 21 service_latency.go:356] Created: latency-svc-6zthq
  I0703 13:52:13.277009 21 service_latency.go:356] Created: latency-svc-jmf4q
  I0703 13:52:13.285409 21 service_latency.go:356] Created: latency-svc-cgk2s
  I0703 13:52:13.289443 21 service_latency.go:356] Created: latency-svc-t9fkh
  I0703 13:52:13.290060 21 service_latency.go:356] Created: latency-svc-q5gzh
  I0703 13:52:13.290550 21 service_latency.go:356] Created: latency-svc-b5mc6
  I0703 13:52:13.290704 21 service_latency.go:356] Created: latency-svc-lkjg2
  I0703 13:52:13.290950 21 service_latency.go:356] Created: latency-svc-kdt6w
  I0703 13:52:13.290989 21 service_latency.go:356] Created: latency-svc-4k9b8
  I0703 13:52:13.514121 21 service_latency.go:363] Got endpoints: latency-svc-mpdh9 [1.52620044s]
  I0703 13:52:13.514718 21 service_latency.go:363] Got endpoints: latency-svc-lnfbb [707.920453ms]
  I0703 13:52:13.515069 21 service_latency.go:363] Got endpoints: latency-svc-d64vc [708.563281ms]
  I0703 13:52:13.522556 21 service_latency.go:363] Got endpoints: latency-svc-q4vvz [1.444694238s]
  I0703 13:52:13.522666 21 service_latency.go:363] Got endpoints: latency-svc-bv8jc [1.318584159s]
  I0703 13:52:13.661505 21 service_latency.go:363] Got endpoints: latency-svc-q5gzh [1.05413398s]
  I0703 13:52:13.661618 21 service_latency.go:363] Got endpoints: latency-svc-6zthq [1.173538742s]
  I0703 13:52:13.661636 21 service_latency.go:363] Got endpoints: latency-svc-cgk2s [1.05399545s]
  I0703 13:52:13.670984 21 service_latency.go:363] Got endpoints: latency-svc-jmf4q [940.010952ms]
  I0703 13:52:13.671087 21 service_latency.go:363] Got endpoints: latency-svc-kdt6w [1.420644881s]
  I0703 13:52:13.729450 21 service_latency.go:356] Created: latency-svc-fzwzw
  I0703 13:52:13.738564 21 service_latency.go:363] Got endpoints: latency-svc-t9fkh [1.487584243s]
  I0703 13:52:13.808892 21 service_latency.go:356] Created: latency-svc-48gjb
  I0703 13:52:13.818859 21 service_latency.go:363] Got endpoints: latency-svc-lkjg2 [1.569152148s]
  I0703 13:52:13.818994 21 service_latency.go:363] Got endpoints: latency-svc-b5mc6 [1.211225625s]
  I0703 13:52:13.819012 21 service_latency.go:363] Got endpoints: latency-svc-fzwzw [304.625008ms]
  I0703 13:52:13.821640 21 service_latency.go:363] Got endpoints: latency-svc-kvl7v [1.833475777s]
  I0703 13:52:13.822027 21 service_latency.go:363] Got endpoints: latency-svc-4k9b8 [1.214423893s]
  I0703 13:52:13.884966 21 service_latency.go:356] Created: latency-svc-zn9pq
  I0703 13:52:13.945765 21 service_latency.go:363] Got endpoints: latency-svc-48gjb [422.345817ms]
  I0703 13:52:13.971136 21 service_latency.go:356] Created: latency-svc-gln9w
  I0703 13:52:14.043437 21 service_latency.go:356] Created: latency-svc-gk4t8
  I0703 13:52:14.065312 21 service_latency.go:363] Got endpoints: latency-svc-zn9pq [550.436735ms]
  I0703 13:52:14.104055 21 service_latency.go:363] Got endpoints: latency-svc-gln9w [588.878276ms]
  E0703 13:52:14.150911      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:14.262675 21 service_latency.go:363] Got endpoints: latency-svc-gk4t8 [739.925763ms]
  I0703 13:52:14.263357 21 service_latency.go:356] Created: latency-svc-wwccm
  I0703 13:52:14.327271 21 service_latency.go:356] Created: latency-svc-nktpt
  I0703 13:52:14.374362 21 service_latency.go:356] Created: latency-svc-nqfdp
  I0703 13:52:14.411703 21 service_latency.go:363] Got endpoints: latency-svc-nktpt [749.536494ms]
  I0703 13:52:14.411697 21 service_latency.go:363] Got endpoints: latency-svc-wwccm [749.980877ms]
  I0703 13:52:14.458848 21 service_latency.go:363] Got endpoints: latency-svc-nqfdp [796.395093ms]
  I0703 13:52:14.459592 21 service_latency.go:356] Created: latency-svc-vn8d9
  I0703 13:52:14.459898 21 service_latency.go:356] Created: latency-svc-t6j72
  I0703 13:52:14.491102 21 service_latency.go:356] Created: latency-svc-wfs7b
  I0703 13:52:14.508362 21 service_latency.go:363] Got endpoints: latency-svc-t6j72 [837.296516ms]
  I0703 13:52:14.508363 21 service_latency.go:363] Got endpoints: latency-svc-vn8d9 [837.181126ms]
  I0703 13:52:14.548276 21 service_latency.go:363] Got endpoints: latency-svc-wfs7b [809.658679ms]
  I0703 13:52:14.555379 21 service_latency.go:356] Created: latency-svc-5fp5q
  I0703 13:52:14.598588 21 service_latency.go:363] Got endpoints: latency-svc-5fp5q [779.146112ms]
  I0703 13:52:14.802804 21 service_latency.go:356] Created: latency-svc-mhn7z
  I0703 13:52:14.820276 21 service_latency.go:356] Created: latency-svc-h8fn4
  I0703 13:52:14.825396 21 service_latency.go:356] Created: latency-svc-8xggk
  I0703 13:52:14.918675 21 service_latency.go:356] Created: latency-svc-vvhr4
  I0703 13:52:14.918988 21 service_latency.go:356] Created: latency-svc-lcljc
  I0703 13:52:14.933829 21 service_latency.go:356] Created: latency-svc-hz7l6
  I0703 13:52:14.936090 21 service_latency.go:356] Created: latency-svc-b8vmh
  I0703 13:52:14.936261 21 service_latency.go:356] Created: latency-svc-4tfq2
  I0703 13:52:14.936376 21 service_latency.go:356] Created: latency-svc-llpv7
  I0703 13:52:14.936637 21 service_latency.go:356] Created: latency-svc-xxpx4
  I0703 13:52:14.936770 21 service_latency.go:356] Created: latency-svc-st7xc
  I0703 13:52:14.936875 21 service_latency.go:356] Created: latency-svc-kb4g4
  I0703 13:52:14.936997 21 service_latency.go:356] Created: latency-svc-4f48h
  I0703 13:52:14.940307 21 service_latency.go:356] Created: latency-svc-9wck4
  I0703 13:52:14.941412 21 service_latency.go:356] Created: latency-svc-d49gw
  I0703 13:52:14.948991 21 service_latency.go:363] Got endpoints: latency-svc-mhn7z [844.701333ms]
  I0703 13:52:15.149327 21 service_latency.go:363] Got endpoints: latency-svc-8xggk [550.510172ms]
  E0703 13:52:15.162189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:15.162936 21 service_latency.go:363] Got endpoints: latency-svc-xxpx4 [1.217114959s]
  I0703 13:52:15.182129 21 service_latency.go:363] Got endpoints: latency-svc-vvhr4 [1.360436721s]
  I0703 13:52:15.182170 21 service_latency.go:363] Got endpoints: latency-svc-llpv7 [1.362846259s]
  I0703 13:52:15.182178 21 service_latency.go:363] Got endpoints: latency-svc-d49gw [1.363065773s]
  I0703 13:52:15.211986 21 service_latency.go:363] Got endpoints: latency-svc-4tfq2 [1.14645027s]
  I0703 13:52:15.272811 21 service_latency.go:363] Got endpoints: latency-svc-kb4g4 [860.939735ms]
  I0703 13:52:15.274191 21 service_latency.go:363] Got endpoints: latency-svc-b8vmh [1.011309353s]
  I0703 13:52:15.274566 21 service_latency.go:363] Got endpoints: latency-svc-hz7l6 [815.339689ms]
  I0703 13:52:15.413662 21 service_latency.go:356] Created: latency-svc-529z6
  I0703 13:52:15.562705 21 service_latency.go:363] Got endpoints: latency-svc-9wck4 [1.01436311s]
  I0703 13:52:15.563472 21 service_latency.go:363] Got endpoints: latency-svc-4f48h [1.151131075s]
  I0703 13:52:15.605591 21 service_latency.go:356] Created: latency-svc-96m4b
  I0703 13:52:15.701352 21 service_latency.go:356] Created: latency-svc-ft59z
  I0703 13:52:15.701330 21 service_latency.go:356] Created: latency-svc-vv9j5
  I0703 13:52:15.805853 21 service_latency.go:363] Got endpoints: latency-svc-lcljc [1.983696442s]
  I0703 13:52:15.814248 21 service_latency.go:363] Got endpoints: latency-svc-529z6 [865.116123ms]
  I0703 13:52:15.814970 21 service_latency.go:363] Got endpoints: latency-svc-h8fn4 [1.306339694s]
  I0703 13:52:15.815083 21 service_latency.go:363] Got endpoints: latency-svc-st7xc [1.306557138s]
  I0703 13:52:15.884912 21 service_latency.go:363] Got endpoints: latency-svc-96m4b [699.847656ms]
  I0703 13:52:15.888159 21 service_latency.go:356] Created: latency-svc-n64s6
  I0703 13:52:15.937878 21 service_latency.go:363] Got endpoints: latency-svc-n64s6 [751.21039ms]
  I0703 13:52:15.938124 21 service_latency.go:363] Got endpoints: latency-svc-vv9j5 [752.161497ms]
  I0703 13:52:15.939104 21 service_latency.go:363] Got endpoints: latency-svc-ft59z [777.476556ms]
  I0703 13:52:15.971603 21 service_latency.go:356] Created: latency-svc-hg2x2
  I0703 13:52:16.145665 21 service_latency.go:363] Got endpoints: latency-svc-hg2x2 [933.623425ms]
  E0703 13:52:16.163210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:16.207183 21 service_latency.go:356] Created: latency-svc-ph92q
  I0703 13:52:16.232966 21 service_latency.go:356] Created: latency-svc-6rs7p
  I0703 13:52:16.246959 21 service_latency.go:356] Created: latency-svc-l6xdg
  I0703 13:52:16.331402 21 service_latency.go:356] Created: latency-svc-mx5z7
  I0703 13:52:16.333705 21 service_latency.go:363] Got endpoints: latency-svc-mx5z7 [1.032220225s]
  I0703 13:52:16.364257 21 service_latency.go:356] Created: latency-svc-mhnpq
  I0703 13:52:16.424976 21 service_latency.go:363] Got endpoints: latency-svc-ph92q [1.233720948s]
  I0703 13:52:16.425464 21 service_latency.go:363] Got endpoints: latency-svc-6rs7p [1.122516094s]
  I0703 13:52:16.433368 21 service_latency.go:356] Created: latency-svc-sq79x
  I0703 13:52:16.468356 21 service_latency.go:363] Got endpoints: latency-svc-l6xdg [1.166109423s]
  I0703 13:52:16.534575 21 service_latency.go:356] Created: latency-svc-65q7g
  I0703 13:52:16.551280 21 service_latency.go:363] Got endpoints: latency-svc-mhnpq [987.667456ms]
  I0703 13:52:16.551280 21 service_latency.go:363] Got endpoints: latency-svc-sq79x [988.163039ms]
  I0703 13:52:16.605241 21 service_latency.go:356] Created: latency-svc-5pv7w
  I0703 13:52:16.657965 21 service_latency.go:363] Got endpoints: latency-svc-5pv7w [842.605444ms]
  I0703 13:52:16.657956 21 service_latency.go:363] Got endpoints: latency-svc-65q7g [844.285719ms]
  I0703 13:52:16.668130 21 service_latency.go:356] Created: latency-svc-rfcfv
  I0703 13:52:16.724995 21 service_latency.go:363] Got endpoints: latency-svc-rfcfv [909.985138ms]
  I0703 13:52:16.752476 21 service_latency.go:356] Created: latency-svc-ctzb5
  I0703 13:52:16.806631 21 service_latency.go:356] Created: latency-svc-kd82z
  I0703 13:52:16.815107 21 service_latency.go:363] Got endpoints: latency-svc-ctzb5 [1.00022595s]
  I0703 13:52:16.847062 21 service_latency.go:356] Created: latency-svc-2wfk2
  I0703 13:52:16.871673 21 service_latency.go:363] Got endpoints: latency-svc-kd82z [986.70568ms]
  I0703 13:52:16.909686 21 service_latency.go:363] Got endpoints: latency-svc-2wfk2 [971.755205ms]
  I0703 13:52:16.951583 21 service_latency.go:356] Created: latency-svc-tw9lx
  I0703 13:52:16.964057 21 service_latency.go:356] Created: latency-svc-9scpc
  I0703 13:52:16.971823 21 service_latency.go:363] Got endpoints: latency-svc-tw9lx [1.032283451s]
  I0703 13:52:17.037068 21 service_latency.go:356] Created: latency-svc-fj5vd
  I0703 13:52:17.037745 21 service_latency.go:363] Got endpoints: latency-svc-9scpc [1.098934395s]
  I0703 13:52:17.093379 21 service_latency.go:363] Got endpoints: latency-svc-fj5vd [947.450859ms]
  E0703 13:52:17.163243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:17.247790 21 service_latency.go:356] Created: latency-svc-cv79d
  I0703 13:52:17.261527 21 service_latency.go:356] Created: latency-svc-kc62v
  I0703 13:52:17.298125 21 service_latency.go:356] Created: latency-svc-qspsd
  I0703 13:52:17.298141 21 service_latency.go:356] Created: latency-svc-wnw7g
  I0703 13:52:17.298543 21 service_latency.go:356] Created: latency-svc-khlf6
  I0703 13:52:17.299022 21 service_latency.go:356] Created: latency-svc-lnxmf
  I0703 13:52:17.299577 21 service_latency.go:356] Created: latency-svc-hrhjc
  I0703 13:52:17.299973 21 service_latency.go:356] Created: latency-svc-74wk9
  I0703 13:52:17.301124 21 service_latency.go:356] Created: latency-svc-v7xsx
  I0703 13:52:17.302978 21 service_latency.go:356] Created: latency-svc-jlkxm
  I0703 13:52:17.303167 21 service_latency.go:356] Created: latency-svc-gr98n
  I0703 13:52:17.303516 21 service_latency.go:356] Created: latency-svc-fkc9t
  I0703 13:52:17.303683 21 service_latency.go:356] Created: latency-svc-d5q44
  I0703 13:52:17.303851 21 service_latency.go:356] Created: latency-svc-qsf8f
  I0703 13:52:17.304216 21 service_latency.go:356] Created: latency-svc-992hm
  I0703 13:52:17.542877 21 service_latency.go:363] Got endpoints: latency-svc-cv79d [1.110233096s]
  I0703 13:52:17.542916 21 service_latency.go:363] Got endpoints: latency-svc-v7xsx [1.07451125s]
  I0703 13:52:17.558915 21 service_latency.go:363] Got endpoints: latency-svc-qspsd [1.007493823s]
  I0703 13:52:17.559479 21 service_latency.go:363] Got endpoints: latency-svc-lnxmf [1.126373905s]
  I0703 13:52:17.614751 21 service_latency.go:363] Got endpoints: latency-svc-khlf6 [1.063214897s]
  I0703 13:52:17.614990 21 service_latency.go:363] Got endpoints: latency-svc-jlkxm [1.281241694s]
  I0703 13:52:17.645254 21 service_latency.go:356] Created: latency-svc-jnl6t
  I0703 13:52:17.666971 21 service_latency.go:363] Got endpoints: latency-svc-74wk9 [1.008802622s]
  I0703 13:52:17.667585 21 service_latency.go:363] Got endpoints: latency-svc-qsf8f [1.009456463s]
  I0703 13:52:17.698354 21 service_latency.go:363] Got endpoints: latency-svc-wnw7g [883.190215ms]
  I0703 13:52:17.698398 21 service_latency.go:363] Got endpoints: latency-svc-d5q44 [973.351171ms]
  I0703 13:52:17.698420 21 service_latency.go:363] Got endpoints: latency-svc-gr98n [604.859493ms]
  I0703 13:52:17.721187 21 service_latency.go:356] Created: latency-svc-lfd5h
  I0703 13:52:17.798656 21 service_latency.go:356] Created: latency-svc-qxgdd
  I0703 13:52:17.832139 21 service_latency.go:363] Got endpoints: latency-svc-992hm [959.775577ms]
  I0703 13:52:17.832212 21 service_latency.go:363] Got endpoints: latency-svc-hrhjc [913.583655ms]
  I0703 13:52:17.885071 21 service_latency.go:363] Got endpoints: latency-svc-jnl6t [341.990532ms]
  I0703 13:52:17.906754 21 service_latency.go:363] Got endpoints: latency-svc-fkc9t [934.699553ms]
  I0703 13:52:17.906785 21 service_latency.go:363] Got endpoints: latency-svc-kc62v [868.845374ms]
  I0703 13:52:17.907011 21 service_latency.go:363] Got endpoints: latency-svc-lfd5h [363.454328ms]
  I0703 13:52:17.930528 21 service_latency.go:363] Got endpoints: latency-svc-qxgdd [371.554977ms]
  I0703 13:52:17.982780 21 service_latency.go:356] Created: latency-svc-xbvvl
  I0703 13:52:18.004341 21 service_latency.go:356] Created: latency-svc-pbpcd
  I0703 13:52:18.045789 21 service_latency.go:363] Got endpoints: latency-svc-xbvvl [486.268019ms]
  I0703 13:52:18.064510 21 service_latency.go:363] Got endpoints: latency-svc-pbpcd [449.709321ms]
  I0703 13:52:18.093046 21 service_latency.go:356] Created: latency-svc-gwjkp
  I0703 13:52:18.127411 21 service_latency.go:363] Got endpoints: latency-svc-gwjkp [512.332101ms]
  I0703 13:52:18.160685 21 service_latency.go:356] Created: latency-svc-s98wg
  E0703 13:52:18.164281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:52:18.271413 21 service_latency.go:356] Created: latency-svc-vds5x
  I0703 13:52:18.392016 21 service_latency.go:363] Got endpoints: latency-svc-s98wg [724.128153ms]
  I0703 13:52:18.441933 21 service_latency.go:363] Got endpoints: latency-svc-vds5x [774.66905ms]
  I0703 13:52:18.442104 21 service_latency.go:114] Latencies: [102.821104ms 136.08694ms 155.887592ms 304.625008ms 308.444778ms 320.814632ms 341.990532ms 352.00394ms 353.867237ms 363.454328ms 371.554977ms 396.050394ms 418.361088ms 422.345817ms 449.709321ms 463.806081ms 467.450268ms 475.960235ms 486.268019ms 510.518139ms 512.332101ms 518.721466ms 530.766898ms 550.436735ms 550.510172ms 555.035118ms 564.057138ms 570.185529ms 578.121314ms 579.626063ms 579.655626ms 579.776396ms 579.805562ms 588.878276ms 593.023001ms 604.859493ms 654.761576ms 669.87865ms 669.996604ms 677.981555ms 681.813037ms 693.168221ms 699.847656ms 707.920453ms 708.563281ms 711.057524ms 712.064722ms 712.232291ms 713.722176ms 713.832379ms 720.038714ms 720.480375ms 720.583398ms 724.128153ms 726.243938ms 727.391243ms 731.997184ms 739.925763ms 749.536494ms 749.980877ms 751.21039ms 752.161497ms 757.052418ms 774.66905ms 777.221412ms 777.476556ms 779.146112ms 790.459764ms 796.395093ms 800.573103ms 809.658679ms 815.339689ms 818.646785ms 820.40961ms 825.964387ms 833.740419ms 837.181126ms 837.296516ms 841.14991ms 842.605444ms 844.285719ms 844.701333ms 844.832524ms 846.023887ms 848.114629ms 851.432685ms 860.939735ms 865.116123ms 868.773313ms 868.845374ms 874.624727ms 879.158012ms 883.190215ms 886.323636ms 888.986202ms 903.784476ms 909.985138ms 911.519743ms 913.583655ms 920.656017ms 933.623425ms 934.699553ms 940.010952ms 947.450859ms 950.756967ms 956.013588ms 959.775577ms 960.91209ms 966.041791ms 968.650447ms 970.251817ms 971.755205ms 973.351171ms 982.976043ms 986.70568ms 987.51004ms 987.667456ms 988.163039ms 1.00022595s 1.007493823s 1.008802622s 1.009456463s 1.011309353s 1.01436311s 1.014501438s 1.021558626s 1.032220225s 1.032283451s 1.043708261s 1.05399545s 1.05413398s 1.057503067s 1.057964638s 1.063214897s 1.066004163s 1.072878189s 1.07451125s 1.076761431s 1.078404653s 1.084841028s 1.088961391s 1.098934395s 1.099031078s 1.101475527s 1.109897487s 1.110233096s 1.119951479s 1.122516094s 1.126373905s 1.139625321s 1.145431033s 1.14645027s 1.151131075s 1.160887424s 1.166109423s 1.173538742s 1.17746071s 1.194616699s 1.211225625s 1.214423893s 1.217114959s 1.233720948s 1.273137035s 1.281241694s 1.306339694s 1.306557138s 1.318584159s 1.328630652s 1.360436721s 1.362846259s 1.363065773s 1.401977951s 1.40339787s 1.420644881s 1.430369722s 1.444694238s 1.475561371s 1.487584243s 1.504049669s 1.505871963s 1.506471162s 1.521532647s 1.52620044s 1.551032902s 1.569152148s 1.570453747s 1.611114324s 1.6318324s 1.666688903s 1.681152312s 1.70479906s 1.711481188s 1.717113713s 1.723727252s 1.7415156s 1.786183526s 1.833475777s 1.849676177s 1.861936139s 1.983696442s]
  I0703 13:52:18.442121 21 service_latency.go:118] 50 %ile: 933.623425ms
  I0703 13:52:18.442134 21 service_latency.go:119] 90 %ile: 1.506471162s
  I0703 13:52:18.442145 21 service_latency.go:120] 99 %ile: 1.861936139s
  I0703 13:52:18.442156 21 service_latency.go:121] Total sample count: 200
  I0703 13:52:18.442235 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svc-latency-3822" for this suite. @ 07/03/24 13:52:18.479
• [16.653 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Single Pod [Serial] removing taint cancels eviction [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:290
  STEP: Creating a kubernetes client @ 07/03/24 13:52:18.491
  I0703 13:52:18.491181 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename taint-single-pod @ 07/03/24 13:52:18.493
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:52:18.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:52:18.777
  I0703 13:52:18.784358 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0703 13:52:19.165088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:20.166445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:21.165710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:22.168188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:23.171062      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:24.171689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:25.174532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:26.175559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:27.180034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:28.178597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:29.179568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:30.190377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:31.182933      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:32.183454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:33.198095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:34.191052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:35.191475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:36.192161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:37.194197      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:38.194643      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:39.197724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:40.197824      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:41.198299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:42.198779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:43.199313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:44.201166      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:45.202411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:46.202903      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:47.203746      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:48.206500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:49.206869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:50.207605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:51.208335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:52.208496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:53.210431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:54.211411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:55.212289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:56.212654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:57.216421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:58.217191      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:52:59.218022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:00.222210      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:01.222711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:02.223420      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:03.227045      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:04.227613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:05.228505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:06.229024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:07.230591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:08.230859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:09.232522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:10.232725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:11.233525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:12.233688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:13.234568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:14.235521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:15.236560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:16.236766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:17.237802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:18.240199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:53:18.785024 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0703 13:53:18.790602 21 taints.go:150] Starting informer...
  STEP: Starting pod... @ 07/03/24 13:53:18.79
  I0703 13:53:19.018323 21 taints.go:300] Pod is running on ip-172-31-5-183. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/03/24 13:53:19.018
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/03/24 13:53:19.035
  STEP: Waiting short time to make sure Pod is queued for deletion @ 07/03/24 13:53:19.042
  I0703 13:53:19.042648 21 taints.go:319] Pod wasn't evicted. Proceeding
  I0703 13:53:19.042749 21 taints.go:326] Removing taint from Node
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/03/24 13:53:19.128
  STEP: Waiting some time to make sure that toleration time passed. @ 07/03/24 13:53:19.152
  E0703 13:53:19.247918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:20.241642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:21.242725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:22.242894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:23.246498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:24.246515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:25.250823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:26.250576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:27.252200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:28.251686      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:29.267542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:30.267622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:31.268213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:32.269348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:33.270339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:34.270699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:35.271421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:36.273458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:37.274095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:38.274175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:39.274429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:40.278460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:41.280249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:42.285827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:43.286517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:44.287645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:45.287860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:46.288203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:47.288335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:48.288441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:49.289334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:50.289669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:51.290114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:52.290752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:53.291486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:54.291610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:55.293701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:56.294032      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:57.294088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:58.294202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:53:59.294461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:00.294615      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:01.294716      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:02.295188      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:03.295291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:04.295410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:05.295908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:06.295985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:07.296852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:08.298463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:09.298559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:10.299910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:11.300384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:12.300422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:13.302453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:14.306821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:15.307855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:16.310460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:17.311328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:18.311892      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:19.312034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:20.318035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:21.318949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:22.320463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:23.320622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:24.322483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:25.322827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:26.322986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:27.327071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:28.330068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:29.330370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:30.330482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:31.334517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:32.332122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:33.332249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:54:34.153614 21 taints.go:335] Pod wasn't evicted. Test successful
  I0703 13:54:34.158090 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-single-pod-4813" for this suite. @ 07/03/24 13:54:34.192
• [135.735 seconds]
------------------------------
SSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Update Demo should create and stop a replication controller [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:342
  STEP: Creating a kubernetes client @ 07/03/24 13:54:34.226
  I0703 13:54:34.226902 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 13:54:34.227
  E0703 13:54:34.334681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:54:34.38
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:54:34.41
  STEP: creating a replication controller @ 07/03/24 13:54:34.417
  I0703 13:54:34.417338 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 create -f -'
  I0703 13:54:34.724553 21 builder.go:146] stderr: ""
  I0703 13:54:34.724612 21 builder.go:147] stdout: "replicationcontroller/update-demo-nautilus created\n"
  STEP: waiting for all containers in name=update-demo pods to come up. @ 07/03/24 13:54:34.724
  I0703 13:54:34.724699 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  I0703 13:54:35.050991 21 builder.go:146] stderr: ""
  I0703 13:54:35.051041 21 builder.go:147] stdout: "update-demo-nautilus-58vpt update-demo-nautilus-fmxz4 "
  I0703 13:54:35.051097 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods update-demo-nautilus-58vpt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:54:35.192263 21 builder.go:146] stderr: ""
  I0703 13:54:35.192310 21 builder.go:147] stdout: ""
  I0703 13:54:35.192326 21 kubectl.go:2501] update-demo-nautilus-58vpt is created but not running
  E0703 13:54:35.334678      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:36.337532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:37.338037      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:38.339450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:39.340143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:54:40.192851 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods -o template --template={{range.items}}{{.metadata.name}} {{end}} -l name=update-demo'
  E0703 13:54:40.340392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:54:40.534331 21 builder.go:146] stderr: ""
  I0703 13:54:40.534377 21 builder.go:147] stdout: "update-demo-nautilus-58vpt update-demo-nautilus-fmxz4 "
  I0703 13:54:40.534439 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods update-demo-nautilus-58vpt -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:54:40.792534 21 builder.go:146] stderr: ""
  I0703 13:54:40.792577 21 builder.go:147] stdout: "true"
  I0703 13:54:40.792633 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods update-demo-nautilus-58vpt -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  I0703 13:54:40.980760 21 builder.go:146] stderr: ""
  I0703 13:54:40.980811 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:54:40.980829 21 kubectl.go:2392] validating pod update-demo-nautilus-58vpt
  I0703 13:54:40.985274 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:54:40.985352 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:54:40.985371 21 kubectl.go:2519] update-demo-nautilus-58vpt is verified up and running
  I0703 13:54:40.985422 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods update-demo-nautilus-fmxz4 -o template --template={{if (exists . "status" "containerStatuses")}}{{range .status.containerStatuses}}{{if (and (eq .name "update-demo") (exists . "state" "running"))}}true{{end}}{{end}}{{end}}'
  I0703 13:54:41.222474 21 builder.go:146] stderr: ""
  I0703 13:54:41.222540 21 builder.go:147] stdout: "true"
  I0703 13:54:41.222601 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods update-demo-nautilus-fmxz4 -o template --template={{if (exists . "spec" "containers")}}{{range .spec.containers}}{{if eq .name "update-demo"}}{{.image}}{{end}}{{end}}{{end}}'
  E0703 13:54:41.341757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:54:41.534717 21 builder.go:146] stderr: ""
  I0703 13:54:41.534767 21 builder.go:147] stdout: "registry.k8s.io/e2e-test-images/nautilus:1.7"
  I0703 13:54:41.534782 21 kubectl.go:2392] validating pod update-demo-nautilus-fmxz4
  I0703 13:54:41.547289 21 kubectl.go:2412] got data: {
    "image": "nautilus.jpg"
  }

  I0703 13:54:41.547359 21 kubectl.go:2417] Unmarshalled json jpg/img => {nautilus.jpg} , expecting nautilus.jpg .
  I0703 13:54:41.547376 21 kubectl.go:2519] update-demo-nautilus-fmxz4 is verified up and running
  STEP: using delete to clean up resources @ 07/03/24 13:54:41.552
  I0703 13:54:41.552945 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 delete --grace-period=0 --force -f -'
  I0703 13:54:41.831882 21 builder.go:146] stderr: "Warning: Immediate deletion does not wait for confirmation that the running resource has been terminated. The resource may continue to run on the cluster indefinitely.\n"
  I0703 13:54:41.831933 21 builder.go:147] stdout: "replicationcontroller \"update-demo-nautilus\" force deleted\n"
  I0703 13:54:41.831989 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get rc,svc -l name=update-demo --no-headers'
  I0703 13:54:42.009776 21 builder.go:146] stderr: "No resources found in kubectl-6484 namespace.\n"
  I0703 13:54:42.009833 21 builder.go:147] stdout: ""
  I0703 13:54:42.009910 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-6484 get pods -l name=update-demo -o go-template={{ range .items }}{{ if not .metadata.deletionTimestamp }}{{ .metadata.name }}{{ "\n" }}{{ end }}{{ end }}'
  I0703 13:54:42.227889 21 builder.go:146] stderr: ""
  I0703 13:54:42.227942 21 builder.go:147] stdout: ""
  I0703 13:54:42.228059 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-6484" for this suite. @ 07/03/24 13:54:42.232
• [8.039 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] PodTemplates should run the lifecycle of PodTemplates [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/podtemplates.go:54
  STEP: Creating a kubernetes client @ 07/03/24 13:54:42.282
  I0703 13:54:42.282613 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename podtemplate @ 07/03/24 13:54:42.283
  E0703 13:54:42.342124      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:54:42.397
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:54:42.434
  I0703 13:54:42.661875 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "podtemplate-25" for this suite. @ 07/03/24 13:54:42.688
• [0.418 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with downward pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:91
  STEP: Creating a kubernetes client @ 07/03/24 13:54:42.702
  I0703 13:54:42.702237 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename subpath @ 07/03/24 13:54:42.703
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:54:42.757
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:54:42.81
  STEP: Setting up data @ 07/03/24 13:54:42.851
  STEP: Creating pod pod-subpath-test-downwardapi-pccd @ 07/03/24 13:54:42.916
  STEP: Creating a pod to test atomic-volume-subpath @ 07/03/24 13:54:42.916
  E0703 13:54:43.342377      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:44.342675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:45.342985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:46.346759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:47.348561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:48.349337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:49.354004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:50.350445      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:51.354416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:52.354088      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:53.357079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:54.357922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:55.365007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:56.360278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:57.361141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:58.361509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:54:59.361769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:00.361835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:01.362516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:02.370446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:03.372455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:04.373026      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:05.373247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:06.373412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 13:55:07.081
  I0703 13:55:07.084986 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-subpath-test-downwardapi-pccd container test-container-subpath-downwardapi-pccd: <nil>
  STEP: delete the pod @ 07/03/24 13:55:07.131
  STEP: Deleting pod pod-subpath-test-downwardapi-pccd @ 07/03/24 13:55:07.159
  I0703 13:55:07.159935 21 delete.go:62] Deleting pod "pod-subpath-test-downwardapi-pccd" in namespace "subpath-9700"
  I0703 13:55:07.164774 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-9700" for this suite. @ 07/03/24 13:55:07.171
• [24.480 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should apply changes to a resourcequota status [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:1015
  STEP: Creating a kubernetes client @ 07/03/24 13:55:07.182
  I0703 13:55:07.182106 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 13:55:07.182
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:55:07.26
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:55:07.286
  STEP: Creating resourceQuota "e2e-rq-status-fmzvd" @ 07/03/24 13:55:07.323
  E0703 13:55:07.373750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:07.389776 21 resource_quota.go:1051] Resource quota "e2e-rq-status-fmzvd" reports spec: hard cpu limit of 500m
  I0703 13:55:07.390634 21 resource_quota.go:1053] Resource quota "e2e-rq-status-fmzvd" reports spec: hard memory limit of 500Mi
  STEP: Updating resourceQuota "e2e-rq-status-fmzvd" /status @ 07/03/24 13:55:07.39
  STEP: Confirm /status for "e2e-rq-status-fmzvd" resourceQuota via watch @ 07/03/24 13:55:07.434
  I0703 13:55:07.443201 21 resource_quota.go:1080] observed resourceQuota "e2e-rq-status-fmzvd" in namespace "resourcequota-6571" with hard status: v1.ResourceList(nil)
  I0703 13:55:07.443424 21 resource_quota.go:1083] Found resourceQuota "e2e-rq-status-fmzvd" in namespace "resourcequota-6571" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0703 13:55:07.443471 21 resource_quota.go:1090] ResourceQuota "e2e-rq-status-fmzvd" /status was updated
  STEP: Patching hard spec values for cpu & memory @ 07/03/24 13:55:07.446
  I0703 13:55:07.457279 21 resource_quota.go:1101] Resource quota "e2e-rq-status-fmzvd" reports spec: hard cpu limit of 1
  I0703 13:55:07.457465 21 resource_quota.go:1102] Resource quota "e2e-rq-status-fmzvd" reports spec: hard memory limit of 1Gi
  STEP: Patching "e2e-rq-status-fmzvd" /status @ 07/03/24 13:55:07.457
  STEP: Confirm /status for "e2e-rq-status-fmzvd" resourceQuota via watch @ 07/03/24 13:55:07.475
  I0703 13:55:07.478063 21 resource_quota.go:1124] observed resourceQuota "e2e-rq-status-fmzvd" in namespace "resourcequota-6571" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:500, scale:-3}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500m", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:524288000, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"500Mi", Format:"BinarySI"}}
  I0703 13:55:07.478126 21 resource_quota.go:1127] Found resourceQuota "e2e-rq-status-fmzvd" in namespace "resourcequota-6571" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}
  I0703 13:55:07.478142 21 resource_quota.go:1134] ResourceQuota "e2e-rq-status-fmzvd" /status was patched
  STEP: Get "e2e-rq-status-fmzvd" /status @ 07/03/24 13:55:07.478
  I0703 13:55:07.490811 21 resource_quota.go:1145] Resourcequota "e2e-rq-status-fmzvd" reports status: hard cpu of 1
  I0703 13:55:07.490854 21 resource_quota.go:1147] Resourcequota "e2e-rq-status-fmzvd" reports status: hard memory of 1Gi
  STEP: Repatching "e2e-rq-status-fmzvd" /status before checking Spec is unchanged @ 07/03/24 13:55:07.493
  I0703 13:55:07.499810 21 resource_quota.go:1167] Resourcequota "e2e-rq-status-fmzvd" reports status: hard cpu of 2
  I0703 13:55:07.499856 21 resource_quota.go:1169] Resourcequota "e2e-rq-status-fmzvd" reports status: hard memory of 2Gi
  I0703 13:55:07.505307 21 resource_quota.go:1181] Found resourceQuota "e2e-rq-status-fmzvd" in namespace "resourcequota-6571" with hard status: v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}
  I0703 13:55:07.509615 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0078), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca00d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:08.389323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:09.390021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:10.390199      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:11.393334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:12.393876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:12.526713 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0390), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca03d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0450), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:13.394515      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:14.398576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:15.398935      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:16.399910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:17.400614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:17.513930 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053969d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396a08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396a38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:18.400797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:19.402656      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:20.405443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:21.408416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:22.407023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:22.510048 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396be8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396c18), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396c60), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:23.407584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:24.407717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:25.407932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:26.409227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:27.409780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:27.510718 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0840), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0888), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0918), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:28.409990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:29.412382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:30.412866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:31.413970      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:32.414927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:32.511752 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396e10), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396e40), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396e70), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:33.416865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:34.417118      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:35.418269      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:36.418789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:37.420779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:37.515681 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396fd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397020), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397050), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:38.425123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:39.425323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:40.426442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:41.446530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:42.447305      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:42.509833 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053971d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397218), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397248), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:43.448051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:44.448487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:45.451035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:46.451096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:47.451151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:47.518194 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0d68), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0dc8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca0df8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:48.451592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:49.454067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:50.454444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:51.454685      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:52.455010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:52.522587 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1068), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca10b0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1110), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:53.457407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:54.457823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:55.458423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:56.458787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:57.459532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:55:57.514756 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053974b8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053974e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397518), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:55:58.461489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:55:59.461945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:00.462061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:01.465834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:02.465982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:02.513847 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053976c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397710), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397740), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:03.466060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:04.474437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:05.467081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:06.470573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:07.470504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:07.528751 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397998), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053979c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397a10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:08.470599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:09.470725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:10.471403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:11.474489      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:12.475084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:12.513479 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca14a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca14e8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1530), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:13.475201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:14.475411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:15.475531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:16.475715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:17.475813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:17.513491 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1848), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1890), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca18f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:18.476469      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:19.476683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:20.477713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:21.490839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:22.492298      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:22.511453 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1b60), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1bf0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1c38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:23.492653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:24.493127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:25.496048      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:26.498557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:27.507034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:27.533295 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1e48), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1ea8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc004ca1ed8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:28.507548      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:29.508384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:30.509356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:31.508942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:32.509810      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:32.509914 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f60f0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6120), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6150), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:33.510465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:34.510629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:35.511141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:36.514498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:37.514945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:37.518064 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396120), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396150), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396180), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:38.515528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:39.515793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:40.516183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:41.517042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:42.509890 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f63a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f63d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:42.517302      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:43.517761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:44.520249      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:45.520506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:46.521430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:47.517964 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6558), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f65b8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6600), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:47.521675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:48.522046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:49.521994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:50.532228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:51.530388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:52.531813      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:52.537858 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f67c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f67f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6828), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:53.531946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:54.532141      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:55.532776      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:56.533177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:56:57.510831 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f69a8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f69d8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:56:57.534101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:58.534317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:56:59.534500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:00.534574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:01.534737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:02.534881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:02.535269 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6bd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6c00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6c30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:03.541361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:04.541574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:05.542543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:06.546704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:07.511182 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6db0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6de0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6e10), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:07.543304      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:08.543774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:09.543840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:10.546456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:11.547571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:12.514893 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6fa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:12.547794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:13.548019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:14.548251      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:15.549175      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:16.549215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:17.510272 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f71d0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7200), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7230), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:17.549916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:18.550339      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:19.550499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:20.550586      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:21.550692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:22.530532 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f73b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f73e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7410), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:22.550772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:23.551536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:24.551724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:25.551864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:26.556098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:27.511277 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053966c0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053966f0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396720), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:27.560021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:28.560354      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:29.560542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:30.560726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:31.562428      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:32.512292 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053969c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053969f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:32.563421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:33.566900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:34.566432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:35.569809      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:36.574057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:37.509062 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7650), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7680), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f76b0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:37.574511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:38.574622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:39.575336      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:40.575318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:41.577537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:42.509889 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396c00), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396c30), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396c78), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:42.578256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:43.578680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:44.579638      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:45.579856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:46.580330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:47.509871 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396df8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396e28), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396e58), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:47.582705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:48.583541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:49.585481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:50.585658      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:51.587117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:52.538671 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396fa8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396fd8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397020), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:52.587518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:53.587839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:54.587865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:55.587925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:56.588055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:57:57.509562 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053971a0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053971d0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397218), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:57:57.589041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:58.594262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:57:59.594431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:00.597224      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:01.597338      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:02.527948 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f79c8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f79f8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7a28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:02.597858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:03.598016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:04.598535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:05.598982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:06.599537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:07.532345 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397428), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397458), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053974a0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:07.599806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:08.599931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:09.600351      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:10.601396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:11.601606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:12.512459 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7bd8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7c08), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7c38), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:12.606568      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:13.606641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:14.608366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:15.609036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:16.612700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:17.524147 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397680), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053976c8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397710), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:17.610591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:18.610726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:19.610871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:20.610956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:21.613519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:22.514726 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7dd0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7e00), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f7e30), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:22.612014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:23.612007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:24.615079      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:25.615128      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:26.616546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:27.510366 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053979b0), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053979e0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397a28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:27.617510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:28.624460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:29.618467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:30.618620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:31.618683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:32.509160 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053960a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053960d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396108), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:32.619382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:33.619464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:34.623358      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:35.623412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:36.623703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:37.514584 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f60d8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6108), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6138), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:37.623996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:38.625337      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:39.624523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:40.626063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:41.626332      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:42.509440 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396330), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396378), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053963a8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:42.626750      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:43.627565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:44.627671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:45.627956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:46.629705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:47.509676 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f63a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f63d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6408), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:47.630204      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:48.630345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:49.630446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:50.633253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:51.633439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:52.543847 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6540), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6570), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f65b8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:52.633857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:53.634580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:54.634663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:55.635014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:56.635664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:58:57.509524 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6768), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6798), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f67c8), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:58:57.638726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:58.638848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:58:59.639651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:00.639772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:01.639883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:02.515193 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053966a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053966d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396708), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:02.640635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:03.642414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:04.643800      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:05.644530      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:06.645571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:07.515139 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f69a8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f69d8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6a20), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:07.650883      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:08.650905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:09.654398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:10.654440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:11.655429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:12.511057 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396978), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053969c0), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053969f0), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:12.655553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:13.657096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:14.657430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:15.657924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:16.658871      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:17.520911 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396bb8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396be8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396c18), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:17.659122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:18.659201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:19.659345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:20.660195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:21.660279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:22.519089 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396dc8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396df8), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005396e28), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:22.662476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:23.663533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:24.664096      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:25.664629      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:26.665834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:27.509389 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6d08), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6d38), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0052f6d80), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:27.666844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:28.667243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:29.667491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:30.667701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:31.667936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:32.511943 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397008), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397038), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397068), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:32.669383      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:33.669595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:34.670464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:35.671531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:36.672075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:37.510085 21 resource_quota.go:1212] ResourceQuota "e2e-rq-status-fmzvd" Spec and Status does not match: &v1.ResourceQuota{TypeMeta:v1.TypeMeta{Kind:"", APIVersion:""}, ObjectMeta:v1.ObjectMeta{Name:"e2e-rq-status-fmzvd", GenerateName:"", Namespace:"resourcequota-6571", SelfLink:"", UID:"a883fa42-7aec-46eb-ac14-951cd4937332", ResourceVersion:"38370", Generation:0, CreationTimestamp:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), DeletionTimestamp:<nil>, DeletionGracePeriodSeconds:(*int64)(nil), Labels:map[string]string{"e2e-rq-label":"e2e-rq-status-fmzvd"}, Annotations:map[string]string(nil), OwnerReferences:[]v1.OwnerReference(nil), Finalizers:[]string(nil), ManagedFields:[]v1.ManagedFieldsEntry{v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc0053971e8), Subresource:""}, v1.ManagedFieldsEntry{Manager:"e2e.test", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397230), Subresource:"status"}, v1.ManagedFieldsEntry{Manager:"kube-controller-manager", Operation:"Update", APIVersion:"v1", Time:time.Date(2024, time.July, 3, 13, 55, 7, 0, time.Local), FieldsType:"FieldsV1", FieldsV1:(*v1.FieldsV1)(0xc005397278), Subresource:"status"}}}, Spec:v1.ResourceQuotaSpec{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:1, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:1073741824, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"1Gi", Format:"BinarySI"}}, Scopes:[]v1.ResourceQuotaScope(nil), ScopeSelector:(*v1.ScopeSelector)(nil)}, Status:v1.ResourceQuotaStatus{Hard:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:2, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:2147483648, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"2Gi", Format:"BinarySI"}}, Used:v1.ResourceList{"cpu":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}, "memory":resource.Quantity{i:resource.int64Amount{value:0, scale:0}, d:resource.infDecAmount{Dec:(*inf.Dec)(nil)}, s:"0", Format:"DecimalSI"}}}}
  E0703 13:59:37.672169      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:38.672440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:39.672522      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:40.672668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:41.673202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:42.530690 21 resource_quota.go:1209] ResourceQuota "e2e-rq-status-fmzvd" Spec was unchanged and /status reset
  I0703 13:59:42.530969 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6571" for this suite. @ 07/03/24 13:59:42.587
• [275.440 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] Pods should allow activeDeadlineSeconds to be updated [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:399
  STEP: Creating a kubernetes client @ 07/03/24 13:59:42.623
  I0703 13:59:42.623032 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 13:59:42.624
  E0703 13:59:42.675069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:59:42.758
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:59:42.781
  STEP: creating the pod @ 07/03/24 13:59:42.788
  STEP: submitting the pod to kubernetes @ 07/03/24 13:59:42.788
  W0703 13:59:42.826459      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  E0703 13:59:43.673781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:44.675063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:45.675507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:46.675802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: verifying the pod is in kubernetes @ 07/03/24 13:59:46.934
  STEP: updating the pod @ 07/03/24 13:59:46.946
  I0703 13:59:47.514716 21 pod_client.go:141] Successfully updated pod "pod-update-activedeadlineseconds-1dead927-065c-4598-9f00-ea367c35e7f8"
  E0703 13:59:47.676889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:48.677285      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:49.570878 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-5142" for this suite. @ 07/03/24 13:59:49.586
• [6.983 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should have session affinity work for service with type clusterIP [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2181
  STEP: Creating a kubernetes client @ 07/03/24 13:59:49.609
  I0703 13:59:49.609446 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 13:59:49.614
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 13:59:49.674
  E0703 13:59:49.677953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 13:59:49.692
  STEP: creating service in namespace services-3614 @ 07/03/24 13:59:49.699
  STEP: creating service affinity-clusterip in namespace services-3614 @ 07/03/24 13:59:49.7
  STEP: creating replication controller affinity-clusterip in namespace services-3614 @ 07/03/24 13:59:49.752
  I0703 13:59:49.800591      21 runners.go:198] Created replication controller with name: affinity-clusterip, namespace: services-3614, replica count: 3
  E0703 13:59:50.678434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:51.679644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:52.679748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:52.852662      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:59:53.683423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:54.683602      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:55.683870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:55.853242      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:59:56.684200      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:57.688938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 13:59:58.688486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 13:59:58.853984      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 13:59:59.689091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:00.689173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:01.692783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:01.856347      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:02.693666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:03.693795      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:04.695222      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:04.856641      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:05.696856      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:06.702500      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:07.703243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:07.857662      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:08.703948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:09.704012      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:10.704104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:10.858241      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:11.705322      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:12.705814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:13.709782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:13.861206      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:14.710521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:15.710617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:16.710722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:16.873250      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:17.714676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:18.714831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:19.717442      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:19.876440      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:20.720109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:21.720232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:22.720713      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:22.877404      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:23.720792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:24.723972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:25.724056      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:25.878545      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:26.727203      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:27.728020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:28.727766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:28.882390      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:29.727848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:30.728745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:31.728854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:31.882567      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:32.738640      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:33.729771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:34.730476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:34.885723      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:00:35.730879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:36.731948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:37.732035      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:37.886269      21 runners.go:198] affinity-clusterip Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 14:00:37.893609 21 resource.go:361] Creating new exec pod
  E0703 14:00:38.737972      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:39.732819      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:40.733092      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:41.733087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:42.734444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:43.010390 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3614 exec execpod-affinityqmvps -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-clusterip 80'
  I0703 14:00:43.430390 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-clusterip 80\n+ echo hostName\nConnection to affinity-clusterip 80 port [tcp/http] succeeded!\n"
  I0703 14:00:43.430448 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:00:43.430535 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3614 exec execpod-affinityqmvps -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.47.136 80'
  E0703 14:00:43.736893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:43.868721 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.47.136 80\nConnection to 10.43.47.136 80 port [tcp/http] succeeded!\n"
  I0703 14:00:43.868774 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:00:43.868850 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3614 exec execpod-affinityqmvps -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://10.43.47.136:80/ ; done'
  I0703 14:00:44.417832 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n+ echo\n+ curl -q -s --connect-timeout 2 http://10.43.47.136:80/\n"
  I0703 14:00:44.417897 21 builder.go:147] stdout: "\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r\naffinity-clusterip-sxx7r"
  I0703 14:00:44.417917 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.417931 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.417943 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.417953 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.417965 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.417977 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.417992 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.418006 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.418020 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.419671 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.419703 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.419780 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.419857 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.419876 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.419944 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.419957 21 service.go:242] Received response from host: affinity-clusterip-sxx7r
  I0703 14:00:44.420243 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-clusterip in namespace services-3614, will wait for the garbage collector to delete the pods @ 07/03/24 14:00:44.471
  I0703 14:00:44.544201 21 resources.go:139] Deleting ReplicationController affinity-clusterip took: 7.340562ms
  I0703 14:00:44.644776 21 resources.go:163] Terminating ReplicationController affinity-clusterip pods took: 100.573232ms
  E0703 14:00:44.737382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:45.738370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:46.739806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:47.744682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:48.369523 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-3614" for this suite. @ 07/03/24 14:00:48.39
• [58.802 seconds]
------------------------------
[sig-storage] Projected downwardAPI should provide node allocatable (memory) as default memory limit if the limit is not set [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:263
  STEP: Creating a kubernetes client @ 07/03/24 14:00:48.411
  I0703 14:00:48.411302 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:00:48.412
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:00:48.553
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:00:48.576
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 14:00:48.592
  E0703 14:00:48.745227      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:49.745403      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:50.746448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:51.747095      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:00:52.713
  I0703 14:00:52.727230 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-c00f2f28-82f2-4ae4-9f30-444e4e4e5504 container client-container: <nil>
  E0703 14:00:52.747872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/03/24 14:00:52.804
  I0703 14:00:52.827702 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6916" for this suite. @ 07/03/24 14:00:52.837
• [4.457 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Pods should support remote command execution over websockets [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:537
  STEP: Creating a kubernetes client @ 07/03/24 14:00:52.871
  I0703 14:00:52.871237 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 14:00:52.872
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:00:52.954
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:00:52.998
  I0703 14:00:53.014031 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: creating the pod @ 07/03/24 14:00:53.015
  STEP: submitting the pod to kubernetes @ 07/03/24 14:00:53.015
  E0703 14:00:53.748058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:54.748575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:55.281393 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "pods-193" for this suite. @ 07/03/24 14:00:55.286
• [2.426 seconds]
------------------------------
SSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should reject mutating webhook configurations with invalid match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:841
  STEP: Creating a kubernetes client @ 07/03/24 14:00:55.296
  I0703 14:00:55.296965 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 14:00:55.297
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:00:55.382
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:00:55.399
  STEP: Setting up server cert @ 07/03/24 14:00:55.531
  E0703 14:00:55.749294      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 14:00:56.079
  STEP: Deploying the webhook pod @ 07/03/24 14:00:56.166
  STEP: Wait for the deployment to be ready @ 07/03/24 14:00:56.316
  I0703 14:00:56.348927 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0703 14:00:56.758398      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:57.751219      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:00:58.407846 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:00:58.753424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:00:59.753259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:01:00.418596 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:01:00.754063      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:01.757363      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:01:02.606972 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 0, 56, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:01:02.758404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:03.758463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 14:01:04.412
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 14:01:04.439
  E0703 14:01:04.759384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:01:05.440535 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/03/24 14:01:05.459
  I0703 14:01:05.666329 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-8040" for this suite. @ 07/03/24 14:01:05.747
  E0703 14:01:05.759498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-5971" for this suite. @ 07/03/24 14:01:05.894
• [10.729 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:195
  STEP: Creating a kubernetes client @ 07/03/24 14:01:06.026
  I0703 14:01:06.026623 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:01:06.027
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:01:06.131
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:01:06.145
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 14:01:06.162
  E0703 14:01:06.759571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:07.762144      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:08.762327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:09.762491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:01:10.343
  I0703 14:01:10.346486 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-2b999d85-cd44-4b13-8e9a-8f33195c3d4f container client-container: <nil>
  STEP: delete the pod @ 07/03/24 14:01:10.364
  I0703 14:01:10.412523 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-783" for this suite. @ 07/03/24 14:01:10.421
• [4.430 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not conflict [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:67
  STEP: Creating a kubernetes client @ 07/03/24 14:01:10.458
  I0703 14:01:10.458449 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/03/24 14:01:10.459
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:01:10.672
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:01:10.727
  E0703 14:01:10.768789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:11.769343      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:12.770514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:13.772794      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:14.772833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the secret @ 07/03/24 14:01:14.999
  STEP: Cleaning up the configmap @ 07/03/24 14:01:15.011
  STEP: Cleaning up the pod @ 07/03/24 14:01:15.019
  I0703 14:01:15.063305 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9943" for this suite. @ 07/03/24 14:01:15.068
• [4.626 seconds]
------------------------------
[sig-storage] EmptyDir volumes should support (non-root,0777,tmpfs) [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/empty_dir.go:150
  STEP: Creating a kubernetes client @ 07/03/24 14:01:15.085
  I0703 14:01:15.085419 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir @ 07/03/24 14:01:15.086
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:01:15.188
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:01:15.196
  STEP: Creating a pod to test emptydir 0777 on tmpfs @ 07/03/24 14:01:15.204
  E0703 14:01:15.774444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:16.775119      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:17.775957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:18.776184      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:01:19.268
  I0703 14:01:19.271064 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-641c19db-a192-4f86-b867-65aa3c6a196a container test-container: <nil>
  STEP: delete the pod @ 07/03/24 14:01:19.286
  I0703 14:01:19.317790 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-5563" for this suite. @ 07/03/24 14:01:19.325
• [4.254 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume as non-root [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:75
  STEP: Creating a kubernetes client @ 07/03/24 14:01:19.369
  I0703 14:01:19.369525 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 14:01:19.37
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:01:19.491
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:01:19.526
  STEP: Creating configMap with name configmap-test-volume-221847e4-9dde-4d17-97de-f443348ad558 @ 07/03/24 14:01:19.564
  STEP: Creating a pod to test consume configMaps @ 07/03/24 14:01:19.582
  E0703 14:01:19.776717      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:20.777763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:21.778236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:22.779060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:01:23.676
  I0703 14:01:23.680772 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-dbbe6cb8-73bf-453b-b0b1-e0bba7556e99 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 14:01:23.702
  I0703 14:01:23.732327 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-8834" for this suite. @ 07/03/24 14:01:23.743
• [4.392 seconds]
------------------------------
SSSSS
------------------------------
[sig-storage] Downward API volume should provide container's cpu limit [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:195
  STEP: Creating a kubernetes client @ 07/03/24 14:01:23.767
  I0703 14:01:23.767327 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 14:01:23.779
  E0703 14:01:23.782233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:01:23.951
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:01:23.977
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 14:01:23.985
  E0703 14:01:24.785013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:25.788567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:26.789156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:27.790133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:28.790503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:29.790592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:01:30.125
  I0703 14:01:30.141958 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-5e154de4-b998-4d34-a3e3-ff006de7342e container client-container: <nil>
  STEP: delete the pod @ 07/03/24 14:01:30.179
  I0703 14:01:30.250786 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8008" for this suite. @ 07/03/24 14:01:30.261
• [6.532 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-node] NoExecuteTaintManager Multiple Pods [Serial] evicts pods with minTolerationSeconds [Disruptive] [Conformance] [sig-node, Serial, Disruptive, Conformance]
k8s.io/kubernetes/test/e2e/node/taints.go:450
  STEP: Creating a kubernetes client @ 07/03/24 14:01:30.307
  I0703 14:01:30.307563 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename taint-multiple-pods @ 07/03/24 14:01:30.309
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:01:30.448
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:01:30.47
  I0703 14:01:30.505429 21 wait.go:50] Waiting up to 1m0s for all nodes to be ready
  E0703 14:01:30.792030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:31.792953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:32.795157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:33.794454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:34.796627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:35.797256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:36.797362      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:37.798366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:38.799244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:39.800745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:40.800768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:41.800967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:42.805531      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:43.803556      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:44.804968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:45.809782      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:46.813603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:47.805273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:48.808174      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:49.806529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:50.813936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:51.815098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:52.815264      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:53.815374      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:54.815571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:55.815698      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:56.815905      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:57.815986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:58.819075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:01:59.820529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:00.821016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:01.821232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:02.826887      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:03.830084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:04.830781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:05.831023      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:06.830910      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:07.833100      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:08.833608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:09.834477      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:10.835157      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:11.837796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:12.838117      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:13.846453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:14.846761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:15.855323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:16.855529      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:17.856182      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:18.857135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:19.858113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:20.861613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:21.862532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:22.863523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:23.863804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:24.864566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:25.866478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:26.867886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:27.868555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:28.869562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:29.869622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:02:30.506706 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0703 14:02:30.537287 21 taints.go:150] Starting informer...
  STEP: Starting pods... @ 07/03/24 14:02:30.537
  I0703 14:02:30.812899 21 taints.go:469] Pod1 is running on ip-172-31-5-183. Tainting Node
  E0703 14:02:30.869815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:31.869860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:32.870454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:33.871544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:34.871778      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:02:35.050462 21 taints.go:477] Pod2 is running on ip-172-31-5-183. Tainting Node
  STEP: Trying to apply a taint on the Node @ 07/03/24 14:02:35.05
  STEP: verifying the node has the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/03/24 14:02:35.121
  STEP: Waiting for Pod1 and Pod2 to be deleted @ 07/03/24 14:02:35.139
  E0703 14:02:35.872313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:36.872460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:37.872473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:38.872818      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:39.873984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:40.875886      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:41.874446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:02:42.127433 21 taints.go:498] Noticed Pod "taint-eviction-b1" gets evicted.
  E0703 14:02:42.875253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:43.875641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:44.875866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:45.877176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:46.877018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:47.877836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:48.878921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:49.878944      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:50.878994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:51.880764      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:52.881291      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:53.881545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:54.881898      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:55.882357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:56.882458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:57.882617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:58.884802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:02:59.885714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:00.887655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:03:01.626489 21 taints.go:498] Noticed Pod "taint-eviction-b2" gets evicted.
  STEP: verifying the node doesn't have the taint kubernetes.io/e2e-evict-taint-key=evictTaintVal:NoExecute @ 07/03/24 14:03:01.69
  I0703 14:03:01.707712 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "taint-multiple-pods-5551" for this suite. @ 07/03/24 14:03:01.717
• [91.455 seconds]
------------------------------
SSSSSS
------------------------------
[sig-network] DNS should provide /etc/hosts entries for the cluster [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:117
  STEP: Creating a kubernetes client @ 07/03/24 14:03:01.772
  I0703 14:03:01.772802 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 14:03:01.778
  E0703 14:03:01.889247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:03:02.671
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:03:02.682
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4235.svc.cluster.local)" && echo OK > /results/wheezy_hosts@dns-querier-1.dns-test-service.dns-4235.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/wheezy_hosts@dns-querier-1;sleep 1; done
   @ 07/03/24 14:03:02.703
  STEP: Running these commands on jessie: for i in `seq 1 600`; do test -n "$$(getent hosts dns-querier-1.dns-test-service.dns-4235.svc.cluster.local)" && echo OK > /results/jessie_hosts@dns-querier-1.dns-test-service.dns-4235.svc.cluster.local;test -n "$$(getent hosts dns-querier-1)" && echo OK > /results/jessie_hosts@dns-querier-1;sleep 1; done
   @ 07/03/24 14:03:02.703
  STEP: creating a pod to probe /etc/hosts @ 07/03/24 14:03:02.703
  STEP: submitting the pod to kubernetes @ 07/03/24 14:03:02.703
  E0703 14:03:02.889413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:03.889758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:04.890652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:05.890788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 14:03:06.83
  STEP: looking for the results for each expected name from probers @ 07/03/24 14:03:06.843
  E0703 14:03:06.891641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:07.891926      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:08.891955      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:09.892021      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:03:09.912241 21 dns_common.go:478] Unable to read jessie_hosts@dns-querier-1.dns-test-service.dns-4235.svc.cluster.local from pod dns-4235/dns-test-e24cf5cb-1fd4-4fd2-aa73-5bc7611761ab: the server could not find the requested resource (get pods dns-test-e24cf5cb-1fd4-4fd2-aa73-5bc7611761ab)
  I0703 14:03:09.916788 21 dns_common.go:478] Unable to read jessie_hosts@dns-querier-1 from pod dns-4235/dns-test-e24cf5cb-1fd4-4fd2-aa73-5bc7611761ab: the server could not find the requested resource (get pods dns-test-e24cf5cb-1fd4-4fd2-aa73-5bc7611761ab)
  I0703 14:03:09.916836 21 dns_common.go:489] Lookups using dns-4235/dns-test-e24cf5cb-1fd4-4fd2-aa73-5bc7611761ab failed for: [jessie_hosts@dns-querier-1.dns-test-service.dns-4235.svc.cluster.local jessie_hosts@dns-querier-1]

  I0703 14:03:09.944110 21 dns_common.go:495] Pod client logs for webserver: 
  I0703 14:03:09.959345 21 dns_common.go:495] Pod client logs for querier: 
  I0703 14:03:09.978329 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0703 14:03:10.892346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:03:11.879393 21 dns_common.go:527] DNS probes using dns-4235/dns-test-e24cf5cb-1fd4-4fd2-aa73-5bc7611761ab succeeded

  STEP: deleting the pod @ 07/03/24 14:03:11.879
  E0703 14:03:11.893231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:03:11.954606 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-4235" for this suite. @ 07/03/24 14:03:11.989
• [10.256 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-network] DNS should provide DNS for services [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:137
  STEP: Creating a kubernetes client @ 07/03/24 14:03:12.027
  I0703 14:03:12.027538 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 14:03:12.029
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:03:12.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:03:12.229
  STEP: Creating a test headless service @ 07/03/24 14:03:12.24
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-81.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-81.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-81.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-81.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-81.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-81.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-81.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-81.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 164.222.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.222.164_udp@PTR;check="$$(dig +tcp +noall +answer +search 164.222.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.222.164_tcp@PTR;sleep 1; done
   @ 07/03/24 14:03:12.475
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service.dns-81.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-81.svc.cluster.local;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-81.svc.cluster.local A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-81.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-81.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-81.svc.cluster.local;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-81.svc.cluster.local;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-81.svc.cluster.local SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-81.svc.cluster.local;check="$$(dig +notcp +noall +answer +search 164.222.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.222.164_udp@PTR;check="$$(dig +tcp +noall +answer +search 164.222.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.222.164_tcp@PTR;sleep 1; done
   @ 07/03/24 14:03:12.475
  STEP: creating a pod to probe DNS @ 07/03/24 14:03:12.475
  STEP: submitting the pod to kubernetes @ 07/03/24 14:03:12.475
  E0703 14:03:12.899255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:13.899295      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:14.899400      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:15.900450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 14:03:16.666
  STEP: looking for the results for each expected name from probers @ 07/03/24 14:03:16.669
  I0703 14:03:16.679968 21 dns_common.go:478] Unable to read wheezy_udp@dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.688976 21 dns_common.go:478] Unable to read wheezy_tcp@dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.693518 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.714633 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.719678 21 dns_common.go:478] Unable to read wheezy_udp@_http._tcp.test-service-2.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.724555 21 dns_common.go:478] Unable to read wheezy_tcp@_http._tcp.test-service-2.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.738979 21 dns_common.go:478] Unable to read 10.43.222.164_udp@PTR from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.753739 21 dns_common.go:478] Unable to read 10.43.222.164_tcp@PTR from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.770807 21 dns_common.go:478] Unable to read jessie_udp@dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.801528 21 dns_common.go:478] Unable to read jessie_tcp@dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.827562 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.831837 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.dns-test-service.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.841212 21 dns_common.go:478] Unable to read jessie_udp@_http._tcp.test-service-2.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.846610 21 dns_common.go:478] Unable to read jessie_tcp@_http._tcp.test-service-2.dns-81.svc.cluster.local from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.855937 21 dns_common.go:478] Unable to read 10.43.222.164_udp@PTR from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.879924 21 dns_common.go:478] Unable to read 10.43.222.164_tcp@PTR from pod dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b: the server could not find the requested resource (get pods dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b)
  I0703 14:03:16.879975 21 dns_common.go:489] Lookups using dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b failed for: [wheezy_udp@dns-test-service.dns-81.svc.cluster.local wheezy_tcp@dns-test-service.dns-81.svc.cluster.local wheezy_udp@_http._tcp.dns-test-service.dns-81.svc.cluster.local wheezy_tcp@_http._tcp.dns-test-service.dns-81.svc.cluster.local wheezy_udp@_http._tcp.test-service-2.dns-81.svc.cluster.local wheezy_tcp@_http._tcp.test-service-2.dns-81.svc.cluster.local 10.43.222.164_udp@PTR 10.43.222.164_tcp@PTR jessie_udp@dns-test-service.dns-81.svc.cluster.local jessie_tcp@dns-test-service.dns-81.svc.cluster.local jessie_udp@_http._tcp.dns-test-service.dns-81.svc.cluster.local jessie_tcp@_http._tcp.dns-test-service.dns-81.svc.cluster.local jessie_udp@_http._tcp.test-service-2.dns-81.svc.cluster.local jessie_tcp@_http._tcp.test-service-2.dns-81.svc.cluster.local 10.43.222.164_udp@PTR 10.43.222.164_tcp@PTR]

  I0703 14:03:16.899381 21 dns_common.go:495] Pod client logs for webserver: 
  E0703 14:03:16.900989      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:03:16.911162 21 dns_common.go:495] Pod client logs for querier: 
  I0703 14:03:16.942127 21 dns_common.go:495] Pod client logs for jessie-querier: 
  E0703 14:03:17.903324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:18.903238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:19.903462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:20.906484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:03:21.871602 21 dns_common.go:527] DNS probes using dns-81/dns-test-1a889838-d946-4bf9-baa8-c5a00c06890b succeeded

  STEP: deleting the pod @ 07/03/24 14:03:21.872
  E0703 14:03:21.907225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the test service @ 07/03/24 14:03:21.927
  STEP: deleting the test headless service @ 07/03/24 14:03:22.059
  I0703 14:03:22.143574 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-81" for this suite. @ 07/03/24 14:03:22.173
• [10.231 seconds]
------------------------------
SSSSSSSSSSSS
------------------------------
[sig-network] DNS should resolve DNS of partial qualified names for services [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/dns.go:191
  STEP: Creating a kubernetes client @ 07/03/24 14:03:22.258
  I0703 14:03:22.258459 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename dns @ 07/03/24 14:03:22.259
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:03:22.364
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:03:22.373
  STEP: Creating a test headless service @ 07/03/24 14:03:22.392
  STEP: Running these commands on wheezy: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9656 A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9656;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9656 A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9656;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9656.svc A)" && test -n "$$check" && echo OK > /results/wheezy_udp@dns-test-service.dns-9656.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9656.svc A)" && test -n "$$check" && echo OK > /results/wheezy_tcp@dns-test-service.dns-9656.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.dns-test-service.dns-9656.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.dns-test-service.dns-9656.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_udp@_http._tcp.test-service-2.dns-9656.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/wheezy_tcp@_http._tcp.test-service-2.dns-9656.svc;check="$$(dig +notcp +noall +answer +search 227.41.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.41.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.41.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.41.227_tcp@PTR;sleep 1; done
   @ 07/03/24 14:03:22.472
  STEP: Running these commands on jessie: for i in `seq 1 600`; do check="$$(dig +notcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service;check="$$(dig +tcp +noall +answer +search dns-test-service A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9656 A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9656;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9656 A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9656;check="$$(dig +notcp +noall +answer +search dns-test-service.dns-9656.svc A)" && test -n "$$check" && echo OK > /results/jessie_udp@dns-test-service.dns-9656.svc;check="$$(dig +tcp +noall +answer +search dns-test-service.dns-9656.svc A)" && test -n "$$check" && echo OK > /results/jessie_tcp@dns-test-service.dns-9656.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.dns-test-service.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.dns-test-service.dns-9656.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.dns-test-service.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.dns-test-service.dns-9656.svc;check="$$(dig +notcp +noall +answer +search _http._tcp.test-service-2.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_udp@_http._tcp.test-service-2.dns-9656.svc;check="$$(dig +tcp +noall +answer +search _http._tcp.test-service-2.dns-9656.svc SRV)" && test -n "$$check" && echo OK > /results/jessie_tcp@_http._tcp.test-service-2.dns-9656.svc;check="$$(dig +notcp +noall +answer +search 227.41.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.41.227_udp@PTR;check="$$(dig +tcp +noall +answer +search 227.41.43.10.in-addr.arpa. PTR)" && test -n "$$check" && echo OK > /results/10.43.41.227_tcp@PTR;sleep 1; done
   @ 07/03/24 14:03:22.472
  STEP: creating a pod to probe DNS @ 07/03/24 14:03:22.472
  STEP: submitting the pod to kubernetes @ 07/03/24 14:03:22.472
  E0703 14:03:22.909907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:23.907701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:24.907929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:25.908005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: retrieving the pod @ 07/03/24 14:03:26.574
  STEP: looking for the results for each expected name from probers @ 07/03/24 14:03:26.582
  E0703 14:03:26.908098      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:27.910347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:28.908743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:29.908848      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:30.910418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:31.912916      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:32.913046      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:33.913167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:34.913316      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:35.913449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:36.915069      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:37.916262      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:38.917869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:39.918187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:40.918612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:41.918976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:03:42.141854 21 dns_common.go:527] DNS probes using dns-9656/dns-test-6a3cbda2-24bf-488b-8822-9e6cde6832a4 succeeded

  STEP: deleting the pod @ 07/03/24 14:03:42.142
  STEP: deleting the test service @ 07/03/24 14:03:42.216
  STEP: deleting the test headless service @ 07/03/24 14:03:42.457
  I0703 14:03:42.525273 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "dns-9656" for this suite. @ 07/03/24 14:03:42.565
• [20.326 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-storage] Subpath Atomic writer volumes should support subpaths with secret pod [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/subpath.go:59
  STEP: Creating a kubernetes client @ 07/03/24 14:03:42.584
  I0703 14:03:42.584367 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename subpath @ 07/03/24 14:03:42.585
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:03:42.745
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:03:42.754
  STEP: Setting up data @ 07/03/24 14:03:42.775
  STEP: Creating pod pod-subpath-test-secret-zkdk @ 07/03/24 14:03:42.805
  STEP: Creating a pod to test atomic-volume-subpath @ 07/03/24 14:03:42.805
  E0703 14:03:42.919340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:43.921179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:44.922463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:45.924961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:46.925725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:47.925857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:48.925934      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:49.926051      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:50.926627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:51.926760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:52.927644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:53.929243      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:54.929632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:55.930448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:56.930476      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:57.930585      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:58.930830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:03:59.930948      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:00.935015      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:01.934451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:02.934980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:03.935266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:04.939453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:05.939439      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:06.940511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:07.940613      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:08.941372      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:04:09.009
  I0703 14:04:09.027458 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-subpath-test-secret-zkdk container test-container-subpath-secret-zkdk: <nil>
  STEP: delete the pod @ 07/03/24 14:04:09.055
  STEP: Deleting pod pod-subpath-test-secret-zkdk @ 07/03/24 14:04:09.11
  I0703 14:04:09.110347 21 delete.go:62] Deleting pod "pod-subpath-test-secret-zkdk" in namespace "subpath-8888"
  I0703 14:04:09.117534 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subpath-8888" for this suite. @ 07/03/24 14:04:09.146
• [26.597 seconds]
------------------------------
SSSSSSSS
------------------------------
[sig-node] Variable Expansion should succeed in writing subpaths in container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:301
  STEP: Creating a kubernetes client @ 07/03/24 14:04:09.182
  I0703 14:04:09.182832 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 14:04:09.184
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:04:09.31
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:04:09.325
  STEP: creating the pod @ 07/03/24 14:04:09.343
  STEP: waiting for pod running @ 07/03/24 14:04:09.374
  E0703 14:04:09.941811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:10.942647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:11.942591      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:12.942665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a file in subpath @ 07/03/24 14:04:13.454
  I0703 14:04:13.483757 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c touch /volume_mount/mypath/foo/test.log] Namespace:var-expansion-8281 PodName:var-expansion-976d8b8a-0b23-42f3-988b-6156b76009f7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 14:04:13.483803 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 14:04:13.484510 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 14:04:13.484576 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-8281/pods/var-expansion-976d8b8a-0b23-42f3-988b-6156b76009f7/exec?command=%2Fbin%2Fsh&command=-c&command=touch+%2Fvolume_mount%2Fmypath%2Ffoo%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: test for file in mounted path @ 07/03/24 14:04:13.603
  I0703 14:04:13.619114 21 exec_util.go:55] ExecWithOptions {Command:[/bin/sh -c test -f /subpath_mount/test.log] Namespace:var-expansion-8281 PodName:var-expansion-976d8b8a-0b23-42f3-988b-6156b76009f7 ContainerName:dapi-container Stdin:<nil> CaptureStdout:true CaptureStderr:true PreserveWhitespace:false Quiet:false}
  I0703 14:04:13.619310 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  I0703 14:04:13.619940 21 exec_util.go:62] ExecWithOptions: Clientset creation
  I0703 14:04:13.620012 21 exec_util.go:79] ExecWithOptions: execute(POST https://10.43.0.1:443/api/v1/namespaces/var-expansion-8281/pods/var-expansion-976d8b8a-0b23-42f3-988b-6156b76009f7/exec?command=%2Fbin%2Fsh&command=-c&command=test+-f+%2Fsubpath_mount%2Ftest.log&container=dapi-container&container=dapi-container&stderr=true&stdout=true)
  STEP: updating the annotation value @ 07/03/24 14:04:13.748
  E0703 14:04:13.943379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:04:14.373724 21 pod_client.go:141] Successfully updated pod "var-expansion-976d8b8a-0b23-42f3-988b-6156b76009f7"
  STEP: waiting for annotated pod running @ 07/03/24 14:04:14.373
  STEP: deleting the pod gracefully @ 07/03/24 14:04:14.379
  I0703 14:04:14.379523 21 delete.go:62] Deleting pod "var-expansion-976d8b8a-0b23-42f3-988b-6156b76009f7" in namespace "var-expansion-8281"
  I0703 14:04:14.422607 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-976d8b8a-0b23-42f3-988b-6156b76009f7" to be fully deleted
  E0703 14:04:14.944105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:15.944278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:16.945754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:17.944553      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:18.944660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:19.944790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:20.947575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:21.947802      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:22.950533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:23.958399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:24.951773      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:25.951854      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:26.952953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:27.953113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:28.953652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:29.953870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:30.954623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:31.955576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:32.956533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:33.956706      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:34.957651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:35.958034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:36.966836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:37.963833      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:38.964667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:39.967436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:40.967413      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:41.967756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:42.968111      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:43.969549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:44.969786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:45.970417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:46.971106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:47.971654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:04:48.555878 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-8281" for this suite. @ 07/03/24 14:04:48.569
• [39.400 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] Servers with support for Table transformation should return a 406 for a backend which does not implement metadata [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/table_conversion.go:154
  STEP: Creating a kubernetes client @ 07/03/24 14:04:48.585
  I0703 14:04:48.585145 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename tables @ 07/03/24 14:04:48.589
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:04:48.639
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:04:48.646
  I0703 14:04:48.660857 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "tables-952" for this suite. @ 07/03/24 14:04:48.666
• [0.110 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] Garbage collector should delete RS created by deployment when not orphaning [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:480
  STEP: Creating a kubernetes client @ 07/03/24 14:04:48.695
  I0703 14:04:48.695973 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename gc @ 07/03/24 14:04:48.7
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:04:48.806
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:04:48.831
  STEP: create the deployment @ 07/03/24 14:04:48.845
  W0703 14:04:48.863307      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/03/24 14:04:48.863
  E0703 14:04:48.983328      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/03/24 14:04:49.376
  STEP: wait for all rs to be garbage collected @ 07/03/24 14:04:49.419
  STEP: expected 0 rs, got 1 rs @ 07/03/24 14:04:49.451
  STEP: expected 0 pods, got 2 pods @ 07/03/24 14:04:49.46
  STEP: Gathering metrics @ 07/03/24 14:04:49.969
  E0703 14:04:49.977121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0703 14:04:50.034026      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0703 14:04:50.034228 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0703 14:04:50.037224 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8551" for this suite. @ 07/03/24 14:04:50.067
• [1.400 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] CronJob should replace jobs when ReplaceConcurrent [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/cronjob.go:168
  STEP: Creating a kubernetes client @ 07/03/24 14:04:50.095
  I0703 14:04:50.095600 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename cronjob @ 07/03/24 14:04:50.097
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:04:50.247
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:04:50.278
  STEP: Creating a ReplaceConcurrent cronjob @ 07/03/24 14:04:50.297
  STEP: Ensuring a job is scheduled @ 07/03/24 14:04:50.383
  E0703 14:04:50.977558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:51.978654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:52.979155      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:53.982462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:54.983171      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:55.983311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:56.983495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:57.983897      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:58.986922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:04:59.987091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring exactly one is scheduled @ 07/03/24 14:05:00.411
  STEP: Ensuring exactly one running job exists by listing jobs explicitly @ 07/03/24 14:05:00.42
  STEP: Ensuring the job is replaced with a new one @ 07/03/24 14:05:00.449
  E0703 14:05:00.988306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:01.991156      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:02.991297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:03.991412      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:04.991730      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:05.992961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:06.993751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:07.994464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:08.998599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:09.999866      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:11.001752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:12.002104      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:13.002560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:14.002644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:15.004576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:16.006467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:17.006679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:18.006990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:19.007361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:20.010623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:21.010655      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:22.010751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:23.011115      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:24.011313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:25.012076      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:26.012758      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:27.013693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:28.013838      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:29.014077      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:30.014931      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:31.015557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:32.015729      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:33.016019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:34.016371      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:35.016572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:36.017246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:37.017680      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:38.018334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:39.019359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:40.020739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:41.021559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:42.021971      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:43.022707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:44.022829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:45.022881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:46.023579      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:47.025623      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:48.026061      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:49.026890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:50.027194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:51.027335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:52.027404      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:53.027549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:54.027789      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:55.028359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:56.028450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:57.028462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:58.029450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:05:59.029704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:00.038006      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Removing cronjob @ 07/03/24 14:06:00.461
  I0703 14:06:00.480748 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "cronjob-7267" for this suite. @ 07/03/24 14:06:00.488
• [70.435 seconds]
------------------------------
SSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a service. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:103
  STEP: Creating a kubernetes client @ 07/03/24 14:06:00.531
  I0703 14:06:00.531587 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 14:06:00.532
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:06:00.685
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:06:00.742
  STEP: Counting existing ResourceQuota @ 07/03/24 14:06:00.778
  E0703 14:06:01.038654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:02.042406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:03.041945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:04.046513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:05.047307      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/03/24 14:06:05.8
  STEP: Ensuring resource quota status is calculated @ 07/03/24 14:06:05.832
  E0703 14:06:06.047324      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:07.051127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Service @ 07/03/24 14:06:07.838
  STEP: Creating a NodePort Service @ 07/03/24 14:06:07.875
  STEP: Not allowing a LoadBalancer Service with NodePort to be created that exceeds remaining quota @ 07/03/24 14:06:07.935
  STEP: Ensuring resource quota status captures service creation @ 07/03/24 14:06:07.986
  E0703 14:06:08.054634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:09.055540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting Services @ 07/03/24 14:06:10.008
  E0703 14:06:10.056675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota status released usage @ 07/03/24 14:06:10.192
  E0703 14:06:11.057860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:12.057968      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:12.197572 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-7317" for this suite. @ 07/03/24 14:06:12.202
• [11.682 seconds]
------------------------------
S
------------------------------
[sig-node] Downward API should provide default limits.cpu/memory from node allocatable [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:219
  STEP: Creating a kubernetes client @ 07/03/24 14:06:12.219
  I0703 14:06:12.219978 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 14:06:12.232
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:06:12.294
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:06:12.302
  STEP: Creating a pod to test downward api env vars @ 07/03/24 14:06:12.314
  E0703 14:06:13.058028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:14.058703      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:15.058663      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:16.059084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:06:16.396
  I0703 14:06:16.421596 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downward-api-9a46a9a7-ee52-4ef5-a9fa-a6082d4ac8f2 container dapi-container: <nil>
  STEP: delete the pod @ 07/03/24 14:06:16.452
  I0703 14:06:16.523676 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-8510" for this suite. @ 07/03/24 14:06:16.537
• [4.330 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update annotations on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:164
  STEP: Creating a kubernetes client @ 07/03/24 14:06:16.55
  I0703 14:06:16.550907 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 14:06:16.551
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:06:16.613
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:06:16.639
  STEP: Creating the pod @ 07/03/24 14:06:16.646
  E0703 14:06:17.059232      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:18.059399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:19.059755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:19.323672 21 pod_client.go:141] Successfully updated pod "annotationupdate9ce98672-f2a6-4028-9590-0f1407581983"
  E0703 14:06:20.062644      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:21.062472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:21.360901 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-6515" for this suite. @ 07/03/24 14:06:21.368
• [4.848 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-network] Services should serve a basic endpoint from pods [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:789
  STEP: Creating a kubernetes client @ 07/03/24 14:06:21.398
  I0703 14:06:21.398889 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 14:06:21.399
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:06:21.516
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:06:21.543
  STEP: creating service endpoint-test2 in namespace services-5988 @ 07/03/24 14:06:21.581
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5988 to expose endpoints map[] @ 07/03/24 14:06:21.662
  I0703 14:06:21.686828 21 service.go:4226] Failed go get Endpoints object: endpoints "endpoint-test2" not found
  E0703 14:06:22.063583      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:22.694473 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-5988 exposes endpoints map[]
  STEP: Creating pod pod1 in namespace services-5988 @ 07/03/24 14:06:22.694
  E0703 14:06:23.064091      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:24.065279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:25.065405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:26.068470      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5988 to expose endpoints map[pod1:[80]] @ 07/03/24 14:06:26.754
  I0703 14:06:26.786016 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-5988 exposes endpoints map[pod1:[80]]
  STEP: Checking if the Service forwards traffic to pod1 @ 07/03/24 14:06:26.786
  I0703 14:06:26.786095 21 resource.go:361] Creating new exec pod
  E0703 14:06:27.068984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:28.069238      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:29.070068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:30.071841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:31.073052      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:31.878398 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0703 14:06:32.073109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:32.191051 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ echo hostName\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0703 14:06:32.191106 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:06:32.191187 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.195.251 80'
  I0703 14:06:32.608670 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.195.251 80\n+ echo hostName\nConnection to 10.43.195.251 80 port [tcp/http] succeeded!\n"
  I0703 14:06:32.608718 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Creating pod pod2 in namespace services-5988 @ 07/03/24 14:06:32.608
  E0703 14:06:33.073481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:34.073863      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5988 to expose endpoints map[pod1:[80] pod2:[80]] @ 07/03/24 14:06:34.656
  I0703 14:06:34.667544 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-5988 exposes endpoints map[pod1:[80] pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod1 and pod2 @ 07/03/24 14:06:34.667
  E0703 14:06:35.074004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:35.670000 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0703 14:06:36.074106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:37.076341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:38.076648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:38.102508 21 builder.go:135] rc: 1
  I0703 14:06:38.102576 21 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 endpoint-test2 80
  nc: connect to endpoint-test2 port 80 (tcp) timed out: Operation in progress
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 14:06:38.102878 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0703 14:06:39.077584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:39.486136 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 endpoint-test2 80\nConnection to endpoint-test2 80 port [tcp/http] succeeded!\n"
  I0703 14:06:39.486186 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:06:39.486263 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.195.251 80'
  E0703 14:06:40.082484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:40.854556 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.195.251 80\nConnection to 10.43.195.251 80 port [tcp/http] succeeded!\n"
  I0703 14:06:40.854610 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod1 in namespace services-5988 @ 07/03/24 14:06:40.854
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5988 to expose endpoints map[pod2:[80]] @ 07/03/24 14:06:40.894
  E0703 14:06:41.082592      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:41.981627 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-5988 exposes endpoints map[pod2:[80]]
  STEP: Checking if the Service forwards traffic to pod2 @ 07/03/24 14:06:41.981
  E0703 14:06:42.084010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:42.983966 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 endpoint-test2 80'
  E0703 14:06:43.084566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:43.394455 21 builder.go:146] stderr: "+ nc -v -t -w 2 endpoint-test2 80\n+ Connection to endpoint-test2 80 port [tcp/http] succeeded!\necho hostName\n"
  I0703 14:06:43.394506 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:06:43.394587 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-5988 exec execpodsxz2w -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.195.251 80'
  I0703 14:06:43.708639 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 10.43.195.251 80\nConnection to 10.43.195.251 80 port [tcp/http] succeeded!\n"
  I0703 14:06:43.708693 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  STEP: Deleting pod pod2 in namespace services-5988 @ 07/03/24 14:06:43.712
  STEP: waiting up to 3m0s for service endpoint-test2 in namespace services-5988 to expose endpoints map[] @ 07/03/24 14:06:43.818
  E0703 14:06:44.085465      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:44.878484 21 service.go:4258] successfully validated that service endpoint-test2 in namespace services-5988 exposes endpoints map[]
  I0703 14:06:44.949075 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5988" for this suite. @ 07/03/24 14:06:44.967
• [23.613 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] Scaling should happen in predictable order and halt if any stateful pod is unhealthy [Slow] [Conformance] [sig-apps, Slow, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:641
  STEP: Creating a kubernetes client @ 07/03/24 14:06:45.016
  I0703 14:06:45.016202 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 14:06:45.019
  E0703 14:06:45.086488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:06:45.141
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:06:45.165
  STEP: Creating service test in namespace statefulset-7447 @ 07/03/24 14:06:45.18
  STEP: Initializing watcher for selector baz=blah,foo=bar @ 07/03/24 14:06:45.205
  STEP: Creating stateful set ss in namespace statefulset-7447 @ 07/03/24 14:06:45.24
  STEP: Waiting until all stateful set ss replicas will be running in namespace statefulset-7447 @ 07/03/24 14:06:45.269
  I0703 14:06:45.388264 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0703 14:06:46.090454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:47.091041      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:48.092057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:49.093252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:50.093263      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:51.093480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:52.103217      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:53.094700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:54.095675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:55.095787      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:06:55.273690 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Confirming that stateful set scale up will halt with unhealthy stateful pod @ 07/03/24 14:06:55.273
  I0703 14:06:55.277719 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0703 14:06:55.646164 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 14:06:55.646214 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 14:06:55.646231 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 14:06:55.659013 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=true
  E0703 14:06:56.096719      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:57.097709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:58.098757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:06:59.099161      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:00.100832      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:01.101409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:02.103790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:03.103918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:04.104940      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:05.105690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:05.649984 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0703 14:07:05.650027 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0703 14:07:05.690597 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 9.999999619s
  E0703 14:07:06.106136      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:06.696051 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 8.9816328s
  E0703 14:07:07.106348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:07.701366 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 7.976203903s
  E0703 14:07:08.106488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:08.721956 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 6.963469777s
  E0703 14:07:09.107510      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:09.728557 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 5.951064295s
  E0703 14:07:10.108361      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:10.734860 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 4.94416289s
  E0703 14:07:11.116687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:11.739007 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 3.938110172s
  E0703 14:07:12.112134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:12.749527 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 2.930961978s
  E0703 14:07:13.120982      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:13.756258 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 1.922970985s
  E0703 14:07:14.113754      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:14.776301 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 1 for another 916.898411ms
  E0703 14:07:15.113839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling up stateful set ss to 3 replicas and waiting until all of them will be running in namespace statefulset-7447 @ 07/03/24 14:07:15.776
  I0703 14:07:15.782699 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0703 14:07:16.114008      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:16.118576 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0703 14:07:16.118628 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 14:07:16.118643 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0703 14:07:16.122512 21 wait.go:40] Found 1 stateful pods, waiting for 3
  E0703 14:07:17.115289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:18.116148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:19.116411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:20.117503      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:21.118956      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:22.119039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:23.119242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:24.119979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:25.121303      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:26.122511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:26.124944 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:07:26.125189 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:07:26.125306 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=false
  E0703 14:07:27.123236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:28.123348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:29.138356      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:30.124608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:31.125734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:32.126573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:33.127255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:34.128650      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:35.128973      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:36.125951 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:07:36.125999 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:07:36.126017 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Verifying that stateful set ss was scaled up in order @ 07/03/24 14:07:36.126
  STEP: Scale down will halt with unhealthy stateful pod @ 07/03/24 14:07:36.126
  E0703 14:07:36.129517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:36.145461 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-0 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0703 14:07:36.431674 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 14:07:36.431747 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 14:07:36.431762 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-0: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 14:07:36.431992 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0703 14:07:36.659560 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 14:07:36.659734 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 14:07:36.659752 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 14:07:36.659818 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-2 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0703 14:07:37.129732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:37.217878 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 14:07:37.217929 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 14:07:37.217943 21 rest.go:241] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss-2: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  I0703 14:07:37.217957 21 wait.go:101] Waiting for statefulset status.readyReplicas updated to 0
  I0703 14:07:37.221280 21 wait.go:114] Waiting for statefulset status.readyReplicas to become 0, currently 2
  E0703 14:07:38.130421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:39.130525      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:40.132771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:41.137627      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:42.137884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:43.138270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:44.140407      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:45.140622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:46.141187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:07:47.143313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:47.227805 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=false, currently Running - Ready=false
  I0703 14:07:47.227854 21 wait.go:50] Waiting for pod ss-1 to enter Running - Ready=false, currently Running - Ready=false
  I0703 14:07:47.227903 21 wait.go:50] Waiting for pod ss-2 to enter Running - Ready=false, currently Running - Ready=false
  I0703 14:07:47.280494 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 9.999999652s
  E0703 14:07:48.142561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:48.288374 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 8.986560411s
  E0703 14:07:49.143580      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:49.292492 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 7.979137864s
  E0703 14:07:50.144065      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:50.300651 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 6.974739817s
  E0703 14:07:51.144488      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:51.305522 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 5.966492691s
  E0703 14:07:52.144620      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:52.310431 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 4.961218153s
  E0703 14:07:53.145573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:53.314934 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 3.957117659s
  E0703 14:07:54.146539      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:54.321408 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 2.952122903s
  E0703 14:07:55.146626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:55.326549 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 1.945907657s
  E0703 14:07:56.147645      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:56.331244 21 statefulset.go:2152] Verifying statefulset ss doesn't scale past 3 for another 940.712782ms
  E0703 14:07:57.147841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Scaling down stateful set ss to 0 replicas and waiting until none of pods will run in namespacestatefulset-7447 @ 07/03/24 14:07:57.332
  I0703 14:07:57.339297 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-0 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 14:07:57.594017 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0703 14:07:57.594064 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 14:07:57.594236 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-0: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0703 14:07:57.594320 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 14:07:57.949943 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0703 14:07:57.950095 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 14:07:57.950113 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0703 14:07:57.950168 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-7447 exec ss-2 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0703 14:07:58.148664      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:07:58.412954 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0703 14:07:58.413009 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 14:07:58.413028 21 rest.go:241] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss-2: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  I0703 14:07:58.413042 21 rest.go:150] Scaling statefulset ss to 0
  E0703 14:07:59.149005      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:00.149108      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:01.150576      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:02.151621      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:03.151771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:04.152205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:05.153212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:06.154454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:07.156872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:08.157178      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Verifying that stateful set ss was scaled down in reverse order @ 07/03/24 14:08:08.427
  I0703 14:08:08.427675 21 statefulset.go:135] Deleting all statefulset in ns statefulset-7447
  I0703 14:08:08.438008 21 rest.go:150] Scaling statefulset ss to 0
  I0703 14:08:08.452859 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 14:08:08.457937 21 rest.go:88] Deleting statefulset ss
  I0703 14:08:08.478218 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-7447" for this suite. @ 07/03/24 14:08:08.485
• [83.500 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to switch session affinity for NodePort service [LinuxOnly] [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:2240
  STEP: Creating a kubernetes client @ 07/03/24 14:08:08.524
  I0703 14:08:08.524796 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 14:08:08.527
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:08.601
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:08.606
  STEP: creating service in namespace services-709 @ 07/03/24 14:08:08.616
  STEP: creating service affinity-nodeport-transition in namespace services-709 @ 07/03/24 14:08:08.616
  STEP: creating replication controller affinity-nodeport-transition in namespace services-709 @ 07/03/24 14:08:08.665
  I0703 14:08:08.780362      21 runners.go:198] Created replication controller with name: affinity-nodeport-transition, namespace: services-709, replica count: 3
  E0703 14:08:09.158438      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:10.159212      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:11.161755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:11.834742      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 2 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:08:12.160541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:13.161441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:14.161453      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:14.835393      21 runners.go:198] affinity-nodeport-transition Pods: 3 out of 3 created, 3 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 14:08:14.846251 21 resource.go:361] Creating new exec pod
  E0703 14:08:15.198135      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:16.162589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:17.169785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:17.881768 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  E0703 14:08:18.168547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:19.168918      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:20.169359      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:21.169687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:22.170811      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:23.172384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:23.287180 21 builder.go:135] rc: 1
  I0703 14:08:23.287248 21 jig.go:916] Service reachability failing with error: error running /usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80:
  Command stdout:

  stderr:
  + echo hostName
  + nc -v -t -w 2 affinity-nodeport-transition 80
  nc: getaddrinfo: Try again
  command terminated with exit code 1

  error:
  exit status 1
  Retrying...
  I0703 14:08:23.287351 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 affinity-nodeport-transition 80'
  I0703 14:08:23.634418 21 builder.go:146] stderr: "+ nc -v -t -w 2 affinity-nodeport-transition 80\n+ echo hostName\nConnection to affinity-nodeport-transition 80 port [tcp/http] succeeded!\n"
  I0703 14:08:23.634475 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:08:23.634557 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.124.161 80'
  I0703 14:08:24.134427 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.124.161 80\n+ echo hostName\nConnection to 10.43.124.161 80 port [tcp/http] succeeded!\n"
  I0703 14:08:24.134493 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:08:24.134581 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.210 32498'
  E0703 14:08:24.172673      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:24.512087 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.210 32498\nConnection to 172.31.4.210 32498 port [tcp/*] succeeded!\n"
  I0703 14:08:24.512142 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:08:24.512256 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.137 32498'
  I0703 14:08:24.791959 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.137 32498\nConnection to 172.31.4.137 32498 port [tcp/*] succeeded!\n"
  I0703 14:08:24.792008 21 builder.go:147] stdout: "HTTP/1.1 400 Bad Request\r\nContent-Type: text/plain; charset=utf-8\r\nConnection: close\r\n\r\n400 Bad Request"
  I0703 14:08:24.808878 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.4.137:32498/ ; done'
  I0703 14:08:25.139308 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n"
  I0703 14:08:25.139382 21 builder.go:147] stdout: "\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-w4bqj\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-5hggr\naffinity-nodeport-transition-5hggr\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-w4bqj\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-w4bqj\naffinity-nodeport-transition-w4bqj\naffinity-nodeport-transition-5hggr\naffinity-nodeport-transition-w4bqj\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-5hggr"
  I0703 14:08:25.139410 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.139423 21 service.go:242] Received response from host: affinity-nodeport-transition-w4bqj
  I0703 14:08:25.139434 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.139444 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.139455 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.139535 21 service.go:242] Received response from host: affinity-nodeport-transition-5hggr
  I0703 14:08:25.139553 21 service.go:242] Received response from host: affinity-nodeport-transition-5hggr
  I0703 14:08:25.139564 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.139576 21 service.go:242] Received response from host: affinity-nodeport-transition-w4bqj
  I0703 14:08:25.139585 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.139596 21 service.go:242] Received response from host: affinity-nodeport-transition-w4bqj
  I0703 14:08:25.139606 21 service.go:242] Received response from host: affinity-nodeport-transition-w4bqj
  I0703 14:08:25.139617 21 service.go:242] Received response from host: affinity-nodeport-transition-5hggr
  I0703 14:08:25.139627 21 service.go:242] Received response from host: affinity-nodeport-transition-w4bqj
  I0703 14:08:25.139638 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.139649 21 service.go:242] Received response from host: affinity-nodeport-transition-5hggr
  I0703 14:08:25.150929 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-709 exec execpod-affinityxsvvg -- /bin/sh -x -c for i in $(seq 0 15); do echo; curl -q -s --connect-timeout 2 http://172.31.4.137:32498/ ; done'
  E0703 14:08:25.172975      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:25.754013 21 builder.go:146] stderr: "+ seq 0 15\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n+ echo\n+ curl -q -s --connect-timeout 2 http://172.31.4.137:32498/\n"
  I0703 14:08:25.754088 21 builder.go:147] stdout: "\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5\naffinity-nodeport-transition-kn5k5"
  I0703 14:08:25.754113 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754125 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754136 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754146 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754159 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754171 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754189 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754202 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754219 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754238 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754247 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754258 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754269 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754303 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754404 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754421 21 service.go:242] Received response from host: affinity-nodeport-transition-kn5k5
  I0703 14:08:25.754499 21 service.go:4014] Cleaning up the exec pod
  STEP: deleting ReplicationController affinity-nodeport-transition in namespace services-709, will wait for the garbage collector to delete the pods @ 07/03/24 14:08:25.789
  I0703 14:08:25.889644 21 resources.go:139] Deleting ReplicationController affinity-nodeport-transition took: 22.89158ms
  I0703 14:08:25.990358 21 resources.go:163] Terminating ReplicationController affinity-nodeport-transition pods took: 100.708745ms
  E0703 14:08:26.174411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:27.174875      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:28.176505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:29.176405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:30.177714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:30.243097 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-709" for this suite. @ 07/03/24 14:08:30.248
• [21.742 seconds]
------------------------------
SSSSSSSSSSSSSSS
------------------------------
[sig-scheduling] LimitRange should list, patch and delete a LimitRange by collection [Conformance] [sig-scheduling, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/limit_range.go:253
  STEP: Creating a kubernetes client @ 07/03/24 14:08:30.283
  I0703 14:08:30.283872 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename limitrange @ 07/03/24 14:08:30.285
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:30.334
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:30.34
  STEP: Creating LimitRange "e2e-limitrange-tf27g" in namespace "limitrange-6703" @ 07/03/24 14:08:30.35
  STEP: Creating another limitRange in another namespace @ 07/03/24 14:08:30.373
  I0703 14:08:30.472845 21 limit_range.go:299] Namespace "e2e-limitrange-tf27g-3857" created
  I0703 14:08:30.472891 21 limit_range.go:300] Creating LimitRange "e2e-limitrange-tf27g" in namespace "e2e-limitrange-tf27g-3857"
  STEP: Listing all LimitRanges with label "e2e-test=e2e-limitrange-tf27g" @ 07/03/24 14:08:30.482
  I0703 14:08:30.508097 21 limit_range.go:309] Found 2 limitRanges
  STEP: Patching LimitRange "e2e-limitrange-tf27g" in "limitrange-6703" namespace @ 07/03/24 14:08:30.522
  I0703 14:08:30.587828 21 limit_range.go:335] LimitRange "e2e-limitrange-tf27g" has been patched
  STEP: Delete LimitRange "e2e-limitrange-tf27g" by Collection with labelSelector: "e2e-limitrange-tf27g=patched" @ 07/03/24 14:08:30.587
  STEP: Confirm that the limitRange "e2e-limitrange-tf27g" has been deleted @ 07/03/24 14:08:30.622
  I0703 14:08:30.645226 21 limit_range.go:443] Requesting list of LimitRange to confirm quantity
  I0703 14:08:30.650873 21 limit_range.go:453] Found 0 LimitRange with label "e2e-limitrange-tf27g=patched"
  I0703 14:08:30.653073 21 limit_range.go:344] LimitRange "e2e-limitrange-tf27g" has been deleted.
  STEP: Confirm that a single LimitRange still exists with label "e2e-test=e2e-limitrange-tf27g" @ 07/03/24 14:08:30.66
  I0703 14:08:30.668555 21 limit_range.go:350] Found 1 limitRange
  I0703 14:08:30.668755 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "limitrange-6703" for this suite. @ 07/03/24 14:08:30.688
  STEP: Destroying namespace "e2e-limitrange-tf27g-3857" for this suite. @ 07/03/24 14:08:30.712
• [0.464 seconds]
------------------------------
SSS
------------------------------
[sig-storage] ConfigMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:125
  STEP: Creating a kubernetes client @ 07/03/24 14:08:30.771
  I0703 14:08:30.778902 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 14:08:30.784
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:30.913
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:30.918
  STEP: Creating configMap with name configmap-test-upd-38d27bb6-f9c4-4134-8768-71dc824e4cb5 @ 07/03/24 14:08:30.935
  STEP: Creating the pod @ 07/03/24 14:08:30.957
  E0703 14:08:31.182447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:32.185561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap configmap-test-upd-38d27bb6-f9c4-4134-8768-71dc824e4cb5 @ 07/03/24 14:08:33.061
  STEP: waiting to observe update in volume @ 07/03/24 14:08:33.067
  E0703 14:08:33.186517      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:34.186705      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:35.097330 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-2715" for this suite. @ 07/03/24 14:08:35.102
• [4.341 seconds]
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:79
  STEP: Creating a kubernetes client @ 07/03/24 14:08:35.111
  I0703 14:08:35.111861 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 14:08:35.126
  E0703 14:08:35.187575      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:35.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:35.202
  STEP: Creating secret with name secret-test-map-846f40f2-893b-4b6c-841d-dbed639ec454 @ 07/03/24 14:08:35.207
  STEP: Creating a pod to test consume secrets @ 07/03/24 14:08:35.223
  E0703 14:08:36.188452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:37.189064      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:38.189259      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:39.189752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:08:39.329
  I0703 14:08:39.334646 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-639284d9-deca-437a-a5eb-65238c23a640 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 14:08:39.345
  I0703 14:08:39.374144 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-3538" for this suite. @ 07/03/24 14:08:39.396
• [4.306 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Namespaces [Serial] should patch a Namespace [Conformance] [sig-api-machinery, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/namespace.go:274
  STEP: Creating a kubernetes client @ 07/03/24 14:08:39.425
  I0703 14:08:39.425413 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename namespaces @ 07/03/24 14:08:39.426
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:39.512
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:39.52
  STEP: creating a Namespace @ 07/03/24 14:08:39.553
  STEP: patching the Namespace @ 07/03/24 14:08:39.724
  STEP: get the Namespace and ensuring it has the label @ 07/03/24 14:08:39.802
  I0703 14:08:39.818740 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "namespaces-4405" for this suite. @ 07/03/24 14:08:39.833
  STEP: Destroying namespace "nspatchtest-b5c63aac-3d59-4a9a-bf34-8ce243c04bac-5896" for this suite. @ 07/03/24 14:08:39.844
• [0.432 seconds]
------------------------------
SSSSS
------------------------------
[sig-scheduling] SchedulerPredicates [Serial] validates that NodeSelector is respected if not matching [Conformance] [sig-scheduling, Serial, Conformance]
k8s.io/kubernetes/test/e2e/scheduling/predicates.go:446
  STEP: Creating a kubernetes client @ 07/03/24 14:08:39.858
  I0703 14:08:39.858533 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename sched-pred @ 07/03/24 14:08:39.859
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:39.999
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:40.027
  I0703 14:08:40.042260 21 helper.go:121] Waiting up to 1m0s for all (but 0) nodes to be ready
  I0703 14:08:40.081857 21 util.go:400] Waiting for terminating namespaces to be deleted...
  I0703 14:08:40.092387 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-137 before test
  I0703 14:08:40.110734 21 predicates.go:887] fleet-agent-0 from cattle-fleet-system started at 2024-07-03 12:03:04 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.110906 21 predicates.go:889] 	Container fleet-agent ready: true, restart count 0
  I0703 14:08:40.111002 21 predicates.go:889] 	Container fleet-agent-clusterstatus ready: true, restart count 0
  I0703 14:08:40.111099 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-dmpfp from cattle-system started at 2024-07-03 12:04:09 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.111292 21 predicates.go:889] 	Container cluster-register ready: true, restart count 0
  I0703 14:08:40.111427 21 predicates.go:887] cattle-cluster-agent-6787cd6c66-rf45l from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.111515 21 predicates.go:889] 	Container cluster-register ready: true, restart count 2
  I0703 14:08:40.111601 21 predicates.go:887] cattle-node-agent-xv2b5 from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.111676 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 14:08:40.111745 21 predicates.go:887] kube-api-auth-n7vdq from cattle-system started at 2024-07-03 12:01:40 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.111825 21 predicates.go:889] 	Container kube-api-auth ready: true, restart count 0
  I0703 14:08:40.111884 21 predicates.go:887] rancher-webhook-7b5476cb6c-999r2 from cattle-system started at 2024-07-03 12:03:53 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.111966 21 predicates.go:889] 	Container rancher-webhook ready: true, restart count 0
  I0703 14:08:40.112044 21 predicates.go:887] calico-kube-controllers-5b878c8d6f-n9qtc from kube-system started at 2024-07-03 12:00:56 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.112098 21 predicates.go:889] 	Container calico-kube-controllers ready: true, restart count 0
  I0703 14:08:40.112196 21 predicates.go:887] canal-zpdht from kube-system started at 2024-07-03 12:00:56 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.112279 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 14:08:40.112348 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 14:08:40.112416 21 predicates.go:887] coredns-878dbb559-4hhd8 from kube-system started at 2024-07-03 12:01:07 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.112494 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 14:08:40.112552 21 predicates.go:887] metrics-server-85f57469bf-dkb2p from kube-system started at 2024-07-03 12:01:23 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.112635 21 predicates.go:889] 	Container metrics-server ready: true, restart count 0
  I0703 14:08:40.112717 21 predicates.go:887] rke-coredns-addon-deploy-job-hv82g from kube-system started at 2024-07-03 12:09:41 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.112789 21 predicates.go:889] 	Container rke-coredns-addon-pod ready: false, restart count 0
  I0703 14:08:40.112866 21 predicates.go:887] rke-metrics-addon-deploy-job-htp6z from kube-system started at 2024-07-03 12:01:19 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.112954 21 predicates.go:889] 	Container rke-metrics-addon-pod ready: false, restart count 0
  I0703 14:08:40.113043 21 predicates.go:887] rke-network-plugin-deploy-job-6jb2q from kube-system started at 2024-07-03 12:00:53 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.113226 21 predicates.go:889] 	Container rke-network-plugin-pod ready: false, restart count 0
  I0703 14:08:40.113336 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-64nlg from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.113415 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 14:08:40.113490 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 14:08:40.113592 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-4-210 before test
  I0703 14:08:40.127526 21 predicates.go:887] cattle-node-agent-pnp4l from cattle-system started at 2024-07-03 12:04:27 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.127718 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 14:08:40.127862 21 predicates.go:887] canal-9xtzz from kube-system started at 2024-07-03 12:04:27 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.127946 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 14:08:40.128012 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 14:08:40.128076 21 predicates.go:887] sonobuoy from sonobuoy started at 2024-07-03 12:12:47 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.128147 21 predicates.go:889] 	Container kube-sonobuoy ready: true, restart count 0
  I0703 14:08:40.128292 21 predicates.go:887] sonobuoy-e2e-job-f9e006a160674f6c from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.128404 21 predicates.go:889] 	Container e2e ready: true, restart count 0
  I0703 14:08:40.128460 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 14:08:40.128544 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-jz9sc from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.128618 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 14:08:40.128671 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  I0703 14:08:40.128751 21 predicates.go:121] 
  Logging pods the apiserver thinks is on node ip-172-31-5-183 before test
  I0703 14:08:40.147136 21 predicates.go:887] cattle-node-agent-9qwcl from cattle-system started at 2024-07-03 12:04:10 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.148032 21 predicates.go:889] 	Container agent ready: true, restart count 0
  I0703 14:08:40.148663 21 predicates.go:887] pod-configmaps-5b490c26-f9e7-480b-9917-1b8bcc23ab5e from configmap-2715 started at 2024-07-03 14:08:30 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.149193 21 predicates.go:889] 	Container agnhost-container ready: true, restart count 0
  I0703 14:08:40.149696 21 predicates.go:887] canal-qtmst from kube-system started at 2024-07-03 12:04:10 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.151389 21 predicates.go:889] 	Container calico-node ready: true, restart count 0
  I0703 14:08:40.152056 21 predicates.go:889] 	Container kube-flannel ready: true, restart count 0
  I0703 14:08:40.152492 21 predicates.go:887] coredns-878dbb559-svq7f from kube-system started at 2024-07-03 12:04:18 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.153191 21 predicates.go:889] 	Container coredns ready: true, restart count 0
  I0703 14:08:40.153871 21 predicates.go:887] coredns-autoscaler-56d494f878-l795t from kube-system started at 2024-07-03 12:09:46 +0000 UTC (1 container statuses recorded)
  I0703 14:08:40.155484 21 predicates.go:889] 	Container autoscaler ready: true, restart count 0
  I0703 14:08:40.156258 21 predicates.go:887] sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-qwqrq from sonobuoy started at 2024-07-03 12:12:54 +0000 UTC (2 container statuses recorded)
  I0703 14:08:40.157374 21 predicates.go:889] 	Container sonobuoy-worker ready: true, restart count 0
  I0703 14:08:40.157933 21 predicates.go:889] 	Container systemd-logs ready: true, restart count 0
  STEP: Trying to schedule Pod with nonempty NodeSelector. @ 07/03/24 14:08:40.158
  E0703 14:08:40.190478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Considering event: 
  Type = [Warning], Name = [restricted-pod.17deb92f3afe94e3], Reason = [FailedScheduling], Message = [0/3 nodes are available: 3 node(s) didn't match Pod's node affinity/selector. preemption: 0/3 nodes are available: 3 Preemption is not helpful for scheduling.] @ 07/03/24 14:08:40.336
  E0703 14:08:41.190605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:41.299134 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "sched-pred-4492" for this suite. @ 07/03/24 14:08:41.32
• [1.510 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should observe an object deletion if it stops meeting the requirements of the selector [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:257
  STEP: Creating a kubernetes client @ 07/03/24 14:08:41.369
  I0703 14:08:41.369698 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename watch @ 07/03/24 14:08:41.371
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:41.586
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:41.635
  STEP: creating a watch on configmaps with a certain label @ 07/03/24 14:08:41.762
  STEP: creating a new configmap @ 07/03/24 14:08:41.785
  STEP: modifying the configmap once @ 07/03/24 14:08:41.829
  STEP: changing the label value of the configmap @ 07/03/24 14:08:41.876
  STEP: Expecting to observe a delete notification for the watched object @ 07/03/24 14:08:41.947
  I0703 14:08:41.947779 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6555  48d6db47-f5f2-4142-bc95-596f6c7b0cd8 41615 0 2024-07-03 14:08:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-03 14:08:41 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:08:41.948021 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6555  48d6db47-f5f2-4142-bc95-596f6c7b0cd8 41616 0 2024-07-03 14:08:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-03 14:08:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:08:41.948306 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6555  48d6db47-f5f2-4142-bc95-596f6c7b0cd8 41617 0 2024-07-03 14:08:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-03 14:08:41 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time @ 07/03/24 14:08:41.948
  STEP: Expecting not to observe a notification because the object no longer meets the selector's requirements @ 07/03/24 14:08:42.034
  E0703 14:08:42.194999      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:43.195561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:44.195736      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:45.195855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:46.196273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:47.197016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:48.197653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:49.198123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:50.198893      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:51.202434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: changing the label value of the configmap back @ 07/03/24 14:08:52.04
  STEP: modifying the configmap a third time @ 07/03/24 14:08:52.055
  STEP: deleting the configmap @ 07/03/24 14:08:52.084
  STEP: Expecting to observe an add notification for the watched object when the label value was restored @ 07/03/24 14:08:52.094
  I0703 14:08:52.094654 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6555  48d6db47-f5f2-4142-bc95-596f6c7b0cd8 41665 0 2024-07-03 14:08:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-03 14:08:51 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:08:52.094850 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6555  48d6db47-f5f2-4142-bc95-596f6c7b0cd8 41666 0 2024-07-03 14:08:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-03 14:08:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:08:52.095178 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-label-changed  watch-6555  48d6db47-f5f2-4142-bc95-596f6c7b0cd8 41667 0 2024-07-03 14:08:41 +0000 UTC <nil> <nil> map[watch-this-configmap:label-changed-and-restored] map[] [] [] [{e2e.test Update v1 2024-07-03 14:08:52 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 3,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:08:52.095361 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-6555" for this suite. @ 07/03/24 14:08:52.1
• [10.745 seconds]
------------------------------
SS
------------------------------
[sig-apps] Daemon set [Serial] should rollback without unnecessary restarts [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:443
  STEP: Creating a kubernetes client @ 07/03/24 14:08:52.114
  I0703 14:08:52.115035 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename daemonsets @ 07/03/24 14:08:52.115
  E0703 14:08:52.202996      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:08:52.204
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:08:52.231
  I0703 14:08:52.422467 21 daemon_set.go:447] Create a RollingUpdate DaemonSet
  I0703 14:08:52.434864 21 daemon_set.go:454] Check that daemon pods launch on every node of the cluster
  I0703 14:08:52.462508 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:08:52.462575 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 14:08:53.205036      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:53.462925 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:08:53.463148 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 14:08:54.205252      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:54.449239 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:08:54.449434 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 14:08:55.206745      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:55.477173 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 14:08:55.477326 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 14:08:56.207153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:56.449258 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 2
  I0703 14:08:56.449296 21 fixtures.go:130] Node ip-172-31-4-137 is running 0 daemon pod, expected 1
  E0703 14:08:57.207803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:57.463664 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 3
  I0703 14:08:57.471436 21 fixtures.go:135] Number of running nodes: 3, number of available pods: 3 in daemonset daemon-set
  I0703 14:08:57.471561 21 daemon_set.go:458] Update the DaemonSet to trigger a rollout
  I0703 14:08:57.532562 21 daemon_set.go:102] Updating DaemonSet daemon-set
  E0703 14:08:58.208266      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:08:59.208537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:08:59.624477 21 daemon_set.go:493] Roll back the DaemonSet before rollout is complete
  I0703 14:08:59.672348 21 daemon_set.go:102] Updating DaemonSet daemon-set
  I0703 14:08:59.672519 21 daemon_set.go:499] Make sure DaemonSet rollback is complete
  I0703 14:08:59.688744 21 daemon_set.go:1178] Wrong image for pod: daemon-set-7g8xs. Expected: registry.k8s.io/e2e-test-images/httpd:2.4.38-4, got: foo:non-existent.
  I0703 14:08:59.688945 21 daemon_set.go:1183] Pod daemon-set-7g8xs is not available
  E0703 14:09:00.208665      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:01.209130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:09:01.705050 21 daemon_set.go:1183] Pod daemon-set-rw2xk is not available
  STEP: Deleting DaemonSet "daemon-set" @ 07/03/24 14:09:01.765
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-1214, will wait for the garbage collector to delete the pods @ 07/03/24 14:09:01.765
  I0703 14:09:01.908086 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 80.719217ms
  E0703 14:09:02.209821      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:09:02.308265 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 400.174964ms
  E0703 14:09:03.210406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:04.211347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:09:05.037612 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:09:05.037937 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0703 14:09:05.080387 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"41814"},"items":null}

  I0703 14:09:05.089603 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"41815"},"items":null}

  I0703 14:09:05.159524 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-1214" for this suite. @ 07/03/24 14:09:05.169
• [13.066 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Secrets should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/secrets_volume.go:89
  STEP: Creating a kubernetes client @ 07/03/24 14:09:05.181
  I0703 14:09:05.181187 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 14:09:05.181
  E0703 14:09:05.212038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:09:05.244
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:09:05.277
  STEP: Creating secret with name secret-test-map-ce0b215c-77f6-450a-8566-59661db927b4 @ 07/03/24 14:09:05.288
  STEP: Creating a pod to test consume secrets @ 07/03/24 14:09:05.298
  E0703 14:09:06.212346      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:07.212384      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:08.212669      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:09.212907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:09:09.391
  I0703 14:09:09.395486 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-secrets-8c162d45-c28f-4edf-840b-b423ec7b1123 container secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 14:09:09.434
  I0703 14:09:09.494708 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-31" for this suite. @ 07/03/24 14:09:09.498
• [4.335 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute prestop exec hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:154
  STEP: Creating a kubernetes client @ 07/03/24 14:09:09.516
  I0703 14:09:09.516319 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/03/24 14:09:09.516
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:09:09.574
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:09:09.593
  STEP: create the container to handle the HTTPGet hook request. @ 07/03/24 14:09:09.647
  E0703 14:09:10.213784      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:11.213724      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/03/24 14:09:11.827
  E0703 14:09:12.218511      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:13.219458      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/03/24 14:09:13.88
  E0703 14:09:14.220516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:15.226889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:16.227565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:17.228105      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:18.229097      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:19.229608      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:20.230505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:21.230881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:22.231879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:23.231980      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:24.232513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:25.232909      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check prestop hook @ 07/03/24 14:09:25.994
  I0703 14:09:26.043205 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-9720" for this suite. @ 07/03/24 14:09:26.05
• [16.540 seconds]
------------------------------
S
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should perform rolling updates and roll backs of template modifications [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:321
  STEP: Creating a kubernetes client @ 07/03/24 14:09:26.057
  I0703 14:09:26.057420 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 14:09:26.06
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:09:26.149
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:09:26.165
  STEP: Creating service test in namespace statefulset-2814 @ 07/03/24 14:09:26.175
  STEP: Creating a new StatefulSet @ 07/03/24 14:09:26.185
  E0703 14:09:26.233306      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:09:26.249240 21 wait.go:40] Found 0 stateful pods, waiting for 3
  E0703 14:09:27.234163      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:28.234312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:29.235674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:30.235004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:31.235533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:32.238058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:33.236701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:34.236752      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:35.238888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:36.237547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:09:36.237794 21 wait.go:40] Found 2 stateful pods, waiting for 3
  E0703 14:09:37.238435      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:38.238712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:39.239667      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:40.239884      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:41.246464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:42.241727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:43.242842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:44.242967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:45.243963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:09:46.233215 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:09:46.233323 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:09:46.233339 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 14:09:46.244416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:47.252876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:48.253929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:49.254432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:50.254507      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:51.259632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:52.260031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:53.260482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:54.261804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:55.265595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:09:56.237808 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:09:56.247486 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:09:56.250002 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 14:09:56.266340      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:57.266652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:58.267604      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:09:59.267861      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:00.268007      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:01.268152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:02.272364      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:03.272534      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:04.289022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:05.289739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:10:06.233575 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:10:06.233752 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:10:06.233864 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 14:10:06.291207      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:07.291783      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:08.291915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:09.292044      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:10.292186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:11.292334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:12.292855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:13.293311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:14.293647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:15.294569      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:10:16.237155 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:10:16.237362 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:10:16.237458 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Pending - Ready=false
  E0703 14:10:16.295535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:17.295614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:18.295872      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:19.296271      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:20.297058      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:21.297173      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:22.300055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:23.298518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:24.298653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:25.299799      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:10:26.234565 21 wait.go:50] Waiting for pod ss2-0 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:10:26.234718 21 wait.go:50] Waiting for pod ss2-1 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:10:26.234784 21 wait.go:50] Waiting for pod ss2-2 to enter Running - Ready=true, currently Running - Ready=true
  I0703 14:10:26.256915 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  E0703 14:10:26.300560      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:10:26.762377 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 14:10:26.762427 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 14:10:26.762441 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0703 14:10:27.301247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:28.301375      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:29.301464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:30.314308      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:31.302430      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:32.302766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:33.303201      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:34.303837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:35.306543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:36.307868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating StatefulSet template: update image from registry.k8s.io/e2e-test-images/httpd:2.4.38-4 to registry.k8s.io/e2e-test-images/httpd:2.4.39-4 @ 07/03/24 14:10:36.833
  I0703 14:10:36.929018 21 statefulset.go:2241] Updating stateful set ss2
  STEP: Creating a new revision @ 07/03/24 14:10:36.941
  E0703 14:10:37.308244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:38.308365      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:39.308610      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:40.310426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:41.310474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:42.310564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:43.312018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:44.312150      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:45.313628      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:46.313985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating Pods in reverse ordinal order @ 07/03/24 14:10:46.964
  I0703 14:10:46.988225 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  E0703 14:10:47.314187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:10:47.444808 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0703 14:10:47.444862 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 14:10:47.444877 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0703 14:10:48.314514      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:49.314635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:50.315562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:51.315760      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:52.320000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:53.320087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:54.320211      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:55.320712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:56.321055      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:57.321085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:10:57.469048 21 wait.go:158] Waiting for StatefulSet statefulset-2814/ss2 to complete update
  I0703 14:10:57.469100 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0703 14:10:57.469111 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0703 14:10:58.321433      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:10:59.326454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:00.326653      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:01.326822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:02.326942      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:03.327028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:04.327319      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:05.327605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:06.327734      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:07.328225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:11:07.480178 21 wait.go:158] Waiting for StatefulSet statefulset-2814/ss2 to complete update
  I0703 14:11:07.480239 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0703 14:11:07.491493 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0703 14:11:08.328236      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:09.329205      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:10.329317      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:11.329805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:12.330498      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:13.330460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:14.331558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:15.334837      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:16.334894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:17.335873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:11:17.477787 21 wait.go:158] Waiting for StatefulSet statefulset-2814/ss2 to complete update
  I0703 14:11:17.478471 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  I0703 14:11:17.478764 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-1 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0703 14:11:18.336228      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:19.336563      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:20.337049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:21.338447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:22.338626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:23.338759      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:24.338766      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:25.342521      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:26.345456      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:27.347153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:11:27.506711 21 wait.go:158] Waiting for StatefulSet statefulset-2814/ss2 to complete update
  I0703 14:11:27.506771 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-0 to have revision ss2-5459d8585b update revision ss2-7b6c9599d5
  E0703 14:11:28.348299      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:29.348409      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:30.348540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:31.350446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:32.351436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:33.354424      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:34.355692      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:35.356731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:36.358930      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:37.359780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back to a previous revision @ 07/03/24 14:11:37.466
  I0703 14:11:37.466417 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true'
  I0703 14:11:37.826146 21 builder.go:146] stderr: "+ mv -v /usr/local/apache2/htdocs/index.html /tmp/\n"
  I0703 14:11:37.826238 21 builder.go:147] stdout: "'/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'\n"
  I0703 14:11:37.826257 21 statefulset.go:2184] stdout of mv -v /usr/local/apache2/htdocs/index.html /tmp/ || true on ss2-1: '/usr/local/apache2/htdocs/index.html' -> '/tmp/index.html'

  E0703 14:11:38.359858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:39.360029      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:40.360467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:41.360544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:42.360672      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:43.361853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:44.361945      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:45.363000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:46.363089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:47.363273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:11:47.857660 21 statefulset.go:2241] Updating stateful set ss2
  E0703 14:11:48.363441      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:49.364049      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:50.364101      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:51.364325      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:52.370630      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:53.374683      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:54.375223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:55.376133      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:56.378774      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:57.378817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Rolling back update in reverse ordinal order @ 07/03/24 14:11:57.865
  I0703 14:11:57.869867 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=statefulset-2814 exec ss2-1 -- /bin/sh -x -c mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true'
  I0703 14:11:58.232641 21 builder.go:146] stderr: "+ mv -v /tmp/index.html /usr/local/apache2/htdocs/\n"
  I0703 14:11:58.232689 21 builder.go:147] stdout: "'/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'\n"
  I0703 14:11:58.232708 21 statefulset.go:2208] stdout of mv -v /tmp/index.html /usr/local/apache2/htdocs/ || true on ss2-1: '/tmp/index.html' -> '/usr/local/apache2/htdocs/index.html'

  E0703 14:11:58.379162      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:11:59.379519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:00.382751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:01.386038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:02.386483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:03.387382      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:04.386864      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:05.388571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:06.389276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:07.389798      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:08.259223 21 wait.go:158] Waiting for StatefulSet statefulset-2814/ss2 to complete update
  I0703 14:12:08.259284 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  I0703 14:12:08.259297 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-1 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  E0703 14:12:08.390446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:09.390649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:10.391562      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:11.391835      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:12.392790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:13.393523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:14.396434      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:15.395637      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:16.404792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:17.405270      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:18.298613 21 wait.go:158] Waiting for StatefulSet statefulset-2814/ss2 to complete update
  I0703 14:12:18.298674 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  I0703 14:12:18.298690 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-1 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  E0703 14:12:18.413792      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:19.406925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:20.407081      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:21.407699      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:22.408313      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:23.408806      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:24.408889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:25.410025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:26.410537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:27.411870      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:28.256569 21 wait.go:158] Waiting for StatefulSet statefulset-2814/ss2 to complete update
  I0703 14:12:28.256757 21 wait.go:165] Waiting for Pod statefulset-2814/ss2-0 to have revision ss2-7b6c9599d5 update revision ss2-5459d8585b
  E0703 14:12:28.414647      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:29.414756      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:30.414858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:31.415300      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:32.415278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:33.415564      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:34.415677      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:35.417700      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:36.417827      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:37.417876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:38.256851 21 statefulset.go:135] Deleting all statefulset in ns statefulset-2814
  I0703 14:12:38.263012 21 rest.go:150] Scaling statefulset ss2 to 0
  E0703 14:12:38.418031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:39.418159      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:40.420143      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:41.420392      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:42.421603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:43.421851      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:44.422836      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:45.424660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:46.424847      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:47.425376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:48.292817 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 14:12:48.296669 21 rest.go:88] Deleting statefulset ss2
  I0703 14:12:48.308169 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-2814" for this suite. @ 07/03/24 14:12:48.348
• [202.320 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] FieldValidation should create/apply an invalid CR with extra properties for CRD with validation schema [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/field_validation.go:350
  STEP: Creating a kubernetes client @ 07/03/24 14:12:48.377
  I0703 14:12:48.377946 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename field-validation @ 07/03/24 14:12:48.379
  E0703 14:12:48.425894      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:12:48.482
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:12:48.486
  I0703 14:12:48.532388 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  W0703 14:12:48.535352      21 field_validation.go:423] props: &JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{spec: {  <nil>  object   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[cronSpec:{  <nil>  string   nil <nil> false <nil> false <nil> <nil> ^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$ <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} foo:{  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []} ports:{  <nil>  array   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] &JSONSchemaPropsOrArray{Schema:&JSONSchemaProps{ID:,Schema:,Ref:nil,Description:,Type:object,Format:,Title:,Default:nil,Maximum:nil,ExclusiveMaximum:false,Minimum:nil,ExclusiveMinimum:false,MaxLength:nil,MinLength:nil,Pattern:,MaxItems:nil,MinItems:nil,UniqueItems:false,MultipleOf:nil,Enum:[]JSON{},MaxProperties:nil,MinProperties:nil,Required:[containerPort protocol],Items:nil,AllOf:[]JSONSchemaProps{},OneOf:[]JSONSchemaProps{},AnyOf:[]JSONSchemaProps{},Not:nil,Properties:map[string]JSONSchemaProps{containerPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostIP: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},hostPort: {  <nil>  integer int32  nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},name: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},protocol: {  <nil>  string   nil <nil> false <nil> false <nil> <nil>  <nil> <nil> false <nil> [] <nil> <nil> [] nil [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},},JSONSchemas:[]JSONSchemaProps{},} [] [] [] nil map[] nil map[] map[] nil map[] nil nil false <nil> false false [containerPort protocol] 0xc004ec0790 <nil> []}] nil map[] map[] nil map[] nil nil false <nil> false false [] <nil> <nil> []},},AdditionalProperties:nil,PatternProperties:map[string]JSONSchemaProps{},Dependencies:JSONSchemaDependencies{},AdditionalItems:nil,Definitions:JSONSchemaDefinitions{},ExternalDocs:nil,Example:nil,Nullable:false,XPreserveUnknownFields:nil,XEmbeddedResource:false,XIntOrString:false,XListMapKeys:[],XListType:nil,XMapType:nil,XValidations:[]ValidationRule{},}
  E0703 14:12:49.426423      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:50.426487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  W0703 14:12:51.380394      21 warnings.go:70] unknown field "alpha"
  W0703 14:12:51.380683      21 warnings.go:70] unknown field "beta"
  W0703 14:12:51.380857      21 warnings.go:70] unknown field "delta"
  W0703 14:12:51.380953      21 warnings.go:70] unknown field "epsilon"
  W0703 14:12:51.381043      21 warnings.go:70] unknown field "gamma"
  E0703 14:12:51.428221      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:52.335712 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "field-validation-5536" for this suite. @ 07/03/24 14:12:52.356
• [4.012 seconds]
------------------------------
SSSSS
------------------------------
[sig-auth] SubjectReview should support SubjectReview API operations [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/subjectreviews.go:50
  STEP: Creating a kubernetes client @ 07/03/24 14:12:52.39
  I0703 14:12:52.390065 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename subjectreview @ 07/03/24 14:12:52.391
  E0703 14:12:52.432215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:12:52.461
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:12:52.48
  STEP: Creating a Serviceaccount "e2e" in namespace "subjectreview-2142" @ 07/03/24 14:12:52.493
  I0703 14:12:52.519726 21 subjectreviews.go:66] saUsername: "system:serviceaccount:subjectreview-2142:e2e"
  I0703 14:12:52.519775 21 subjectreviews.go:69] saGroups: []string{"system:authenticated", "system:serviceaccounts", "system:serviceaccounts:subjectreview-2142"}
  I0703 14:12:52.519791 21 subjectreviews.go:71] saUID: "e10ae674-0ac2-40be-9898-9d8d87d78f7b"
  STEP: Creating clientset to impersonate "system:serviceaccount:subjectreview-2142:e2e" @ 07/03/24 14:12:52.525
  STEP: Creating SubjectAccessReview for "system:serviceaccount:subjectreview-2142:e2e" @ 07/03/24 14:12:52.525
  I0703 14:12:52.533505 21 subjectreviews.go:102] sarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  STEP: Verifying as "system:serviceaccount:subjectreview-2142:e2e" api 'list' configmaps in "subjectreview-2142" namespace @ 07/03/24 14:12:52.533
  I0703 14:12:52.545255 21 subjectreviews.go:121] SubjectAccessReview has been verified
  STEP: Creating a LocalSubjectAccessReview for "system:serviceaccount:subjectreview-2142:e2e" @ 07/03/24 14:12:52.545
  I0703 14:12:52.553461 21 subjectreviews.go:144] lsarResponse Status: v1.SubjectAccessReviewStatus{Allowed:false, Denied:false, Reason:"", EvaluationError:""}
  I0703 14:12:52.555188 21 subjectreviews.go:150] LocalSubjectAccessReview has been verified
  I0703 14:12:52.555365 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "subjectreview-2142" for this suite. @ 07/03/24 14:12:52.559
• [0.218 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-cli] Kubectl client Kubectl describe should check if kubectl describe prints relevant information for rc and pods [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1394
  STEP: Creating a kubernetes client @ 07/03/24 14:12:52.607
  I0703 14:12:52.607992 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 14:12:52.608
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:12:52.73
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:12:52.753
  I0703 14:12:52.771879 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1932 create -f -'
  I0703 14:12:52.998247 21 builder.go:146] stderr: ""
  I0703 14:12:52.998328 21 builder.go:147] stdout: "replicationcontroller/agnhost-primary created\n"
  I0703 14:12:52.998390 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1932 create -f -'
  I0703 14:12:53.425837 21 builder.go:146] stderr: ""
  I0703 14:12:53.425881 21 builder.go:147] stdout: "service/agnhost-primary created\n"
  STEP: Waiting for Agnhost primary to start. @ 07/03/24 14:12:53.425
  E0703 14:12:53.430075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:12:54.433486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:54.482887 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 14:12:54.482967 21 framework.go:733] Found 0 / 1
  E0703 14:12:55.433571      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:55.439583 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 14:12:55.439843 21 framework.go:733] Found 0 / 1
  E0703 14:12:56.432099      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:56.475239 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 14:12:56.475589 21 framework.go:733] Found 1 / 1
  I0703 14:12:56.478573 21 framework.go:742] WaitFor completed with timeout 5m0s.  Pods found = 1 out of 1
  I0703 14:12:56.542724 21 framework.go:692] Selector matched 1 pods for map[app:agnhost]
  I0703 14:12:56.542767 21 framework.go:765] ForEach: Found 1 pods from the filter.  Now looping through them.
  I0703 14:12:56.542817 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1932 describe pod agnhost-primary-k7zbz'
  I0703 14:12:56.922496 21 builder.go:146] stderr: ""
  I0703 14:12:56.922578 21 builder.go:147] stdout: "Name:             agnhost-primary-k7zbz\nNamespace:        kubectl-1932\nPriority:         0\nService Account:  default\nNode:             ip-172-31-5-183/172.31.5.183\nStart Time:       Wed, 03 Jul 2024 14:12:53 +0000\nLabels:           app=agnhost\n                  role=primary\nAnnotations:      cni.projectcalico.org/containerID: 920ac001f79b6294375605e79216e912747ed031c51bd098900c13c485f0efc5\n                  cni.projectcalico.org/podIP: 10.42.1.101/32\n                  cni.projectcalico.org/podIPs: 10.42.1.101/32\nStatus:           Running\nIP:               10.42.1.101\nIPs:\n  IP:           10.42.1.101\nControlled By:  ReplicationController/agnhost-primary\nContainers:\n  agnhost-primary:\n    Container ID:   docker://07d4f9f6438dd7e47db76e7800c12fd42701d04b0c139cc461653083db646c0e\n    Image:          registry.k8s.io/e2e-test-images/agnhost:2.47\n    Image ID:       docker-pullable://registry.k8s.io/e2e-test-images/agnhost@sha256:cc249acbd34692826b2b335335615e060fdb3c0bca4954507aa3a1d1194de253\n    Port:           6379/TCP\n    Host Port:      0/TCP\n    State:          Running\n      Started:      Wed, 03 Jul 2024 14:12:54 +0000\n    Ready:          True\n    Restart Count:  0\n    Environment:    <none>\n    Mounts:\n      /var/run/secrets/kubernetes.io/serviceaccount from kube-api-access-28rk7 (ro)\nConditions:\n  Type                        Status\n  PodReadyToStartContainers   True \n  Initialized                 True \n  Ready                       True \n  ContainersReady             True \n  PodScheduled                True \nVolumes:\n  kube-api-access-28rk7:\n    Type:                    Projected (a volume that contains injected data from multiple sources)\n    TokenExpirationSeconds:  3607\n    ConfigMapName:           kube-root-ca.crt\n    ConfigMapOptional:       <nil>\n    DownwardAPI:             true\nQoS Class:                   BestEffort\nNode-Selectors:              <none>\nTolerations:                 node.kubernetes.io/not-ready:NoExecute op=Exists for 300s\n                             node.kubernetes.io/unreachable:NoExecute op=Exists for 300s\nEvents:\n  Type    Reason     Age   From               Message\n  ----    ------     ----  ----               -------\n  Normal  Scheduled  3s    default-scheduler  Successfully assigned kubectl-1932/agnhost-primary-k7zbz to ip-172-31-5-183\n  Normal  Pulled     2s    kubelet            Container image \"registry.k8s.io/e2e-test-images/agnhost:2.47\" already present on machine\n  Normal  Created    2s    kubelet            Created container agnhost-primary\n  Normal  Started    2s    kubelet            Started container agnhost-primary\n"
  I0703 14:12:56.922645 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1932 describe rc agnhost-primary'
  I0703 14:12:57.289969 21 builder.go:146] stderr: ""
  I0703 14:12:57.290036 21 builder.go:147] stdout: "Name:         agnhost-primary\nNamespace:    kubectl-1932\nSelector:     app=agnhost,role=primary\nLabels:       app=agnhost\n              role=primary\nAnnotations:  <none>\nReplicas:     1 current / 1 desired\nPods Status:  1 Running / 0 Waiting / 0 Succeeded / 0 Failed\nPod Template:\n  Labels:  app=agnhost\n           role=primary\n  Containers:\n   agnhost-primary:\n    Image:         registry.k8s.io/e2e-test-images/agnhost:2.47\n    Port:          6379/TCP\n    Host Port:     0/TCP\n    Environment:   <none>\n    Mounts:        <none>\n  Volumes:         <none>\n  Node-Selectors:  <none>\n  Tolerations:     <none>\nEvents:\n  Type    Reason            Age   From                    Message\n  ----    ------            ----  ----                    -------\n  Normal  SuccessfulCreate  5s    replication-controller  Created pod: agnhost-primary-k7zbz\n"
  I0703 14:12:57.290105 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1932 describe service agnhost-primary'
  E0703 14:12:57.433194      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:12:57.535162 21 builder.go:146] stderr: ""
  I0703 14:12:57.535222 21 builder.go:147] stdout: "Name:              agnhost-primary\nNamespace:         kubectl-1932\nLabels:            app=agnhost\n                   role=primary\nAnnotations:       <none>\nSelector:          app=agnhost,role=primary\nType:              ClusterIP\nIP Family Policy:  SingleStack\nIP Families:       IPv4\nIP:                10.43.47.120\nIPs:               10.43.47.120\nPort:              <unset>  6379/TCP\nTargetPort:        agnhost-server/TCP\nEndpoints:         10.42.1.101:6379\nSession Affinity:  None\nEvents:            <none>\n"
  I0703 14:12:57.577858 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1932 describe node ip-172-31-4-137'
  I0703 14:12:57.948241 21 builder.go:146] stderr: ""
  I0703 14:12:57.948392 21 builder.go:147] stdout: "Name:               ip-172-31-4-137\nRoles:              controlplane,etcd,worker\nLabels:             beta.kubernetes.io/arch=amd64\n                    beta.kubernetes.io/os=linux\n                    kubernetes.io/arch=amd64\n                    kubernetes.io/hostname=ip-172-31-4-137\n                    kubernetes.io/os=linux\n                    node-role.kubernetes.io/controlplane=true\n                    node-role.kubernetes.io/etcd=true\n                    node-role.kubernetes.io/worker=true\nAnnotations:        flannel.alpha.coreos.com/backend-data: {\"VNI\":1,\"VtepMAC\":\"9a:9b:37:5d:b7:44\"}\n                    flannel.alpha.coreos.com/backend-type: vxlan\n                    flannel.alpha.coreos.com/kube-subnet-manager: true\n                    flannel.alpha.coreos.com/public-ip: 172.31.4.137\n                    management.cattle.io/pod-limits: {\"memory\":\"170Mi\"}\n                    management.cattle.io/pod-requests: {\"cpu\":\"450m\",\"memory\":\"270Mi\",\"pods\":\"11\"}\n                    node.alpha.kubernetes.io/ttl: 0\n                    rke.cattle.io/external-ip: 18.225.56.123\n                    rke.cattle.io/internal-ip: 172.31.4.137\n                    volumes.kubernetes.io/controller-managed-attach-detach: true\nCreationTimestamp:  Wed, 03 Jul 2024 12:00:41 +0000\nTaints:             <none>\nUnschedulable:      false\nLease:\n  HolderIdentity:  ip-172-31-4-137\n  AcquireTime:     <unset>\n  RenewTime:       Wed, 03 Jul 2024 14:12:53 +0000\nConditions:\n  Type                 Status  LastHeartbeatTime                 LastTransitionTime                Reason                       Message\n  ----                 ------  -----------------                 ------------------                ------                       -------\n  NetworkUnavailable   False   Wed, 03 Jul 2024 12:01:32 +0000   Wed, 03 Jul 2024 12:01:32 +0000   FlannelIsUp                  Flannel is running on this node\n  MemoryPressure       False   Wed, 03 Jul 2024 14:11:20 +0000   Wed, 03 Jul 2024 12:00:41 +0000   KubeletHasSufficientMemory   kubelet has sufficient memory available\n  DiskPressure         False   Wed, 03 Jul 2024 14:11:20 +0000   Wed, 03 Jul 2024 12:00:41 +0000   KubeletHasNoDiskPressure     kubelet has no disk pressure\n  PIDPressure          False   Wed, 03 Jul 2024 14:11:20 +0000   Wed, 03 Jul 2024 12:00:41 +0000   KubeletHasSufficientPID      kubelet has sufficient PID available\n  Ready                True    Wed, 03 Jul 2024 14:11:20 +0000   Wed, 03 Jul 2024 12:01:11 +0000   KubeletReady                 kubelet is posting ready status\nAddresses:\n  InternalIP:  172.31.4.137\n  Hostname:    ip-172-31-4-137\nCapacity:\n  cpu:                    2\n  ephemeral-storage:      50758604Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3969472Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nAllocatable:\n  cpu:                    2\n  ephemeral-storage:      50758604Ki\n  hugepages-1Gi:          0\n  hugepages-2Mi:          0\n  memory:                 3969472Ki\n  pods:                   110\n  scheduling.k8s.io/foo:  5\nSystem Info:\n  Machine ID:                 \n  System UUID:                ec211205-a048-cf7b-9b48-0632a46f50ed\n  Boot ID:                    f6b77027-0188-4761-b488-30c3aab2d817\n  Kernel Version:             5.4.0-1035-aws\n  OS Image:                   Ubuntu 20.04.1 LTS\n  Operating System:           linux\n  Architecture:               amd64\n  Container Runtime Version:  docker://25.0.5\n  Kubelet Version:            v1.30.2\n  Kube-Proxy Version:         v1.30.2\nPodCIDR:                      10.42.0.0/24\nPodCIDRs:                     10.42.0.0/24\nNon-terminated Pods:          (11 in total)\n  Namespace                   Name                                                       CPU Requests  CPU Limits  Memory Requests  Memory Limits  Age\n  ---------                   ----                                                       ------------  ----------  ---------------  -------------  ---\n  cattle-fleet-system         fleet-agent-0                                              0 (0%)        0 (0%)      0 (0%)           0 (0%)         129m\n  cattle-system               cattle-cluster-agent-6787cd6c66-dmpfp                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         128m\n  cattle-system               cattle-cluster-agent-6787cd6c66-rf45l                      0 (0%)        0 (0%)      0 (0%)           0 (0%)         131m\n  cattle-system               cattle-node-agent-xv2b5                                    0 (0%)        0 (0%)      0 (0%)           0 (0%)         131m\n  cattle-system               kube-api-auth-n7vdq                                        0 (0%)        0 (0%)      0 (0%)           0 (0%)         131m\n  cattle-system               rancher-webhook-7b5476cb6c-999r2                           0 (0%)        0 (0%)      0 (0%)           0 (0%)         129m\n  kube-system                 calico-kube-controllers-5b878c8d6f-n9qtc                   0 (0%)        0 (0%)      0 (0%)           0 (0%)         132m\n  kube-system                 canal-zpdht                                                250m (12%)    0 (0%)      0 (0%)           0 (0%)         132m\n  kube-system                 coredns-878dbb559-4hhd8                                    100m (5%)     0 (0%)      70Mi (1%)        170Mi (4%)     131m\n  kube-system                 metrics-server-85f57469bf-dkb2p                            100m (5%)     0 (0%)      200Mi (5%)       0 (0%)         131m\n  sonobuoy                    sonobuoy-systemd-logs-daemon-set-f51a31b7552a4de8-64nlg    0 (0%)        0 (0%)      0 (0%)           0 (0%)         120m\nAllocated resources:\n  (Total limits may be over 100 percent, i.e., overcommitted.)\n  Resource               Requests    Limits\n  --------               --------    ------\n  cpu                    450m (22%)  0 (0%)\n  memory                 270Mi (6%)  170Mi (4%)\n  ephemeral-storage      0 (0%)      0 (0%)\n  hugepages-1Gi          0 (0%)      0 (0%)\n  hugepages-2Mi          0 (0%)      0 (0%)\n  scheduling.k8s.io/foo  0           0\nEvents:                  <none>\n"
  I0703 14:12:57.948470 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-1932 describe namespace kubectl-1932'
  I0703 14:12:58.375075 21 builder.go:146] stderr: ""
  I0703 14:12:58.375134 21 builder.go:147] stdout: "Name:         kubectl-1932\nLabels:       e2e-framework=kubectl\n              e2e-run=1bfbf3f8-00da-47c6-ae6e-0b1d8103a11e\n              kubernetes.io/metadata.name=kubectl-1932\n              pod-security.kubernetes.io/audit=baseline\n              pod-security.kubernetes.io/enforce=baseline\n              pod-security.kubernetes.io/warn=baseline\nAnnotations:  cattle.io/status:\n                {\"Conditions\":[{\"Type\":\"ResourceQuotaInit\",\"Status\":\"True\",\"Message\":\"\",\"LastUpdateTime\":\"2024-07-03T14:12:53Z\"},{\"Type\":\"InitialRolesPopu...\n              lifecycle.cattle.io/create.namespace-auth: true\nStatus:       Active\n\nNo resource quota.\n\nNo LimitRange resource.\n"
  I0703 14:12:58.375239 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0703 14:12:58.433318      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "kubectl-1932" for this suite. @ 07/03/24 14:12:58.5
• [5.937 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:78
  STEP: Creating a kubernetes client @ 07/03/24 14:12:58.546
  I0703 14:12:58.546174 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:12:58.562
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:12:58.814
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:12:58.843
  STEP: Creating projection with secret that has name projected-secret-test-map-55ad4e05-e4fc-47d3-b849-11e384f8ea6b @ 07/03/24 14:12:58.895
  STEP: Creating a pod to test consume secrets @ 07/03/24 14:12:58.978
  E0703 14:12:59.434132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:00.434475      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:01.438357      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:02.440431      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:13:03.158
  I0703 14:13:03.172312 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-3b6307b5-93e4-428d-98da-5fc1564ac576 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 14:13:03.256
  I0703 14:13:03.376274 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6763" for this suite. @ 07/03/24 14:13:03.382
• [4.850 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-storage] VolumeAttachment Conformance should run through the lifecycle of a VolumeAttachment [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/volume_attachment.go:57
  STEP: Creating a kubernetes client @ 07/03/24 14:13:03.397
  I0703 14:13:03.397180 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename volumeattachment @ 07/03/24 14:13:03.399
  E0703 14:13:03.440801      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:03.476
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:03.51
  STEP: Create VolumeAttachment "va-e2e-68pmk" on node "ip-172-31-4-137" @ 07/03/24 14:13:03.558
  STEP: Get VolumeAttachment "va-e2e-68pmk" on node "ip-172-31-4-137" @ 07/03/24 14:13:03.599
  STEP: Patch VolumeAttachment "va-e2e-68pmk" on node "ip-172-31-4-137" @ 07/03/24 14:13:03.626
  STEP: List VolumeAttachments with "va-e2e-68pmk=patched" label @ 07/03/24 14:13:03.707
  STEP: Delete VolumeAttachment "va-e2e-68pmk" on node "ip-172-31-4-137" @ 07/03/24 14:13:03.738
  STEP: Confirm deletion of VolumeAttachment "va-e2e-68pmk" on node "ip-172-31-4-137" @ 07/03/24 14:13:03.767
  STEP: Create VolumeAttachment "va-e2e-72znz" on node "ip-172-31-5-183" @ 07/03/24 14:13:03.814
  STEP: Update the VolumeAttachment "va-e2e-72znz" on node "ip-172-31-5-183" with label "va-e2e=updated" @ 07/03/24 14:13:03.856
  STEP: Create VolumeAttachment "va-e2e-cjgnt" on node "ip-172-31-4-137" @ 07/03/24 14:13:03.917
  STEP: Update the VolumeAttachment "va-e2e-cjgnt" on node "ip-172-31-4-137" with label "va-e2e=updated" @ 07/03/24 14:13:03.937
  STEP: DeleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/03/24 14:13:03.994
  STEP: Confirm deleteCollection of VolumeAttachments with "va-e2e=updated" label @ 07/03/24 14:13:04.048
  I0703 14:13:04.053751 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "volumeattachment-9228" for this suite. @ 07/03/24 14:13:04.065
• [0.689 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume with mappings and Item Mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:88
  STEP: Creating a kubernetes client @ 07/03/24 14:13:04.094
  I0703 14:13:04.094406 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:13:04.095
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:04.275
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:04.285
  STEP: Creating projection with secret that has name projected-secret-test-map-ceded3c9-b614-4c18-9e49-bb0608344944 @ 07/03/24 14:13:04.295
  STEP: Creating a pod to test consume secrets @ 07/03/24 14:13:04.317
  E0703 14:13:04.441067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:05.441606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:06.441790      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:07.446595      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:08.448593      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:13:08.458
  I0703 14:13:08.510910 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-958c0137-f7e2-4dfd-89f1-7d71b7be9967 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 14:13:08.532
  I0703 14:13:08.583739 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-3265" for this suite. @ 07/03/24 14:13:08.593
• [4.516 seconds]
------------------------------
SSSSS
------------------------------
[sig-api-machinery] CustomResourcePublishOpenAPI [Privileged:ClusterAdmin] works for multiple CRDs of same group but different versions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/crd_publish_openapi.go:310
  STEP: Creating a kubernetes client @ 07/03/24 14:13:08.609
  I0703 14:13:08.609987 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename crd-publish-openapi @ 07/03/24 14:13:08.611
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:08.7
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:08.73
  STEP: CRs in the same group but different versions (one multiversion CRD) show up in OpenAPI documentation @ 07/03/24 14:13:08.743
  I0703 14:13:08.744382 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 14:13:09.451019      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:10.451652      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:11.457651      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:12.462394      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:13.470541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:14.467368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:15.486258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:16.487353      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:17.490106      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:18.488504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:19.489137      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:20.490599      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: CRs in the same group but different versions (two CRDs) show up in OpenAPI documentation @ 07/03/24 14:13:20.548
  I0703 14:13:20.566775 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 14:13:21.492632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:22.494059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:13:22.677692 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 14:13:23.494147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:24.526078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:25.526889      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:26.528574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:27.528696      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:28.529561      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:29.530666      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:30.530619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:31.530853      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:13:31.680329 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "crd-publish-openapi-7588" for this suite. @ 07/03/24 14:13:31.716
• [23.145 seconds]
------------------------------
SSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:46
  STEP: Creating a kubernetes client @ 07/03/24 14:13:31.755
  I0703 14:13:31.755322 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:13:31.756
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:31.883
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:31.922
  STEP: Creating projection with secret that has name projected-secret-test-dd0774cf-f406-4db2-8784-99b63c852386 @ 07/03/24 14:13:31.968
  STEP: Creating a pod to test consume secrets @ 07/03/24 14:13:32.015
  E0703 14:13:32.531543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:33.531990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:34.532225      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:35.532786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:13:36.158
  I0703 14:13:36.164881 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-50349bec-63e8-4c5f-8941-750c1dc42817 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 14:13:36.187
  I0703 14:13:36.208763 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-6157" for this suite. @ 07/03/24 14:13:36.22
• [4.489 seconds]
------------------------------
[sig-node] InitContainer [NodeConformance] should invoke init containers on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:178
  STEP: Creating a kubernetes client @ 07/03/24 14:13:36.244
  I0703 14:13:36.244562 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename init-container @ 07/03/24 14:13:36.245
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:36.328
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:36.354
  STEP: creating the pod @ 07/03/24 14:13:36.362
  I0703 14:13:36.362467 21 init_container.go:213] PodSpec: initContainers in spec.initContainers
  E0703 14:13:36.535606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:37.535959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:38.536739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:39.537253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:40.537410      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:41.538535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:13:42.096853 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-1567" for this suite. @ 07/03/24 14:13:42.147
• [5.948 seconds]
------------------------------
S
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should mutate custom resource with different stored version [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:315
  STEP: Creating a kubernetes client @ 07/03/24 14:13:42.192
  I0703 14:13:42.192637 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 14:13:42.199
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:42.305
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:42.324
  STEP: Setting up server cert @ 07/03/24 14:13:42.466
  E0703 14:13:42.566481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 14:13:43.084
  STEP: Deploying the webhook pod @ 07/03/24 14:13:43.103
  STEP: Wait for the deployment to be ready @ 07/03/24 14:13:43.139
  I0703 14:13:43.158726 21 deployment.go:222] new replicaset for deployment "sample-webhook-deployment" is yet to be created
  E0703 14:13:43.567360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:44.567486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:13:45.173494 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 13, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 13, 43, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 13, 43, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 13, 43, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:13:45.568345      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:46.568513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 14:13:47.178
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 14:13:47.223
  E0703 14:13:47.569547      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:13:48.230431 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  I0703 14:13:48.257929 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  E0703 14:13:48.570193      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Registering the mutating webhook for custom resource e2e-test-webhook-1767-crds.webhook.example.com via the AdmissionRegistration API @ 07/03/24 14:13:48.823
  STEP: Creating a custom resource while v1 is storage version @ 07/03/24 14:13:48.943
  E0703 14:13:49.570518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:50.574701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Patching Custom Resource Definition to set v2 as storage @ 07/03/24 14:13:51.109
  STEP: Patching the custom resource while v2 is storage version @ 07/03/24 14:13:51.224
  E0703 14:13:51.574582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:13:52.464934 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-7464" for this suite. @ 07/03/24 14:13:52.54
  E0703 14:13:52.575641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-2686" for this suite. @ 07/03/24 14:13:52.587
• [10.454 seconds]
------------------------------
SSSSSS
------------------------------
[sig-node] Kubelet when scheduling a busybox command that always fails in a pod should have an terminated reason [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/kubelet.go:109
  STEP: Creating a kubernetes client @ 07/03/24 14:13:52.648
  I0703 14:13:52.648819 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubelet-test @ 07/03/24 14:13:52.652
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:52.824
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:52.9
  E0703 14:13:53.579566      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:54.579030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:55.580114      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:56.582582      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:13:57.014198 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubelet-test-2659" for this suite. @ 07/03/24 14:13:57.021
• [4.387 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a replication controller. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:397
  STEP: Creating a kubernetes client @ 07/03/24 14:13:57.035
  I0703 14:13:57.035873 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 14:13:57.037
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:13:57.196
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:13:57.222
  STEP: Counting existing ResourceQuota @ 07/03/24 14:13:57.262
  E0703 14:13:57.582922      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:58.584202      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:13:59.584533      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:00.584761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:01.584865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/03/24 14:14:02.307
  STEP: Ensuring resource quota status is calculated @ 07/03/24 14:14:02.328
  E0703 14:14:02.586042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:03.586406      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ReplicationController @ 07/03/24 14:14:04.333
  STEP: Ensuring resource quota status captures replication controller creation @ 07/03/24 14:14:04.354
  E0703 14:14:04.586984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:05.588446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting a ReplicationController @ 07/03/24 14:14:06.359
  STEP: Ensuring resource quota status released usage @ 07/03/24 14:14:06.377
  E0703 14:14:06.589387      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:07.589481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:08.382712 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-6751" for this suite. @ 07/03/24 14:14:08.393
• [11.379 seconds]
------------------------------
SSSSSS
------------------------------
[sig-auth] ServiceAccounts should run through the lifecycle of a ServiceAccount [Conformance] [sig-auth, Conformance]
k8s.io/kubernetes/test/e2e/auth/service_accounts.go:649
  STEP: Creating a kubernetes client @ 07/03/24 14:14:08.415
  I0703 14:14:08.415481 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename svcaccounts @ 07/03/24 14:14:08.416
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:14:08.467
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:14:08.485
  STEP: creating a ServiceAccount @ 07/03/24 14:14:08.496
  STEP: watching for the ServiceAccount to be added @ 07/03/24 14:14:08.538
  STEP: patching the ServiceAccount @ 07/03/24 14:14:08.565
  E0703 14:14:08.598451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: finding ServiceAccount in list of all ServiceAccounts (by LabelSelector) @ 07/03/24 14:14:08.615
  STEP: deleting the ServiceAccount @ 07/03/24 14:14:08.631
  I0703 14:14:08.649725 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "svcaccounts-6242" for this suite. @ 07/03/24 14:14:08.653
• [0.246 seconds]
------------------------------
SSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Watchers should be able to restart watching from the last resource version observed by the previous watch [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/watch.go:191
  STEP: Creating a kubernetes client @ 07/03/24 14:14:08.662
  I0703 14:14:08.662476 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename watch @ 07/03/24 14:14:08.663
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:14:08.747
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:14:08.782
  STEP: creating a watch on configmaps @ 07/03/24 14:14:08.792
  STEP: creating a new configmap @ 07/03/24 14:14:08.796
  STEP: modifying the configmap once @ 07/03/24 14:14:08.805
  STEP: closing the watch once it receives two notifications @ 07/03/24 14:14:08.819
  I0703 14:14:08.819331 21 watch.go:431] Got : ADDED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-944  e4ef1b5d-b9fd-4250-9397-0e44c515e54d 43486 0 2024-07-03 14:14:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-03 14:14:08 +0000 UTC FieldsV1 {"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:14:08.819936 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-944  e4ef1b5d-b9fd-4250-9397-0e44c515e54d 43487 0 2024-07-03 14:14:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-03 14:14:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 1,},BinaryData:map[string][]byte{},Immutable:nil,}
  STEP: modifying the configmap a second time, while the watch is closed @ 07/03/24 14:14:08.82
  STEP: creating a new watch on configmaps from the last resource version observed by the first watch @ 07/03/24 14:14:08.835
  STEP: deleting the configmap @ 07/03/24 14:14:08.846
  STEP: Expecting to observe notifications for all changes to the configmap since the first watch closed @ 07/03/24 14:14:08.87
  I0703 14:14:08.870956 21 watch.go:431] Got : MODIFIED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-944  e4ef1b5d-b9fd-4250-9397-0e44c515e54d 43488 0 2024-07-03 14:14:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-03 14:14:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:14:08.871249 21 watch.go:431] Got : DELETED &ConfigMap{ObjectMeta:{e2e-watch-test-watch-closed  watch-944  e4ef1b5d-b9fd-4250-9397-0e44c515e54d 43489 0 2024-07-03 14:14:08 +0000 UTC <nil> <nil> map[watch-this-configmap:watch-closed-and-restarted] map[] [] [] [{e2e.test Update v1 2024-07-03 14:14:08 +0000 UTC FieldsV1 {"f:data":{".":{},"f:mutation":{}},"f:metadata":{"f:labels":{".":{},"f:watch-this-configmap":{}}}} }]},Data:map[string]string{mutation: 2,},BinaryData:map[string][]byte{},Immutable:nil,}
  I0703 14:14:08.871671 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "watch-944" for this suite. @ 07/03/24 14:14:08.883
• [0.262 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected downwardAPI should set mode on item file [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_downwardapi.go:86
  STEP: Creating a kubernetes client @ 07/03/24 14:14:08.924
  I0703 14:14:08.924683 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:14:08.925
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:14:09.005
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:14:09.014
  STEP: Creating a pod to test downward API volume plugin @ 07/03/24 14:14:09.042
  E0703 14:14:09.603839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:10.606457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:11.606834      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:12.607538      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:13.608429      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:14.611004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:14:15.119
  I0703 14:14:15.121727 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downwardapi-volume-14d507c9-3e85-465b-b796-e4fd2e5df814 container client-container: <nil>
  STEP: delete the pod @ 07/03/24 14:14:15.132
  I0703 14:14:15.174742 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-827" for this suite. @ 07/03/24 14:14:15.179
• [6.265 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-node] Probing container with readiness probe should not be ready before initial delay and never restart [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/container_probe.go:72
  STEP: Creating a kubernetes client @ 07/03/24 14:14:15.19
  I0703 14:14:15.190766 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-probe @ 07/03/24 14:14:15.191
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:14:15.29
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:14:15.318
  E0703 14:14:15.611519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:16.615737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:17.616743      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:18.617329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:19.617482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:20.618584      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:21.618460      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:22.618846      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:23.620494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:24.621189      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:25.622146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:26.622450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:27.626218      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:28.626668      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:29.626690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:30.627639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:31.628748      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:32.629047      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:33.629632      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:34.630082      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:35.631145      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:36.631483      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:37.587205 21 container_probe.go:92] Container started at 2024-07-03 14:14:17 +0000 UTC, pod became ready at 2024-07-03 14:14:35 +0000 UTC
  I0703 14:14:37.587889 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-probe-5058" for this suite. @ 07/03/24 14:14:37.6
• [22.429 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-apps] Daemon set [Serial] should run and stop complex daemon [Conformance] [sig-apps, Serial, Conformance]
k8s.io/kubernetes/test/e2e/apps/daemon_set.go:205
  STEP: Creating a kubernetes client @ 07/03/24 14:14:37.62
  I0703 14:14:37.621078 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename daemonsets @ 07/03/24 14:14:37.628
  E0703 14:14:37.632167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:14:37.715
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:14:37.729
  I0703 14:14:37.939609 21 daemon_set.go:208] Creating daemon "daemon-set" with a node selector
  STEP: Initially, daemon pods should not be running on any nodes. @ 07/03/24 14:14:37.962
  I0703 14:14:37.972100 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:37.972286 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Change node label to blue, check that daemon pod is launched. @ 07/03/24 14:14:37.972
  I0703 14:14:38.223730 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:38.223794 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  E0703 14:14:38.632478      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:39.191663 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:39.191836 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  E0703 14:14:39.632840      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:40.199699 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:40.199989 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  E0703 14:14:40.635350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:41.191949 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0703 14:14:41.192131 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Update the node label to green, and wait for daemons to be unscheduled @ 07/03/24 14:14:41.201
  I0703 14:14:41.286879 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0703 14:14:41.286925 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 1 in daemonset daemon-set
  E0703 14:14:41.634153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:42.283595 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:42.283639 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  STEP: Update DaemonSet node selector to green, and change its update strategy to RollingUpdate @ 07/03/24 14:14:42.283
  I0703 14:14:42.313600 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:42.313871 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  E0703 14:14:42.634472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:43.327041 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:43.327232 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  E0703 14:14:43.634732      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:44.322999 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:44.323263 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  E0703 14:14:44.638687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:45.319717 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:45.319898 21 fixtures.go:130] Node ip-172-31-4-210 is running 0 daemon pod, expected 1
  E0703 14:14:45.638855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:46.313460 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 1
  I0703 14:14:46.313651 21 fixtures.go:135] Number of running nodes: 1, number of available pods: 1 in daemonset daemon-set
  STEP: Deleting DaemonSet "daemon-set" @ 07/03/24 14:14:46.327
  STEP: deleting DaemonSet.extensions daemon-set in namespace daemonsets-2456, will wait for the garbage collector to delete the pods @ 07/03/24 14:14:46.334
  I0703 14:14:46.410518 21 resources.go:139] Deleting DaemonSet.extensions daemon-set took: 5.205147ms
  I0703 14:14:46.511557 21 resources.go:163] Terminating DaemonSet.extensions daemon-set pods took: 100.960531ms
  E0703 14:14:46.639281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:47.644701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:48.650513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:49.651018      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:49.716658 21 fixtures.go:125] Number of nodes with available pods controlled by daemonset daemon-set: 0
  I0703 14:14:49.726486 21 fixtures.go:135] Number of running nodes: 0, number of available pods: 0 in daemonset daemon-set
  I0703 14:14:49.738537 21 daemon_set.go:135] daemonset: {"kind":"DaemonSetList","apiVersion":"apps/v1","metadata":{"resourceVersion":"43713"},"items":null}

  I0703 14:14:49.742683 21 daemon_set.go:140] pods: {"kind":"PodList","apiVersion":"v1","metadata":{"resourceVersion":"43713"},"items":null}

  I0703 14:14:49.806775 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "daemonsets-2456" for this suite. @ 07/03/24 14:14:49.871
• [12.310 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Container Runtime blackbox test on terminated container should report termination message if TerminationMessagePath is set as non-root user and at a non-default path [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/runtime.go:195
  STEP: Creating a kubernetes client @ 07/03/24 14:14:49.932
  I0703 14:14:49.932858 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-runtime @ 07/03/24 14:14:49.934
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:14:50.018
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:14:50.025
  STEP: create the container @ 07/03/24 14:14:50.033
  W0703 14:14:50.089739      21 warnings.go:70] metadata.name: this is used in the Pod's hostname, which can result in surprising behavior; a DNS label is recommended: [must be no more than 63 characters]
  STEP: wait for the container to reach Succeeded @ 07/03/24 14:14:50.09
  E0703 14:14:50.651642      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:51.651815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:52.651914      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:53.652140      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:54.652330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: get the container status @ 07/03/24 14:14:55.157
  STEP: the container should be terminated @ 07/03/24 14:14:55.168
  STEP: the termination message should be set @ 07/03/24 14:14:55.168
  I0703 14:14:55.168998 21 runtime.go:167] Expected: &{DONE} to match Container's Termination Message: DONE --
  STEP: delete the container @ 07/03/24 14:14:55.169
  I0703 14:14:55.226670 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-runtime-9570" for this suite. @ 07/03/24 14:14:55.24
• [5.323 seconds]
------------------------------
SSSSSS
------------------------------
[sig-apps] StatefulSet Basic StatefulSet functionality [StatefulSetBasic] should validate Statefulset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/statefulset.go:1031
  STEP: Creating a kubernetes client @ 07/03/24 14:14:55.256
  I0703 14:14:55.256986 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename statefulset @ 07/03/24 14:14:55.272
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:14:55.335
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:14:55.362
  STEP: Creating service test in namespace statefulset-6830 @ 07/03/24 14:14:55.418
  STEP: Creating statefulset ss in namespace statefulset-6830 @ 07/03/24 14:14:55.574
  E0703 14:14:55.653293      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:14:55.727825 21 wait.go:40] Found 0 stateful pods, waiting for 1
  E0703 14:14:56.655962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:57.656087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:58.656183      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:14:59.657731      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:00.658474      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:01.663707      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:02.664273      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:03.664344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:04.664484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:05.664600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:05.679489 21 wait.go:50] Waiting for pod ss-0 to enter Running - Ready=true, currently Running - Ready=true
  STEP: Patch Statefulset to include a label @ 07/03/24 14:15:05.695
  STEP: Getting /status @ 07/03/24 14:15:05.71
  I0703 14:15:05.716922 21 statefulset.go:1067] StatefulSet ss has Conditions: []v1.StatefulSetCondition(nil)
  STEP: updating the StatefulSet Status @ 07/03/24 14:15:05.717
  I0703 14:15:05.731564 21 statefulset.go:1087] updatedStatus.Conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the statefulset status to be updated @ 07/03/24 14:15:05.731
  I0703 14:15:05.735047 21 statefulset.go:1115] Observed &StatefulSet event: ADDED
  I0703 14:15:05.735846 21 statefulset.go:1108] Found Statefulset ss in namespace statefulset-6830 with labels: map[e2e:testing] annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0703 14:15:05.735925 21 statefulset.go:1119] Statefulset ss has an updated status
  STEP: patching the Statefulset Status @ 07/03/24 14:15:05.736
  I0703 14:15:05.736148 21 statefulset.go:1123] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0703 14:15:05.744728 21 statefulset.go:1127] Patched status conditions: []v1.StatefulSetCondition{v1.StatefulSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Statefulset status to be patched @ 07/03/24 14:15:05.744
  I0703 14:15:05.750463 21 statefulset.go:1152] Observed &StatefulSet event: ADDED
  I0703 14:15:05.750520 21 statefulset.go:1148] Observed Statefulset ss in namespace statefulset-6830 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0703 14:15:05.750652 21 statefulset.go:1152] Observed &StatefulSet event: MODIFIED
  I0703 14:15:05.750726 21 statefulset.go:135] Deleting all statefulset in ns statefulset-6830
  I0703 14:15:05.753430 21 rest.go:150] Scaling statefulset ss to 0
  E0703 14:15:06.664985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:07.665070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:08.665279      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:09.666426      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:10.668860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:11.670549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:12.672496      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:13.673071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:14.673237      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:15.673804      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:15.779165 21 wait.go:151] Waiting for statefulset status.replicas updated to 0
  I0703 14:15:15.784008 21 rest.go:88] Deleting statefulset ss
  I0703 14:15:15.852435 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "statefulset-6830" for this suite. @ 07/03/24 14:15:15.858
• [20.642 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSS
------------------------------
[sig-storage] Projected secret should be consumable from pods in volume as non-root with defaultMode and fsGroup set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_secret.go:67
  STEP: Creating a kubernetes client @ 07/03/24 14:15:15.9
  I0703 14:15:15.900372 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:15:15.901
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:15:15.985
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:15:16
  STEP: Creating projection with secret that has name projected-secret-test-9c22ce1b-a555-4ee8-8511-1c20fac77126 @ 07/03/24 14:15:16.017
  STEP: Creating a pod to test consume secrets @ 07/03/24 14:15:16.03
  E0703 14:15:16.677231      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:17.678223      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:18.679311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:19.679763      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:15:20.124
  I0703 14:15:20.135752 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-projected-secrets-9dd06b87-6241-4242-89ef-1d53504d04e1 container projected-secret-volume-test: <nil>
  STEP: delete the pod @ 07/03/24 14:15:20.154
  I0703 14:15:20.192581 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-1688" for this suite. @ 07/03/24 14:15:20.204
• [4.320 seconds]
------------------------------
SSSS
------------------------------
[sig-api-machinery] Garbage collector should orphan RS created by deployment when deleteOptions.PropagationPolicy is Orphan [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/garbage_collector.go:539
  STEP: Creating a kubernetes client @ 07/03/24 14:15:20.22
  I0703 14:15:20.220829 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename gc @ 07/03/24 14:15:20.225
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:15:20.373
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:15:20.386
  STEP: create the deployment @ 07/03/24 14:15:20.401
  W0703 14:15:20.419319      21 warnings.go:70] metadata.name: this is used in Pod names and hostnames, which can result in surprising behavior; a DNS label is recommended: [must not contain dots]
  STEP: Wait for the Deployment to create new ReplicaSet @ 07/03/24 14:15:20.419
  E0703 14:15:20.680152      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the deployment @ 07/03/24 14:15:20.959
  STEP: wait for deployment deletion to see if the garbage collector mistakenly deletes the rs @ 07/03/24 14:15:20.99
  STEP: Gathering metrics @ 07/03/24 14:15:21.578
  W0703 14:15:21.633240      21 metrics_grabber.go:152] Can't find kube-controller-manager pod. Grabbing metrics from kube-controller-manager is disabled.
  I0703 14:15:21.633309 21 garbage_collector.go:265] For apiserver_request_total:
  For apiserver_request_latency_seconds:
  For apiserver_init_events_total:
  For garbage_collector_attempt_to_delete_queue_latency:
  For garbage_collector_attempt_to_delete_work_duration:
  For garbage_collector_attempt_to_orphan_queue_latency:
  For garbage_collector_attempt_to_orphan_work_duration:
  For garbage_collector_dirty_processing_latency_microseconds:
  For garbage_collector_event_processing_latency_microseconds:
  For garbage_collector_graph_changes_queue_latency:
  For garbage_collector_graph_changes_work_duration:
  For garbage_collector_orphan_processing_latency_microseconds:
  For namespace_queue_latency:
  For namespace_queue_latency_sum:
  For namespace_queue_latency_count:
  For namespace_retries:
  For namespace_work_duration:
  For namespace_work_duration_sum:
  For namespace_work_duration_count:
  For function_duration_seconds:
  For errors_total:
  For evicted_pods_total:

  I0703 14:15:21.633654 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "gc-8307" for this suite. @ 07/03/24 14:15:21.65
• [1.446 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] Aggregator Should be able to support the 1.17 Sample API Server using the current Aggregator [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregator.go:98
  STEP: Creating a kubernetes client @ 07/03/24 14:15:21.667
  I0703 14:15:21.667555 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename aggregator @ 07/03/24 14:15:21.669
  E0703 14:15:21.680855      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:15:21.856
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:15:21.901
  I0703 14:15:21.931996 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Registering the sample API server. @ 07/03/24 14:15:21.932
  E0703 14:15:22.683454      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:22.741518 21 helpers.go:161] Found ClusterRoles; assuming RBAC is enabled.
  I0703 14:15:22.808147 21 deployment.go:222] new replicaset for deployment "sample-apiserver-deployment" is yet to be created
  E0703 14:15:23.684544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:24.686693      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:24.978558 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:25.685781      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:26.686805      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:27.008493 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:27.687932      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:28.689327      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:29.006505 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:29.690347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:30.691250      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:30.987345 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:31.692772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:32.692831      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:32.983211 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:33.697068      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:34.697195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:34.984291 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:35.697674      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:36.697961      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:36.988288 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:37.698462      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:38.702149      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:38.994779 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:39.702379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:40.702487      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:40.986508 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:41.702712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:42.703779      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:42.982172 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:43.707335      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:44.709181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:44.984770 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:45.709768      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:46.710172      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:46.990054 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:47.714432      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:48.715025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:48.987884 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:49.715767      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:50.727565      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:51.002852 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 22, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-apiserver-deployment-9fd5bd597\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:15:51.740737      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:52.728268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:53.261650 21 aggregator.go:749] Waited 232.175743ms for the sample-apiserver to be ready to handle requests.
  STEP: Read Status for v1alpha1.wardle.example.com @ 07/03/24 14:15:53.47
  STEP: kubectl patch apiservice v1alpha1.wardle.example.com -p '{"spec":{"versionPriority": 400}}' @ 07/03/24 14:15:53.474
  STEP: List APIServices @ 07/03/24 14:15:53.509
  I0703 14:15:53.541050 21 aggregator.go:550] Found v1alpha1.wardle.example.com in APIServiceList
  STEP: Adding a label to the APIService @ 07/03/24 14:15:53.541
  E0703 14:15:53.735605      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:15:53.780774 21 aggregator.go:575] APIService labels: map[e2e-apiservice:patched]
  STEP: Updating APIService Status @ 07/03/24 14:15:53.78
  I0703 14:15:53.840046 21 aggregator.go:601] updatedStatus.Conditions: []v1.APIServiceCondition{v1.APIServiceCondition{Type:"Available", Status:"True", LastTransitionTime:time.Date(2024, time.July, 3, 14, 15, 52, 0, time.Local), Reason:"Passed", Message:"all checks passed"}, v1.APIServiceCondition{Type:"StatusUpdated", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: Confirm that v1alpha1.wardle.example.com /status was updated @ 07/03/24 14:15:53.84
  I0703 14:15:53.846881 21 aggregator.go:619] Observed APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {Available True 2024-07-03 14:15:52 +0000 UTC Passed all checks passed}
  I0703 14:15:53.847115 21 aggregator.go:615] Found APIService v1alpha1.wardle.example.com with Labels: map[e2e-apiservice:patched] & Condition: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0703 14:15:53.847277 21 aggregator.go:625] Found updated status condition for v1alpha1.wardle.example.com
  STEP: Replace APIService v1alpha1.wardle.example.com @ 07/03/24 14:15:53.847
  I0703 14:15:53.876369 21 aggregator.go:641] Found updated apiService label for "v1alpha1.wardle.example.com"
  STEP: Delete flunders resource "dynamic-flunder-1498797206" @ 07/03/24 14:15:53.876
  STEP: Recreating test-flunder before removing endpoint via deleteCollection @ 07/03/24 14:15:53.966
  STEP: Read v1alpha1.wardle.example.com /status before patching it @ 07/03/24 14:15:54.038
  STEP: Patch APIService Status @ 07/03/24 14:15:54.057
  STEP: Confirm that v1alpha1.wardle.example.com /status was patched @ 07/03/24 14:15:54.099
  I0703 14:15:54.113241 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {Available True 2024-07-03 14:15:52 +0000 UTC Passed all checks passed}
  I0703 14:15:54.140664 21 aggregator.go:719] Observed APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusUpdated True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0703 14:15:54.140778 21 aggregator.go:715] Found APIService v1alpha1.wardle.example.com with Labels: map[v1alpha1.wardle.example.com:updated] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC E2E Set by e2e test}
  I0703 14:15:54.140882 21 aggregator.go:725] Found patched status condition for v1alpha1.wardle.example.com
  STEP: APIService deleteCollection with labelSelector: "v1alpha1.wardle.example.com=updated" @ 07/03/24 14:15:54.141
  STEP: Confirm that the generated APIService has been deleted @ 07/03/24 14:15:54.157
  I0703 14:15:54.159057 21 aggregator.go:786] Requesting list of APIServices to confirm quantity
  I0703 14:15:54.181306 21 aggregator.go:796] Found 0 APIService with label "v1alpha1.wardle.example.com=updated"
  I0703 14:15:54.181584 21 aggregator.go:738] APIService v1alpha1.wardle.example.com has been deleted.
  I0703 14:15:54.550567 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregator-9811" for this suite. @ 07/03/24 14:15:54.563
• [32.938 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] DisruptionController should update/patch PodDisruptionBudget status [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/disruption.go:164
  STEP: Creating a kubernetes client @ 07/03/24 14:15:54.607
  I0703 14:15:54.608005 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename disruption @ 07/03/24 14:15:54.608
  E0703 14:15:54.729559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:15:54.777
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:15:54.81
  STEP: Waiting for the pdb to be processed @ 07/03/24 14:15:54.868
  E0703 14:15:55.729976      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:56.729981      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating PodDisruptionBudget status @ 07/03/24 14:15:56.882
  STEP: Waiting for all pods to be running @ 07/03/24 14:15:56.899
  I0703 14:15:56.903886 21 disruption.go:578] running pods: 0 < 1
  E0703 14:15:57.732385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:15:58.734542      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: locating a running pod @ 07/03/24 14:15:58.912
  STEP: Waiting for the pdb to be processed @ 07/03/24 14:15:58.978
  STEP: Patching PodDisruptionBudget status @ 07/03/24 14:15:59.016
  STEP: Waiting for the pdb to be processed @ 07/03/24 14:15:59.05
  I0703 14:15:59.056491 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "disruption-3910" for this suite. @ 07/03/24 14:15:59.068
• [4.477 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-storage] CSIInlineVolumes should support CSIVolumeSource in Pod API [Conformance] [sig-storage, Conformance]
k8s.io/kubernetes/test/e2e/storage/csi_inline.go:50
  STEP: Creating a kubernetes client @ 07/03/24 14:15:59.085
  I0703 14:15:59.085369 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename csiinlinevolumes @ 07/03/24 14:15:59.087
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:15:59.192
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:15:59.214
  STEP: creating @ 07/03/24 14:15:59.233
  STEP: getting @ 07/03/24 14:15:59.342
  STEP: listing in namespace @ 07/03/24 14:15:59.41
  STEP: patching @ 07/03/24 14:15:59.457
  STEP: deleting @ 07/03/24 14:15:59.52
  I0703 14:15:59.591770 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "csiinlinevolumes-8040" for this suite. @ 07/03/24 14:15:59.599
• [0.539 seconds]
------------------------------
SS
------------------------------
[sig-cli] Kubectl client Kubectl diff should check if kubectl diff finds a difference for Deployments [Conformance] [sig-cli, Conformance]
k8s.io/kubernetes/test/e2e/kubectl/kubectl.go:1048
  STEP: Creating a kubernetes client @ 07/03/24 14:15:59.624
  I0703 14:15:59.624715 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename kubectl @ 07/03/24 14:15:59.633
  E0703 14:15:59.735505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:15:59.79
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:15:59.821
  STEP: create deployment with httpd image @ 07/03/24 14:15:59.875
  I0703 14:15:59.875711 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-3502 create -f -'
  I0703 14:16:00.435923 21 builder.go:146] stderr: ""
  I0703 14:16:00.435972 21 builder.go:147] stdout: "deployment.apps/httpd-deployment created\n"
  STEP: verify diff finds difference between live and declared image @ 07/03/24 14:16:00.435
  I0703 14:16:00.436070 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-3502 diff -f -'
  E0703 14:16:00.736024      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:01.738702      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:02.738946      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:03.739544      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:04.740921      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:05.753208      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:06.754455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:16:07.128619 21 builder.go:135] rc: 1
  I0703 14:16:07.128845 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=kubectl-3502 delete -f -'
  I0703 14:16:07.289308 21 builder.go:146] stderr: ""
  I0703 14:16:07.289378 21 builder.go:147] stdout: "deployment.apps \"httpd-deployment\" deleted\n"
  I0703 14:16:07.289484 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "kubectl-3502" for this suite. @ 07/03/24 14:16:07.305
• [7.709 seconds]
------------------------------
SS
------------------------------
[sig-node] Container Lifecycle Hook when create a pod with lifecycle hook should execute poststart http hook properly [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/lifecycle_hook.go:170
  STEP: Creating a kubernetes client @ 07/03/24 14:16:07.333
  I0703 14:16:07.333683 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename container-lifecycle-hook @ 07/03/24 14:16:07.334
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:16:07.444
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:16:07.483
  STEP: create the container to handle the HTTPGet hook request. @ 07/03/24 14:16:07.522
  E0703 14:16:07.754939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:08.755688      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:09.760334      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:10.772741      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:11.773949      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:12.763464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: create the pod with lifecycle hook @ 07/03/24 14:16:13.674
  E0703 14:16:13.763761      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:14.766600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:15.767016      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:16.767281      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: check poststart hook @ 07/03/24 14:16:17.738
  E0703 14:16:17.769481      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod with lifecycle hook @ 07/03/24 14:16:17.802
  E0703 14:16:18.770524      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:19.770720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:16:19.860183 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "container-lifecycle-hook-5437" for this suite. @ 07/03/24 14:16:19.863
• [12.557 seconds]
------------------------------
SSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should create a ResourceQuota and capture the life of a pod. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:234
  STEP: Creating a kubernetes client @ 07/03/24 14:16:19.935
  I0703 14:16:19.935792 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 14:16:19.937
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:16:20.002
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:16:20.027
  STEP: Counting existing ResourceQuota @ 07/03/24 14:16:20.04
  E0703 14:16:20.772309      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:21.772473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:22.773411      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:23.773618      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:24.774388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota @ 07/03/24 14:16:25.055
  STEP: Ensuring resource quota status is calculated @ 07/03/24 14:16:25.106
  E0703 14:16:25.776675      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:26.777177      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a Pod that fits quota @ 07/03/24 14:16:27.116
  STEP: Ensuring ResourceQuota status captures the pod usage @ 07/03/24 14:16:27.168
  E0703 14:16:27.777010      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:28.776978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Not allowing a pod to be created that exceeds remaining quota @ 07/03/24 14:16:29.172
  STEP: Not allowing a pod to be created that exceeds remaining quota(validation on extended resources) @ 07/03/24 14:16:29.176
  STEP: Ensuring a pod cannot update its resource requirements @ 07/03/24 14:16:29.181
  STEP: Ensuring attempts to update pod resource requirements did not change quota usage @ 07/03/24 14:16:29.198
  E0703 14:16:29.783344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:30.779276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/03/24 14:16:31.202
  STEP: Ensuring resource quota status released the pod usage @ 07/03/24 14:16:31.274
  E0703 14:16:31.782499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:32.782606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:16:33.283407 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-2995" for this suite. @ 07/03/24 14:16:33.3
• [13.372 seconds]
------------------------------
SS
------------------------------
[sig-storage] Projected configMap updates should be reflected in volume [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/projected_configmap.go:125
  STEP: Creating a kubernetes client @ 07/03/24 14:16:33.307
  I0703 14:16:33.307809 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename projected @ 07/03/24 14:16:33.319
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:16:33.356
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:16:33.425
  STEP: Creating projection with configMap that has name projected-configmap-test-upd-46661bcb-bf36-47ee-9d56-8c78f75925e7 @ 07/03/24 14:16:33.44
  STEP: Creating the pod @ 07/03/24 14:16:33.462
  E0703 14:16:33.783347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:34.784283      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:35.788043      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:36.786523      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Updating configmap projected-configmap-test-upd-46661bcb-bf36-47ee-9d56-8c78f75925e7 @ 07/03/24 14:16:37.582
  STEP: waiting to observe update in volume @ 07/03/24 14:16:37.593
  E0703 14:16:37.787089      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:38.787274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:39.788436      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:40.788509      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:41.788803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:42.799246      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:43.791499      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:44.796464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:45.805662      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:46.798876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:47.800670      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:48.806502      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:49.810323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:50.810957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:51.811857      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:52.813845      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:53.814518      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:54.818709      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:55.819116      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:56.820132      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:57.820635      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:58.822484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:16:59.822865      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:00.822954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:01.831823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:02.830039      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:03.830739      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:04.830965      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:05.833852      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:06.839418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:07.840350      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:08.848979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:09.842414      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:10.843908      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:11.844057      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:12.847386      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:13.848258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:14.848080      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:15.848274      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:16.848869      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:17.849288      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:18.849589      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:19.850070      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:20.850134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:21.868634      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:22.850622      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:23.851059      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:24.851004      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:25.851712      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:26.851904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:27.852067      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:28.854261      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:29.854494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:30.854601      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:31.854704      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:32.855617      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:33.856109      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:34.858497      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:35.859341      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:36.859793      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:37.861360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:38.863751      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:39.863842      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:40.864013      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:41.864549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:42.864546      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:43.864786      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:44.864938      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:45.866399      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:46.866437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:47.867504      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:48.868123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:49.870508      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:50.871385      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:51.872844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:52.873179      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:53.882648      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:54.874213      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:55.874494      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:56.875450      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:57.875574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:17:58.501061 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "projected-7057" for this suite. @ 07/03/24 14:17:58.535
• [85.240 seconds]
------------------------------
SSSSSSSSSSS
------------------------------
[sig-node] Downward API should provide host IP as an env var [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/downwardapi.go:92
  STEP: Creating a kubernetes client @ 07/03/24 14:17:58.548
  I0703 14:17:58.548719 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 14:17:58.549
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:17:58.696
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:17:58.714
  STEP: Creating a pod to test downward api env vars @ 07/03/24 14:17:58.738
  E0703 14:17:58.876181      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:17:59.877025      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:00.876899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:01.883641      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:18:02.841
  I0703 14:18:02.863520 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod downward-api-99bb231f-716d-4527-94db-fb2bd1056e8c container dapi-container: <nil>
  E0703 14:18:02.887422      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: delete the pod @ 07/03/24 14:18:02.983
  I0703 14:18:03.107463 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-1350" for this suite. @ 07/03/24 14:18:03.123
• [4.607 seconds]
------------------------------
S
------------------------------
[sig-node] Secrets should fail to create secret due to empty secret key [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/secrets.go:142
  STEP: Creating a kubernetes client @ 07/03/24 14:18:03.156
  I0703 14:18:03.156260 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename secrets @ 07/03/24 14:18:03.157
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:18:03.408
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:18:03.413
  STEP: Creating projection with secret that has name secret-emptykey-test-2dc1caa6-a0a9-49ee-84c8-8ad3b9cb9808 @ 07/03/24 14:18:03.419
  I0703 14:18:03.421763 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "secrets-8381" for this suite. @ 07/03/24 14:18:03.441
• [0.318 seconds]
------------------------------
SSSSS
------------------------------
[sig-network] Services should provide secure master service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:779
  STEP: Creating a kubernetes client @ 07/03/24 14:18:03.475
  I0703 14:18:03.475325 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 14:18:03.476
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:18:03.562
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:18:03.654
  I0703 14:18:03.706581 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "services-5444" for this suite. @ 07/03/24 14:18:03.757
• [0.325 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-network] Services should be able to create a functioning NodePort service [Conformance] [sig-network, Conformance]
k8s.io/kubernetes/test/e2e/network/service.go:1284
  STEP: Creating a kubernetes client @ 07/03/24 14:18:03.805
  I0703 14:18:03.805356 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename services @ 07/03/24 14:18:03.806
  E0703 14:18:03.887461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:18:03.998
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:18:04.046
  STEP: creating service nodeport-test with type=NodePort in namespace services-3325 @ 07/03/24 14:18:04.095
  STEP: creating replication controller nodeport-test in namespace services-3325 @ 07/03/24 14:18:04.15
  I0703 14:18:04.221064      21 runners.go:198] Created replication controller with name: nodeport-test, namespace: services-3325, replica count: 2
  E0703 14:18:04.888516      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:05.888900      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:06.893723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:07.329799      21 runners.go:198] nodeport-test Pods: 2 out of 2 created, 1 running, 1 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  E0703 14:18:07.894482      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:08.894753      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:09.894815      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:10.332325      21 runners.go:198] nodeport-test Pods: 2 out of 2 created, 2 running, 0 pending, 0 waiting, 0 inactive, 0 terminating, 0 unknown, 0 runningButNotReady 
  I0703 14:18:10.332365 21 resource.go:361] Creating new exec pod
  E0703 14:18:10.894890      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:11.895011      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:12.896148      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:13.896466      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:14.896598      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:15.394600 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3325 exec execpodd8g9c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 nodeport-test 80'
  I0703 14:18:15.694183 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 nodeport-test 80\nConnection to nodeport-test 80 port [tcp/http] succeeded!\n"
  I0703 14:18:15.713992 21 builder.go:147] stdout: "nodeport-test-29t5h"
  I0703 14:18:15.718686 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3325 exec execpodd8g9c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.231.145 80'
  E0703 14:18:15.896959      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:16.100505 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.231.145 80\nConnection to 10.43.231.145 80 port [tcp/http] succeeded!\n+ echo hostName\n"
  I0703 14:18:16.100556 21 builder.go:147] stdout: ""
  I0703 14:18:16.718822 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3325 exec execpodd8g9c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 10.43.231.145 80'
  E0703 14:18:16.897927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:17.261363 21 builder.go:146] stderr: "+ nc -v -t -w 2 10.43.231.145 80\n+ echo hostName\nConnection to 10.43.231.145 80 port [tcp/http] succeeded!\n"
  I0703 14:18:17.261411 21 builder.go:147] stdout: "nodeport-test-wqmjc"
  I0703 14:18:17.261496 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3325 exec execpodd8g9c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.210 30956'
  I0703 14:18:17.743155 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.210 30956\nConnection to 172.31.4.210 30956 port [tcp/*] succeeded!\n"
  I0703 14:18:17.743211 21 builder.go:147] stdout: ""
  E0703 14:18:17.898574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:18.262128 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3325 exec execpodd8g9c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.210 30956'
  I0703 14:18:18.698425 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.210 30956\nConnection to 172.31.4.210 30956 port [tcp/*] succeeded!\n"
  I0703 14:18:18.698474 21 builder.go:147] stdout: ""
  E0703 14:18:18.899311      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:19.262050 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3325 exec execpodd8g9c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.4.210 30956'
  I0703 14:18:19.518999 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.4.210 30956\nConnection to 172.31.4.210 30956 port [tcp/*] succeeded!\n"
  I0703 14:18:19.519051 21 builder.go:147] stdout: "nodeport-test-29t5h"
  I0703 14:18:19.519138 21 builder.go:121] Running '/usr/local/bin/kubectl --kubeconfig=/tmp/kubeconfig-3493501098 --namespace=services-3325 exec execpodd8g9c -- /bin/sh -x -c echo hostName | nc -v -t -w 2 172.31.5.183 30956'
  I0703 14:18:19.896447 21 builder.go:146] stderr: "+ echo hostName\n+ nc -v -t -w 2 172.31.5.183 30956\nConnection to 172.31.5.183 30956 port [tcp/*] succeeded!\n"
  I0703 14:18:19.896497 21 builder.go:147] stdout: "nodeport-test-29t5h"
  I0703 14:18:19.896597 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0703 14:18:19.899873      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "services-3325" for this suite. @ 07/03/24 14:18:19.9
• [16.104 seconds]
------------------------------
SSSS
------------------------------
[sig-node] InitContainer [NodeConformance] should not start app containers and fail the pod if init containers fail on a RestartNever pod [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/init_container.go:459
  STEP: Creating a kubernetes client @ 07/03/24 14:18:19.909
  I0703 14:18:19.909836 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename init-container @ 07/03/24 14:18:19.91
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:18:20.003
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:18:20.033
  STEP: creating the pod @ 07/03/24 14:18:20.046
  I0703 14:18:20.047182 21 init_container.go:499] PodSpec: initContainers in spec.initContainers
  E0703 14:18:20.899830      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:21.904796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:22.904990      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:23.905389      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:24.905443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:25.767448 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "init-container-9963" for this suite. @ 07/03/24 14:18:25.79
• [5.931 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] EmptyDir wrapper volumes should not cause race condition when used for configmaps [Serial] [Conformance] [sig-storage, Serial, Conformance]
k8s.io/kubernetes/test/e2e/storage/empty_dir_wrapper.go:188
  STEP: Creating a kubernetes client @ 07/03/24 14:18:25.841
  I0703 14:18:25.841831 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename emptydir-wrapper @ 07/03/24 14:18:25.842
  E0703 14:18:25.905505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:18:25.933
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:18:25.959
  STEP: Creating 50 configmaps @ 07/03/24 14:18:26.028
  E0703 14:18:26.906242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/03/24 14:18:27.557
  I0703 14:18:27.616355 21 resource.go:87] Pod name wrapped-volume-race-5eec47e5-1b4c-4f74-acd8-6bc5976c05ce: Found 0 pods out of 5
  E0703 14:18:27.907923      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:28.908360      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:29.909078      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:30.909376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:31.909535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:18:32.625677 21 resource.go:87] Pod name wrapped-volume-race-5eec47e5-1b4c-4f74-acd8-6bc5976c05ce: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/03/24 14:18:32.625
  E0703 14:18:32.913127      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:33.913247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:34.913687      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:35.914447      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:36.915612      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:37.915711      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:38.917344      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:39.917639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:40.926444      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:41.927559      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:42.928405      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:43.929167      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:44.929440      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:45.929543      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:46.929679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:47.930168      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:48.931416      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:49.931513      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:50.931715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:51.931803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:52.932535      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:53.932682      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:54.949388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:55.938574      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:56.939727      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:57.939907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:58.941239      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:18:59.946473      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:00.946690      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:01.946947      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:02.947376      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:03.954234      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:04.958009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:05.958195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/03/24 14:19:06.901
  E0703 14:19:06.958479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:06.974522 21 resource.go:87] Pod name wrapped-volume-race-28ed809a-d69a-4d81-9d17-de7853943555: Found 0 pods out of 5
  E0703 14:19:07.958904      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:08.960859      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:09.961253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:10.961388      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:11.961463      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:11.991001 21 resource.go:87] Pod name wrapped-volume-race-28ed809a-d69a-4d81-9d17-de7853943555: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/03/24 14:19:11.991
  E0703 14:19:12.961825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:13.962626      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:14.998545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:15.973545      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating RC which spawns configmap-volume pods @ 07/03/24 14:19:16.103
  I0703 14:19:16.184071 21 resource.go:87] Pod name wrapped-volume-race-16096499-38a1-4c4c-85a5-1e63d5a98a99: Found 0 pods out of 5
  E0703 14:19:16.973676      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:17.975796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:18.975925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:19.979176      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:20.979031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:21.202880 21 resource.go:87] Pod name wrapped-volume-race-16096499-38a1-4c4c-85a5-1e63d5a98a99: Found 5 pods out of 5
  STEP: Ensuring each pod is running @ 07/03/24 14:19:21.202
  E0703 14:19:21.979659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:22.986040      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:23.986120      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:24.989268      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-16096499-38a1-4c4c-85a5-1e63d5a98a99 in namespace emptydir-wrapper-9052, will wait for the garbage collector to delete the pods @ 07/03/24 14:19:25.279
  I0703 14:19:25.363790 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-16096499-38a1-4c4c-85a5-1e63d5a98a99 took: 13.923145ms
  I0703 14:19:25.564951 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-16096499-38a1-4c4c-85a5-1e63d5a98a99 pods took: 201.158778ms
  E0703 14:19:25.989689      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:27.000829      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:27.999899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:29.010588      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-28ed809a-d69a-4d81-9d17-de7853943555 in namespace emptydir-wrapper-9052, will wait for the garbage collector to delete the pods @ 07/03/24 14:19:29.465
  I0703 14:19:29.537598 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-28ed809a-d69a-4d81-9d17-de7853943555 took: 15.079757ms
  I0703 14:19:29.739675 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-28ed809a-d69a-4d81-9d17-de7853943555 pods took: 202.076627ms
  E0703 14:19:30.004071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:31.004289      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:32.004796      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:33.005187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting ReplicationController wrapped-volume-race-5eec47e5-1b4c-4f74-acd8-6bc5976c05ce in namespace emptydir-wrapper-9052, will wait for the garbage collector to delete the pods @ 07/03/24 14:19:33.541
  I0703 14:19:33.624687 21 resources.go:139] Deleting ReplicationController wrapped-volume-race-5eec47e5-1b4c-4f74-acd8-6bc5976c05ce took: 25.094603ms
  I0703 14:19:33.925986 21 resources.go:163] Terminating ReplicationController wrapped-volume-race-5eec47e5-1b4c-4f74-acd8-6bc5976c05ce pods took: 301.290293ms
  E0703 14:19:34.015578      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:35.006084      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:36.006256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:37.007187      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Cleaning up the configMaps @ 07/03/24 14:19:37.227
  I0703 14:19:37.911225 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "emptydir-wrapper-9052" for this suite. @ 07/03/24 14:19:37.92
• [72.103 seconds]
------------------------------
SSSSSSSSSSSSSS
------------------------------
[sig-storage] Downward API volume should update labels on modification [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/downwardapi_volume.go:132
  STEP: Creating a kubernetes client @ 07/03/24 14:19:37.945
  I0703 14:19:37.945661 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename downward-api @ 07/03/24 14:19:37.947
  E0703 14:19:38.018671      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:19:38.039
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:19:38.053
  STEP: Creating the pod @ 07/03/24 14:19:38.058
  E0703 14:19:39.007879      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:40.009978      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:41.009085      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:42.009349      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:42.708772 21 pod_client.go:141] Successfully updated pod "labelsupdate01020d21-700c-4012-905b-ee19682b9722"
  E0703 14:19:43.010087      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:44.010329      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:44.764172 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "downward-api-5480" for this suite. @ 07/03/24 14:19:44.776
• [6.863 seconds]
------------------------------
S
------------------------------
[sig-instrumentation] Events API should ensure that an event can be fetched, patched, deleted, and listed [Conformance] [sig-instrumentation, Conformance]
k8s.io/kubernetes/test/e2e/instrumentation/events.go:98
  STEP: Creating a kubernetes client @ 07/03/24 14:19:44.809
  I0703 14:19:44.809705 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename events @ 07/03/24 14:19:44.816
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:19:44.982
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:19:45.016
  E0703 14:19:45.031925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: creating a test event @ 07/03/24 14:19:45.044
  STEP: listing events in all namespaces @ 07/03/24 14:19:45.072
  STEP: listing events in test namespace @ 07/03/24 14:19:45.093
  STEP: listing events with field selection filtering on source @ 07/03/24 14:19:45.103
  STEP: listing events with field selection filtering on reportingController @ 07/03/24 14:19:45.131
  STEP: getting the test event @ 07/03/24 14:19:45.166
  STEP: patching the test event @ 07/03/24 14:19:45.211
  STEP: getting the test event @ 07/03/24 14:19:45.269
  STEP: updating the test event @ 07/03/24 14:19:45.277
  STEP: getting the test event @ 07/03/24 14:19:45.294
  STEP: deleting the test event @ 07/03/24 14:19:45.298
  STEP: listing events in all namespaces @ 07/03/24 14:19:45.306
  STEP: listing events in test namespace @ 07/03/24 14:19:45.309
  I0703 14:19:45.313495 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "events-6523" for this suite. @ 07/03/24 14:19:45.317
• [0.532 seconds]
------------------------------
SSSSSSS
------------------------------
[sig-storage] ConfigMap should be consumable from pods in volume with mappings and Item mode set [LinuxOnly] [NodeConformance] [Conformance] [sig-storage, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/storage/configmap_volume.go:100
  STEP: Creating a kubernetes client @ 07/03/24 14:19:45.342
  I0703 14:19:45.342442 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename configmap @ 07/03/24 14:19:45.344
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:19:45.497
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:19:45.519
  STEP: Creating configMap with name configmap-test-volume-map-d0471ee6-4e51-403a-9b17-76c5ceed5969 @ 07/03/24 14:19:45.538
  STEP: Creating a pod to test consume configMaps @ 07/03/24 14:19:45.57
  E0703 14:19:46.014468      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:47.015233      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:48.016490      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:49.021071      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:19:49.873
  I0703 14:19:49.894359 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod pod-configmaps-4c2e74f7-133a-4dea-bf0a-b8ff44878424 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 14:19:49.91
  I0703 14:19:49.980846 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "configmap-1650" for this suite. @ 07/03/24 14:19:49.994
  E0703 14:19:50.027408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
• [4.713 seconds]
------------------------------
SSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] should be able to create and update mutating webhook configurations with match conditions [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:766
  STEP: Creating a kubernetes client @ 07/03/24 14:19:50.055
  I0703 14:19:50.055304 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 14:19:50.056
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:19:50.158
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:19:50.168
  STEP: Setting up server cert @ 07/03/24 14:19:50.468
  E0703 14:19:51.043437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 14:19:51.32
  STEP: Deploying the webhook pod @ 07/03/24 14:19:51.478
  STEP: Wait for the deployment to be ready @ 07/03/24 14:19:51.565
  I0703 14:19:51.643223 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 14:19:52.044142      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:53.044573      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:53.663387 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:19:54.045255      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:55.048718      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:55.703089 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 19, 51, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:19:56.046742      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:19:57.050427      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 14:19:57.667
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 14:19:57.683
  E0703 14:19:58.056967      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:19:58.684228 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: creating a mutating webhook with match conditions @ 07/03/24 14:19:58.694
  STEP: verifying the mutating webhook match conditions @ 07/03/24 14:19:58.719
  STEP: updating the mutating webhook match conditions @ 07/03/24 14:19:58.726
  STEP: verifying the mutating webhook match conditions @ 07/03/24 14:19:58.743
  I0703 14:19:58.990572 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-6594" for this suite. @ 07/03/24 14:19:59.054
  E0703 14:19:59.057881      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "webhook-markers-1160" for this suite. @ 07/03/24 14:19:59.078
• [9.053 seconds]
------------------------------
[sig-api-machinery] AggregatedDiscovery should support raw aggregated discovery endpoint Accept headers [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/aggregated_discovery.go:151
  STEP: Creating a kubernetes client @ 07/03/24 14:19:59.107
  I0703 14:19:59.107834 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename aggregateddiscovery @ 07/03/24 14:19:59.109
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:19:59.177
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:19:59.195
  I0703 14:19:59.225314 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "aggregateddiscovery-8047" for this suite. @ 07/03/24 14:19:59.23
• [0.133 seconds]
------------------------------
SSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] Job should run a job to completion when tasks sometimes fail and are locally restarted [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/job.go:601
  STEP: Creating a kubernetes client @ 07/03/24 14:19:59.242
  I0703 14:19:59.242774 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename job @ 07/03/24 14:19:59.244
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:19:59.326
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:19:59.363
  STEP: Creating a job @ 07/03/24 14:19:59.375
  STEP: Ensuring job reaches completions @ 07/03/24 14:19:59.409
  E0703 14:20:00.058723      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:01.058915      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:02.061009      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:03.061611      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:04.061906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:05.061927      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:06.061868      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:07.062138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:08.062146      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:09.062899      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:10.063715      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:11.064185      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:12.066038      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:13.066457      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:20:13.412794 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "job-4538" for this suite. @ 07/03/24 14:20:13.416
• [14.191 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] ResourceQuota should verify ResourceQuota with best effort scope. [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/resource_quota.go:808
  STEP: Creating a kubernetes client @ 07/03/24 14:20:13.436
  I0703 14:20:13.436254 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename resourcequota @ 07/03/24 14:20:13.437
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:20:13.503
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:20:13.513
  STEP: Creating a ResourceQuota with best effort scope @ 07/03/24 14:20:13.521
  STEP: Ensuring ResourceQuota status is calculated @ 07/03/24 14:20:13.557
  E0703 14:20:14.067348      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:15.067492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a ResourceQuota with not best effort scope @ 07/03/24 14:20:15.585
  STEP: Ensuring ResourceQuota status is calculated @ 07/03/24 14:20:15.599
  E0703 14:20:16.068379      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:17.068772      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a best-effort pod @ 07/03/24 14:20:17.608
  STEP: Ensuring resource quota with best effort scope captures the pod usage @ 07/03/24 14:20:17.63
  E0703 14:20:18.069122      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:19.069256      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with not best effort ignored the pod usage @ 07/03/24 14:20:19.634
  E0703 14:20:20.069331      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:21.069953      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/03/24 14:20:21.653
  STEP: Ensuring resource quota status released the pod usage @ 07/03/24 14:20:21.69
  E0703 14:20:22.070001      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:23.070557      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Creating a not best-effort pod @ 07/03/24 14:20:23.699
  STEP: Ensuring resource quota with not best effort scope captures the pod usage @ 07/03/24 14:20:23.733
  E0703 14:20:24.071229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:25.071366      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Ensuring resource quota with best effort scope ignored the pod usage @ 07/03/24 14:20:25.738
  E0703 14:20:26.078876      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:27.072614      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deleting the pod @ 07/03/24 14:20:27.744
  STEP: Ensuring resource quota status released the pod usage @ 07/03/24 14:20:27.786
  E0703 14:20:28.072822      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:29.079125      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:20:29.800928 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "resourcequota-3476" for this suite. @ 07/03/24 14:20:29.811
• [16.403 seconds]
------------------------------
SSSS
------------------------------
[sig-node] Pods should patch a pod status [Conformance] [sig-node, Conformance]
k8s.io/kubernetes/test/e2e/common/node/pods.go:1084
  STEP: Creating a kubernetes client @ 07/03/24 14:20:29.866
  I0703 14:20:29.866940 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename pods @ 07/03/24 14:20:29.869
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:20:29.939
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:20:29.98
  STEP: Create a pod @ 07/03/24 14:20:29.998
  E0703 14:20:30.079963      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:31.086480      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:32.092121      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:33.090738      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: patching /status @ 07/03/24 14:20:34.06
  I0703 14:20:34.086613 21 pods.go:1124] Status Message: "Patched by e2e test" and Reason: "E2E"
  I0703 14:20:34.098463 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  E0703 14:20:34.099242      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Destroying namespace "pods-1236" for this suite. @ 07/03/24 14:20:34.104
• [4.270 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-node] Variable Expansion should verify that a failing subpath expansion can be modified during the lifecycle of a container [Slow] [Conformance] [sig-node, Slow, Conformance]
k8s.io/kubernetes/test/e2e/common/node/expansion.go:229
  STEP: Creating a kubernetes client @ 07/03/24 14:20:34.149
  I0703 14:20:34.149856 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename var-expansion @ 07/03/24 14:20:34.151
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:20:34.253
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:20:34.265
  STEP: creating the pod with failed condition @ 07/03/24 14:20:34.29
  E0703 14:20:35.099464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:36.099492      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:37.099657      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:38.101495      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:39.102549      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:40.106195      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:41.106554      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:42.106817      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:43.117464      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:44.118130      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:45.119186      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:46.119710      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:47.119807      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:48.122528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:49.122684      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:50.122769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:51.123740      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:52.124757      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:53.126472      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:54.126567      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:55.127701      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:56.128042      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:57.129102      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:58.129312      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:20:59.129726      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:00.129957      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:01.130528      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:02.131330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:03.131479      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:04.131925      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:05.132417      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:06.132600      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:07.132907      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:08.141352      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:09.134459      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:10.134785      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:11.135034      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:12.135780      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:13.138814      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:14.138777      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:15.139985      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:16.139649      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:17.140708      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:18.141397      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:19.147725      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:20.147823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:21.148660      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:22.149276      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:23.151123      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:24.151253      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:25.151446      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:26.151505      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:27.151895      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:28.151979      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:29.152537      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:30.153028      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:31.154022      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:32.154714      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:33.155597      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:34.156153      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:35.157180      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:36.157449      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:37.158033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:38.162681      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:39.163519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:40.163728      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:41.163797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:42.165003      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:43.165147      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:44.165244      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:45.166260      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:46.166425      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:47.167323      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:48.168370      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:49.168443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:50.168654      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:51.169572      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:52.170229      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:53.170421      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:54.175014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:55.175541      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:56.178014      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:57.179639      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:58.181839      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:21:59.182408      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:00.182506      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:01.183258      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:02.183950      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:03.185603      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:04.187443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:05.198771      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:06.190991      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:07.189844      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:08.190060      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:09.190075      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:10.190437      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:11.192247      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:12.194452      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:13.197215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:14.197823      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:15.198033      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:16.198461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:17.202030      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:18.202536      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:19.204347      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:20.206138      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:21.207373      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:22.207860      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:23.207997      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:24.209720      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:25.209113      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:26.210721      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:27.211451      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:28.212020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:29.218954      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:30.219090      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:31.219278      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:32.219964      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:33.220134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:34.220619      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: updating the pod @ 07/03/24 14:22:34.345
  I0703 14:22:34.870582 21 pod_client.go:141] Successfully updated pod "var-expansion-edb260c9-5a08-471d-8624-7b78cf347ccb"
  STEP: waiting for pod running @ 07/03/24 14:22:34.87
  E0703 14:22:35.221443      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:36.221924      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: deleting the pod gracefully @ 07/03/24 14:22:36.881
  I0703 14:22:36.881802 21 delete.go:62] Deleting pod "var-expansion-edb260c9-5a08-471d-8624-7b78cf347ccb" in namespace "var-expansion-7798"
  I0703 14:22:36.901434 21 delete.go:70] Wait up to 5m0s for pod "var-expansion-edb260c9-5a08-471d-8624-7b78cf347ccb" to be fully deleted
  E0703 14:22:37.234906      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:38.222797      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:39.225929      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:40.226540      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:41.227215      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:42.230735      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:43.236769      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:44.237000      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:45.238020      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:46.240139      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:47.240788      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:48.241461      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:49.242467      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:50.242984      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:51.242841      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:52.243031      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:53.245297      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:54.245555      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:55.245722      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:56.246825      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:57.247396      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:58.247962      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:22:59.248858      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:00.248939      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:01.250151      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:02.253986      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:03.254679      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:04.255994      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:05.255330      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:06.255401      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:07.257936      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:08.255755      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:23:09.081970 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "var-expansion-7798" for this suite. @ 07/03/24 14:23:09.086
• [154.948 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-apps] ReplicaSet should validate Replicaset Status endpoints [Conformance] [sig-apps, Conformance]
k8s.io/kubernetes/test/e2e/apps/replica_set.go:177
  STEP: Creating a kubernetes client @ 07/03/24 14:23:09.1
  I0703 14:23:09.100977 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename replicaset @ 07/03/24 14:23:09.103
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:23:09.182
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:23:09.226
  E0703 14:23:09.257519      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create a Replicaset @ 07/03/24 14:23:09.283
  STEP: Verify that the required pods have come up. @ 07/03/24 14:23:09.315
  I0703 14:23:09.349621 21 resource.go:87] Pod name sample-pod: Found 0 pods out of 1
  E0703 14:23:10.256993      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:11.257606      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:12.258888      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:13.262570      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:14.262659      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:23:14.358982 21 resource.go:87] Pod name sample-pod: Found 1 pods out of 1
  STEP: ensuring each pod is running @ 07/03/24 14:23:14.359
  STEP: Getting /status @ 07/03/24 14:23:14.359
  I0703 14:23:14.387397 21 replica_set.go:643] Replicaset test-rs has Conditions: []
  STEP: updating the Replicaset Status @ 07/03/24 14:23:14.387
  I0703 14:23:14.421840 21 replica_set.go:663] updatedStatus.Conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusUpdate", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"E2E", Message:"Set from e2e test"}}
  STEP: watching for the ReplicaSet status to be updated @ 07/03/24 14:23:14.421
  I0703 14:23:14.437739 21 replica_set.go:689] Observed &ReplicaSet event: ADDED
  I0703 14:23:14.438447 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0703 14:23:14.439190 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0703 14:23:14.439920 21 replica_set.go:689] Observed &ReplicaSet event: MODIFIED
  I0703 14:23:14.440562 21 replica_set.go:682] Found replicaset test-rs in namespace replicaset-378 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: [{StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}]
  I0703 14:23:14.440978 21 replica_set.go:693] Replicaset test-rs has an updated status
  STEP: patching the Replicaset Status @ 07/03/24 14:23:14.441
  I0703 14:23:14.442000 21 replica_set.go:697] Patch payload: {"status":{"conditions":[{"type":"StatusPatched","status":"True"}]}}
  I0703 14:23:14.490097 21 replica_set.go:701] Patched status conditions: []v1.ReplicaSetCondition{v1.ReplicaSetCondition{Type:"StatusPatched", Status:"True", LastTransitionTime:time.Date(1, time.January, 1, 0, 0, 0, 0, time.UTC), Reason:"", Message:""}}
  STEP: watching for the Replicaset status to be patched @ 07/03/24 14:23:14.49
  I0703 14:23:14.498397 21 replica_set.go:725] Observed &ReplicaSet event: ADDED
  I0703 14:23:14.498733 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0703 14:23:14.498988 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0703 14:23:14.499519 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0703 14:23:14.499687 21 replica_set.go:721] Observed replicaset test-rs in namespace replicaset-378 with annotations: map[] & Conditions: {StatusUpdate True 0001-01-01 00:00:00 +0000 UTC E2E Set from e2e test}
  I0703 14:23:14.499929 21 replica_set.go:725] Observed &ReplicaSet event: MODIFIED
  I0703 14:23:14.500037 21 replica_set.go:718] Found replicaset test-rs in namespace replicaset-378 with labels: map[name:sample-pod pod:httpd] annotations: map[] & Conditions: {StatusPatched True 0001-01-01 00:00:00 +0000 UTC  }
  I0703 14:23:14.500157 21 replica_set.go:729] Replicaset test-rs has a patched status
  I0703 14:23:14.500570 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "replicaset-378" for this suite. @ 07/03/24 14:23:14.531
• [5.455 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] listing mutating webhooks should work [Conformance] [sig-api-machinery, Conformance]
k8s.io/kubernetes/test/e2e/apimachinery/webhook.go:646
  STEP: Creating a kubernetes client @ 07/03/24 14:23:14.558
  I0703 14:23:14.558245 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename webhook @ 07/03/24 14:23:14.559
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:23:14.708
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:23:14.727
  STEP: Setting up server cert @ 07/03/24 14:23:15.015
  E0703 14:23:15.263558      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Create role binding to let webhook read extension-apiserver-authentication @ 07/03/24 14:23:16.134
  STEP: Deploying the webhook pod @ 07/03/24 14:23:16.155
  STEP: Wait for the deployment to be ready @ 07/03/24 14:23:16.199
  I0703 14:23:16.254772 21 deployment.go:222] deployment "sample-webhook-deployment" doesn't have the required revision set
  E0703 14:23:16.274378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:17.278448      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:18.279054      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:23:18.285054 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:23:19.279491      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:20.279378      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:23:20.308614 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:23:21.279532      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:22.280803      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:23:22.305787 21 deployment.go:103] deployment status: v1.DeploymentStatus{ObservedGeneration:1, Replicas:1, UpdatedReplicas:1, ReadyReplicas:0, AvailableReplicas:0, UnavailableReplicas:1, Conditions:[]v1.DeploymentCondition{v1.DeploymentCondition{Type:"Available", Status:"False", LastUpdateTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), Reason:"MinimumReplicasUnavailable", Message:"Deployment does not have minimum availability."}, v1.DeploymentCondition{Type:"Progressing", Status:"True", LastUpdateTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), LastTransitionTime:time.Date(2024, time.July, 3, 14, 23, 16, 0, time.Local), Reason:"ReplicaSetUpdated", Message:"ReplicaSet \"sample-webhook-deployment-6b869959d\" is progressing."}}, CollisionCount:(*int32)(nil)}
  E0703 14:23:23.281134      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:24.292368      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Deploying the webhook service @ 07/03/24 14:23:24.3
  STEP: Verifying the service has paired with the endpoint @ 07/03/24 14:23:24.34
  E0703 14:23:25.298418      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  I0703 14:23:25.342350 21 util.go:427] Waiting for amount of service:e2e-test-webhook endpoints to be 1
  STEP: Listing all of the created validation webhooks @ 07/03/24 14:23:25.485
  STEP: Creating a configMap that should be mutated @ 07/03/24 14:23:25.513
  STEP: Deleting the collection of validation webhooks @ 07/03/24 14:23:25.574
  STEP: Creating a configMap that should not be mutated @ 07/03/24 14:23:25.697
  I0703 14:23:26.039162 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "webhook-2943" for this suite. @ 07/03/24 14:23:26.066
  STEP: Destroying namespace "webhook-markers-8618" for this suite. @ 07/03/24 14:23:26.144
• [11.606 seconds]
------------------------------
[sig-node] Containers should be able to override the image's default arguments (container cmd) [NodeConformance] [Conformance] [sig-node, NodeConformance, Conformance]
k8s.io/kubernetes/test/e2e/common/node/containers.go:61
  STEP: Creating a kubernetes client @ 07/03/24 14:23:26.164
  I0703 14:23:26.164252 21 util.go:506] >>> kubeConfig: /tmp/kubeconfig-3493501098
  STEP: Building a namespace api object, basename containers @ 07/03/24 14:23:26.165
  E0703 14:23:26.299455      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Waiting for a default service account to be provisioned in namespace @ 07/03/24 14:23:26.427
  STEP: Waiting for kube-root-ca.crt to be provisioned in namespace @ 07/03/24 14:23:26.552
  STEP: Creating a pod to test override arguments @ 07/03/24 14:23:26.647
  E0703 14:23:27.302154      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:28.302265      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:29.302326      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  E0703 14:23:30.302484      21 retrywatcher.go:129] "Watch failed" err="context canceled"
  STEP: Saw pod success @ 07/03/24 14:23:31.032
  I0703 14:23:31.035874 21 output.go:196] Trying to get logs from node ip-172-31-5-183 pod client-containers-6ad3b13a-f5a8-44c6-ba64-168a737a8a30 container agnhost-container: <nil>
  STEP: delete the pod @ 07/03/24 14:23:31.055
  I0703 14:23:31.092727 21 helper.go:121] Waiting up to 7m0s for all (but 0) nodes to be ready
  STEP: Destroying namespace "containers-8254" for this suite. @ 07/03/24 14:23:31.112
• [4.971 seconds]
------------------------------
SSSSSSSSSSSSSSSSSSSSS
------------------------------
[SynchronizedAfterSuite] 
k8s.io/kubernetes/test/e2e/e2e.go:80
  I0703 14:23:31.138450 21 suites.go:34] Running AfterSuite actions on node 1
  I0703 14:23:31.139569 21 util.go:614] Skipping dumping logs from cluster
[SynchronizedAfterSuite] PASSED [0.002 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e suite report
k8s.io/kubernetes/test/e2e/e2e_test.go:161
[ReportAfterSuite] PASSED [0.000 seconds]
------------------------------
[ReportAfterSuite] Kubernetes e2e JUnit report
k8s.io/kubernetes/test/e2e/framework/test_context.go:612
  E0703 14:23:31.303486      21 retrywatcher.go:129] "Watch failed" err="context canceled"
[ReportAfterSuite] PASSED [0.188 seconds]
------------------------------

Ran 402 of 7197 Specs in 7783.522 seconds
SUCCESS! -- 402 Passed | 0 Failed | 0 Pending | 6795 Skipped
PASS

Ginkgo ran 1 suite in 2h9m46.250528081s
Test Suite Passed
